syntax = "proto3";

option csharp_namespace = "Proto";

message Mmmnfdnljmd {
	uint32 hbapccegnme = 1;
	uint32 gpjggknoafd = 2;
	oneof Oeehifhnfdh {
		Ljnpgkdojho MarbleGameBegin = 101;
		Bpnmjchednl MarbleGameEnd = 102;
		Foopingafeg MarbleGameRound = 103;
		Ofilkjclegi MarbleGameTurn = 104;
	}
}

message Hcjjoofkcjh {
	uint32 lpdbpkkadgg = 1;
	int32 homgcfjpblk = 2;
	int32 cjjblmkjapa = 3;
}

message Lngmdmipckl {
	uint32 lpdbpkkadgg = 1;
	uint32 jojahiafnlk = 2;
}

message Cccnhoeccmd {
	uint32 item_id = 1;
	uint32 banelelnlkb = 2;
	uint32 skill_id = 3;
	int32 display_value = 4;
}

message Noobbihjkma {
	int32 mflekhhpieo = 1;
	int32 majlgjcfgja = 2;
	int32 iolcflofagf = 3;
	int32 ameiimfkbfa = 4;
}

message Ljnpgkdojho {
	uint32 endjgmlkpbp = 1;
	uint64 dbadlnfopao = 2;
	uint32 acjcphifmln = 3;
	uint32 marble_level_id = 4;
	repeated Hcjjoofkcjh biecgfimcfb = 5;
	uint32 rank = 6;
	uint64 ekldpalnldc = 7;
	repeated Hcjjoofkcjh fffgfcphbpn = 8;
	uint32 jblmgnpmadm = 9;
}

message Bpnmjchednl {
	uint32 endjgmlkpbp = 1;
	uint64 dbadlnfopao = 2;
	uint32 acjcphifmln = 3;
	uint32 marble_level_id = 4;
	repeated Hcjjoofkcjh biecgfimcfb = 5;
	uint32 rank = 6;
	uint64 ekldpalnldc = 7;
	repeated Hcjjoofkcjh fffgfcphbpn = 8;
	uint32 jblmgnpmadm = 9;
	uint32 imbclfcbodj = 10;
	int32 score = 11;
	int32 npjeecedpok = 12;
	repeated Lngmdmipckl pceaecmkdeh = 13;
	uint32 ifnmbngifph = 14;
	uint32 iehjgombpbi = 15;
	uint32 iphafkfgnao = 16;
	uint32 lbpfeclgefc = 17;
}

message Foopingafeg {
	uint32 endjgmlkpbp = 1;
	uint64 dbadlnfopao = 2;
	uint32 acjcphifmln = 3;
	uint32 marble_level_id = 4;
	uint32 ighlabggije = 5;
	uint32 lpdbpkkadgg = 6;
	bool hgbbkgnepfb = 7;
	repeated Hcjjoofkcjh feopfholkbm = 8;
	uint32 rank = 9;
	repeated Hcjjoofkcjh cndckakkmcg = 10;
	uint32 jblmgnpmadm = 11;
	repeated Cccnhoeccmd skill_info = 12;
	repeated Noobbihjkma kbgajgeomgl = 13;
	repeated Hcjjoofkcjh lelhcfoeoco = 14;
	repeated Hcjjoofkcjh imjekfdhing = 15;
	uint32 djnmhmpkkkb = 16;
}

message Ofilkjclegi {
	uint32 endjgmlkpbp = 1;
	uint64 dbadlnfopao = 2;
	uint32 acjcphifmln = 3;
	uint32 marble_level_id = 4;
	bool nleaijhapap = 5;
	uint32 ighlabggije = 6;
	uint32 rank = 7;
	uint64 ekldpalnldc = 8;
	uint32 jblmgnpmadm = 9;
	uint32 cboiiacbakf = 10;
	repeated uint32 buff_list = 11;
	uint32 djnmhmpkkkb = 12;
}

message PlayerBasicInfo {
	string nickname = 1;
	uint32 level = 2;
	uint32 exp = 3;
	uint32 stamina = 4;
	uint32 mcoin = 5;
	uint32 hcoin = 6;
	uint32 scoin = 7;
	uint32 world_level = 8;
}

message SpBarInfo {
	uint32 cur_sp = 1;
	uint32 max_sp = 2;
}

message BlackInfo {
	int64 begin_time = 1;
	int64 end_time = 2;
	uint32 jfciibecncm = 3;
	uint32 ccabdcplmpj = 4;
}

message Bpdfjaaeofo {
	AvatarType avatar_type = 1;
	uint32 id = 2;
}

message Oilpiacennh {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 level = 3;
	uint32 index = 4;
	uint32 ggdiibcdobb = 5;
}

message VersionCount {
	uint32 version = 1;
	uint32 count = 2;
}

message ClientDownloadData {
	uint32 version = 1;
	int64 time = 2;
	bytes data = 3;
	uint32 haehhcpoapp = 4;
}

message ClientObjDownloadData {
	bytes bidjpeimllf = 1;
	optional ClientDownloadData download_data = 2;
	repeated ClientDownloadData download_data_list = 3;
}

message ClientUploadData {
	string eamajgpcgfd = 1;
	string value = 2;
}

message FeatureSwitchParam {
	repeated uint32 param_list = 1;
}

message Hpiofdcgmej {
	FeatureSwitchType type = 1;
	repeated FeatureSwitchParam njcjdnhpcjn = 2;
	bool oafmljmdjfo = 3;
}

message Jgfkicdcflj {
	string fdkgfdicmfd = 1;
	string mdjcaoagcko = 2;
	string gioohoomjho = 3;
	string fbmllnkcfen = 4;
	string dgoohibaoee = 5;
	string fkbamboodkj = 6;
	string jkhhedmnjlc = 7;
}

message Occhnefhgne {
	string agdaelenhmi = 1;
	int32 ejieagflged = 2;
	int32 ldbfaikmifi = 3;
	int32 pkflgkphoed = 4;
	int32 akdclaepfej = 5;
}

message ReplayInfo {
	uint64 dknpkjmahcm = 1;
	ReplayType replay_type = 2;
	uint32 stage_id = 3;
	uint32 uid = 4;
	string nickname = 5;
	uint32 head_icon = 6;
	string replay_name = 7;
	uint64 sent_time = 8;
	uint32 afehlmfibmd = 9;
	uint32 cmpbkbbkaoa = 10;
}

message Pigodjnhjml {
	uint32 avatar_id = 1;
	uint32 avatar_level = 2;
}

message Ahkankepadj {
	uint32 uid = 1;
	uint32 jhhlpljaame = 2;
	bool obhidgfgamd = 3;
	uint32 pofhpdgamkl = 4;
	string bdnlnmcohgb = 5;
	repeated Pigodjnhjml avatar_list = 6;
	uint32 ncacoccjnld = 7;
	uint32 ahjfpngdbdo = 8;
	uint32 pgofpnlapoe = 9;
}

message PunkLordBattleRecordList {
	repeated Ahkankepadj battle_record_list = 1;
}

message PunkLordMonsterKey {
	uint32 uid = 1;
	uint32 monster_id = 2;
}

message PunkLordMonsterBasicInfo {
	uint32 uid = 1;
	uint32 monster_id = 2;
	uint32 config_id = 3;
	uint32 world_level = 4;
	int64 sent_time = 5;
	uint32 left_hp = 6;
	uint32 pjdcnahgahc = 7;
	PunkLordShareType share_type = 8;
	bool ppboceckcah = 9;
}

message Cemedoehbge {
	string bdnlnmcohgb = 1;
	optional ReplayInfo fgnfbkbogdj = 2;
}

message Ildhfmhbknc {
	uint64 infhikbljla = 1;
	uint32 fight_game_mode = 2;
	uint32 ahbemdlggeo = 3;
}

message Lkapfhahnem {
	uint32 module_id = 1;
	uint32 lghokgabgck = 2;
	uint64 cfdanmomhpi = 3;
}

message Pedlphdbnaf {
	oneof Gjmelakijif {
		Ildhfmhbknc Lfcphajcekf = 101;
		Lkapfhahnem Celmkolbjnn = 102;
	}
}

message RegionEntry {
	string name = 1;
	string title = 2;
	string dispatch_url = 3;
	string env_type = 4;
	string display_name = 5;
	string msg = 6;
}

message DispatchRegionData {
	uint32 retcode = 1;
	string msg = 2;
	string top_sever_region_name = 3;
	repeated RegionEntry region_list = 4;
	string stop_desc = 5;
}

message Iipkannmlfn {
	uint32 hpolocpddac = 1;
	repeated uint32 kjebidedlld = 2;
	repeated uint32 kkcmfgmhimo = 3;
	repeated uint32 lgejjajpedk = 4;
	repeated uint32 fbbajbinglb = 5;
	repeated uint32 mpmfahlkeob = 6;
	bool knljgcadljk = 7;
	uint32 iamcofeijki = 8;
	repeated uint32 cgpdcgdhgjf = 9;
	repeated uint32 iknccgnelkn = 10;
	repeated uint32 ajhlfmljoib = 11;
}

message BattleOp {
	uint32 turn_counter = 1;
	uint32 state = 2;
	uint32 action_entity_id = 3;
	uint32 target_entity_id = 4;
	uint32 op_type = 5;
	uint32 skill_index = 6;
	uint32 operation_counter = 7;
	string nplieiphcbf = 8;
}

message BattleEquipment {
	uint32 id = 1;
	uint32 level = 2;
	uint32 promotion = 3;
	uint32 rank = 4;
}

message BattleRelic {
	uint32 id = 1;
	uint32 level = 2;
	uint32 main_affix_id = 3;
	repeated RelicAffix sub_affix_list = 4;
	uint32 unique_id = 5;
	uint32 relic_id = 6;
	uint32 type = 7;
	uint32 jlkmncoidlg = 8;
}

message AvatarSkillTree {
	uint32 point_id = 1;
	uint32 level = 2;
}

message RelicAffix {
	uint32 affix_id = 1;
	uint32 cnt = 2;
	uint32 step = 3;
}

message Bjhebccbana {
	bool ljpadncgloc = 1;
	repeated uint32 dddhnaklmhf = 2;
	uint32 jgjcdmjimnn = 3;
	uint32 pofmkdabehd = 4;
}

message BattleAvatar {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 level = 3;
	uint32 rank = 4;
	uint32 index = 5;
	repeated AvatarSkillTree skilltree_list = 6;
	repeated BattleEquipment equipment_list = 7;
	uint32 hp = 8;
	uint32 promotion = 10;
	repeated BattleRelic relic_list = 11;
	uint32 world_level = 12;
	uint32 assist_uid = 13;
	optional Bjhebccbana ecifjlakhcl = 15;
	optional SpBarInfo sp_bar = 16;
	uint32 gmobaocefce = 17;
	repeated AvatarSkillTree imjjkbjoohj = 18;
	uint32 enhanced_id = 19;
}

message BattleMonsterParam {
	uint32 hard_level_group = 1;
	uint32 level = 2;
	uint32 elite_group = 3;
	uint32 dneampllfme = 4;
}

message BattleMonster {
	uint32 monster_id = 1;
	uint32 cur_hp = 2;
	uint32 max_hp = 3;
}

message BattleMonsterWave {
	repeated BattleMonster monster_list = 1;
	optional BattleMonsterParam wave_param = 2;
	uint32 stage_id = 3;
	uint32 wave_id = 4;
}

message BattleBuff {
	uint32 id = 1;
	uint32 level = 2;
	uint32 owner_id = 3;
	uint32 wave_flag = 4;
	repeated uint32 target_index_list = 5;
	map<string, float> dynamic_values = 6;
}

message Illcdmocldo {
	uint32 id = 1;
	uint32 hfaljihkecn = 2;
	uint32 laejdghmkdb = 3;
}

message Ljgiaglfhhc {
	uint32 fenmmmkoocf = 1;
}

message Enflfbdaoij {
	uint32 id = 1;
	uint32 hfaljihkecn = 2;
}

message Gmgjcihdfma {
	uint32 id = 1;
	uint32 progress = 2;
}

message BattleTarget {
	uint32 id = 1;
	uint32 progress = 2;
	uint32 total_progress = 3;
}

message BattleTargetList {
	repeated BattleTarget battle_target_list = 1;
}

message BattleLineup {
	repeated BattleAvatar avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
	uint32 world_level = 7;
	map<uint32, BattleTargetList> battle_target_info = 9;
	optional Ljgiaglfhhc ajgpjglpmio = 10;
	repeated BattleAvatar ejcljldendm = 11;
	optional EvolveBuildBattleInfo jpgifchjdlk = 12;
	optional Gieibeacbao mfkjokajjmj = 13;
	optional RogueMagicBattleInfo rogue_magic_battle_info = 14;
	optional Eacdeapkilk gegdpnkkakg = 15;
}

message Gieibeacbao {
	map<uint32, uint32> gccjdhkhmnk = 1;
	uint32 fpbnipmhanh = 2;
	uint32 aagiancieeg = 3;
	uint32 elpfomlcobm = 4;
}

message Pkiakjmeaml {
	uint32 id = 1;
	uint32 index = 2;
	uint32 promotion = 3;
	repeated uint32 passive_skill = 4;
	AetherdivideSpiritLineupType spirit_lineup_type = 5;
	optional SpBarInfo sp_bar = 6;
}

message Pndfmbjfgim {
	repeated Pkiakjmeaml avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
}

message ClientTurnSnapshot {
	uint32 turn_counter = 1;
	uint32 dnapmnemhbo = 2;
	uint32 ibjfafabgbk = 3;
	repeated CharacterSnapshot cdafgdbmajn = 4;
	repeated Elcpgninpin kflnkebbonk = 5;
	uint32 jeinbmlfcbp = 6;
}

message GamecoreConfig {
	bool fkmdhibfomh = 1;
	uint32 kpebbgcmmip = 2;
	bool is_auto_fight = 3;
	string fhidoicafol = 4;
	bool lkfdpdldmib = 5;
	bool mnalpnfnmio = 6;
	uint32 ggfcojflkbp = 7;
}

message BattleBuffMsg {
	repeated uint32 bought_miracle_list = 1;
	repeated uint32 ejhflinciaf = 2;
	repeated uint32 ofnapbilngg = 3;
	repeated uint32 hejhnakohlm = 4;
}

message Dkflaljdifl {
	uint32 mbbchgenggl = 1;
	uint32 hfcdphchfgk = 2;
}

message Mbmcfoliolo {
	bool cdnojcacelj = 1;
	map<string, Dkflaljdifl> haneginlani = 2;
	bytes cjkmgenojbe = 3;
}

message Miaidaildkm {
	repeated ClientTurnSnapshot eeflghcobml = 1;
	string kgbhehhfmpi = 2;
	string debug_extra_info = 3;
	repeated BattleReplayStringHash hlagimenbjg = 4;
	uint32 plane_id = 5;
	uint32 floor_id = 6;
	uint32 ebhlfaeglcd = 7;
	uint32 bnjmmlkofcp = 8;
	optional Mbmcfoliolo edhbgdeicnc = 9;
	uint32 bbnaefbaplg = 10;
}

message Ialpdfglbml {
	uint32 version = 1;
	uint32 logic_random_seed = 2;
	uint32 stage_id = 3;
	optional BattleLineup lineup = 4;
	repeated BattleOp op_list = 5;
	bytes turn_snapshot_hash = 6;
	uint32 maze_plane_id = 7;
	repeated uint32 extra_ability_list = 8;
	bool is_ai_consider_ultra_skill = 9;
	BattleCheckStrategyType check_strategy = 10;
	BattleModuleType battle_module_type = 11;
	repeated BattleEventBattleInfo event_battle_info_list = 12;
	uint32 rounds_limit = 14;
	optional GamecoreConfig config = 15;
	bytes game_core_log_encode = 16;
	uint32 cost_time = 17;
	uint32 wave_count = 18;
	optional Pndfmbjfgim gmpcfgedhki = 19;
	optional Miaidaildkm bnmiiahadjh = 100;
}

message BattleReplayStringHash {
	int32 hash = 1;
	string value = 2;
}

message AvatarProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double speed = 4;
	double left_hp = 5;
	double left_sp = 6;
	double max_sp = 7;
}

message EquipmentProperty {
	uint32 id = 1;
	uint32 rank = 2;
	uint32 promotion = 3;
	uint32 level = 4;
}

message AttackDamageProperty {
	string attack_type = 1;
	double damage = 2;
}

message SkillUseProperty {
	uint32 skill_id = 1;
	string skill_type = 2;
	uint32 skill_level = 3;
	uint32 skill_use_count = 4;
	uint32 ifejkalhopi = 5;
	uint32 jhdhlcncdnc = 6;
	uint32 hoafnnijoom = 7;
	uint32 mdeadclnjcj = 8;
	uint32 ohnppjemkde = 9;
}

message Gaagehabinm {
	uint32 skill_id = 1;
	double hgflpenkiii = 2;
	repeated uint32 battle_target_list = 3;
	double damage = 4;
}

message SpAddSource {
	string source = 1;
	uint32 sp_add = 2;
}

message AbilityUseStt {
	string fkhhobbfmeh = 1;
	uint32 count = 2;
	double total_damage = 3;
}

message AvatarBattleInfo {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 avatar_level = 3;
	uint32 avatar_rank = 4;
	uint32 avatar_promotion = 5;
	optional AvatarProperty avatar_status = 6;
	repeated AvatarSkillTree avatar_skill = 7;
	repeated EquipmentProperty avatar_equipment = 8;
	uint32 total_turns = 9;
	double total_damage = 10;
	double total_heal = 11;
	double total_damage_taken = 12;
	double total_hp_recover = 13;
	double maceeaaeemc = 14;
	uint32 stage_id = 15;
	uint32 stage_type = 16;
	double lankmapidbd = 17;
	repeated AttackDamageProperty attack_damage_type = 18;
	repeated AttackDamageProperty attack_type_break_damage = 19;
	repeated AttackDamageProperty attack_type_max_damage = 20;
	repeated SkillUseProperty skill_times = 21;
	double delay_cumulate = 22;
	uint32 total_sp_add = 23;
	repeated SpAddSource sp_add_source_list = 24;
	uint32 total_bp_cost = 25;
	uint32 die_times = 26;
	uint32 revive_times = 27;
	uint32 break_times = 28;
	uint32 extra_turns = 29;
	double total_shield = 30;
	double total_shield_taken = 31;
	double total_shield_damage = 32;
	optional AvatarProperty initial_status = 33;
	repeated BattleRelic relics = 34;
	uint32 assist_uid = 35;
	repeated AttackDamageProperty aadgflpbpdf = 36;
	double fpfbmimbbhj = 37;
	double ggpjohnocpc = 38;
	double lackcjhhimk = 39;
	double fmodlgobnpe = 40;
	repeated AbilityUseStt lhkabnickjn = 41;
	uint32 ncjhdjjdjnl = 42;
	uint32 lkmgdiadopb = 43;
	double iblgmcipckm = 44;
	double hacjdjigmgp = 45;
	double imdjahajgcf = 46;
	double jdolkdbiclj = 47;
	double caccoddcjhi = 48;
	uint32 lldmlohbflo = 49;
	uint32 chnikkcibeg = 50;
	uint32 lbnjhhhlpmo = 51;
	double pdlilfichil = 52;
	uint32 pmklphjiohc = 53;
	uint32 mpfaenekfdc = 54;
	uint32 enhanced_id = 55;
}

message MonsterProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double shield = 4;
	double speed = 5;
	double left_hp = 6;
	double enter_battle_hp = 7;
}

message MonsterPhaseStt {
	uint32 ndbojandnjn = 1;
	double mmcphlpecdj = 2;
	uint32 doiadgdbohf = 3;
	uint32 break_times = 4;
}

message MonsterBattleInfo {
	uint32 entity_id = 1;
	uint32 monster_id = 2;
	uint32 oakilfgdacj = 3;
	uint32 bfpaoanbjon = 4;
	optional MonsterProperty nkcmcmhafaf = 5;
	uint32 total_turns = 6;
	double total_damage = 7;
	double total_heal = 8;
	double total_damage_taken = 9;
	double akgfcpfaolp = 10;
	double total_hp_recover = 11;
	uint32 stage_id = 12;
	uint32 battle_id = 13;
	uint32 jbcdlfjjjdg = 14;
	repeated AttackDamageProperty attack_damage_type = 15;
	repeated SkillUseProperty skill_times = 16;
	uint32 stage_type = 17;
	double acofippjkbi = 18;
	double delay_cumulate = 19;
	DeathSource fiedknkiebh = 20;
	uint32 wave = 21;
	int32 jhaogjjdbhl = 22;
	uint32 phase = 23;
	uint32 dcmohecbolk = 24;
	Agbpcblfnol jedahlgbiem = 25;
	repeated Gaagehabinm skill_info = 26;
	uint32 lanfclolbof = 27;
	repeated MonsterPhaseStt kfgjbiljgdp = 28;
	uint32 fpkoniklica = 29;
	uint32 jeemgaeifae = 30;
	Hembndjafda hbofdajjjme = 31;
}

message BattleEventInitedData {
	optional SpBarInfo sp_bar = 2;
}

message BattleEventBattleInfo {
	uint32 battle_event_id = 1;
	optional BattleEventInitedData status = 2;
	repeated Gaagehabinm skill_info = 3;
}

message ScoreInfo {
	uint32 fjjdfpkgopc = 1;
	uint32 score = 2;
}

message Ibffajohkmo {
	uint32 avatar_id = 1;
	repeated uint32 leickpdifog = 2;
	uint32 source = 3;
	double damage = 4;
	repeated uint32 dikkhpfkapf = 5;
	int32 eoofimegmfb = 6;
	double bkjeampnank = 7;
	uint32 blfhkgpmndk = 8;
	uint32 wave = 9;
	uint32 enhanced_id = 10;
}

message Kkmpkjpggcl {
	uint32 avatar_id = 1;
	int32 abapdfgjnme = 2;
	uint32 enhanced_id = 3;
}

message Cnpnnijglfi {
	uint32 dpdnnmbcpoi = 1;
	uint32 dbeljgbkbpa = 2;
	uint32 entity_id = 3;
}

message Iiiphjimnid {
	uint32 ndbojandnjn = 1;
	uint32 monster_id = 2;
	repeated Kkmpkjpggcl nglpbhmlehn = 3;
	uint32 hgflpenkiii = 4;
	repeated Cnpnnijglfi akkggpadaoo = 5;
}

message Mmndjamebml {
	Oedifangclh type = 1;
	uint32 ocpppkddiml = 2;
	uint32 display_value = 3;
}

message Kpkkkjpjcpc {
	uint32 lidgjndgbkm = 1;
	uint32 oaabadfkcoa = 2;
}

message Meoifioaecf {
	uint32 jjccjjinlfl = 1;
	bool locked = 2;
	optional Kpkkkjpjcpc kacalgioedb = 3;
}

message EvolveBuildCardInfo {
	uint32 card_id = 1;
	double param = 2;
	bool is_enable = 3;
	repeated double param_list = 4;
}

message EvolveBuildGearDamageInfo {
	uint32 gear_id = 1;
	double damage = 2;
	double hp_damage = 3;
}

message Lgifednkhon {
	repeated uint32 dakijnbfkob = 1;
	repeated uint32 fjjobaemehp = 2;
}

message Mjkibjlobkd {
	uint32 wave = 1;
	uint32 score = 2;
	uint32 dchiolbfkjn = 3;
	repeated Kpkkkjpjcpc bhjkmhmoeak = 4;
	float hgflpenkiii = 5;
}

message Dkookejchgo {
	uint32 chbjkkmiofd = 1;
	double hgflpenkiii = 2;
}

message Pmnhmamhgai {
	uint32 icphoomndka = 1;
	repeated Mjkibjlobkd enbjcpkgcol = 2;
	repeated Dkookejchgo oooglieooki = 3;
}

message Egdajhjplgi {
	Bojgakmdpdl type = 1;
	uint32 count = 2;
}

message EvolveBuildBattleInfo {
	uint32 cur_level_id = 1;
	uint32 cur_period = 2;
	uint32 cur_coin = 3;
	repeated Meoifioaecf weapon_slot_list = 4;
	repeated Meoifioaecf accessory_slot_list = 5;
	repeated uint32 ban_gear_list = 6;
	optional Lgifednkhon collection = 7;
	repeated uint32 allowed_gear_list = 8;
	uint32 cur_exp = 9;
	uint32 cur_reroll = 10;
	uint32 cur_treasure_miss_cnt = 11;
	repeated uint32 period_id_list = 12;
	uint32 cur_gear_lost_cnt = 13;
	uint32 cur_wave = 14;
	bool is_unlock_gear_reroll = 15;
	bool is_unlock_gear_ban = 16;
	repeated EvolveBuildCardInfo card_list = 17;
	repeated EvolveBuildGearDamageInfo gear_damage_list = 18;
	repeated uint32 stat_params = 19;
	bool is_giveup = 20;
	uint32 cur_unused_round_cnt = 21;
	optional Pmnhmamhgai stat_log_info = 22;
	uint32 period_first_random_seed = 23;
	uint32 cur_card_reroll = 24;
	repeated uint32 allowed_card_list = 25;
	repeated Egdajhjplgi func_list = 26;
	uint32 finished_story_id = 27;
}

message Plpnlibmnio {
	string phase = 1;
	float dbdcnafoglf = 2;
	float hdalbiancmf = 3;
	uint32 adjbbabehah = 4;
	uint32 pjbiaejecae = 5;
	uint32 kpnacghjalj = 6;
	uint32 fpjadbgohkm = 7;
	uint32 cjejofamdcd = 8;
	repeated uint32 bgjcedeahgm = 9;
	repeated uint32 aagjcjiofpa = 10;
}

message Chdonigoknm {
	uint32 heocpakcelm = 1;
	uint32 bghkbmfhmoj = 2;
	uint32 loollagmnlh = 3;
	uint32 hecjooobahc = 4;
	uint32 fkeaaipkpaa = 5;
	uint32 icleenhipoh = 6;
	repeated uint32 boss_info = 7;
	repeated Plpnlibmnio odbonkcmdmp = 8;
}

message Jffndobbnfb {
	uint32 wave = 1;
	double hfihdddiljb = 2;
	double khgclcllecl = 3;
	uint32 ffpmjfhncho = 4;
	uint32 gmmbgamhbkb = 5;
}

message Ekbagmomecl {
	string key = 1;
	double value = 2;
}

message Plgjihifpag {
	uint32 egmebanhhnf = 1;
}

message BattleRogueMagicRoundCount {
	uint32 gpojenhaiba = 1;
	uint32 kljklbmlefo = 2;
}

message BattleRogueMagicUnit {
	uint32 unit_id = 1;
	uint32 level = 2;
	bool locked = 3;
	uint32 slot_id = 4;
	map<uint32, uint32> counter_map = 5;
}

message BattleRogueMagicScepter {
	uint32 scepter_id = 1;
	repeated BattleRogueMagicUnit magic_list = 2;
	uint32 level = 3;
	map<uint32, uint32> trench_count = 4;
}

message BattleRogueMagicData {
	optional BattleRogueMagicRoundCount round_cnt = 1;
	repeated BattleRogueMagicScepter battle_scepter_list = 2;
}

message Fkocboocdnl {
	uint32 poiiaiakilf = 1;
}

message RogueMagicBattleUnitInfo {
	oneof Item {
		BattleRogueMagicData BattleRogueMagicData = 1;
		Fkocboocdnl Ennpjglcbem = 2;
	}
}

message RogueMagicBattleInfo {
	optional Plgjihifpag scepter = 1;
	optional RogueMagicBattleUnitInfo player_detail_info = 2;
}

message Ccccgjabbpm {
	uint32 scepter_id = 1;
	uint32 level = 2;
	double total_damage = 3;
}

message Aenpijcdbmh {
	uint32 klmcppbbooh = 1;
	uint32 kmoeadpmflg = 2;
	repeated Ccccgjabbpm cicanokpnbm = 3;
}

message Gbncgkdnmil {
	uint32 aenkmaoabmp = 1;
	uint32 mcdpiabdigi = 2;
	double jnimloiohnh = 3;
	double iejjjkfedah = 4;
}

message Mbjhfpcjaln {
	optional Gbncgkdnmil ehnnecghjal = 1;
}

message Aigknhfanga {
	optional Aenpijcdbmh eilaabldphm = 1;
	optional Mbjhfpcjaln inpkgdfmpea = 2;
}

message Ldobbiabddl {
	uint32 geddibikmmp = 1;
	double kggdjhjlenl = 2;
}

message Hpkeffechfg {
	Dlbfahoagph type = 1;
	uint32 config_id = 2;
	uint32 unique_id = 3;
	uint32 level = 4;
	repeated Ldobbiabddl param_list = 5;
}

message Pfkamafikko {
	uint32 labaigdgjhl = 1;
	repeated uint32 jnbegheioci = 2;
}

message Eacdeapkilk {
	repeated Hpkeffechfg cfkjepmnlji = 1;
	map<uint32, uint32> lkgdfhfblde = 2;
	repeated Pfkamafikko febmncjifmn = 3;
	uint32 area_id = 4;
	uint32 pbalfienefo = 5;
}

message Lhlbianfohk {
	uint32 monster_id = 1;
	uint32 gmlfmpjpegg = 2;
	uint32 ffpmjfhncho = 3;
	uint32 gmmbgamhbkb = 4;
}

message Llbmaphbogd {
	uint32 acpbmmmcjip = 1;
	double kkancjaljpo = 2;
	double mfjkflgpgko = 3;
	uint32 wave = 4;
	uint32 gmlfmpjpegg = 5;
	double abmnlnnoklo = 6;
	double ihbbekcoeae = 7;
}

message Dpndlhgemei {
	uint32 imcpkldfdog = 1;
	uint32 ajgeofiiddh = 2;
	double omoenbakmhj = 3;
	uint32 wave = 4;
	uint32 gmlfmpjpegg = 5;
}

message Cpfcbladmbh {
	repeated Lhlbianfohk haafhkiagkm = 1;
	repeated Llbmaphbogd oeagamjdlma = 2;
	repeated Dpndlhgemei plennpagjll = 3;
}

message Baagnohehma {
	optional Cpfcbladmbh oimbgaehdbi = 1;
}

message Mkeecchgigh {
	uint32 nmimbiopeki = 1;
	double kkancjaljpo = 2;
	double mfjkflgpgko = 3;
	uint32 fgmlckanian = 4;
	uint32 goaebjjpajo = 5;
	uint32 nilakidfhej = 6;
	uint32 pigndajgdgj = 7;
	double abmnlnnoklo = 8;
	uint32 jbjmophgmfa = 9;
	uint32 pobibiloani = 10;
	double ihbbekcoeae = 11;
	uint32 loollagmnlh = 12;
	uint32 fkeaaipkpaa = 13;
}

message Bdmgoejbfgl {
	uint32 loollagmnlh = 1;
	uint32 fkeaaipkpaa = 2;
	uint32 akpmnjcggai = 3;
	repeated Mkeecchgigh oeagamjdlma = 4;
}

message Hanhnlneicm {
	uint32 avatar_id = 1;
	uint32 dpdnnmbcpoi = 2;
	uint32 total_turns = 3;
	double fbcmjgmbjfc = 4;
	repeated SkillUseProperty skill_times = 5;
	double total_damage = 6;
	double lankmapidbd = 7;
	repeated AttackDamageProperty attack_damage_type = 8;
	repeated AttackDamageProperty attack_type_break_damage = 9;
	repeated AttackDamageProperty attack_type_max_damage = 10;
	double total_damage_taken = 11;
	double total_heal = 12;
	double total_hp_recover = 13;
	double total_shield = 14;
	double total_shield_taken = 15;
	double total_shield_damage = 16;
	uint32 break_times = 17;
	uint32 jeplcjkfomb = 18;
	uint32 ncjhdjjdjnl = 19;
	uint32 lkmgdiadopb = 20;
	double iblgmcipckm = 21;
	uint32 entity_id = 22;
}

message Pedjnpjkock {
	uint32 avatar_id = 1;
	uint32 ojeblmkkmgo = 2;
	uint32 iagenfadhlp = 3;
}

message Nmcmohahopl {
	repeated Hanhnlneicm pccdmdfnjpd = 1;
	uint32 hkpbefflfeo = 2;
	uint32 dfnkmijebld = 3;
}

message Gjdkilhkied {
	uint32 imhhilcmmgi = 1;
	uint32 hahjhbfaefc = 2;
	uint32 bilejkhihjl = 3;
}

message Demlpcndjjp {
	optional Gjdkilhkied gjdokfchbga = 1;
	repeated Hpkeffechfg cfkjepmnlji = 2;
}

message BattleStatistics {
	uint32 angplnaledp = 1;
	uint32 khkfkdnbhpe = 2;
	repeated uint32 avatar_id_list = 3;
	uint32 bfdobflljbe = 4;
	double nnmdmpkccke = 5;
	double bclnmidffoh = 6;
	repeated AvatarBattleInfo akfkcpfabmk = 7;
	repeated MonsterBattleInfo jojfmjfoehb = 8;
	uint32 lmkmfcdmfbi = 9;
	uint32 dnjidnnnmna = 10;
	uint32 hhhapgmlbjc = 11;
	uint32 kjmfjifdgpj = 12;
	map<string, float> nbdekmakpkj = 13;
	uint32 kgecjkkpbdh = 14;
	repeated BattleEventBattleInfo ijolofbjinb = 16;
	BattleEndReason hbgclmcgnfm = 19;
	repeated Ibffajohkmo glojpnlnhjh = 21;
	repeated int32 iiccefcgpak = 22;
	repeated Iiiphjimnid ldgaanonmbk = 23;
	repeated Mmndjamebml adbhgkpnikp = 26;
	repeated Gmkepcomhpn ecefbcnofkb = 27;
	map<uint32, BattleTargetList> battle_target_info = 28;
	repeated Eagocahfgaf najlkhfllpg = 29;
	optional EvolveBuildBattleInfo jpgifchjdlk = 30;
	optional Chdonigoknm mnphnjkgpkl = 31;
	bool leddodammno = 32;
	repeated Jffndobbnfb enbjcpkgcol = 33;
	repeated Ekbagmomecl ngoknfdmhmf = 34;
	uint32 dkoeadnamcj = 35;
	optional Aigknhfanga idcgpakjfmd = 36;
	optional Baagnohehma billjjbfiol = 37;
	optional Bdmgoejbfgl hmpgmiljapb = 38;
	optional Nmcmohahopl nocigfllifg = 39;
	optional Demlpcndjjp jnjiimjbojp = 40;
	uint32 kkpkaljmamf = 41;
	repeated Pedjnpjkock okgcipahmei = 42;
}

message Eagocahfgaf {
	uint32 oefeefglieb = 1;
	uint32 pbhphhmpaih = 2;
}

message Gmkepcomhpn {
	AetherdivideSpiritLineupType type = 1;
	uint32 id = 2;
	optional SpBarInfo sp_bar = 3;
}

message Dkojghahgaj {
	uint32 hciigmflpim = 1;
	uint32 level = 2;
	uint32 exp = 3;
}

message Ephilimkadk {
	BattleCheckResultType retcode = 1;
	BattleEndStatus end_status = 2;
	optional BattleStatistics stt = 3;
	bytes game_core_log_encode = 4;
	map<string, uint32> dgnmmingacj = 5;
	uint32 ndcmdokkphh = 6;
	uint32 mdlpcfcphdk = 7;
}

message CharacterSnapshot {
	uint32 kpjddifefdd = 1;
	repeated uint64 biappigpbog = 2;
}

message Elcpgninpin {
	string cjilblkomak = 1;
	uint32 count = 2;
}

message Oodocmdlomf {
	uint32 uid = 1;
	uint32 level = 2;
	string nickname = 3;
	uint32 gfidnaanafh = 4;
	PlatformType platform_type = 5;
	string akcejfcfban = 6;
	string bjellapogjn = 7;
	uint64 version = 8;
	bool cocongacifj = 9;
}

message Iddlkhhlecg {
	Hbpfdgnndef noiiaoidgeo = 1;
	Edkfijacjgl status = 2;
}

message Njfgjpcandi {
	uint32 bkmpfeocfib = 1;
	bool cocongacifj = 2;
	uint32 jejkigabeek = 3;
	uint32 miafpfpmaca = 4;
	optional Nfobaphmibf mmohlkeikgk = 5;
}

message Lcmifobknen {
	uint32 mkfdpcckfnf = 1;
	uint32 rank = 2;
	repeated uint32 gnigohiaffi = 3;
	uint32 score = 4;
}

message Glmcgepnaia {
	uint32 dmkfffpdldi = 1;
	uint32 fojcmhimafn = 2;
}

message Nfobaphmibf {
	uint32 mkfdpcckfnf = 1;
	uint32 pcidndobjgb = 2;
	uint32 dpbmlffpokh = 3;
	uint32 ognepbfpilh = 4;
	repeated Glmcgepnaia ibcdnjmcfea = 5;
	uint32 jeffmofipmh = 6;
	uint32 kmflkmmamng = 7;
}

message Fdhjbimpkek {
	optional Nfobaphmibf mmohlkeikgk = 1;
}

message Epeghcgcmhp {
	repeated string bhgghfjmmbm = 1;
	bool fmopbfknlni = 2;
	oneof Gegmajgejfl {
		Njfgjpcandi Dchdjallnec = 1001;
		Lcmifobknen Embbhncjdpk = 1002;
		Fdhjbimpkek Minkkejione = 1003;
	}
}

message Cbbdiomifhd {
	optional Oodocmdlomf basic_info = 1;
	optional Iddlkhhlecg nckccokdkol = 2;
	optional Epeghcgcmhp stage_info = 3;
}

message Cdimemfjjfp {
	uint32 lmmgodphjne = 1;
	uint32 pgjccgnbbpi = 2;
	uint32 nnbhkcjcpio = 3;
	uint32 khbnjgpphoa = 4;
	uint32 agdceblfgkh = 5;
	uint32 dncpbbliopl = 6;
	uint32 lilifgbafkn = 7;
	uint32 mmiijhohoge = 8;
	uint32 iokfikhhang = 9;
	uint32 cilkfjblejg = 10;
	uint32 mkfebpjemad = 11;
	uint32 efgomfdmnop = 12;
	uint32 jflkpcdbbjd = 13;
	uint32 apkcbmgelji = 14;
}

message Ppggkmdaoea {
	uint64 lofamegpmbc = 1;
	Noogdpkefkl gbahcdlhacn = 2;
}

message Biplkgdfafj {
	uint64 id = 1;
	Noogdpkefkl pdmolplcflg = 2;
	repeated Cbbdiomifhd iihpmlibbeb = 3;
	Khjpjangecp type = 4;
	uint64 infhikbljla = 5;
	uint64 mlelajdljnl = 6;
	uint32 jbnenlhccbh = 7;
}

message Fonbbadfkbk {
	uint32 id = 9;
	uint32 module_id = 7;
	uint32 fdejbipgndl = 4;
	repeated uint32 jlhoggdhmhg = 10;
}

message GetLoginActivityCsReq {

}

message GetLoginActivityScRsp {
	repeated Fonbbadfkbk kjcgmejfjfc = 12;
	uint32 retcode = 14;
}

message TakeLoginActivityRewardCsReq {
	uint32 iafhepinjhl = 14;
	uint32 id = 6;
}

message TakeLoginActivityRewardScRsp {
	uint32 module_id = 11;
	uint32 iafhepinjhl = 12;
	uint32 id = 1;
	optional ItemList reward = 5;
	uint32 retcode = 10;
}

message ActivityScheduleInfo {
	uint32 activity_id = 1;
	int64 end_time = 6;
	uint32 module_id = 8;
	int64 begin_time = 9;
}

message GetActivityScheduleConfigCsReq {

}

message GetActivityScheduleConfigScRsp {
	repeated ActivityScheduleInfo activity_schedule_list = 13;
	uint32 retcode = 12;
}

message Hmkikhbgbfp {
	uint32 stage_id = 6;
	bool taken_reward = 1;
}

message GetTrialActivityDataCsReq {

}

message GetTrialActivityDataScRsp {
	repeated Hmkikhbgbfp faglfbdceic = 9;
	uint32 akbclhjhodd = 6;
	uint32 retcode = 10;
}

message TrialActivityDataChangeScNotify {
	optional Hmkikhbgbfp gljbjhjmcfp = 2;
}

message EnterTrialActivityStageCsReq {
	uint32 stage_id = 10;
}

message EnterTrialActivityStageScRsp {
	uint32 retcode = 9;
	optional SceneBattleInfo battle_info = 15;
}

message TakeTrialActivityRewardCsReq {
	uint32 stage_id = 2;
}

message TakeTrialActivityRewardScRsp {
	uint32 retcode = 4;
	uint32 stage_id = 7;
	optional ItemList reward = 14;
}

message StartTrialActivityCsReq {
	uint32 stage_id = 11;
}

message StartTrialActivityScRsp {
	uint32 retcode = 8;
	uint32 stage_id = 11;
}

message LeaveTrialActivityCsReq {
	uint32 stage_id = 7;
}

message LeaveTrialActivityScRsp {
	uint32 retcode = 4;
	uint32 stage_id = 5;
}

message CurTrialActivityScNotify {
	uint32 akbclhjhodd = 4;
	Pmidehdobhj status = 12;
}

message Bcekbnmnhoo {
	uint32 pehofbbdnic = 6;
	bool is_taken_reward = 9;
	bool cbnffemdbkf = 4;
	uint32 module_id = 5;
}

message GetMaterialSubmitActivityDataCsReq {

}

message GetMaterialSubmitActivityDataScRsp {
	uint32 retcode = 3;
	repeated Bcekbnmnhoo nblhgehlodn = 8;
}

message SubmitMaterialSubmitActivityMaterialCsReq {
	uint32 pehofbbdnic = 12;
}

message SubmitMaterialSubmitActivityMaterialScRsp {
	uint32 retcode = 3;
	optional Bcekbnmnhoo blaaoiaeiah = 6;
}

message TakeMaterialSubmitActivityRewardCsReq {
	uint32 pehofbbdnic = 14;
}

message TakeMaterialSubmitActivityRewardScRsp {
	uint32 pehofbbdnic = 1;
	uint32 retcode = 8;
	optional ItemList reward = 11;
}

message GetAvatarDeliverRewardActivityDataCsReq {

}

message GetAvatarDeliverRewardActivityDataScRsp {
	uint32 retcode = 15;
	bool is_taken_reward = 9;
	uint32 avatar_id = 11;
}

message AvatarDeliverRewardChooseAvatarCsReq {
	uint32 avatar_id = 5;
}

message AvatarDeliverRewardChooseAvatarScRsp {
	uint32 avatar_id = 11;
	uint32 retcode = 12;
}

message AvatarDeliverRewardTakeRewardCsReq {

}

message AvatarDeliverRewardTakeRewardScRsp {
	optional ItemList reward = 9;
	uint32 retcode = 2;
}

message EnterAdventureCsReq {
	uint32 map_id = 6;
}

message EnterAdventureScRsp {
	uint32 retcode = 6;
	optional SceneInfo scene = 14;
}

message FarmStageGachaInfo {
	int64 end_time = 5;
	uint32 gacha_id = 8;
	int64 begin_time = 2;
}

message GetFarmStageGachaInfoCsReq {
	repeated uint32 farm_stage_gacha_id_list = 7;
}

message GetFarmStageGachaInfoScRsp {
	uint32 retcode = 10;
	repeated FarmStageGachaInfo farm_stage_gacha_info_list = 8;
}

message QuickStartCocoonStageCsReq {
	uint32 wave = 8;
	uint32 world_level = 10;
	uint32 cocoon_id = 11;
}

message QuickStartCocoonStageScRsp {
	uint32 retcode = 5;
	uint32 wave = 11;
	optional SceneBattleInfo battle_info = 13;
	uint32 cocoon_id = 6;
}

message QuickStartFarmElementCsReq {
	uint32 world_level = 2;
	uint32 jdanoknhnhl = 7;
}

message QuickStartFarmElementScRsp {
	uint32 world_level = 4;
	uint32 jdanoknhnhl = 15;
	uint32 retcode = 13;
	optional SceneBattleInfo battle_info = 10;
}

message CocoonSweepCsReq {
	uint32 world_level = 1;
	uint32 cocoon_id = 2;
}

message CocoonSweepScRsp {
	uint32 cocoon_id = 11;
	uint32 retcode = 6;
	optional ItemList jhmmoojpkha = 9;
	optional ItemList nhanakjfeab = 2;
}

message FarmElementSweepCsReq {
	uint32 world_level = 13;
	uint32 jdanoknhnhl = 14;
}

message FarmElementSweepScRsp {
	uint32 jdanoknhnhl = 2;
	uint32 retcode = 7;
	optional ItemList jhmmoojpkha = 4;
}

message EnterAetherDivideSceneCsReq {
	uint32 bdkngdocpgp = 14;
}

message EnterAetherDivideSceneScRsp {
	uint32 retcode = 9;
	uint32 bdkngdocpgp = 15;
}

message LeaveAetherDivideSceneCsReq {

}

message LeaveAetherDivideSceneScRsp {
	uint32 retcode = 1;
}

message StartAetherDivideSceneBattleCsReq {
	repeated uint32 assist_monster_entity_id_list = 9;
	uint32 attacked_group_id = 12;
	repeated AssistMonsterWave assist_monster_wave_list = 10;
	uint32 skill_index = 8;
	uint32 caster_id = 14;
}

message StartAetherDivideSceneBattleScRsp {
	uint32 retcode = 9;
	uint32 attacked_group_id = 4;
	optional Bbdikgejbmp battle_info = 8;
}

message StartAetherDivideChallengeBattleCsReq {
	uint32 challenge_id = 11;
	uint32 knlbemfihnp = 3;
}

message StartAetherDivideChallengeBattleScRsp {
	optional Bbdikgejbmp battle_info = 10;
	uint32 retcode = 13;
}

message Hffiajianhd {
	uint32 item_id = 14;
	uint32 slot = 4;
}

message Gjilpebeool {
	uint32 offgcgdndil = 3;
	uint32 jdhchabclcc = 10;
	optional SpBarInfo sp_bar = 4;
	repeated Hffiajianhd passive_skill = 5;
	uint32 exp = 1;
	uint32 promotion = 7;
}

message Jhjlepefadf {
	uint32 slot = 2;
	repeated uint32 gphepenpccp = 11;
}

message Ibmcnafobnb {
	uint32 num = 3;
	uint32 ebcbklncmip = 15;
	uint32 item_id = 2;
}

message GetAetherDivideInfoCsReq {

}

message GetAetherDivideInfoScRsp {
	uint32 egemndnedip = 3;
	uint32 pfljggdaofm = 15;
	uint32 phlkdnghooa = 6;
	repeated Jhjlepefadf lineup_list = 10;
	uint32 ibcipiidcol = 5;
	uint32 retcode = 4;
	repeated Ibmcnafobnb skill_info_list = 8;
	repeated Gjilpebeool nlfihkicddo = 2;
	uint32 jdhlmhjbojm = 12;
}

message SetAetherDivideLineUpCsReq {
	optional Jhjlepefadf lineup = 15;
}

message SetAetherDivideLineUpScRsp {
	optional Jhjlepefadf lineup = 13;
	uint32 retcode = 14;
}

message EquipAetherDividePassiveSkillCsReq {
	uint32 offgcgdndil = 13;
	uint32 slot = 6;
	uint32 item_id = 5;
}

message EquipAetherDividePassiveSkillScRsp {
	uint32 retcode = 5;
	optional Gjilpebeool bjmebepplei = 12;
	optional Ibmcnafobnb pbgmmfomcke = 8;
}

message ClearAetherDividePassiveSkillCsReq {
	uint32 slot = 7;
	uint32 offgcgdndil = 8;
}

message ClearAetherDividePassiveSkillScRsp {
	optional Gjilpebeool bjmebepplei = 5;
	optional Ibmcnafobnb pbgmmfomcke = 15;
	uint32 retcode = 4;
}

message AetherDivideSpiritExpUpCsReq {
	uint32 jdhlmhjbojm = 5;
	uint32 kbmlajoaane = 11;
	uint32 offgcgdndil = 6;
}

message AetherDivideSpiritExpUpScRsp {
	optional Gjilpebeool bjmebepplei = 13;
	uint32 jdhlmhjbojm = 12;
	uint32 retcode = 6;
}

message SwitchAetherDivideLineUpSlotCsReq {
	uint32 knlbemfihnp = 8;
}

message SwitchAetherDivideLineUpSlotScRsp {
	uint32 retcode = 5;
	uint32 knlbemfihnp = 2;
}

message StartAetherDivideStageBattleCsReq {
	uint32 event_id = 15;
}

message StartAetherDivideStageBattleScRsp {
	optional Bbdikgejbmp battle_info = 12;
	uint32 retcode = 1;
}

message AetherDivideLineupScNotify {
	optional Jhjlepefadf lineup = 6;
}

message AetherDivideSpiritInfoScNotify {
	optional Gjilpebeool bjmebepplei = 8;
	repeated Gjilpebeool mgegimbbajb = 7;
	uint32 jdhlmhjbojm = 3;
}

message GetAetherDivideChallengeInfoCsReq {

}

message GetAetherDivideChallengeInfoScRsp {
	repeated uint32 gkhjkfcccgp = 2;
	uint32 pcnnmjbjioc = 14;
	uint32 retcode = 5;
	repeated uint32 bfdipgblmmo = 13;
}

message AetherDivideFinishChallengeScNotify {
	uint32 challenge_id = 9;
}

message AetherDivideTainerInfoScNotify {
	uint32 egemndnedip = 12;
}

message AetherDivideSkillItemScNotify {
	uint32 num = 13;
	uint32 item_id = 10;
}

message AetherDivideRefreshEndlessCsReq {

}

message AetherDivideRefreshEndlessScRsp {
	uint32 ibcipiidcol = 2;
	uint32 retcode = 4;
}

message AetherDivideRefreshEndlessScNotify {
	uint32 ibcipiidcol = 9;
}

message AetherDivideTakeChallengeRewardCsReq {
	uint32 challenge_id = 14;
}

message AetherDivideTakeChallengeRewardScRsp {
	optional ItemList reward = 3;
	uint32 retcode = 12;
	uint32 challenge_id = 4;
}

message Jongagachho {

}

message Adoleofegok {
	uint32 poiiaiakilf = 14;
	uint32 map_id = 2;
}

message GetAlleyInfoCsReq {
	uint32 shop_id = 11;
	uint32 level = 12;
}

message Agademajimd {
	repeated Njaoiggmeal hnfojbcjamg = 3;
	repeated Adoleofegok immlphdnmol = 14;
	repeated LogisticsScore fmjplhohbab = 9;
	repeated uint32 omngcijalfm = 10;
}

message GetAlleyInfoScRsp {
	optional Agademajimd njgamccgadc = 4;
	optional Laiemcfacdk klpngfnmipi = 14;
	uint32 retcode = 2;
	repeated Hehaomiamgl bjcmphlpknf = 11;
	uint32 nopodeimffb = 10;
	repeated uint32 glboemjjahd = 13;
	map<uint32, uint32> nplakeokekb = 3;
	repeated uint32 gefndeeikef = 15;
	uint32 dbjhemippim = 12;
	repeated uint32 oedpopcohgb = 8;
	uint32 level = 1;
	optional Ecjmjjkjgop bokolcpkejm = 7;
}

message Kfaifhopnhh {
	uint32 iffppglafnb = 3;
	uint32 bddldnejfkn = 4;
}

message Kgcanljikcp {
	repeated Kfaifhopnhh kalfmcaghdo = 5;
	uint32 goods_id = 14;
}

message AlleyPlacingShip {
	repeated Kgcanljikcp goods_list = 15;
	uint32 ship_id = 13;
}

message AlleyPlacingGameCsReq {
	uint32 bclnmidffoh = 3;
	optional AlleyPlacingShip ejjodhjhham = 11;
	uint32 dhhjlchclaf = 13;
	uint32 fjdabppandc = 6;
	uint32 indeplofdec = 12;
	uint32 engdbiimaff = 15;
	uint32 bmnhhidhodd = 4;
	uint32 hlojkekipkf = 8;
	uint32 keokdnikbda = 10;
}

message AlleyPlacingGameScRsp {
	uint32 koficklljni = 2;
	uint32 event_id = 3;
	uint32 pglgblkkida = 11;
	uint32 kfboklhdjda = 13;
	uint32 elbbanddjci = 6;
	uint32 ilegfkgcmom = 9;
	uint32 khibbgphdmb = 12;
	uint32 retcode = 8;
}

message ActivityRaidPlacingGameCsReq {
	optional AlleyPlacingShip ejjodhjhham = 12;
	oneof Gcoiiopkjpf {
		uint32 Cjemmdpiclj = 1;
		uint32 Fjdabppandc = 6;
	}
}

message ActivityRaidPlacingGameScRsp {
	uint32 retcode = 9;
	oneof Gcoiiopkjpf {
		uint32 Cjemmdpiclj = 15;
		uint32 Fjdabppandc = 14;
	}
}

message Ecjmjjkjgop {
	repeated uint32 fbeildajede = 8;
	uint32 cpgajpckcdg = 14;
	repeated uint32 jdjcnbgoglp = 10;
	uint32 hdkdkjbdgcc = 1;
	uint32 jalhneidhgj = 4;
	bool iichhokopgg = 7;
}

message AlleyOrderChangedScNotify {
	optional Ecjmjjkjgop pphiadnkgaf = 10;
}

message AlleyShipUnlockScNotify {
	uint32 ejdfknmnale = 1;
}

message Lllomacpcgb {
	repeated uint32 dgnkgdlillb = 9;
	repeated uint32 ppibbkhlmjc = 8;
	uint32 cakccbjohoi = 14;
	repeated uint32 cadhphlnoch = 4;
	uint32 lepacdhlbib = 12;
	uint32 behpabeeodh = 2;
	uint32 shop_id = 15;
}

message Njaoiggmeal {
	uint32 bclnmidffoh = 15;
	repeated Lllomacpcgb hofdbflcgkb = 10;
	uint32 map_id = 3;
}

message LogisticsScore {
	optional ItemList reward = 3;
	uint32 last_level = 6;
	uint32 cur_score = 9;
	uint32 unlock_level = 15;
	uint32 map_id = 4;
	uint32 max_score = 14;
	uint32 last_max_score = 10;
}

message LogisticsGameCsReq {
	repeated Njaoiggmeal apmcphfmaeg = 10;
	bool boblnbjmkca = 14;
}

message LogisticsScoreRewardSyncInfoScNotify {
	repeated LogisticsScore fmjplhohbab = 9;
}

message LogisticsGameScRsp {
	uint32 retcode = 8;
	bool boblnbjmkca = 5;
	repeated LogisticsScore fmjplhohbab = 10;
	uint32 event_id = 6;
}

message Hehaomiamgl {
	Bjlncfjoiaf state = 9;
	uint32 event_id = 11;
	uint32 ningbnbmkop = 8;
}

message StartAlleyEventCsReq {
	uint32 event_id = 14;
}

message StartAlleyEventScRsp {
	uint32 retcode = 8;
	uint32 event_id = 10;
}

message AlleyEventChangeNotify {
	optional Hehaomiamgl nfldodiabcl = 11;
	uint32 hcnldibeaca = 12;
}

message AlleyEventEffectNotify {
	uint32 lfilnmfdnig = 7;
}

message TakePrestigeRewardCsReq {
	uint32 level = 4;
}

message TakePrestigeRewardScRsp {
	optional ItemList reward = 11;
	uint32 retcode = 6;
	uint32 level = 9;
}

message PrestigeLevelUpCsReq {

}

message PrestigeLevelUpScRsp {
	uint32 level = 11;
	uint32 retcode = 9;
}

message AlleyFundsScNotify {
	uint32 dbjhemippim = 10;
}

message SaveLogisticsCsReq {
	repeated Njaoiggmeal apmcphfmaeg = 1;
}

message SaveLogisticsScRsp {
	uint32 retcode = 1;
	repeated Njaoiggmeal apmcphfmaeg = 6;
}

message LogisticsInfoScNotify {
	optional Agademajimd njgamccgadc = 15;
}

message Laiemcfacdk {
	uint32 alghcnajbmm = 5;
	map<uint32, uint32> aahapcbilhc = 11;
	uint32 pghckcpkgll = 8;
}

message AlleyShipmentEventEffectsScNotify {
	optional Laiemcfacdk lgjkpjojblf = 4;
}

message GetSaveLogisticsMapCsReq {

}

message GetSaveLogisticsMapScRsp {
	uint32 retcode = 5;
	repeated Njaoiggmeal hnfojbcjamg = 11;
}

message AlleyShipUsedCountScNotify {
	map<uint32, uint32> nplakeokekb = 10;
}

message AlleyGuaranteedFundsCsReq {

}

message AlleyGuaranteedFundsScRsp {
	uint32 retcode = 6;
	uint32 clibobehndm = 3;
}

message AlleyTakeEventRewardCsReq {
	uint32 event_id = 11;
}

message AlleyTakeEventRewardScRsp {
	uint32 retcode = 2;
	optional ItemList reward = 8;
}

message LogisticsDetonateStarSkiffCsReq {

}

message LogisticsDetonateStarSkiffScRsp {
	uint32 retcode = 12;
}

message RelicArchive {
	uint32 type = 15;
	uint32 relic_id = 6;
}

message MonsterArchive {
	uint32 monster_id = 6;
	uint32 num = 10;
}

message ArchiveData {
	repeated uint32 archive_equipment_id_list = 12;
	repeated RelicArchive relic_list = 8;
	repeated uint32 archive_missing_avatar_id_list = 11;
	repeated uint32 archive_missing_equipment_id_list = 6;
	repeated MonsterArchive archive_monster_id_list = 4;
}

message GetArchiveDataCsReq {

}

message GetArchiveDataScRsp {
	optional ArchiveData archive_data = 4;
	uint32 retcode = 9;
}

message GetUpdatedArchiveDataCsReq {

}

message GetUpdatedArchiveDataScRsp {
	optional ArchiveData archive_data = 6;
	uint32 retcode = 10;
}

message GetAvatarDataCsReq {
	repeated uint32 avatar_id_list = 12;
	bool is_get_all = 4;
}

message EquipRelic {
	uint32 type = 12;
	uint32 relic_unique_id = 15;
}

message Avatar {
	bool is_marked = 7;
	uint32 base_avatar_id = 2;
	uint32 rank = 12;
	uint32 dressed_skin_id = 10;
	uint64 first_met_timestamp = 15;
	repeated EquipRelic equip_relic_list = 3;
	uint32 unk_enhanced_id = 11;
	repeated AvatarSkillTree skilltree_list = 13;
	uint32 exp = 8;
	repeated uint32 taken_rewards = 4;
	uint32 level = 1;
	uint32 promotion = 5;
	uint32 equipment_unique_id = 14;
}

message MultiPathAvatarTypeInfo {
	repeated EquipRelic equip_relic_list = 6;
	repeated AvatarSkillTree skilltree_list = 3;
	uint64 kdmclkjljpp = 2;
	MultiPathAvatarType avatar_id = 12;
	uint32 unk_enhanced_id = 10;
	uint32 dressed_skin_id = 11;
	uint32 path_equipment_id = 7;
	uint32 rank = 9;
}

message GetAvatarDataScRsp {
	uint32 jpnlpopmkej = 8;
	uint32 retcode = 2;
	repeated Khocchabnmn fefpijjlnfg = 1;
	repeated uint32 halndfogjnf = 13;
	map<uint32, MultiPathAvatarType> current_multi_path_avatar_id = 4;
	repeated Avatar avatar_list = 7;
	repeated Bcmljcfoefm pnkcfealami = 9;
	bool is_get_all = 15;
	repeated MultiPathAvatarTypeInfo multi_path_avatar_type_info_list = 12;
	repeated uint32 owned_skin_id_list = 10;
}

message AvatarExpUpCsReq {
	uint32 base_avatar_id = 1;
	optional ItemCostList item_cost_list = 3;
}

message AvatarExpUpScRsp {
	uint32 retcode = 7;
	repeated PileItem return_item_list = 1;
}

message UnlockSkilltreeCsReq {
	repeated ItemCost item_list = 14;
	uint32 point_id = 10;
	uint32 level = 12;
}

message UnlockSkilltreeScRsp {
	uint32 point_id = 4;
	uint32 retcode = 7;
	uint32 level = 9;
}

message PromoteAvatarCsReq {
	repeated ItemCost item_list = 10;
	uint32 base_avatar_id = 15;
}

message PromoteAvatarScRsp {
	uint32 retcode = 1;
}

message DressAvatarCsReq {
	uint32 avatar_id = 14;
	uint32 equipment_unique_id = 6;
}

message DressAvatarScRsp {
	uint32 retcode = 10;
}

message TakeOffEquipmentCsReq {
	uint32 avatar_id = 11;
}

message TakeOffEquipmentScRsp {
	uint32 retcode = 9;
}

message AddAvatarScNotify {
	uint32 base_avatar_id = 3;
	AddAvatarSrc src = 2;
	optional ItemList reward = 5;
	bool is_new = 9;
}

message AddMultiPathAvatarScNotify {
	bool is_new = 11;
	optional ItemList reward = 7;
	uint32 avatar_id = 9;
}

message RankUpAvatarCsReq {
	uint32 avatar_id = 11;
	uint32 rank = 2;
	optional ItemCostList item_cost_list = 6;
}

message RankUpAvatarScRsp {
	uint32 retcode = 15;
}

message RelicParam {
	uint32 slot = 10;
	uint32 relic_unique_id = 7;
}

message DressRelicAvatarCsReq {
	uint32 avatar_id = 6;
	repeated RelicParam param_list = 13;
}

message DressRelicAvatarScRsp {
	uint32 retcode = 11;
}

message TakeOffRelicCsReq {
	repeated uint32 slot_list = 15;
	uint32 avatar_id = 7;
}

message TakeOffRelicScRsp {
	uint32 retcode = 2;
}

message TakePromotionRewardCsReq {
	uint32 base_avatar_id = 8;
	uint32 promotion = 6;
}

message TakePromotionRewardScRsp {
	uint32 retcode = 14;
	optional ItemList reward_list = 13;
}

message DressAvatarSkinCsReq {
	uint32 avatar_id = 4;
	uint32 skin_id = 2;
}

message DressAvatarSkinScRsp {
	uint32 retcode = 13;
}

message TakeOffAvatarSkinCsReq {
	uint32 avatar_id = 4;
}

message TakeOffAvatarSkinScRsp {
	uint32 retcode = 3;
}

message UnlockAvatarSkinScNotify {
	uint32 skin_id = 8;
}

message MarkAvatarCsReq {
	uint32 avatar_id = 9;
	bool is_marked = 11;
}

message MarkAvatarScRsp {
	uint32 retcode = 5;
	bool is_marked = 11;
	uint32 avatar_id = 12;
}

message SetGrowthTargetAvatarCsReq {
	uint32 idnmeknhlpo = 13;
	uint32 avatar_id = 1;
	Gifjdobiiik source = 11;
	repeated Bcmljcfoefm ejbjbocoinb = 3;
}

message SetGrowthTargetAvatarScRsp {
	repeated Bcmljcfoefm ejbjbocoinb = 7;
	uint32 retcode = 12;
	uint32 jpnlpopmkej = 15;
	uint32 growth_avatar_id = 3;
}

message GrowthTargetAvatarChangedScNotify {
	uint32 jpnlpopmkej = 10;
	repeated Bcmljcfoefm ejbjbocoinb = 5;
}

message GetPreAvatarActivityListCsReq {

}

message GetPreAvatarActivityListScRsp {
	uint32 retcode = 12;
	repeated uint32 phhncjjpkic = 6;
}

message Nmifoljfcjh {
	uint32 aekfjkenphn = 13;
	string oanpnfjjfhg = 267;
	uint32 kjaeojbjojd = 7;
	uint32 hdnikcblkil = 4;
	string ebppbpmhdhi = 1274;
	uint32 type = 152;
	uint32 ihokhlfhocc = 6;
	uint32 module_id = 1755;
	string kpjhbeilaip = 1290;
	uint32 kiejacmogan = 3;
	uint32 lkkamllafae = 10;
	uint32 flaagnapdhp = 9;
	uint32 egddnpeonkc = 5;
	uint32 dlapkbddbbc = 2;
	uint32 dggnnbcjocc = 314;
	uint32 lijcngohkhf = 11;
	uint32 dbijfkobkkh = 15;
	uint32 pmmcfgmplba = 12;
	uint32 phibnkmiogp = 8;
	uint32 jjmkeadciag = 1;
	uint32 fojcckacdhh = 14;
	string mkhldlfonkn = 697;
}

message GetPreAvatarGrowthInfoCsReq {

}

message GetPreAvatarGrowthInfoScRsp {
	uint32 retcode = 2;
	repeated Nmifoljfcjh ijonomejohm = 3;
}

message SetAvatarEnhancedIdCsReq {
	uint32 enhanced_id = 11;
	uint32 avatar_id = 7;
}

message SetAvatarEnhancedIdScRsp {
	uint32 unk_enhanced_id = 6;
	uint32 growth_avatar_id = 3;
	uint32 retcode = 5;
}

message PveBattleResultCsReq {
	uint32 battle_id = 7;
	uint32 bclnmidffoh = 12;
	bool gjgkagfpagm = 14;
	map<string, uint32> hpekekipjlf = 3;
	BattleEndStatus end_status = 11;
	uint32 client_res_version = 9;
	uint32 jcjfgojfege = 4;
	bool is_ai_consider_ultra_skill = 2;
	bool is_auto_fight = 6;
	bytes turn_snapshot_hash = 10;
	uint32 cost_time = 15;
	string debug_extra_info = 8;
	repeated BattleOp op_list = 13;
	optional BattleStatistics stt = 1;
	uint32 stage_id = 5;
}

message PveBattleResultScRsp {
	string bin_version = 9;
	uint32 event_id = 3;
	optional ItemList jhmmoojpkha = 10;
	optional ItemList nhanakjfeab = 6;
	repeated BattleAvatar battle_avatar_list = 14;
	uint32 retcode = 8;
	optional ItemList drop_data = 5;
	uint32 ggmpfnkofkd = 7;
	uint32 stage_id = 15;
	string res_version = 1;
	optional ItemList nbhlifpblmf = 1229;
	uint32 klodelecmci = 11;
	uint32 battle_id = 13;
	uint32 ndcmdokkphh = 12;
	BattleEndStatus end_status = 2;
	bool check_identical = 4;
	optional Mbkocmmicpg kjchgehdlno = 759;
}

message QuitBattleCsReq {
	Lipekjfjmnm nikhbkchhjg = 1;
	optional BattleStatistics stt = 3;
}

message QuitBattleScRsp {
	uint32 retcode = 15;
}

message GetCurBattleInfoCsReq {

}

message GetCurBattleInfoScRsp {
	optional Bbdikgejbmp pbphjbafgbb = 8;
	optional SceneBattleInfo battle_info = 5;
	uint32 retcode = 9;
	uint32 ibpjkffflng = 2;
	BattleEndStatus hddndocnefo = 14;
}

message SyncClientResVersionCsReq {
	uint32 client_res_version = 9;
}

message SyncClientResVersionScRsp {
	uint32 client_res_version = 1;
	uint32 retcode = 2;
}

message QuitBattleScNotify {

}

message BattleLogReportCsReq {

}

message BattleLogReportScRsp {
	bool lcgbacgbknc = 13;
	uint32 retcode = 9;
}

message ServerSimulateBattleFinishScNotify {

}

message ReBattleAfterBattleLoseCsNotify {
	bool pmjahilblfl = 12;
}

message RebattleByClientCsNotify {
	Lipekjfjmnm nikhbkchhjg = 7;
	optional BattleStatistics stt = 5;
}

message GetBattleCollegeDataCsReq {

}

message GetBattleCollegeDataScRsp {
	uint32 retcode = 1;
	repeated uint32 finished_college_id_list = 14;
	uint32 mamhojmfjof = 9;
}

message BattleCollegeDataChangeScNotify {
	uint32 mamhojmfjof = 12;
	repeated uint32 finished_college_id_list = 1;
	optional ItemList reward = 3;
}

message StartBattleCollegeCsReq {
	uint32 id = 13;
}

message StartBattleCollegeScRsp {
	optional SceneBattleInfo battle_info = 8;
	uint32 id = 14;
	uint32 retcode = 3;
}

message BattlePassInfoNotify {
	uint64 cbjklleohdc = 10;
	uint64 fdkkikganck = 8;
	uint64 inbockjglbo = 12;
	uint64 hkeoaaccbpl = 13;
	uint64 ljoekefkpko = 2;
	uint64 ekgopldjoii = 14;
	uint64 nkaoknmholh = 7;
	BpTierType bp_tier_type = 6;
	uint32 exp = 4;
	uint64 cphiiockhpi = 1;
	uint32 ljflflimkad = 3;
	uint32 edbmnmdjbko = 9;
	uint32 level = 11;
}

message TakeBpRewardCsReq {
	BpRewardType type = 12;
	uint32 optional_reward_id = 6;
	uint32 level = 9;
}

message TakeBpRewardScRsp {
	optional ItemList reward = 7;
	uint32 retcode = 11;
}

message BuyBpLevelCsReq {
	uint32 ldnjeacfbje = 4;
}

message BuyBpLevelScRsp {
	uint32 retcode = 7;
}

message OptionalReward {
	uint32 optional_reward_id = 10;
	uint32 level = 4;
}

message TakeAllRewardCsReq {
	repeated OptionalReward modoofjoiao = 15;
}

message TakeAllRewardScRsp {
	uint32 retcode = 13;
	optional ItemList reward = 12;
}

message GetBenefitActivityInfoCsReq {

}

message Ecmkalkcjac {
	string mpbpongigid = 9;
	string cmamedolljl = 7;
	uint32 head_icon = 15;
}

message Fecadlcjfic {
	uint32 level = 4;
	optional ItemList item_list = 14;
}

message Ojfaklfikcj {
	repeated Fecadlcjfic pfeaniahfpc = 6;
	uint32 iigmeobdmje = 5;
	repeated Ecmkalkcjac nkjpgkmlhnk = 15;
	uint64 end_time = 2;
	uint64 begin_time = 12;
	uint64 pjpmlcdhebl = 9;
}

message Mogacgjehae {
	uint32 colbgejelgi = 3;
	uint32 status = 15;
	optional Ojfaklfikcj config = 5;
	uint32 level = 12;
}

message GetBenefitActivityInfoScRsp {
	uint32 retcode = 7;
	repeated Mogacgjehae fmkcnmcailn = 10;
	bool ofnginbodlp = 6;
}

message Lflogadlema {
	bool einfbgkendh = 4;
	uint32 colbgejelgi = 8;
}

message TakeBenefitActivityRewardCsReq {
	repeated Lflogadlema param_list = 13;
	bool bfbpcbnpfph = 10;
}

message Cmgdhfiobef {
	bool einfbgkendh = 5;
	uint32 colbgejelgi = 6;
	optional ItemList item_list = 12;
}

message TakeBenefitActivityRewardScRsp {
	optional ItemList ckekcconjgb = 1;
	repeated Cmgdhfiobef param_list = 6;
	uint32 retcode = 2;
}

message JoinBenefitActivityCsReq {
	uint32 colbgejelgi = 2;
}

message JoinBenefitActivityScRsp {
	uint32 retcode = 4;
	uint32 colbgejelgi = 10;
}

message Ijkjjdhlklb {
	AvatarType avatar_type = 14;
	uint32 avatar_id = 12;
}

message Fcihijlomga {
	uint32 naalcbmbpgc = 2;
	uint32 llfofpndafg = 7;
	repeated uint32 avatar_list = 4;
	bool aplknjegbkf = 14;
	uint32 cpgoipicpjf = 12;
	uint32 challenge_id = 15;
	repeated uint32 hlibijfhhpg = 3;
	uint32 hnpeappmgaa = 11;
	repeated Ijkjjdhlklb mdlachdkmph = 6;
	uint32 hjmglemjhkg = 13;
}

message GetBoxingClubInfoCsReq {

}

message GetBoxingClubInfoScRsp {
	uint32 retcode = 9;
	repeated Fcihijlomga challenge_list = 15;
}

message Gneibbpoaab {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 14;
}

message MatchBoxingClubOpponentCsReq {
	repeated Gneibbpoaab mdlachdkmph = 1;
	repeated uint32 avatar_list = 4;
	uint32 challenge_id = 3;
}

message MatchBoxingClubOpponentScRsp {
	optional Fcihijlomga dddikpnnble = 15;
	uint32 retcode = 11;
}

message ChooseBoxingClubResonanceCsReq {
	uint32 challenge_id = 14;
	uint32 llfofpndafg = 13;
}

message ChooseBoxingClubResonanceScRsp {
	uint32 retcode = 6;
	optional Fcihijlomga dddikpnnble = 10;
}

message SetBoxingClubResonanceLineupCsReq {
	uint32 challenge_id = 2;
	repeated Gneibbpoaab mdlachdkmph = 11;
}

message SetBoxingClubResonanceLineupScRsp {
	uint32 retcode = 1;
	optional Fcihijlomga dddikpnnble = 8;
}

message ChooseBoxingClubStageOptionalBuffCsReq {
	uint32 fmgmaiegofp = 13;
	uint32 challenge_id = 9;
}

message ChooseBoxingClubStageOptionalBuffScRsp {
	uint32 retcode = 12;
	optional Fcihijlomga dddikpnnble = 6;
}

message StartBoxingClubBattleCsReq {
	uint32 challenge_id = 2;
}

message StartBoxingClubBattleScRsp {
	uint32 retcode = 3;
	uint32 challenge_id = 8;
	optional SceneBattleInfo battle_info = 13;
}

message GiveUpBoxingClubChallengeCsReq {
	uint32 challenge_id = 3;
	bool pcpdfjhdjcc = 11;
}

message GiveUpBoxingClubChallengeScRsp {
	uint32 retcode = 2;
	optional Fcihijlomga dddikpnnble = 1;
}

message BoxingClubRewardScNotify {
	uint32 challenge_id = 6;
	optional ItemList reward = 2;
	uint32 naalcbmbpgc = 13;
	bool is_win = 8;
}

message BoxingClubChallengeUpdateScNotify {
	optional Fcihijlomga dddikpnnble = 10;
}

message Challenge {
	uint32 score = 9;
	uint32 challenge_id = 14;
	uint32 stars = 4;
	optional ChallengeExtStageInfo stage_info = 15;
	uint32 taken_reward = 5;
	uint32 score_two = 7;
	uint32 attempts = 3;
	bool kfdaicilnmb = 11;
}

message ChallengeReward {
	uint64 taken_challenge_reward = 12;
	uint32 group_id = 11;
}

message ChallengeHistoryMaxLevel {
	uint32 level = 13;
	uint32 ordering_index = 7;
}

message GetChallengeCsReq {

}

message GetChallengeScRsp {
	repeated ChallengeHistoryMaxLevel max_level_list = 10;
	uint32 retcode = 1;
	repeated Challenge challenge_list = 8;
	repeated ChallengeReward challenge_reward_list = 6;
	uint32 lpljmkpblif = 7;
}

message StoryStageBuffInfo {
	uint32 buff_two = 3;
	uint32 buff_one = 15;
}

message BossStageBuffInfo {
	uint32 buff_one = 1;
	uint32 buff_two = 7;
}

message ChallengeBuffInfo {
	oneof Kfelkjldkeh {
		StoryStageBuffInfo StoryInfo = 3;
		BossStageBuffInfo BossInfo = 15;
	}
}

message StartChallengeCsReq {
	optional ChallengeBuffInfo stage_info = 13;
	uint32 challenge_id = 2;
	repeated uint32 second_lineup_ids = 7;
	repeated uint32 first_lineup_ids = 12;
}

message StartChallengeScRsp {
	optional ChallengeExtStageInfo stage_info = 6;
	repeated LineupInfo lineup_list = 15;
	optional SceneInfo scene = 12;
	uint32 retcode = 9;
	optional CurChallengeInstance cur_challenge_instance = 1;
}

message StartPartialChallengeCsReq {
	uint32 challenge_id = 4;
	uint32 buff_id = 1;
	bool is_first_half = 2;
}

message StartPartialChallengeScRsp {
	optional CurChallengeInstance cur_challenge_instance = 9;
	optional SceneInfo scene = 12;
	optional LineupInfo lineup = 13;
	uint32 retcode = 14;
}

message LeaveChallengeCsReq {

}

message LeaveChallengeScRsp {
	uint32 retcode = 13;
}

message ChallengeSettleNotify {
	uint32 challenge_score = 4;
	optional ChallengeHistoryMaxLevel max_level = 2;
	uint32 challenge_id = 1;
	optional CurChallengeInstance cur_challenge_instance = 13;
	uint32 lpljmkpblif = 15;
	bool is_win = 7;
	optional ItemList reward = 3;
	uint32 stars = 6;
	uint32 score_two = 11;
	repeated uint32 hahaeifmlbm = 9;
}

message KillMonsterInfo {
	uint32 kill_num = 6;
	uint32 monster_id = 2;
}

message ChallengeStoryStageBuff {
	repeated uint32 buff_list = 7;
}

message ChallengeBossStageBuff {
	repeated uint32 buff_list = 1;
	uint32 kbhnhbbahhf = 3;
}

message ChallengeStageBuffInfo {
	oneof Kfelkjldkeh {
		ChallengeStoryStageBuff StoryBuff = 7;
		ChallengeBossStageBuff BossBuff = 4;
	}
}

message CurChallengeInstance {
	uint32 score_two = 13;
	uint32 denbnlilgij = 1;
	uint32 challenge_id = 11;
	uint32 round_count = 4;
	optional ChallengeStageBuffInfo stage_info = 14;
	ChallengeStatus status = 5;
	uint32 score = 8;
	ExtraLineupType extra_lineup_type = 2;
	repeated KillMonsterInfo archive_monster_id_list = 6;
}

message GetCurChallengeCsReq {

}

message GetCurChallengeScRsp {
	optional CurChallengeInstance cur_challenge_instance = 3;
	uint32 retcode = 2;
	repeated LineupInfo lineup_list = 12;
}

message ChallengeLineupNotify {
	ExtraLineupType extra_lineup_type = 14;
}

message TakeChallengeRewardCsReq {
	uint32 group_id = 12;
}

message TakeChallengeRewardScRsp {
	uint32 retcode = 10;
	uint32 group_id = 15;
	repeated TakenChallengeRewardInfo taken_reward_list = 8;
}

message TakenChallengeRewardInfo {
	optional ItemList reward = 11;
	uint32 star_count = 10;
}

message ChallengeMemoryStats {
	optional ChallengeMemoryClearInfo clear_info = 12;
	uint32 attempts = 3;
}

message ChallengeStoryStats {
	optional ChallengeStoryClearInfo clear_info = 10;
	uint32 attempts = 3;
}

message ChallengeBossStats {
	optional ChallengeBossClearInfo clear_info = 1;
	uint32 attempts = 5;
}

message ChallengeMemoryClearInfo {
	uint32 round_count = 9;
	uint32 level = 8;
	uint32 max_star = 14;
	repeated ChallengeLineup lineup_list = 13;
}

message ChallengeStoryClearInfo {
	uint32 score = 6;
	uint32 buff_two = 15;
	uint32 buff_one = 9;
	uint32 max_star = 14;
	uint32 level = 5;
	repeated ChallengeLineup lineup_list = 8;
}

message ChallengeBossClearInfo {
	uint32 max_star = 10;
	uint32 score = 6;
	uint32 buff_one = 13;
	uint32 buff_two = 14;
	repeated ChallengeLineup lineup_list = 11;
	uint32 level = 9;
}

message ChallengeLineup {
	repeated ChallengeLineupMember avatar_list = 3;
}

message ChallengeLineupMember {
	uint32 index = 4;
	AvatarType avatar_type = 3;
	uint32 level = 12;
	uint32 id = 11;
	uint32 ggdiibcdobb = 5;
}

message GetChallengeGroupStatisticsCsReq {
	uint32 group_id = 14;
}

message GetChallengeGroupStatisticsScRsp {
	uint32 group_id = 7;
	uint32 retcode = 2;
}

message ChallengeBossSingleNodeInfo {
	bool meelgndnomn = 11;
	bool is_win = 12;
	uint32 buff_id = 15;
	uint32 stage_score = 13;
}

message ChallengeBossAvatarEquipment {
	uint32 rank = 9;
	uint32 tid = 8;
	uint32 unique_id = 7;
	uint32 level = 10;
	uint32 promotion = 14;
}

message ChallengeBossRelic {
	uint32 main_affix_id = 4;
	repeated RelicAffix sub_affix_list = 13;
	uint32 tid = 6;
	uint32 level = 15;
	uint32 unique_id = 9;
}

message ChallengeBossAvatarRelic {
	map<uint32, ChallengeBossRelic> equipped_relic_map = 11;
}

message ChallengeBossStageInfo {
	optional ChallengeBossSingleNodeInfo first_node = 12;
	repeated uint32 first_lineup_ids = 11;
	repeated uint32 second_lineup_ids = 15;
	optional ChallengeBossSingleNodeInfo second_node = 10;
	bool ncbdnpgpeai = 8;
	map<uint32, ChallengeBossAvatarRelic> avatar_relic_map = 14;
	map<uint32, ChallengeBossAvatarEquipment> avatar_equipment_map = 9;
}

message ChallengeExtStageInfo {
	oneof Kfelkjldkeh {
		ChallengeBossStageInfo BossInfo = 1;
	}
}

message RestartChallengePhaseCsReq {

}

message RestartChallengePhaseScRsp {
	optional SceneInfo scene = 14;
	uint32 retcode = 13;
}

message EnterChallengeNextPhaseCsReq {

}

message EnterChallengeNextPhaseScRsp {
	optional SceneInfo scene = 5;
	uint32 retcode = 15;
}

message ChallengeBossPhaseSettleNotify {
	uint32 stars = 15;
	uint32 score_two = 14;
	bool is_win = 8;
	uint32 phase = 9;
	bool show_reward = 5;
	uint32 fcmagjblgoj = 2;
	bool is_end = 1;
	uint32 challenge_id = 4;
	repeated BattleTarget challenge_battle_target_list = 3;
	uint32 challenge_score = 7;
}

message SendMsgCsReq {
	uint32 emote = 11;
	repeated uint32 to_uid_list = 4;
	ChatType chat_type = 13;
	MsgType msg_type = 6;
	optional Pedlphdbnaf hnbepabnbng = 1;
	string text = 3;
}

message SendMsgScRsp {
	uint32 retcode = 1;
	uint64 end_time = 11;
}

message Chat {
	MsgType msg_type = 15;
	optional Pedlphdbnaf hnbepabnbng = 6;
	string text = 9;
	uint32 sender_uid = 10;
	uint32 emote = 3;
	uint64 sent_time = 8;
}

message RevcMsgScNotify {
	uint32 emote = 2;
	uint32 from_uid = 7;
	MsgType msg_type = 13;
	string text = 3;
	optional Pedlphdbnaf hnbepabnbng = 15;
	uint32 to_uid = 6;
	ChatType chat_type = 4;
}

message PrivateMsgOfflineUsersScNotify {
	repeated uint32 aibfdnekjmg = 9;
}

message GetPrivateChatHistoryCsReq {
	uint32 from_uid = 7;
	uint32 to_uid = 11;
}

message GetPrivateChatHistoryScRsp {
	repeated Chat chat_list = 13;
	uint32 retcode = 11;
	uint32 to_uid = 14;
	uint32 from_uid = 15;
}

message Onbgidncbob {
	uint32 to_uid = 1;
	int64 fflipihfaef = 14;
}

message GetChatFriendHistoryCsReq {

}

message GetChatFriendHistoryScRsp {
	uint32 retcode = 3;
	repeated Onbgidncbob iligpoleepj = 14;
}

message GetChatEmojiListCsReq {

}

message GetChatEmojiListScRsp {
	repeated uint32 jepkimmipom = 5;
	uint32 retcode = 7;
}

message MarkChatEmojiCsReq {
	bool ncknkebngoh = 2;
	uint32 emote = 11;
}

message MarkChatEmojiScRsp {
	uint32 retcode = 6;
	bool ncknkebngoh = 15;
	uint32 emote = 9;
}

message BatchMarkChatEmojiCsReq {
	repeated uint32 gcjkopicjhd = 15;
}

message BatchMarkChatEmojiScRsp {
	repeated uint32 gcjkopicjhd = 5;
	uint32 retcode = 6;
}

message GetLoginChatInfoCsReq {

}

message GetLoginChatInfoScRsp {
	uint32 retcode = 14;
	repeated uint32 aibfdnekjmg = 1;
}

message Ncciejolncf {
	optional ItemCostList gficflciejj = 9;
}

message Ehanapnjfjd {
	optional SceneInfo scene = 11;
	optional LineupInfo lineup = 5;
}

message Oaloinnaini {
	uint32 kpnakipljgb = 11;
	Nlmollcfcgb iccepgcifmg = 7;
	uint32 pagpblafneh = 2;
	repeated uint32 ngdedlkngfg = 143;
	uint32 omcagfaahke = 1;
	optional Eendhpkpflp edphldegjlm = 1998;
	uint32 gofpdnoapbb = 5;
	uint32 cjgonlaecko = 13;
	int32 jfipiifpmmb = 1392;
	Aikblmohhjp bkknaegklcb = 3;
	bool fneidjimjph = 1030;
	bool bnafeecpego = 10;
	uint32 hfmjdfpnncm = 12;
	uint32 onlglocadgd = 8;
	uint32 ciblonpnbfe = 15;
	optional Aekpjeldapd boncmhigpfj = 1368;
	optional Kjehfkbjphd licobikoaao = 340;
}

message ChessRogueRollDiceCsReq {
	uint32 kchfjdajecm = 7;
}

message ChessRogueRollDiceScRsp {
	uint32 retcode = 3;
	optional Oaloinnaini aiaonpfbgng = 14;
}

message Iaaefegdnlo {
	uint32 monster_id = 5;
	uint32 mldlfhjlhoc = 14;
}

message Mmopbldhjmf {
	uint32 endidlcdnni = 6;
	bool pipmgacmjnn = 10;
	repeated Iaaefegdnlo cdodefkbkpd = 8;
}

message Ilhlpphldcg {
	repeated uint32 gcnkifmgmce = 11;
}

message Ikhpeepogle {
	optional Ilhlpphldcg cjiakcaphjg = 1;
	optional Mmopbldhjmf hgimnjflklb = 4;
}

message Pihkdokdikf {
	oneof Inbkijdhplp {
		Mmopbldhjmf Hgimnjflklb = 13;
		Ilhlpphldcg Cjiakcaphjg = 5;
		Ikhpeepogle Iagebjbplfm = 8;
	}
}

message Mknhikdcjjg {
	uint32 iigoemfhgll = 4;
	uint32 feknlhbagdd = 3;
	uint32 dknjlpihepj = 6;
	optional Pihkdokdikf stage_info = 11;
	uint32 id = 13;
	uint32 room_id = 8;
	Eieenafclll daajljcajob = 15;
	Ogjbgonlhih hkcjgfephea = 2;
	bool knbdpfeidnm = 7;
	bool alifdhnigal = 1;
	uint32 gicooehhhig = 5;
}

message Ofphdlopiem {
	uint32 hdhiongofid = 5;
	uint32 nghppegbpao = 14;
	repeated Mknhikdcjjg iafbijekkpg = 11;
	uint32 hlamiclgpee = 13;
	uint32 bmajdilbpob = 7;
}

message Doiblcekfdg {
	uint32 room_id = 4;
	uint32 hhcbjghkcpc = 10;
}

message Kkckgeojfke {
	optional Eendhpkpflp bohdminejno = 12;
	uint32 bdmlgepndfm = 9;
}

message Hajpalbodih {
	uint32 aoeppibmggn = 1;
	optional Ofphdlopiem anhjnbgielf = 10;
	uint32 pmgpokklkdd = 11;
	optional Kkckgeojfke cfekaolkhjg = 7;
	Eieenafclll ccghbbbolmh = 15;
	repeated Doiblcekfdg mcknecfhdkg = 5;
	repeated uint32 ingagmmhmjc = 9;
}

message Afabkdefddg {
	int32 ocdnmhnnkgm = 8;
	uint32 mhoijafgecp = 12;
	int32 ljffcnbpjdd = 9;
	uint32 id = 6;
	uint32 eehkfnkhnbi = 13;
	repeated uint32 cpbmapflplc = 4;
	optional Hajpalbodih jmgkbhhigmk = 2;
	uint32 ppjbgnbmkpm = 1;
}

message Llbjabeocec {
	uint32 aeon_id = 9;
	uint32 mamhojmfjof = 2;
}

message Pgaldkkfblc {
	repeated Llbjabeocec pjkdpobkkgb = 8;
}

message Cjembcbcbkj {
	repeated uint32 fpchnblonlc = 6;
	optional Pgaldkkfblc hlagjpbaeml = 3;
	int32 icjabpgmacj = 2;
	uint32 amnbmjofjoo = 5;
	optional Eendhpkpflp bohdminejno = 12;
}

message Knlmliimohd {
	uint32 avatar_id = 13;
}

message Iegmfgpfadl {
	repeated Knlmliimohd ajljgmilelp = 10;
	optional Ncciejolncf fpjckpnlnfm = 13;
}

message Hkmlalbdpgo {
	uint32 lhcbbgimmdg = 13;
	repeated uint32 boonpdeobla = 7;
	uint32 fahihdjfohm = 10;
	bool fjkgkaekbkj = 5;
}

message Ocbcbidlllj {
	int32 odjpoenppob = 11;
}

message Hijkilgjclp {
	repeated uint32 dimhpbcpnlc = 15;
}

message Fflapkolhcm {
	optional Hkmlalbdpgo story_info = 9;
	optional Afabkdefddg lmgkmaoicgc = 5;
	optional Kcacnhcadec lgopnbhhhbg = 15;
	optional Ocbcbidlllj ibmioggkbfb = 2;
	uint32 rogue_sub_mode = 12;
	optional Imnpeajajjo opakjjmagph = 7;
	optional Hijkilgjclp fiocabcbnkb = 1389;
	optional Iegmfgpfadl embagmmhipa = 10;
	optional Oaloinnaini aiaonpfbgng = 14;
	repeated Lgkgehhajje biphngcadde = 6;
	optional Nkidddpflje eeppkmpajoh = 11;
	optional Cjembcbcbkj chmhpcngfao = 4;
	optional Bcllbmeedkp aabchfbkpeg = 3;
	optional RogueCommonPendingAction kndmeilhkej = 1;
}

message Jacmenokjfm {
	repeated uint32 cmnnlmcemcg = 1;
	optional Lgeljhjomlo talent_info = 4;
	optional Pgaldkkfblc hlagjpbaeml = 11;
	optional Dffjcmlaicl bbcpoebnanc = 6;
	optional Afaghelicpd fiocabcbnkb = 2;
	repeated uint32 cpbmapflplc = 13;
}

message Bipddejaadc {
	uint32 rogue_sub_mode = 9;
	repeated Lgkgehhajje biphngcadde = 11;
}

message Ihnjghalkjb {
	optional Dffjcmlaicl bbcpoebnanc = 11;
	optional Lgeljhjomlo talent_info = 14;
	repeated uint32 cmnnlmcemcg = 8;
	optional Pgaldkkfblc hlagjpbaeml = 5;
	optional Afaghelicpd fiocabcbnkb = 9;
	repeated uint32 cpbmapflplc = 2;
}

message Ccodjoaholb {
	uint32 opoimhhafjo = 246;
	optional ItemList bgpeckfdeld = 7;
	uint32 dmbdnaicpfb = 12;
	uint32 abehkcjhceh = 377;
	optional Gckblhadlgn lgopnbhhhbg = 6;
	uint32 score = 1118;
	uint32 ipojmmgoopj = 15;
	repeated uint32 ojggmoopgil = 10;
	optional Imnpeajajjo opakjjmagph = 1506;
	uint32 egpcibjiajd = 1162;
	optional LineupInfo anniaoidado = 3;
	uint32 plbcdiaadkd = 4;
	uint32 rogue_sub_mode = 1415;
	uint32 blbbokogfda = 13;
	optional Ajpfphkklpg eeppkmpajoh = 11;
	bool hlnfbgacnpo = 2;
	uint32 fgomiplmeic = 8;
	Kfhlbkccaco gmolnjibnja = 14;
	uint32 pbalfienefo = 1;
}

message Ojleefjelap {
	repeated Mknhikdcjjg iafbijekkpg = 12;
	uint32 hbcmgiicjmk = 1;
}

message Lahjpfooheb {
	uint32 fgomiplmeic = 12;
	uint32 kenpckfonok = 5;
}

message Dipmfomgcgl {
	uint32 fahihdjfohm = 6;
	uint32 cfibpmkaino = 1;
}

message ChessRogueQueryCsReq {

}

message ChessRogueQueryScRsp {
	optional Ccodjoaholb boikablfkec = 12;
	uint32 retcode = 8;
	optional Jacmenokjfm blndmfgkpmj = 1;
	optional Ihnjghalkjb lagbgldlgcb = 5;
	optional Fflapkolhcm hndlhicdnpc = 14;
}

message ChessRogueEnterCellCsReq {
	uint32 femgpnlfagc = 11;
	uint32 hhcbjghkcpc = 2;
}

message ChessRogueEnterCellScRsp {
	optional Fflapkolhcm hndlhicdnpc = 7;
	optional Ehanapnjfjd stage_info = 5;
	uint32 retcode = 12;
	uint32 hhcbjghkcpc = 15;
}

message ChessRogueEnterCsReq {
	uint32 id = 10;
}

message ChessRogueEnterScRsp {
	uint32 retcode = 12;
	optional Fflapkolhcm hndlhicdnpc = 11;
	optional Ehanapnjfjd stage_info = 4;
	uint32 id = 2;
}

message ChessRogueLeaveCsReq {

}

message ChessRogueLeaveScRsp {
	optional Jacmenokjfm blndmfgkpmj = 7;
	optional Ihnjghalkjb lagbgldlgcb = 13;
	optional Ehanapnjfjd stage_info = 3;
	uint32 retcode = 5;
	optional Cjembcbcbkj chmhpcngfao = 2;
}

message ChessRogueGiveUpCsReq {

}

message ChessRogueGiveUpScRsp {
	optional Jacmenokjfm blndmfgkpmj = 8;
	optional Ccodjoaholb boikablfkec = 12;
	optional Ehanapnjfjd stage_info = 5;
	optional Ihnjghalkjb lagbgldlgcb = 7;
	optional Cjembcbcbkj chmhpcngfao = 13;
	uint32 retcode = 4;
}

message ChessRogueStartCsReq {
	repeated uint32 avatar_id_list = 9;
	repeated uint32 base_avatar_id_list = 1;
	uint32 dhndampbhpp = 5;
	uint32 aeon_id = 8;
	repeated uint32 trial_avatar_id_list = 14;
	repeated uint32 ahiibhkdfjb = 2;
	uint32 id = 7;
}

message ChessRogueStartScRsp {
	optional Ojleefjelap dbdgahblgbb = 2;
	optional Fflapkolhcm hndlhicdnpc = 12;
	uint32 retcode = 10;
	optional Ehanapnjfjd stage_info = 6;
}

message ChessRogueQueryAeonDimensionsCsReq {

}

message ChessRogueQueryAeonDimensionsScRsp {
	optional Pgaldkkfblc hndlhicdnpc = 1;
	uint32 retcode = 6;
}

message ChessRogueChangeyAeonDimensionNotify {
	optional Llbjabeocec hndlhicdnpc = 5;
}

message ChessRogueSelectCellCsReq {
	uint32 hhcbjghkcpc = 5;
	uint32 femgpnlfagc = 13;
}

message ChessRogueSelectCellScRsp {
	uint32 femgpnlfagc = 10;
	uint32 hhcbjghkcpc = 1;
	uint32 retcode = 9;
	optional Oiaolbgoaag kajafnpekaj = 14;
}

message ChessRogueLayerAccountInfoNotify {
	optional Ccodjoaholb boikablfkec = 3;
	uint32 pbalfienefo = 11;
	uint32 ppjbgnbmkpm = 13;
}

message GetChessRogueBuffEnhanceInfoCsReq {

}

message GetChessRogueBuffEnhanceInfoScRsp {
	uint32 retcode = 6;
	optional Ngpimhhelmm buff_enhance_info = 1;
}

message EnhanceChessRogueBuffCsReq {
	uint32 ojeblmkkmgo = 15;
}

message EnhanceChessRogueBuffScRsp {
	bool is_success = 11;
	optional Ffamnkoaihf rogue_buff = 8;
	uint32 retcode = 1;
	optional Ngpimhhelmm buff_enhance_info = 4;
}

message ChessRoguePickAvatarCsReq {
	repeated uint32 avatar_id_list = 5;
	uint32 prop_entity_id = 1;
}

message ChessRoguePickAvatarScRsp {
	repeated uint32 avatar_id_list = 12;
	uint32 retcode = 3;
	optional Iegmfgpfadl embagmmhipa = 2;
}

message ChessRogueReviveAvatarCsReq {
	uint32 interacted_prop_entity_id = 7;
	repeated uint32 avatar_id_list = 13;
}

message ChessRogueReviveAvatarScRsp {
	repeated uint32 avatar_id_list = 7;
	uint32 retcode = 15;
	optional Ncciejolncf fpjckpnlnfm = 12;
}

message ChessRogueUpdateReviveInfoScNotify {
	optional Ncciejolncf fpjckpnlnfm = 7;
}

message ChessRogueUpdateMoneyInfoScNotify {
	optional Bcllbmeedkp aabchfbkpeg = 5;
}

message ChessRogueUpdateDiceInfoScNotify {
	optional Oaloinnaini aiaonpfbgng = 7;
}

message ChessRogueUpdateLevelBaseInfoScNotify {
	Ibmlfggingp eehkfnkhnbi = 11;
	Mmkdkdgfblh reason = 9;
}

message ChessRogueUpdateAllowedSelectCellScNotify {
	uint32 eamgahffeco = 14;
	repeated uint32 ingagmmhmjc = 15;
}

message ChessRogueUpdateBoardScNotify {
	optional Ofphdlopiem dhdknmfmgbc = 8;
}

message ChessRogueUpdateAeonModifierValueScNotify {
	uint32 aeon_id = 13;
	int32 icjabpgmacj = 15;
}

message ChessRogueUpdateDicePassiveAccumulateValueScNotify {
	int32 cblaememmig = 5;
}

message ChessRogueSkipTeachingLevelCsReq {

}

message ChessRogueSkipTeachingLevelScRsp {
	uint32 retcode = 7;
	optional ItemList ndeeffooflg = 10;
}

message ChessRogueUpdateUnlockLevelScNotify {
	repeated uint32 cpbmapflplc = 2;
}

message ChessRogueEnterNextLayerCsReq {

}

message ChessRogueEnterNextLayerScRsp {
	optional Ehanapnjfjd stage_info = 15;
	optional Ojleefjelap dbdgahblgbb = 3;
	optional Fflapkolhcm rogue_info = 2;
	uint32 retcode = 10;
}

message ChessRogueReRollDiceCsReq {
	uint32 kchfjdajecm = 12;
}

message ChessRogueReRollDiceScRsp {
	optional Oaloinnaini aiaonpfbgng = 12;
	uint32 retcode = 10;
}

message ChessRogueConfirmRollCsReq {
	uint32 kchfjdajecm = 8;
}

message ChessRogueConfirmRollScRsp {
	uint32 retcode = 3;
	optional Oaloinnaini aiaonpfbgng = 10;
}

message ChessRogueCheatRollCsReq {
	uint32 eooadpocphd = 3;
	uint32 kchfjdajecm = 2;
}

message ChessRogueCheatRollScRsp {
	uint32 nljoldmcgai = 1;
	uint32 eooadpocphd = 6;
	uint32 retcode = 14;
	optional Oaloinnaini aiaonpfbgng = 13;
}

message ChessRogueGiveUpRollCsReq {

}

message ChessRogueGiveUpRollScRsp {
	uint32 retcode = 10;
	optional ItemList nkmjhejcolp = 6;
	optional Oaloinnaini aiaonpfbgng = 9;
}

message ChessRogueQuitCsReq {

}

message ChessRogueQuitScRsp {
	optional Afabkdefddg lmgkmaoicgc = 2;
	optional Cjembcbcbkj chmhpcngfao = 8;
	optional Ehanapnjfjd stage_info = 9;
	optional Ccodjoaholb boikablfkec = 1;
	uint32 retcode = 3;
	optional Jacmenokjfm blndmfgkpmj = 12;
	optional Ihnjghalkjb lagbgldlgcb = 6;
}

message ChessRogueCellUpdateNotify {
	uint32 eamgahffeco = 8;
	Lgmdbcffjof dniibbhllnb = 5;
	repeated Mknhikdcjjg iafbijekkpg = 1;
	Aebjegdpong reason = 13;
}

message ChessRogueQuestFinishNotify {
	uint32 nnjccfeindo = 8;
	uint32 jlfabhhnhcm = 7;
}

message GetChessRogueStoryInfoCsReq {

}

message GetChessRogueStoryInfoScRsp {
	repeated Lahjpfooheb idgiahopgaj = 8;
	uint32 retcode = 14;
	repeated Dipmfomgcgl mnhmekkhkna = 4;
}

message SelectChessRogueSubStoryCsReq {
	uint32 rogue_dialogue_event_id = 2;
	uint32 fahihdjfohm = 10;
	uint32 ifiijgngogp = 6;
	uint32 ikmnamkjafa = 14;
}

message SelectChessRogueSubStoryScRsp {
	uint32 fahihdjfohm = 15;
	uint32 retcode = 6;
	uint32 ifiijgngogp = 13;
	uint32 rogue_dialogue_event_id = 2;
	uint32 ikmnamkjafa = 14;
}

message FinishChessRogueSubStoryCsReq {
	uint32 ikmnamkjafa = 8;
}

message FinishChessRogueSubStoryScRsp {
	uint32 retcode = 14;
	uint32 fgomiplmeic = 1;
	uint32 ikmnamkjafa = 9;
}

message ChessRogueUpdateActionPointScNotify {
	int32 ljffcnbpjdd = 9;
}

message EnterChessRogueAeonRoomCsReq {

}

message EnterChessRogueAeonRoomScRsp {
	optional Ehanapnjfjd stage_info = 3;
	uint32 retcode = 7;
}

message GetChessRogueStoryAeonTalkInfoCsReq {
	uint32 cdjecokfiof = 2;
}

message GetChessRogueStoryAeonTalkInfoScRsp {
	map<uint32, uint32> kjcbneindhl = 13;
	uint32 retcode = 2;
	uint32 cdjecokfiof = 1;
}

message SyncChessRogueMainStoryFinishScNotify {
	uint32 kenpckfonok = 6;
	uint32 fgomiplmeic = 11;
}

message SyncChessRogueNousValueScNotify {
	optional Ocbcbidlllj ibmioggkbfb = 1;
}

message Gbeejnbebep {
	Cdoegmdjgoc status = 13;
	uint32 fgomiplmeic = 4;
}

message Diecddgebnb {
	uint32 ikmnamkjafa = 11;
}

message GetChessRogueNousStoryInfoCsReq {

}

message GetChessRogueNousStoryInfoScRsp {
	repeated Gbeejnbebep idgiahopgaj = 6;
	repeated Diecddgebnb mnhmekkhkna = 8;
	uint32 retcode = 12;
}

message SyncChessRogueNousSubStoryScNotify {
	uint32 ikmnamkjafa = 3;
}

message SyncChessRogueNousMainStoryScNotify {
	repeated Gbeejnbebep idgiahopgaj = 11;
}

message Imnpeajajjo {
	repeated uint32 ilmookbjhhc = 4;
	repeated uint32 emllecgepck = 13;
	repeated uint32 oblhboeolaf = 2;
	bool ffheeidbhea = 1;
	uint32 ikmnamkjafa = 15;
	uint32 ffmdbdehheg = 12;
	bool fjkgkaekbkj = 10;
	uint32 fgomiplmeic = 8;
}

message Hngihjjiaco {
	uint32 slot_id = 12;
	uint32 eooadpocphd = 3;
}

message Kjehfkbjphd {
	repeated Hngihjjiaco igbcacgfckb = 3;
	uint32 oabliofcofo = 12;
	uint32 dhndampbhpp = 9;
	uint32 hmkebdlflpg = 8;
}

message Dffjcmlaicl {
	map<uint32, bool> nbcmaknlphg = 15;
	Faohejiddhj hdmpbpoffdk = 4;
	repeated uint32 jkmimlbajbl = 12;
	repeated Kjehfkbjphd alehdaaohoe = 1;
}

message Lgeljhjomlo {
	uint32 pofmjblmbji = 15;
	optional RogueTalentInfoList jmgipebloge = 9;
}

message Afaghelicpd {
	repeated uint32 gihdmhdadon = 3;
}

message ChessRogueNousEditDiceCsReq {
	optional Kjehfkbjphd bbcpoebnanc = 2;
}

message ChessRogueNousEditDiceScRsp {
	uint32 retcode = 9;
	optional Kjehfkbjphd bbcpoebnanc = 11;
}

message ChessRogueNousDiceUpdateNotify {
	optional Dffjcmlaicl mbibkhkkefb = 3;
}

message ChessRogueNousDiceSurfaceUnlockNotify {
	uint32 caphiddhlfg = 6;
}

message ChessRogueNousGetRogueTalentInfoCsReq {

}

message ChessRogueNousGetRogueTalentInfoScRsp {
	uint32 pofmjblmbji = 4;
	uint32 retcode = 14;
	optional RogueTalentInfoList talent_info = 2;
}

message ChessRogueNousEnableRogueTalentCsReq {
	uint32 talent_id = 1;
}

message ChessRogueNousEnableRogueTalentScRsp {
	uint32 pofmjblmbji = 4;
	optional RogueTalentInfoList talent_info = 12;
	uint32 retcode = 2;
}

message Aacofikdcpl {
	uint32 progress = 7;
	uint32 ienpelbphdp = 5;
}

message Odnnkbimefh {
	repeated Aacofikdcpl keedplpaclp = 2;
}

message Eadganmjipk {
	repeated uint32 ibpfgebmilb = 10;
}

message Jcnjdffcldg {
	int32 lkeblpijmgb = 13;
	optional Odnnkbimefh keedplpaclp = 8;
	uint32 id = 1;
	repeated uint32 oopkikmbbhh = 4;
	bool jnboonpdoce = 11;
	int32 hp = 5;
}

message Mpjdibccohf {
	uint32 miaiopgiphh = 11;
	repeated uint32 obcpgobaede = 5;
}

message Difpdplcigd {
	uint32 jfpnmoonlnj = 6;
	uint32 goneakbdgek = 14;
}

message Jmaanmpanhm {
	uint32 clpmibdfpjc = 6;
	uint32 nhjalpdbogn = 4;
	uint32 fpaibldakli = 3;
	uint32 index = 11;
	uint32 noeimmhckpm = 9;
	int32 attack = 13;
	int32 hp = 12;
	uint32 nkoffbmhapi = 10;
}

message Egdghfllmgn {
	uint32 khkfkdnbhpe = 5;
	uint32 total_turns = 2;
	uint32 bclnmidffoh = 6;
	uint32 total_damage = 3;
	uint32 cfijipchhgo = 13;
	uint32 lcjhgdjdeng = 11;
}

message ChimeraGetDataCsReq {

}

message ChimeraGetDataScRsp {
	uint32 kilpnhjbpdb = 1597;
	uint32 cjekjhpibjl = 1;
	uint32 retcode = 13;
	repeated Jcnjdffcldg kiimkaeajal = 5;
	repeated Difpdplcigd ncdaoblmhhp = 11;
	optional Mpjdibccohf lineup = 2;
	uint32 cpbdbaidaeh = 134;
	uint32 gbemdnckkba = 12;
	uint32 bbbgkchnock = 10;
	uint32 eaiojcnlmng = 3;
	uint32 jfpnmoonlnj = 14;
	uint32 olldkajoajd = 54;
	uint32 ijeiommfpka = 4;
	Oapdmkkkeol bbmgiimecel = 7;
	uint32 cagaplnhabb = 518;
	repeated uint32 mfafnncjjng = 8;
	uint32 cjkcnhclmgd = 9;
	uint32 lfkfocjfncj = 6;
}

message ChimeraSetLineupCsReq {
	optional Mpjdibccohf lineup = 11;
}

message ChimeraSetLineupScRsp {
	optional Mpjdibccohf lineup = 15;
	uint32 retcode = 1;
}

message ChimeraFinishRoundCsReq {
	bool molidikifgb = 13;
	map<uint32, Odnnkbimefh> mlbaljkcmcg = 10;
	optional Egdghfllmgn stt = 15;
	repeated uint32 hgodgdeaajo = 7;
	map<uint32, uint32> bahhnmlhalj = 1;
	optional Mpjdibccohf lineup = 3;
	Biakdfeljfm hbgclmcgnfm = 8;
	uint32 hjoeamdlbpl = 6;
	repeated Jmaanmpanhm opamaeijcoh = 4;
}

message ChimeraFinishRoundScRsp {
	bool molidikifgb = 3;
	Biakdfeljfm hbgclmcgnfm = 7;
	uint32 cjkcnhclmgd = 15;
	uint32 eaiojcnlmng = 2;
	map<uint32, Eadganmjipk> ghkgcfclabf = 14;
	repeated uint32 mfafnncjjng = 13;
	uint32 olldkajoajd = 9;
	map<uint32, Odnnkbimefh> nahpkppmdkk = 1;
	bool jieifdocohe = 5;
	Oapdmkkkeol bbmgiimecel = 8;
	uint32 retcode = 4;
	repeated Jcnjdffcldg goiakpgjlcb = 10;
	uint32 jfpnmoonlnj = 11;
	repeated Difpdplcigd ncdaoblmhhp = 6;
	uint32 ijeiommfpka = 12;
}

message ChimeraStartEndlessCsReq {

}

message ChimeraStartEndlessScRsp {
	uint32 retcode = 11;
}

message ChimeraFinishEndlessRoundCsReq {
	optional Egdghfllmgn stt = 15;
	optional Mpjdibccohf lineup = 11;
	uint32 cpbdbaidaeh = 12;
	bool pahmagpfddj = 9;
	repeated uint32 hgodgdeaajo = 6;
	repeated Jmaanmpanhm opamaeijcoh = 2;
}

message ChimeraFinishEndlessRoundScRsp {
	uint32 retcode = 15;
	uint32 aebjngimhcj = 5;
	uint32 gbemdnckkba = 10;
	uint32 cpbdbaidaeh = 13;
	uint32 lfkfocjfncj = 11;
	bool pahmagpfddj = 9;
	repeated Jcnjdffcldg igagibnelck = 1;
	uint32 bbbgkchnock = 3;
}

message ChimeraQuitEndlessCsReq {

}

message ChimeraQuitEndlessScRsp {
	uint32 retcode = 12;
}

message ChimeraDoFinalRoundCsReq {
	optional Egdghfllmgn stt = 14;
	bool pahmagpfddj = 8;
	repeated Jmaanmpanhm opamaeijcoh = 2;
	repeated uint32 hgodgdeaajo = 12;
	optional Mpjdibccohf lineup = 13;
	uint32 cpbdbaidaeh = 10;
}

message ChimeraDoFinalRoundScRsp {
	uint32 jfpnmoonlnj = 15;
	repeated Jcnjdffcldg igagibnelck = 9;
	uint32 cagaplnhabb = 2;
	repeated Difpdplcigd ncdaoblmhhp = 13;
	uint32 cpbdbaidaeh = 14;
	uint32 retcode = 7;
	uint32 index = 4;
	uint32 olldkajoajd = 11;
	uint32 eaiojcnlmng = 8;
	bool pahmagpfddj = 5;
}

message ChimeraRoundWorkStartCsReq {
	optional Mpjdibccohf lineup = 4;
	uint32 mdfeekikbmj = 13;
	uint32 flgjpheopaa = 10;
	repeated Jmaanmpanhm opamaeijcoh = 9;
}

message ChimeraRoundWorkStartScRsp {
	uint32 retcode = 12;
}

message ClockParkGetInfoCsReq {

}

message Nlljbbcjiam {
	repeated uint32 odogfhenjep = 1;
	uint32 clkeoehplng = 14;
}

message ClockParkGetInfoScRsp {
	repeated uint32 ibjpcofdlji = 14;
	uint32 ediajgcbpfo = 15;
	repeated Nlljbbcjiam bnfhfhefmem = 4;
	uint32 gfadcahlkfp = 3;
	uint32 progress = 8;
	uint32 retcode = 1;
}

message ClockParkUnlockTalentCsReq {
	uint32 talent_id = 6;
}

message ClockParkUnlockTalentScRsp {
	uint32 retcode = 6;
	uint32 talent_id = 11;
}

message ClockParkStartScriptCsReq {
	repeated uint32 jmojeoalclo = 13;
	uint32 clkeoehplng = 10;
}

message ClockParkStartScriptScRsp {
	uint32 clkeoehplng = 10;
	uint32 retcode = 3;
}

message ClockParkGetOngoingScriptInfoCsReq {

}

message Lnihjdaildj {

}

message Accbigfanoa {
	uint32 bjkhpadclhi = 11;
	uint32 card_id = 4;
	repeated uint32 pneoolflnlk = 10;
}

message Hdckchpdmmi {
	repeated uint32 pneoolflnlk = 1;
	repeated Accbigfanoa card_data_list = 14;
}

message Nnccfpoockh {
	optional Hdckchpdmmi ancpcpcljed = 15;
}

message Machndhamnm {
	optional Hdckchpdmmi ancpcpcljed = 3;
}

message Ifbdbdccopo {
	optional Hdckchpdmmi ancpcpcljed = 11;
}

message Glijklooapa {
	uint32 ecfagnkdaef = 1;
	uint32 gacha_random = 6;
	optional Hdckchpdmmi ancpcpcljed = 2;
}

message Anbankmlclh {
	optional Hdckchpdmmi ancpcpcljed = 13;
}

message Eppnkgolaap {
	bool bgdoijphfdb = 12;
}

message Lkbbkojddpd {
	uint32 ahidjbjggpp = 4;
	oneof Acnpgajffhi {
		Lnihjdaildj Pnimpjfilgf = 6;
		Nnccfpoockh Dhleejmiimo = 2;
		Machndhamnm Oeofnnbljik = 15;
		Ifbdbdccopo Gpbgdcmjhln = 10;
		Glijklooapa Lnkpgggkmnk = 7;
		Anbankmlclh Aenefmcbfgm = 11;
		Eppnkgolaap Bciighioapl = 3;
		bool Gneooaifkib = 5;
	}
}

message Bmlofpcngkn {
	int32 ofcndemappl = 4;
	int32 ihlhdpnaekc = 11;
	int32 djfhcddifmi = 2;
}

message Ioncppdejej {
	uint64 unique_id = 3;
	uint32 buff_id = 6;
	uint32 feonehhcjjm = 11;
}

message Ecmilhckomo {
	repeated Ioncppdejej buff_list = 4;
}

message ClockParkGetOngoingScriptInfoScRsp {
	uint32 obpfblnbfki = 5;
	uint32 aigehhnhkpm = 1;
	repeated uint32 eidlleolfgm = 4;
	optional Bmlofpcngkn mjdogpbojip = 10;
	uint32 kiekjeffphk = 3;
	uint32 retcode = 6;
	uint32 blhgbednfib = 14;
	string cmgkeolcbip = 11;
	optional Ecmilhckomo lgopnbhhhbg = 9;
	optional Lkbbkojddpd ienphefangl = 2;
	uint32 clkeoehplng = 8;
	uint32 chobaogmlfn = 13;
}

message Obnonmhmeck {

}

message Ffomibncfki {
	optional Hdckchpdmmi ancpcpcljed = 4;
}

message Ajehamdabna {
	bool is_win = 10;
	uint32 omddfkmaape = 9;
}

message Amghdcabjmj {
	repeated uint32 avatar_id_list = 13;
}

message Innnicfolii {
	bool jcnodamfffc = 2;
	uint32 gacha_random = 1;
}

message Ceoonflondj {
	uint32 omddfkmaape = 11;
	bool is_win = 6;
}

message Helnoihmdha {

}

message ClockParkHandleWaitOperationCsReq {
	uint32 clkeoehplng = 2;
	uint32 ahidjbjggpp = 12;
}

message Mdjlojfmemc {
	uint32 progress = 4;
	optional ItemList reward = 3;
	uint32 clkeoehplng = 7;
	bool eeehghkocji = 8;
	uint32 aigehhnhkpm = 6;
	uint32 kiekjeffphk = 14;
	bool kfdaicilnmb = 15;
}

message ClockParkHandleWaitOperationScRsp {
	Egblomhgijm jfkdbmdomnk = 4;
	uint32 koijfoffjnj = 13;
	uint32 ficfgdnhnge = 14;
	optional SceneBattleInfo battle_info = 11;
	uint32 ahidjbjggpp = 8;
	uint32 retcode = 5;
}

message ClockParkQuitScriptCsReq {
	uint32 clkeoehplng = 12;
	bool khnhpgdeimm = 8;
}

message ClockParkQuitScriptScRsp {
	uint32 retcode = 12;
}

message ClockParkBattleEndScNotify {
	uint32 ahidjbjggpp = 4;
	uint32 retcode = 3;
}

message ClockParkUseBuffCsReq {
	uint64 unique_id = 14;
	uint32 clkeoehplng = 9;
	uint32 ahidjbjggpp = 3;
}

message ClockParkUseBuffScRsp {
	uint32 ahidjbjggpp = 14;
	optional Ecmilhckomo lgopnbhhhbg = 15;
	uint32 retcode = 2;
	uint32 clkeoehplng = 13;
	oneof Dblaaokfnih {
		Hdckchpdmmi Ancpcpcljed = 1930;
		Bmlofpcngkn Mjdogpbojip = 558;
	}
}

message ClockParkFinishScriptScNotify {
	optional Mdjlojfmemc finish_info = 2;
}

message Item {
	uint32 rank = 14;
	uint32 promotion = 2;
	uint32 main_affix_id = 7;
	uint32 unique_id = 12;
	uint32 level = 9;
	uint32 num = 3;
	uint32 item_id = 6;
}

message ItemList {
	repeated Item item_list = 2;
}

message PileItem {
	uint32 item_id = 13;
	uint32 item_num = 3;
}

message ItemCost {
	oneof Item {
		PileItem PileItem = 6;
		uint32 EquipmentUniqueId = 2;
		uint32 RelicUniqueId = 7;
	}
}

message ItemCostList {
	repeated ItemCost item_list = 7;
}

message Iekhjdecape {
	uint32 mbejblfhcbh = 7;
	uint32 item_id = 12;
}

message Akcpalgemol {
	uint32 rank = 12;
	uint32 promotion = 4;
	uint32 tid = 11;
	uint32 exp = 3;
	uint32 level = 5;
}

message Nhdbofcfcjm {
	uint32 main_affix_id = 10;
	uint32 level = 3;
	repeated RelicAffix sub_affix_list = 6;
	uint32 tid = 14;
	uint32 exp = 2;
}

message Ndhopedofoc {
	oneof Bpbopjfhloo {
		Iekhjdecape Oekhngffgkb = 15;
		Akcpalgemol Adeoigebmdf = 1;
		Nhdbofcfcjm Fhgafcjcaoa = 2;
	}
}

message Aodidfnpicf {
	repeated Ndhopedofoc item_list = 10;
}

message Vector {
	sint32 y = 5;
	sint32 z = 9;
	sint32 x = 14;
}

message MotionInfo {
	optional Vector pos = 11;
	optional Vector rot = 5;
}

message RotateVector {
	float rotate = 8;
	float x = 3;
	float y = 9;
	float z = 15;
}

message SceneMonsterWaveParam {
	uint32 dneampllfme = 2;
	uint32 hard_level_group = 10;
	uint32 level = 13;
	uint32 elite_group = 3;
}

message SceneMonster {
	uint32 cur_hp = 4;
	uint32 max_hp = 12;
	uint32 monster_id = 1;
}

message SceneMonsterWave {
	repeated ItemList jcdljghhaof = 12;
	uint32 wave_id = 11;
	uint32 stage_id = 4;
	optional SceneMonsterWaveParam wave_param = 2;
	repeated SceneMonster monster_list = 10;
}

message SceneBattleInfo {
	repeated SceneMonsterWave monster_wave_list = 3;
	optional RogueMagicBattleInfo rogue_magic_battle_info = 853;
	uint32 stage_id = 14;
	uint32 logic_random_seed = 10;
	uint32 wave_count = 5;
	repeated BattleBuff buff_list = 11;
	optional Ljgiaglfhhc ajgpjglpmio = 1167;
	optional Eacdeapkilk gegdpnkkakg = 1348;
	uint32 world_level = 13;
	optional Gieibeacbao mfkjokajjmj = 1680;
	bool nbckfdgmfdb = 9;
	uint32 rounds_limit = 12;
	uint32 battle_id = 8;
	optional EvolveBuildBattleInfo jpgifchjdlk = 806;
	repeated BattleEventBattleInfo event_battle_info_list = 986;
	map<uint32, BattleTargetList> battle_target_info = 783;
	repeated BattleAvatar battle_avatar_list = 7;
}

message Bbdikgejbmp {
	repeated BattleBuff buff_list = 15;
	repeated SceneMonsterWave monster_wave_list = 13;
	repeated Pkiakjmeaml battle_avatar_list = 9;
	uint32 stage_id = 4;
	uint32 logic_random_seed = 6;
	uint32 battle_id = 3;
	bool nbckfdgmfdb = 12;
}

message Phhkombgppk {
	uint32 id = 1;
	uint32 assist_uid = 9;
	AvatarType avatar_type = 5;
}

message Mbkocmmicpg {
	optional ItemList return_item_list = 14;
	bool ebnkeiehnha = 4;
	repeated uint32 locked_relic_id_list = 15;
}

message Khocchabnmn {
	uint32 value = 3;
	uint32 key = 5;
}

message ContentPackageGetDataCsReq {

}

message ContentPackageGetDataScRsp {
	uint32 retcode = 14;
	optional PackageData data = 9;
}

message ContentInfo {
	ContentPackageStatus status = 3;
	uint32 content_id = 4;
}

message PackageData {
	uint32 nklobnhgfhb = 1;
	repeated ContentInfo info_list = 4;
}

message ContentPackageSyncDataScNotify {
	optional PackageData data = 12;
}

message ContentPackageUnlockCsReq {
	uint32 content_id = 9;
}

message ContentPackageUnlockScRsp {
	uint32 content_id = 5;
	uint32 retcode = 1;
}

message ContentPackageTransferScNotify {

}

message DailyActivityInfo {
	uint32 level = 2;
	uint32 daily_active_point = 15;
	uint32 world_level = 9;
	bool is_has_taken = 6;
}

message TakeApRewardCsReq {
	uint32 level = 2;
}

message TakeApRewardScRsp {
	uint32 level = 10;
	uint32 retcode = 15;
	optional ItemList reward = 3;
}

message GetDailyActiveInfoCsReq {

}

message GetDailyActiveInfoScRsp {
	uint32 daily_active_point = 10;
	repeated uint32 daily_active_quest_id_list = 8;
	uint32 retcode = 14;
	repeated DailyActivityInfo daily_active_level_list = 2;
}

message DailyActiveInfoNotify {
	repeated DailyActivityInfo daily_active_level_list = 12;
	uint32 daily_active_point = 9;
	repeated uint32 daily_active_quest_id_list = 3;
}

message TakeAllApRewardCsReq {

}

message TakeAllApRewardScRsp {
	uint32 retcode = 14;
	optional ItemList reward = 13;
	repeated uint32 fbkccpkieia = 1;
}

message Alpapmjhadp {
	ServerLogLevel pioajfogaom = 11;
	repeated ServerLogTag clcehmglicm = 10;
}

message GetServerLogSettingsCsReq {

}

message GetServerLogSettingsScRsp {
	optional Alpapmjhadp ibpdgnohfpm = 15;
	uint32 retcode = 10;
}

message UpdateServerLogSettingsCsReq {
	optional Alpapmjhadp ibpdgnohfpm = 11;
}

message UpdateServerLogSettingsScRsp {
	uint32 retcode = 11;
}

message ServerLogScNotify {
	string lcpllgnjnaj = 7;
	ServerLogLevel level = 11;
	string hkligchhieg = 3;
	ServerLogTag eamajgpcgfd = 8;
}

message Lcmjfehmcnf {
	uint32 config_id = 2;
	uint32 group_id = 7;
}

message Oeddoijlgfg {
	oneof Kfelkjldkeh {
		uint32 Ffbfcclodkk = 2;
		uint32 Kacelkgcnei = 8;
		Lcmjfehmcnf Faomfmmlmhd = 4;
	}
}

message Cfcajkfepao {
	string benanabppjn = 11;
	Ojidjndhdga state = 8;
	string msg = 13;
}

message Monilljgeid {
	Jefkijnieia lioehlicjhb = 12;
	optional Oeddoijlgfg dbgfaodbefc = 7;
}

message Kdoejmhbbgi {
	repeated Cfcajkfepao lopbajpaemi = 11;
	optional Oeddoijlgfg dbgfaodbefc = 9;
	Jefkijnieia lioehlicjhb = 2;
}

message GetServerGraphDataCsReq {
	repeated Oeddoijlgfg eofciildilf = 1;
}

message GetServerGraphDataScRsp {
	uint32 retcode = 11;
	repeated Kdoejmhbbgi dcoihamjkhj = 13;
}

message GetServerGraphSimpleDataCsReq {

}

message GetServerGraphSimpleDataScRsp {
	repeated Monilljgeid dcoihamjkhj = 5;
	uint32 retcode = 9;
}

message Hiamkficmnm {
	uint32 ghbgpekcehh = 12;
	repeated uint32 eoclpoepkmp = 2;
	uint32 ebmbbpinpgk = 5;
}

message Eekfecdihje {
	uint32 dgppffkihoc = 9;
	repeated uint32 dbpgefglfjj = 7;
	uint32 kidbbfghecn = 3;
	uint32 odmphfaniee = 10;
	uint32 jiblnlhcnkd = 5;
}

message Mflpamafjnc {
	bool is_success = 4;
	uint32 kcfpiecmgbd = 13;
}

message GetDrinkMakerDataCsReq {

}

message GetDrinkMakerDataScRsp {
	uint32 retcode = 5;
	uint32 exp = 2;
	uint32 eaolmhoaaml = 10;
	uint32 level = 8;
	repeated uint32 pcnnpejegef = 11;
	optional Eekfecdihje boinombhpcl = 3;
	uint32 hepalniojnp = 9;
	uint32 amefgbicgdi = 15;
	uint32 dhakofagdof = 6;
	repeated Hiamkficmnm pjkibodpcki = 7;
}

message MakeDrinkCsReq {
	optional Eekfecdihje lpmcgnjlbgd = 15;
	uint32 eaolmhoaaml = 10;
}

message MakeDrinkScRsp {
	uint32 apiaceaploe = 8;
	uint32 retcode = 6;
	bool is_success = 1;
}

message EndDrinkMakerSequenceCsReq {

}

message EndDrinkMakerSequenceScRsp {
	uint32 retcode = 1;
	uint32 exp = 15;
	uint32 elngbaokfik = 6;
	repeated Mflpamafjnc lbkbnlljhmf = 9;
	uint32 level = 7;
	optional Hiamkficmnm caikjbmngld = 10;
	uint32 amefgbicgdi = 8;
	optional ItemList reward = 3;
}

message MakeMissionDrinkCsReq {
	optional Eekfecdihje lpmcgnjlbgd = 11;
	bool jgeaegmhdoc = 1;
	uint32 kcfpiecmgbd = 7;
}

message MakeMissionDrinkScRsp {
	uint32 retcode = 12;
	bool is_success = 14;
	bool jgeaegmhdoc = 1;
	optional Eekfecdihje boinombhpcl = 3;
}

message DrinkMakerDayEndScNotify {
	uint32 ecilicnolfn = 1;
}

message DrinkMakerChallengeCsReq {
	uint32 challenge_id = 8;
	optional Eekfecdihje lpmcgnjlbgd = 6;
}

message DrinkMakerChallengeScRsp {
	uint32 challenge_id = 3;
	uint32 retcode = 8;
	bool is_success = 15;
	optional ItemList reward = 4;
}

message DrinkMakerUpdateTipsNotify {
	uint32 amefgbicgdi = 2;
}

message Loflgicopcj {
	repeated uint32 immanipgmif = 3;
	uint32 jkeddognlif = 4;
	bool pbhedbcpdmi = 11;
	optional Eekfecdihje lpmcgnjlbgd = 14;
}

message DrinkMakerCheersGetDataCsReq {

}

message DrinkMakerCheersGetDataScRsp {
	uint32 retcode = 15;
	repeated Loflgicopcj gfdakngldja = 7;
	uint32 llddjenbeog = 2;
	uint32 dmkelehlhdp = 1;
}

message DrinkMakerCheersMakeDrinkCsReq {
	uint32 group_id = 9;
	bool fgfkbcjmcnn = 12;
	uint32 jkeddognlif = 15;
	optional Eekfecdihje lpmcgnjlbgd = 2;
}

message DrinkMakerCheersMakeDrinkScRsp {
	uint32 retcode = 8;
	optional Loflgicopcj eknampljcbe = 2;
}

message DrinkMakerCheersEnterNextGroupCsReq {

}

message DrinkMakerCheersEnterNextGroupScRsp {
	uint32 retcode = 8;
	uint32 llddjenbeog = 3;
}

message Elplcmogogj {
	uint32 progress = 12;
	uint32 njdacjfdokj = 9;
}

message Cgclcmmibie {
	uint32 hfaljihkecn = 7;
	uint32 gmfebdafdpj = 3;
	repeated Elplcmogogj kipoofoobgh = 9;
	bool gcifdnngopg = 15;
	uint32 odeeebpgilc = 5;
}

message Jfnbfkblgoh {
	bool afpkfgmagkl = 14;
	uint32 bfecjmdnnob = 5;
	bool egegckinjjd = 10;
	uint32 hhcbjghkcpc = 11;
	uint32 fnddkopjgda = 2;
	uint32 hgmnjfjpmdf = 9;
}

message Jbgkhhhpmcn {
	repeated Jfnbfkblgoh ondcbdnghee = 10;
	repeated uint32 pgnanlaiiik = 4;
	bool bceiljeabki = 11;
}

message Pkikefaoide {
	uint32 cjidbadekbo = 4;
	uint32 level = 7;
}

message Ljjahilcode {
	uint32 mfamkibgbbg = 2;
	uint32 level = 7;
}

message Dgmgkoghfoo {
	uint32 dlnkdkaocae = 10;
	uint32 mpojckofikf = 14;
	uint32 mfamkibgbbg = 3;
}

message Dfkmfndiipe {
	uint32 count = 1;
	uint32 hpcholpmjfp = 5;
}

message Jmgeggolamn {
	repeated uint32 lgiecnjocjn = 4;
	uint64 fpgedabjbho = 9;
	repeated Dgmgkoghfoo gpphocnojnf = 5;
	repeated Dfkmfndiipe fciaojklbnj = 3;
	uint32 obgkjkeodng = 10;
	uint32 nmoeicllcpg = 6;
	repeated uint32 heldfglcnfb = 15;
}

message Ddkdlamfomm {
	repeated Pkikefaoide jobmngmjjmm = 8;
	optional Jmgeggolamn baojdbhjokd = 3;
	repeated Ljjahilcode dafdgjldnah = 9;
}

message Aicnonbgnnp {
	uint32 level = 2;
	uint32 pkgdlpkjbcn = 13;
}

message Kjclgniiapa {
	repeated Aicnonbgnnp cmijghajlol = 5;
}

message Cjdninmibpf {
	uint32 hkjomdjfhim = 7;
	uint32 doahmgaoloj = 11;
	uint32 ljooflngmel = 13;
}

message Hmkhillipoh {
	uint32 dldpmojfamc = 9;
	uint32 doahmgaoloj = 11;
}

message Ijlgeioknen {
	repeated Cjdninmibpf khipjlhidie = 1;
	repeated Hmkhillipoh dlcjadnlldm = 6;
}

message GetElfRestaurantDataCsReq {

}

message GetElfRestaurantDataScRsp {
	optional Jbgkhhhpmcn fghciicclmp = 9;
	optional Cgclcmmibie fodhbfmdjco = 6;
	optional Ijlgeioknen acaekpjmphn = 12;
	uint32 retcode = 5;
	optional Kjclgniiapa lnkfnbflnnd = 15;
	optional Ddkdlamfomm plfhgamomlj = 2;
}

message EnterElfRestaurantNextDayCsReq {

}

message EnterElfRestaurantNextDayScRsp {
	uint32 retcode = 3;
}

message Oeacnfiknmd {

}

message ElfRestaurantDataChangeNotify {
	repeated Oeacnfiknmd leadmneimdp = 13;
}

message ElfRestaurantBuyFieldCsReq {
	uint32 hgmnjfjpmdf = 3;
}

message ElfRestaurantBuyFieldScRsp {
	uint32 retcode = 14;
	optional ItemCostList bhjapdfonaa = 11;
}

message Pfoopmonpmb {
	uint32 hgmnjfjpmdf = 2;
	uint32 hhcbjghkcpc = 11;
}

message Gmanhhhcpme {
	uint32 hgmnjfjpmdf = 11;
	uint32 hhcbjghkcpc = 8;
	optional ItemCostList bhjapdfonaa = 12;
}

message ElfRestaurantPlantSeedCsReq {
	repeated Pfoopmonpmb ondcbdnghee = 11;
	uint32 fnddkopjgda = 8;
}

message ElfRestaurantPlantSeedScRsp {
	repeated Gmanhhhcpme mangjgkhknj = 7;
	uint32 retcode = 10;
	repeated Ojfpdnajkpl aogdklonihi = 13;
}

message ElfRestaurantHarvestCropCsReq {
	repeated Pfoopmonpmb ondcbdnghee = 1;
}

message Jblgalhcbgc {
	uint32 hhcbjghkcpc = 14;
	map<uint32, ItemList> knmmcboncch = 12;
	uint32 hgmnjfjpmdf = 8;
	optional ItemList gigcojgolpm = 5;
}

message ElfRestaurantHarvestCropScRsp {
	repeated Jblgalhcbgc hhmigilbhph = 4;
	uint32 retcode = 3;
}

message ElfRestaurantRecycleSeedCsReq {
	repeated Pfoopmonpmb ondcbdnghee = 6;
}

message Ojfpdnajkpl {
	uint32 hgmnjfjpmdf = 8;
	uint32 hhcbjghkcpc = 7;
	optional ItemList bjfphmcgflb = 5;
}

message ElfRestaurantRecycleSeedScRsp {
	uint32 retcode = 8;
	repeated Ojfpdnajkpl aogdklonihi = 13;
}

message ElfRestaurantTakeVillagerRewardCsReq {

}

message Nccdeeohkjd {
	optional ItemList reward_list = 11;
	uint32 progress = 5;
	uint32 kogdnpfmgfc = 4;
	uint32 afenfnmlhah = 2;
}

message ElfRestaurantTakeVillagerRewardScRsp {
	repeated Nccdeeohkjd lblidldbobm = 5;
	uint32 retcode = 8;
}

message ElfRestaurantUpgradeEmployeeLevelCsReq {
	uint32 ldnjeacfbje = 1;
	uint32 pkgdlpkjbcn = 3;
}

message ElfRestaurantUpgradeEmployeeLevelScRsp {
	optional ItemCostList bhjapdfonaa = 5;
	uint32 retcode = 14;
}

message ElfRestaurantUpgradeFacilityLevelCsReq {
	uint32 cjidbadekbo = 1;
	uint32 ldnjeacfbje = 10;
}

message ElfRestaurantUpgradeFacilityLevelScRsp {
	uint32 retcode = 11;
}

message ElfRestaurantUpgradeRecipeLevelCsReq {
	uint32 mfamkibgbbg = 12;
	uint32 ldnjeacfbje = 9;
}

message ElfRestaurantUpgradeRecipeLevelScRsp {
	uint32 retcode = 4;
}

message Pkdknkjmfdi {
	uint32 mfamkibgbbg = 7;
}

message Ciphpenjcak {
	repeated Pkdknkjmfdi gacjifjkdaj = 13;
	bool eejjginlmoo = 10;
	bool hflcmjbgome = 4;
	uint32 ioflmhamfhj = 6;
}

message Egoiiehkmbg {
	uint32 hoiokbkgfdn = 8;
	uint32 num = 6;
}

message Ioihfbklkom {
	uint32 bejeedaebbe = 9;
	uint32 pnpmlafdaih = 3;
}

message Dbklngebbid {
	uint32 mnkahinfmca = 1;
	uint32 mlagphllbfb = 5;
	uint32 dajjjfchooj = 11;
	uint32 gfppcallgek = 13;
	uint32 mfamkibgbbg = 14;
	bool kfagaobapdi = 12;
	bool lhffapbdglp = 9;
	repeated Khocchabnmn hekbbdcpobo = 7;
}

message Klfhmmhgobn {
	uint32 dajjjfchooj = 13;
	uint32 event_id = 8;
	uint32 hbkgiimpljh = 14;
}

message SettleElfRestaurantPlayCsReq {
	repeated Ioihfbklkom dmkahooamdm = 13;
	uint32 bclnmidffoh = 4;
	uint32 flhmafijone = 2;
	repeated Egoiiehkmbg aejcocnnkjd = 6;
	uint32 fpgedabjbho = 5;
	repeated Ciphpenjcak hejmepgdhgm = 15;
	repeated Dbklngebbid ajjihpfbhji = 11;
	repeated Klfhmmhgobn mcklehjkcdc = 12;
	uint32 nbijiocfkin = 8;
	uint32 hmkholplkni = 1;
	uint32 jehjljdkbge = 10;
	uint32 bmlemobcncm = 7;
}

message SettleElfRestaurantPlayScRsp {
	uint32 retcode = 15;
}

message ElfRestaurantBuyShopItemCsReq {
	uint32 bkcgmckgoki = 8;
	uint32 hkjomdjfhim = 5;
}

message ElfRestaurantBuyShopItemScRsp {
	uint32 hkjomdjfhim = 12;
	uint32 retcode = 2;
	optional ItemList fobnkeccaab = 15;
	optional ItemCostList bhjapdfonaa = 14;
}

message ElfRestaurantFinishTradeOrderCsReq {
	uint32 dldpmojfamc = 3;
}

message ElfRestaurantFinishTradeOrderScRsp {
	uint32 retcode = 14;
	uint32 dldpmojfamc = 6;
	optional ItemCostList bhjapdfonaa = 4;
	optional ItemList fobnkeccaab = 9;
}

message SetElfRestaurantPlayRecipeCsReq {
	repeated uint32 nlmfknkeioi = 4;
}

message SetElfRestaurantPlayRecipeScRsp {
	uint32 retcode = 8;
}

message ElfRestaurantClientStatusCsReq {
	bool fjinnlfcboj = 5;
}

message ElfRestaurantClientStatusScRsp {
	uint32 retcode = 15;
}

message Goahfmlpdmf {
	uint32 acnpbbnlmie = 10;
	uint32 state = 4;
}

message Kkeaenndmkb {
	repeated Goahfmlpdmf ndpgblaaghk = 2;
}

message GetEraFlipperDataCsReq {

}

message GetEraFlipperDataScRsp {
	optional Kkeaenndmkb data = 10;
	uint32 retcode = 5;
}

message ChangeEraFlipperDataCsReq {
	optional Kkeaenndmkb data = 2;
}

message ChangeEraFlipperDataScRsp {
	uint32 retcode = 7;
	optional Kkeaenndmkb data = 1;
}

message ResetEraFlipperDataCsReq {
	bool pahmagpfddj = 14;
}

message ResetEraFlipperDataScRsp {
	bool pahmagpfddj = 9;
	uint32 retcode = 4;
	optional Kkeaenndmkb data = 14;
}

message EnterEraFlipperRegionCsReq {
	uint32 acnpbbnlmie = 11;
	uint32 state = 6;
}

message EnterEraFlipperRegionScRsp {
	uint32 retcode = 9;
	uint32 acnpbbnlmie = 6;
}

message EraFlipperDataChangeScNotify {
	uint32 floor_id = 11;
	optional Kkeaenndmkb data = 8;
}

message EvolveBuildAvatar {
	AvatarType avatar_type = 2;
	uint32 avatar_id = 3;
	double damage = 9;
}

message EvolveBuildLevelInfo {
	repeated uint32 period_id_list = 10;
	repeated BattleTarget battle_target_list = 1;
	repeated EvolveBuildAvatar avatar_list = 15;
	Klnipnjcnmj season = 7;
	uint32 round_cnt = 2;
	optional EvolveBuildBattleInfo battle_info = 3;
	uint32 cur_game_exp = 14;
}

message Ceenlalpdmk {
	uint32 stage_score = 8;
	uint32 acjcphifmln = 6;
	uint32 ceadmdamhmo = 5;
}

message Imgjiebfgpf {
	uint32 neciljojgan = 10;
	uint32 level = 8;
}

message Ecmmjllhpmd {
	bool najohihmabc = 8;
	uint32 acjcphifmln = 1;
	bool cadmfghaljg = 2;
	repeated uint32 lgdniigephh = 11;
}

message Pdfhjmmdgae {
	uint32 item_value = 9;
	repeated Imgjiebfgpf cokdnpeemag = 15;
	Klnipnjcnmj mdcjfoafdjk = 11;
}

message Pdicnbbkfnp {
	repeated Imgjiebfgpf cokdnpeemag = 11;
	uint32 exp = 12;
	repeated Ceenlalpdmk klgheccbhcg = 9;
	repeated uint32 lmeljcifbdf = 2;
	uint32 item_value = 13;
	repeated Ecmmjllhpmd lcjnndgkidp = 4;
	repeated Pdfhjmmdgae fejgmnnfflg = 6;
	uint32 eodgcnafiac = 1;
	repeated uint32 fjocdkifppc = 3;
}

message EvolveBuildQueryInfoCsReq {

}

message EvolveBuildQueryInfoScRsp {
	optional Pdicnbbkfnp omcbcgchlgn = 14;
	repeated EvolveBuildLevelInfo dhmbdiibklm = 3;
	uint32 retcode = 8;
}

message EvolveBuildStartLevelCsReq {
	uint32 acjcphifmln = 14;
	optional Kpkkkjpjcpc jiapjhdlfbj = 10;
	repeated EvolveBuildAvatar avatar_list = 2;
}

message EvolveBuildStartLevelScRsp {
	optional EvolveBuildLevelInfo lmgkmaoicgc = 6;
	optional SceneBattleInfo nopheehjhek = 9;
	uint32 retcode = 12;
}

message EvolveBuildStartStageCsReq {
	uint32 acjcphifmln = 2;
}

message EvolveBuildStartStageScRsp {
	optional SceneBattleInfo nopheehjhek = 4;
	uint32 retcode = 14;
	optional EvolveBuildLevelInfo lmgkmaoicgc = 12;
}

message EvolveBuildGiveupCsReq {
	uint32 acjcphifmln = 8;
}

message EvolveBuildGiveupScRsp {
	optional EvolveBuildLevelInfo lmgkmaoicgc = 11;
	uint32 retcode = 3;
}

message EvolveBuildLeaveCsReq {

}

message EvolveBuildLeaveScRsp {
	uint32 retcode = 11;
	optional EvolveBuildLevelInfo lmgkmaoicgc = 3;
}

message EvolveBuildFinishScNotify {
	uint32 score = 5;
	uint32 wave = 7;
	uint32 coin = 4;
	Dlhcmcnihii battle_result_type = 13;
	bool is_lose = 12;
	uint32 level_id = 14;
	uint32 cur_period_type = 15;
	uint32 exp = 2;
	optional EvolveBuildLevelInfo level_info = 8;
}

message EvolveBuildReRandomStageCsReq {
	uint32 acjcphifmln = 8;
}

message EvolveBuildReRandomStageScRsp {
	optional Ecmmjllhpmd jgpbflccijp = 12;
	uint32 retcode = 15;
}

message EvolveBuildShopAbilityUpCsReq {
	uint32 level = 9;
	uint32 neciljojgan = 12;
}

message EvolveBuildShopAbilityUpScRsp {
	uint32 retcode = 12;
	uint32 neciljojgan = 7;
	uint32 level = 6;
}

message EvolveBuildShopAbilityDownCsReq {
	uint32 neciljojgan = 3;
	uint32 level = 15;
}

message EvolveBuildShopAbilityDownScRsp {
	uint32 neciljojgan = 4;
	uint32 retcode = 6;
	uint32 level = 5;
}

message EvolveBuildShopAbilityResetCsReq {
	Klnipnjcnmj mdcjfoafdjk = 6;
}

message EvolveBuildShopAbilityResetScRsp {
	repeated Imgjiebfgpf cokdnpeemag = 4;
	uint32 item_value = 8;
	uint32 retcode = 10;
	Klnipnjcnmj mdcjfoafdjk = 11;
}

message EvolveBuildCoinNotify {
	uint32 item_value = 3;
	Klnipnjcnmj mdcjfoafdjk = 13;
}

message EvolveBuildSkipTeachLevelCsReq {
	uint32 acjcphifmln = 14;
}

message EvolveBuildSkipTeachLevelScRsp {
	uint32 acjcphifmln = 10;
	uint32 retcode = 11;
}

message Fjibdhhohmh {
	int64 ponadanoaln = 11;
	repeated uint32 avatar_id_list = 10;
	uint32 id = 5;
	uint32 aoedghmhgjj = 1;
}

message Kimnfbjceol {
	uint32 fnggnbmofaa = 5;
	int64 ponadanoaln = 14;
	uint32 ipgeclelhgj = 8;
	uint32 hnaamdcfida = 6;
	uint32 ojfnlmhmlof = 2;
	uint32 id = 7;
	repeated uint32 avatar_id_list = 11;
}

message GetExpeditionDataCsReq {

}

message GetExpeditionDataScRsp {
	repeated Fjibdhhohmh pageieobhbp = 13;
	uint32 retcode = 7;
	repeated uint32 jfjpadlalmd = 4;
	repeated uint32 fnalloldglm = 8;
	repeated uint32 fjgimkepjob = 6;
	repeated Kimnfbjceol hjbkdbmgmbd = 11;
	uint32 dipkgomgmoa = 15;
}

message AcceptExpeditionCsReq {
	optional Fjibdhhohmh pmhmlhlfgae = 8;
}

message AcceptExpeditionScRsp {
	uint32 retcode = 11;
	optional Fjibdhhohmh pmhmlhlfgae = 9;
}

message AcceptMultipleExpeditionCsReq {
	repeated Fjibdhhohmh egnpoofacdb = 11;
}

message AcceptMultipleExpeditionScRsp {
	repeated Fjibdhhohmh ohhgihlnepk = 9;
	uint32 retcode = 3;
}

message CancelExpeditionCsReq {
	uint32 nnmlockecka = 11;
}

message CancelExpeditionScRsp {
	uint32 retcode = 9;
	uint32 nnmlockecka = 11;
}

message TakeExpeditionRewardCsReq {
	uint32 nnmlockecka = 12;
}

message TakeExpeditionRewardScRsp {
	optional ItemList reward = 1;
	optional ItemList pehcdfaeefk = 9;
	uint32 retcode = 13;
	uint32 nnmlockecka = 15;
}

message TakeMultipleExpeditionRewardCsReq {
	repeated uint32 ijajdhkgnkl = 10;
}

message TakeMultipleExpeditionRewardScRsp {
	uint32 retcode = 6;
	optional ItemList pehcdfaeefk = 9;
	repeated uint32 pppbklohckk = 8;
	repeated ItemList lfbfmochjbl = 14;
	repeated ItemList lblidldbobm = 4;
	optional ItemList reward = 12;
}

message ExpeditionDataChangeScNotify {
	repeated Kimnfbjceol hjbkdbmgmbd = 4;
	repeated uint32 jfjpadlalmd = 12;
	uint32 dipkgomgmoa = 15;
	repeated Fjibdhhohmh pageieobhbp = 10;
	repeated uint32 fnalloldglm = 3;
}

message AcceptActivityExpeditionCsReq {
	optional Kimnfbjceol lgkjlfjgoje = 8;
}

message AcceptActivityExpeditionScRsp {
	uint32 retcode = 4;
	optional Kimnfbjceol lgkjlfjgoje = 10;
}

message CancelActivityExpeditionCsReq {
	uint32 mpgemlglhbh = 3;
}

message CancelActivityExpeditionScRsp {
	uint32 mpgemlglhbh = 9;
	uint32 retcode = 4;
}

message TakeActivityExpeditionRewardCsReq {
	uint32 mpgemlglhbh = 7;
}

message TakeActivityExpeditionRewardScRsp {
	optional ItemList pehcdfaeefk = 8;
	uint32 mpgemlglhbh = 14;
	uint32 score = 5;
	optional ItemList reward = 1;
	uint32 retcode = 7;
}

message TakeMultipleActivityExpeditionRewardCsReq {
	repeated uint32 gomdmnhmmnh = 5;
}

message Mmnjmingahj {
	uint32 score = 11;
	optional ItemList reward = 2;
	optional ItemList pehcdfaeefk = 12;
	uint32 mpgemlglhbh = 6;
}

message TakeMultipleActivityExpeditionRewardScRsp {
	repeated Mmnjmingahj cdndfceedco = 1;
	uint32 retcode = 4;
	repeated uint32 jieeelikijm = 7;
}

message Gcaiemmcpdh {
	repeated uint32 buff_list = 9;
	repeated Kjmfeockcml avatar_list = 6;
}

message Fhblgmpmiie {
	map<uint32, uint32> jgajkoefgpc = 2;
	map<uint32, Gcaiemmcpdh> gblooeppgdm = 14;
	uint32 bejcaldilnc = 11;
	repeated uint32 amdhncjjoph = 7;
	repeated uint32 njngbpjemcl = 5;
	repeated uint32 hkmmnfghfpb = 4;
	repeated uint32 edhnakfofgj = 6;
}

message GetFantasticStoryActivityDataCsReq {
	uint32 bejcaldilnc = 13;
}

message GetFantasticStoryActivityDataScRsp {
	uint32 retcode = 8;
	optional Fhblgmpmiie fpepicfcffm = 14;
}

message FinishChapterScNotify {
	optional Fhblgmpmiie fpepicfcffm = 14;
}

message Kjmfeockcml {
	AvatarType avatar_type = 6;
	uint32 avatar_id = 15;
}

message EnterFantasticStoryActivityStageCsReq {
	repeated Kjmfeockcml avatar_list = 14;
	repeated uint32 buff_list = 6;
	uint32 bejcaldilnc = 9;
	uint32 battle_id = 13;
}

message EnterFantasticStoryActivityStageScRsp {
	uint32 battle_id = 14;
	uint32 retcode = 10;
	uint32 bejcaldilnc = 1;
	optional SceneBattleInfo battle_info = 2;
}

message FantasticStoryActivityBattleEndScNotify {
	uint32 bejcaldilnc = 3;
	uint32 pkklpbbnnce = 1;
	uint32 battle_id = 15;
}

message Ehfogjkjmef {
	uint32 imfcimkmjpl = 5;
	Dlbfahoagph hhmabjdimgm = 7;
}

message Maaolkgllbi {
	uint32 unique_id = 7;
	bool kkeaebagmke = 6;
	uint32 affix_id = 14;
	repeated uint32 monster_list = 10;
	bool hhenfgjpfoa = 13;
}

message Nfkdaagbmpj {
	uint32 rank = 14;
	int32 hp = 6;
	int32 max_hp = 10;
	repeated Maaolkgllbi mhgdggnijcg = 5;
	Mgpocjfmkpm status = 7;
	uint32 avatar_id = 12;
}

message Fekfbaocgkp {
	uint32 avatar_id = 12;
	bool hnjfffjdgne = 1;
}

message Oiegknhnian {
	optional Fekfbaocgkp jmjdbalgmhd = 11;
	optional Fekfbaocgkp lghocabppeh = 8;
}

message Makgeehgpoh {
	repeated Nfkdaagbmpj gmmopdhdfci = 5;
}

message Gkicocclpmg {
	uint32 cnt = 5;
	uint32 buff_id = 12;
}

message Aogeppfcpin {
	uint32 cnt = 15;
	optional Ehfogjkjmef source = 7;
}

message Ahnnknpfagd {
	uint32 jhnkmohlbpj = 13;
	repeated Aogeppfcpin lfegonpnpkg = 14;
}

message Cahihnjiajb {
	repeated uint32 dmhedhldhmo = 5;
	repeated Ahnnknpfagd mialmmljbml = 7;
	uint32 mkjlcadgmle = 10;
	map<uint32, uint32> fajjeogkoon = 2;
	repeated Gkicocclpmg buff_list = 1;
	repeated uint32 aekjlhjopce = 13;
}

message Emnmliilkke {
	uint32 khckfbhcfpl = 11;
	uint32 buff_id = 5;
	uint32 cnt = 13;
	bool hdbbbggmfjp = 1;
}

message Bmkfoiflble {
	uint32 kmdeifbpncb = 4;
	uint32 item_value = 9;
}

message Bmmlafjknlh {
	bool dipjoiaclhn = 1;
	uint32 meecngkldjg = 8;
	repeated Emnmliilkke ppibbkhlmjc = 2;
	uint32 item_value = 13;
	bool bcfaiijflfa = 5;
	repeated Bmkfoiflble ihjifpphkjd = 15;
	uint32 akidclefpdk = 3;
}

message Mlkoinjenmh {
	uint32 nodmobecpeo = 9;
	uint32 ndbojandnjn = 12;
	uint32 hpljnilnick = 3;
}

message Mmefnocbbbc {
	repeated uint32 pmaokeoobno = 6;
}

message Lomjkobdjfp {
	uint32 unique_id = 1;
	uint32 finbjpffdhi = 4;
}

message Mblnbbodell {
	int32 value = 8;
	uint32 unique_id = 5;
	uint32 hapeknjboje = 12;
}

message Hdhapalllmk {
	repeated Lomjkobdjfp fbfjmpfbchb = 14;
	optional Bmmlafjknlh deajilaeako = 4;
	optional Kadinmkcjbh kndmeilhkej = 1;
	uint32 cbfhidmkflb = 3;
	optional Mmefnocbbbc jbpmibfmcpl = 8;
	uint32 pbalfienefo = 12;
	optional Makgeehgpoh dhcllaaneef = 13;
	repeated Mblnbbodell nlmhpldmcmd = 2;
	uint32 area_id = 7;
	optional Cahihnjiajb cjcdndkhmnk = 5;
	optional Mlkoinjenmh dpjegibddpc = 9;
	Ghhdmemlkpo status = 15;
	optional Fbfbmdepcbp jcoodgoenpm = 135;
	optional Pnnaeeakhof dgnamoelmgk = 433;
}

message Kadinmkcjbh {
	optional Peajladinfk kiabcfhdgbk = 13;
	uint32 hbapccegnme = 2;
}

message FateHandlePendingActionCsReq {
	uint32 hbapccegnme = 3;
	oneof Koijfoffjnj {
		Licmpolbcfj Bamnojkmbmn = 12;
		Danemlljaco Fjgmnioilok = 10;
	}
}

message Licmpolbcfj {
	uint32 nojipbnofep = 7;
}

message Danemlljaco {
	bool lecdhddceia = 2;
	uint32 bcoleedgcpk = 4;
}

message FateHandlePendingActionScRsp {
	uint32 hbapccegnme = 11;
	uint32 retcode = 7;
}

message FateSyncActionResultScNotify {
	repeated Ibeiihldkan action_result_list = 13;
}

message Ibeiihldkan {

}

message Hmcapgmlpob {
	uint32 akidclefpdk = 8;
	uint32 meecngkldjg = 1;
}

message Homjemilmmf {
	optional Bmmlafjknlh deajilaeako = 13;
}

message Limlkcfgkfa {
	bool bcfaiijflfa = 9;
}

message Mkgohmihggj {
	repeated uint32 pmaokeoobno = 4;
}

message Jpbjlkjbjoa {
	repeated uint32 inbadcfnjif = 10;
	repeated Gkicocclpmg ijombhbcgnn = 7;
}

message Mfdalmkkhom {
	repeated Ahnnknpfagd bjgmjngogjg = 14;
	repeated uint32 ieakbnhfnid = 13;
}

message Bhihnlgpffg {
	repeated uint32 icfpflmbjgp = 9;
	repeated uint32 fndgcjhfcdg = 3;
}

message Oklhbcfmbbo {
	repeated uint32 mcpmijacmci = 5;
	map<uint32, uint32> nfbglbeeibm = 3;
}

message Iaknhmegiko {
	repeated uint32 aekjlhjopce = 1;
}

message Fajofmfcjem {
	optional Coieihnkcdk gakbpipldio = 13;
}

message Oagaopcjdja {
	optional Ehfogjkjmef fhikihfleia = 14;
}

message Jkpnbbiibnp {
	optional Mlkoinjenmh kfgjbiljgdp = 4;
}

message Cifdfldeokc {
	Ghhdmemlkpo pjgbfknjpno = 12;
}

message Kclgbmfehbe {
	double kdgccomkipo = 13;
	uint32 nfkmddnpgbj = 15;
	bool dcabnhjmmjg = 12;
	uint32 bpockmfjmek = 4;
	uint32 cblamaccepb = 14;
	uint32 avatar_id = 6;
	bool empljnhephc = 11;
	uint32 bamedjdaomc = 8;
	uint32 nkbmebellfj = 2;
}

message Kojppiagbdf {
	repeated Kclgbmfehbe amhblhcpcoh = 5;
	uint32 imhhilcmmgi = 13;
	uint32 bilejkhihjl = 1;
	uint32 hahjhbfaefc = 12;
	repeated uint32 dkpdehndflh = 3;
	repeated Nfkdaagbmpj gmmopdhdfci = 14;
	uint32 cpcnmdejili = 9;
	bool cfldplofkam = 8;
}

message Hifebjcjlcn {
	repeated Oiegknhnian fmllhlkojlj = 9;
}

message Jbhpfnnfkip {
	uint32 hhjocgomeco = 4;
}

message Ohcmfggbjcj {
	uint32 mkjlcadgmle = 8;
}

message Lolenbeahbi {
	optional Lomjkobdjfp gecnffhgiah = 12;
}

message Igkeehmgcpa {
	uint32 unique_id = 11;
}

message Algenlcoggi {
	optional Mblnbbodell hkfhbakhnlh = 6;
}

message Aifkhomfglf {
	uint32 unique_id = 3;
}

message Eglbnljhbfj {
	optional Nfkdaagbmpj aimgdmfaahh = 1;
}

message FateSyncPendingActionScNotify {
	optional Kadinmkcjbh kndmeilhkej = 6;
}

message Peajladinfk {
	oneof Item {
		Cmhmblalohn Bamnojkmbmn = 12;
		Nlfdkoiodmd Fjgmnioilok = 4;
	}
}

message Cmhmblalohn {
	repeated uint32 gpbgbmaljkp = 6;
}

message Idmdlokhebj {
	uint32 appkeeobjkc = 14;
	uint32 hapeknjboje = 15;
}

message Nlfdkoiodmd {
	repeated Idmdlokhebj ipmajojkbdb = 5;
}

message Mgcehcmpahe {
	repeated uint32 ehbghcgkfbh = 15;
	optional Jgogdbmplcp jjdoackkcbj = 14;
	optional Dlikbegadfp mfkjdoeblim = 12;
	repeated uint32 ngpigmbniac = 4;
}

message Dlikbegadfp {
	uint32 kgffjfomcjh = 7;
	map<uint32, Okdbfbhkakk> ognklcejpha = 11;
	optional Okdbfbhkakk hcnphhbabpi = 12;
	repeated Ckfknbmhmhm ajaoolenenn = 13;
	optional Okdbfbhkakk ehmojbccemh = 6;
}

message Jgogdbmplcp {
	repeated uint32 fjokplkodld = 8;
	repeated uint32 fmcdgpjfeaf = 15;
	uint32 exp = 5;
}

message Okdbfbhkakk {
	uint32 lbbjimamcge = 14;
	map<uint32, uint32> ljlkndjcbmf = 5;
	repeated uint32 ceihfokenob = 2;
	uint32 blfaanhjpad = 9;
}

message FateQueryCsReq {

}

message FateQueryScRsp {
	uint32 retcode = 7;
	optional Mgcehcmpahe lagbgldlgcb = 2;
	optional Hdhapalllmk lmgkmaoicgc = 12;
}

message FateStartCsReq {
	uint32 area_id = 14;
	uint32 pbalfienefo = 8;
	repeated Bpdfjaaeofo avatar_list = 3;
}

message FateStartScRsp {
	optional Hdhapalllmk lmgkmaoicgc = 4;
	uint32 retcode = 7;
}

message FateBattleStartCsReq {

}

message FateBattleStartScRsp {
	uint32 retcode = 10;
	optional SceneBattleInfo battle_info = 3;
}

message FateChangeLineupCsReq {
	repeated Bpdfjaaeofo avatar_list = 7;
}

message FateChangeLineupScRsp {
	uint32 retcode = 7;
}

message FateShopBuyGoodsCsReq {
	uint32 dbankkbmemm = 6;
}

message FateShopBuyGoodsScRsp {
	uint32 dbankkbmemm = 1;
	uint32 retcode = 4;
}

message FateShopSellBuffCsReq {
	uint32 imajoanakdc = 8;
	bool pigdohejlmj = 11;
	uint32 olpemmhkjpn = 4;
}

message FateShopSellBuffScRsp {
	uint32 imajoanakdc = 6;
	uint32 olpemmhkjpn = 7;
	bool pigdohejlmj = 15;
	uint32 retcode = 10;
}

message FateShopRefreshGoodsCsReq {

}

message FateShopRefreshGoodsScRsp {
	repeated Emnmliilkke ppibbkhlmjc = 13;
	bool dipjoiaclhn = 14;
	uint32 retcode = 11;
}

message FateShopLockGoodsCsReq {
	bool is_protected = 2;
}

message FateShopLockGoodsScRsp {
	uint32 retcode = 5;
	bool is_protected = 15;
}

message FateShopLeaveCsReq {

}

message FateShopLeaveScRsp {
	uint32 retcode = 9;
}

message Fbfbmdepcbp {
	repeated Oiegknhnian fmllhlkojlj = 11;
}

message Coieihnkcdk {
	optional Ehfogjkjmef source = 1;
	map<uint32, double> dfgdjmpmblf = 5;
}

message Pnnaeeakhof {
	repeated Coieihnkcdk jjboohnmpnb = 14;
}

message FateSettleCsReq {

}

message FateSettleScRsp {
	uint32 retcode = 12;
}

message Bhmcfkhilfo {
	AvatarType avatar_type = 2;
	uint32 id = 11;
	uint32 level = 12;
	bool chnpdajeipk = 14;
}

message Ckfknbmhmhm {
	repeated uint32 nlmhpldmcmd = 8;
	map<uint32, uint32> gibchcagian = 1222;
	uint32 cbfhidmkflb = 3;
	uint32 pbalfienefo = 11;
	repeated uint32 fbfjmpfbchb = 7;
	map<uint32, uint32> chcbopflici = 1;
	uint32 hpljnilnick = 6;
	map<uint32, uint32> eaefkgokfkh = 13;
	uint32 ndbojandnjn = 9;
	uint32 acjcphifmln = 5;
	uint32 obndmkngojj = 2;
	uint32 nodmobecpeo = 4;
	repeated Bhmcfkhilfo avatar_list = 14;
}

message FateSettleScNotify {
	optional Ckfknbmhmhm okecgddembl = 9;
	uint32 score = 15;
	optional ItemList reward = 4;
}

message FateTakeExpRewardCsReq {

}

message FateTakeExpRewardScRsp {
	repeated uint32 jgfbcdoicjf = 9;
	optional ItemList reward = 7;
	uint32 retcode = 10;
	repeated uint32 obgoboelefm = 15;
}

message FateDebugAutoPlayCsReq {
	uint32 pbalfienefo = 15;
	uint32 area_id = 6;
	repeated uint32 hoonhjjploe = 3;
	uint32 falfkmgcdcm = 10;
	repeated Bpdfjaaeofo avatar_list = 4;
}

message FateDebugAutoPlayScRsp {
	uint32 retcode = 13;
}

message FateDebugAutoPlayFinishScNotify {
	bool ddbcbinmfbe = 1;
	optional Ckfknbmhmhm okecgddembl = 4;
}

message Okcndieklpm {
	Pmnfdjcllgb plikadkklgd = 11;
	uint32 nlpklpccjpl = 14;
	uint32 jbolaafdkan = 3;
}

message GetFeverTimeActivityDataCsReq {

}

message GetFeverTimeActivityDataScRsp {
	uint32 retcode = 4;
	repeated Okcndieklpm caaejfijidj = 12;
}

message FeverTimeActivityBattleEndScNotify {
	uint32 fhfmfmlllgd = 7;
	uint32 hoehiobiiej = 10;
	uint32 id = 8;
	Pmnfdjcllgb lfjkkfgpkdm = 5;
}

message EnterFeverTimeActivityStageCsReq {
	repeated Bpdfjaaeofo avatar_list = 13;
	uint32 ffinmbacahh = 1;
	uint32 id = 8;
	uint32 gcjeicifjgi = 4;
}

message EnterFeverTimeActivityStageScRsp {
	uint32 id = 1;
	optional SceneBattleInfo battle_info = 8;
	uint32 retcode = 13;
}

message FightEnterCsReq {
	uint32 platform_type = 12;
	uint64 kpkdnmdajgl = 6;
	uint32 client_res_version = 2;
	string aokcmmpfgbc = 13;
	uint32 mkiniofgiag = 1;
	uint32 icmfpnpijjf = 14;
	uint32 fgojlpaejec = 10;
	uint32 uid = 4;
}

message FightEnterScRsp {
	uint64 secret_key_seed = 13;
	uint64 server_timestamp_ms = 7;
	uint32 mkiniofgiag = 6;
	uint32 retcode = 15;
	bool jlpkeobincp = 14;
}

message FightLeaveScNotify {
	uint32 cagjmmmfdli = 11;
}

message FightKickOutScNotify {
	Dkiifbicieg mglldoifgnd = 9;
}

message FightHeartBeatCsReq {
	uint64 client_time_ms = 9;
}

message FightHeartBeatScRsp {
	uint32 retcode = 1;
	uint64 server_time_ms = 4;
	uint64 client_time_ms = 5;
}

message FightSessionStopScNotify {
	optional Ppggkmdaoea pfffjngnpom = 8;
}

message FightGeneralCsReq {
	uint32 jjcmfkjhcfa = 12;
	bytes mbbdnlncejd = 13;
}

message FightGeneralScRsp {
	bytes mbbdnlncejd = 4;
	uint32 retcode = 15;
	uint32 jjcmfkjhcfa = 7;
}

message FightGeneralScNotify {
	bytes mbbdnlncejd = 11;
	uint32 jjcmfkjhcfa = 8;
}

message Jhpknhhnapp {
	bytes lbgdlhkeekc = 7;
	repeated FightGeneralScNotify ahmdobiceca = 15;
	bytes kbjfonagbhk = 10;
	uint32 elinmpkbefl = 14;
	repeated uint32 jblecmapfdc = 11;
}

message Aidoadpoofg {
	repeated Cbbdiomifhd lipjdjpmokb = 1;
}

message Iclfkknfdme {
	uint32 okjnnenklce = 2;
	repeated uint32 ggghoogilfh = 6;
	uint32 akdldfhcfbk = 15;
	uint32 group_id = 10;
}

message GetFightActivityDataCsReq {

}

message GetFightActivityDataScRsp {
	bool kaiompfbgkl = 14;
	map<uint32, uint32> dgnfcmdjopa = 15;
	uint32 retcode = 1;
	repeated Iclfkknfdme groups = 2;
	uint32 world_level = 6;
}

message FightActivityDataChangeScNotify {
	map<uint32, uint32> dgnfcmdjopa = 4;
	repeated Iclfkknfdme groups = 3;
}

message Npedhhcklia {
	uint32 avatar_id = 5;
	AvatarType avatar_type = 4;
}

message EnterFightActivityStageCsReq {
	repeated uint32 avatar_list = 1;
	repeated Npedhhcklia fopnlgbgagh = 13;
	uint32 difficulty = 15;
	uint32 group_id = 7;
	repeated uint32 item_list = 14;
}

message EnterFightActivityStageScRsp {
	uint32 retcode = 9;
	uint32 group_id = 10;
	uint32 difficulty = 7;
	optional SceneBattleInfo battle_info = 14;
}

message TakeFightActivityRewardCsReq {
	uint32 difficulty = 3;
	uint32 group_id = 4;
}

message TakeFightActivityRewardScRsp {
	uint32 group_id = 15;
	optional ItemList reward = 4;
	uint32 retcode = 11;
	uint32 difficulty = 3;
}

message Iklnilkpena {
	uint32 challenge_id = 2;
	uint32 aeieojgcmmo = 13;
	Hgdapjpkffb plikadkklgd = 4;
	uint32 jbolaafdkan = 10;
}

message GetFightFestDataCsReq {

}

message GetFightFestDataScRsp {
	uint32 retcode = 1;
	uint32 item_value = 8;
	repeated uint32 mfgonhjgipp = 4;
	repeated Iklnilkpena challenge_list = 15;
	uint32 score = 10;
}

message Afodmejodlg {
	AvatarType avatar_type = 7;
	uint32 id = 9;
}

message StartFightFestCsReq {
	uint32 event_id = 5;
	repeated Afodmejodlg avatar_list = 15;
	repeated uint32 mfgonhjgipp = 7;
	Aploagdibki type = 10;
	uint32 id = 6;
}

message StartFightFestScRsp {
	Aploagdibki type = 14;
	uint32 event_id = 11;
	uint32 id = 15;
	optional SceneBattleInfo battle_info = 3;
	uint32 retcode = 13;
}

message FightFestScoreUpdateNotify {
	uint32 score = 13;
	uint32 gnpkpljlabm = 15;
}

message FightFestUnlockSkillNotify {
	uint32 ejjehjmmbgj = 3;
}

message FightFestUpdateChallengeRecordNotify {
	Hgdapjpkffb fkpepbmjhkn = 3;
	uint32 hoehiobiiej = 6;
	uint32 challenge_id = 5;
	Hgdapjpkffb rank = 14;
	uint32 jbolaafdkan = 7;
}

message FightFestUpdateCoinNotify {
	uint32 item_value = 14;
}

message Kpbfckneeia {
	int32 blgnmalbolo = 1;
	uint64 ldnbeidjbhi = 3;
	Ffjppngglff oilpchbijno = 8;
}

message Gldhepjpmfm {
	repeated Kpbfckneeia action_result_list = 14;
}

message Pfgaiebghcp {
	float x = 15;
	float y = 9;
}

message FightMatch3UseItemCsReq {
	optional Pfgaiebghcp kbcejinfnnj = 9;
	uint32 item_id = 2;
}

message Akokicdpfmp {
	uint32 ahehkcildfa = 9;
	oneof Hbfofpdafpd {
		Lbaogibpjop Lgpiemdlhjm = 1111;
		Gldnbpfcnhd Phmcjejidja = 672;
		Icaooppmjdj FinishInfo = 1833;
		Maogfdkdckm Mejdmjikimo = 1983;
		Gockgigbdcg Jhfgdijpfcg = 1886;
	}
}

message FightMatch3SwapCsReq {
	repeated Akokicdpfmp lndigheihln = 8;
}

message Lbaogibpjop {
	repeated uint32 jjefbpkpkbk = 2;
	Jomkpegefmp ceifkjieaje = 6;
	uint32 marble_level_id = 11;
	repeated Cbbdiomifhd lipjdjpmokb = 1206;
	uint32 dkpnenbhelh = 7;
	uint32 jijhaaihncn = 13;
	bool likhclpmhjk = 1;
	uint32 moddklndamk = 14;
	uint32 pbfaiojjgnl = 10;
	bool jikeigbcabb = 9;
	Jomkpegefmp hjefolkgaei = 5;
	repeated uint32 pcmgagahblk = 12;
	uint32 acjcphifmln = 4;
	uint32 eigabckednp = 3;
	uint32 khcmofpfoak = 15;
	uint32 bbdoplekiac = 8;
}

message Gkloaldhnef {
	uint32 item_id = 13;
	int32 jphednecagd = 11;
	int32 falbkimmpih = 2;
	uint32 jojahiafnlk = 9;
	int32 total_damage = 5;
}

message Icaooppmjdj {
	repeated Gkloaldhnef bpipobhcmfd = 6;
	bool djeeeabmddk = 3;
	uint32 blkfgajhmlk = 1;
	uint32 chllmfjgppa = 2;
	bool is_win = 4;
	int32 clbnhpeabfk = 7;
	Eeibhjpnjcf kjpmohfiilo = 15;
}

message Dcdniajcehn {
	uint32 jlcikblnenh = 285;
	optional Pfgaiebghcp lkefolcgfgd = 1;
	optional Pfgaiebghcp godnaalnokl = 14;
	Lkkajcaciji kamihnejmfg = 5;
	int32 hdblelebkho = 50;
	optional Pfgaiebghcp iaaggmkgodc = 10;
	uint32 id = 13;
	uint32 pnldlmnkjmk = 148;
	bool plfkoccdbag = 1989;
	uint32 idabofpkokn = 1197;
	uint32 skill_id = 4;
	uint32 jljigeplpmh = 9;
	int32 max_hp = 11;
	uint32 buff_id = 1504;
	uint32 dhelbcimlga = 192;
	Fippklcoegj cclmfabdena = 1900;
	uint32 level = 1443;
	optional Pfgaiebghcp fnihjjjgoee = 2;
	float mnbemgnnfod = 426;
	bool nbkelchilgg = 1127;
	uint32 cipiclllijh = 8;
	Pajnhiagodd djoadecjpob = 6;
	uint32 cmmbbhhpmko = 1004;
	uint32 dkpnenbhelh = 87;
	uint32 jijhaaihncn = 1095;
	optional Pfgaiebghcp fdndmhjohmo = 12;
	float ggbfkenahoe = 418;
	float time = 15;
	int32 hp = 3;
	int32 attack = 7;
	bool dmbbmffejgi = 623;
}

message Gldnbpfcnhd {
	uint32 fmkdifnjajc = 6;
	repeated uint32 knchehiijnn = 12;
	uint32 fombhjkdhgo = 1185;
	uint32 nkhpckegpcl = 582;
	bool fjkbaimdpep = 11;
	Impkpkamiaf dndjkdfhepe = 4;
	repeated Dcdniajcehn hlieamplipp = 3;
	bool omkkpgfjhfe = 513;
	repeated Dcdniajcehn ainlmgdnhib = 1593;
	float eefcbbkkflc = 8;
	repeated uint32 jldcflkcbld = 7;
	uint32 hbapccegnme = 9;
	uint32 hmffhgbkogl = 10;
	uint32 ehcjcilcnop = 14;
	uint32 kjgdknjfcpg = 15;
	uint32 emote = 1;
	uint32 dhelbcimlga = 2;
	uint32 iepgclgkheg = 1166;
	repeated uint32 dpooapkpchf = 5;
	bool pmanbplflkl = 13;
}

message Maogfdkdckm {
	optional Lbaogibpjop lgpiemdlhjm = 15;
	repeated Hbghaopbkjp olkmcbjflej = 3;
	uint32 chllmfjgppa = 11;
	uint32 iehfhkmdagc = 13;
	optional Eojlngddlnn khcmofpfoak = 10;
	float dplgcekjack = 8;
	bool omkkpgfjhfe = 1;
	uint32 hmffhgbkogl = 9;
	repeated Hbghaopbkjp dibpggoogpk = 2;
	Ppiffkjejja phase = 14;
	repeated uint32 knchehiijnn = 4;
	optional Eojlngddlnn bbdoplekiac = 12;
}

message Gockgigbdcg {
	optional Pfgaiebghcp kbcejinfnnj = 7;
	uint32 chllmfjgppa = 5;
	uint32 item_id = 9;
}

message Eojlngddlnn {
	repeated Hbghaopbkjp nbkhpjhjmho = 2;
	repeated Jallappcpfe mdbggblegem = 4;
	repeated uint32 jfedjmkmlfo = 11;
	bool nbkelchilgg = 13;
	uint32 panbcnicohj = 10;
	uint32 cgnbhkbhicg = 6;
	bool blaljmmhifp = 5;
}

message Hbghaopbkjp {
	float mnbemgnnfod = 10;
	int32 hp = 4;
	uint32 level = 7;
	uint32 jlcikblnenh = 5;
	bool pmanbplflkl = 6;
	bool plfkoccdbag = 14;
	int32 attack = 8;
	uint32 id = 15;
	int32 max_hp = 1;
	uint32 buff_id = 9;
	bool dmbbmffejgi = 11;
	bool bmnecpiopdn = 13;
	optional Pfgaiebghcp lkefolcgfgd = 3;
	optional Pfgaiebghcp fnihjjjgoee = 12;
}

message Jallappcpfe {
	bool fhokfdmfnkg = 8;
	uint32 dhelbcimlga = 13;
}

message Mekdnikfdna {
	uint32 ognepbfpilh = 5;
	uint32 hp = 10;
	uint32 score = 14;
	uint32 nmlffogbpoc = 1;
	uint32 ldnbeidjbhi = 4;
	repeated Bhgphklehec item_list = 13;
	Nppnfppenmc state = 15;
	uint32 rank = 8;
	bool hnjfffjdgne = 11;
}

message Kldmjemimcn {
	uint64 mcokhhfpbpj = 7;
	Dgfcbofaoia jgibhfjmobe = 15;
	int32 hcbbhckjnji = 8;
	repeated Mekdnikfdna cpkpincceip = 4;
	optional Mdohafbeepk mejdmjikimo = 13;
	repeated uint32 hbanccokofc = 14;
	uint32 danccaojljn = 5;
}

message Jjaepdihcnl {
	uint32 fpbedncocho = 14;
	uint32 heckmdlolag = 2;
}

message Mdohafbeepk {
	Nppnfppenmc kjpmohfiilo = 3;
	repeated Kndbnnpidpb buff_list = 5;
	uint32 midejnjcaia = 9;
	uint32 gdfndpmjdaf = 1;
	uint32 score = 2;
	repeated Bhgphklehec item_list = 8;
	uint32 cur_hp = 14;
	uint32 energy_info = 12;
	optional Cdimemfjjfp niaeghjlnmb = 10;
	repeated Oddkkahnmhk op_list = 13;
	uint32 anhfjkepcgf = 6;
	repeated uint32 aihmghajgkj = 7;
	uint32 najlpnlnoje = 4;
	uint32 pkdpiemgibe = 11;
}

message Egcddlkhfeb {
	optional Mdohafbeepk mlpcfgdafnd = 4;
	Bfilliobmfn olkndfjbdgj = 2;
}

message FightMatch3DataCsReq {
	int32 player_data = 13;
}

message FightMatch3DataScRsp {
	optional Kldmjemimcn data = 5;
	uint32 retcode = 3;
	repeated Cbbdiomifhd lipjdjpmokb = 2;
}

message FightMatch3StartCountDownScNotify {
	optional Kldmjemimcn data = 3;
}

message FightMatch3TurnStartScNotify {
	optional Kldmjemimcn hkpodflgcdj = 4;
}

message FightMatch3TurnEndScNotify {
	optional Kldmjemimcn cinlcmhhkko = 11;
	optional Kldmjemimcn hiklobgicmp = 9;
}

message Galeopdomkg {
	optional Jjaepdihcnl feclglbfidh = 13;
	uint32 upgrade_level = 5;
	repeated Egcddlkhfeb eckkblnelbm = 7;
	optional Jjaepdihcnl phnldpokbkl = 15;
}

message FightMatch3SwapScRsp {
	bool pgmgmjdilcl = 13;
	uint32 retcode = 3;
	uint32 upgrade_level = 5;
	optional Mdohafbeepk chmaonmmegm = 2;
}

message FightMatch3OpponentDataScNotify {
	uint32 danccaojljn = 4;
	Nppnfppenmc state = 2;
	uint32 hp = 1;
	uint32 nmlffogbpoc = 5;
	uint32 score = 3;
	repeated Bhgphklehec item_list = 9;
}

message FightMatch3ChatCsReq {
	uint32 habdkbfmkee = 10;
}

message FightMatch3ChatScRsp {
	uint32 retcode = 9;
	uint32 habdkbfmkee = 14;
}

message FightMatch3ChatScNotify {
	uint32 habdkbfmkee = 14;
	uint32 egkpfgnjahn = 4;
}

message FightMatch3ForceUpdateNotify {
	optional Kldmjemimcn data = 3;
}

message Bhgphklehec {
	uint32 fojcmhimafn = 9;
	uint32 nffnnefcmoi = 12;
	uint32 cur_times = 10;
	uint32 dmkfffpdldi = 2;
}

message Oddkkahnmhk {
	uint32 hefmjahohkg = 13;
	Nlaamogoobe op_type = 9;
}

message Kndbnnpidpb {
	uint32 display_value = 8;
	Ganmcijcoki peplinogegc = 15;
}

message Bfdlhidcnmf {
	bool cocongacifj = 2;
	repeated Bhgphklehec item_list = 4;
	uint32 midejnjcaia = 13;
	Nppnfppenmc kjpmohfiilo = 6;
	uint32 ldnbeidjbhi = 8;
	uint32 energy_info = 5;
	uint32 anhfjkepcgf = 14;
	optional Cdimemfjjfp niaeghjlnmb = 9;
	uint32 ognepbfpilh = 1;
	bool jdngfboajap = 7;
	uint32 score = 10;
}

message Ioijepgmjaf {
	optional Mdohafbeepk mejdmjikimo = 15;
	int32 hcbbhckjnji = 10;
	repeated Bfdlhidcnmf cpkpincceip = 9;
	uint32 hloacjfdngn = 4;
	Kjjldimbgmm jgibhfjmobe = 14;
	uint32 ebkpmeobnpo = 6;
	uint64 mcokhhfpbpj = 1;
}

message Bcekdidflcm {
	repeated Jjaepdihcnl gdimmfmfpja = 1;
	uint32 use_item_id = 3;
	repeated Egcddlkhfeb eckkblnelbm = 13;
}

message FightMatch3UseItemScRsp {
	optional Mdohafbeepk ehelgaoabjj = 14;
	uint32 use_item_id = 10;
	uint32 retcode = 4;
}

message FightMatch3SoloDataCsReq {

}

message FightMatch3SoloDataScRsp {
	repeated Cbbdiomifhd lipjdjpmokb = 8;
	optional Ioijepgmjaf data = 5;
	uint32 retcode = 3;
}

message FightMatch3SoloAnimEndCsReq {
	uint32 hloacjfdngn = 8;
	uint32 gdchlibmfkm = 1;
	uint32 bkggnmbbgnl = 15;
}

message FightMatch3SoloAnimEndScRsp {
	uint32 retcode = 14;
}

message FightMatch3SoloDataUpdateNotify {
	optional Ioijepgmjaf data = 13;
	Abbdjbmiibe reason = 4;
}

message FightMatch3SoloSwapNotify {
	optional Galeopdomkg medbonhalod = 11;
	optional Mdohafbeepk ehelgaoabjj = 5;
}

message FightMatch3SoloUseItemNotify {
	optional Bcekdidflcm medbonhalod = 8;
	optional Mdohafbeepk ehelgaoabjj = 12;
}

message FightMatch3SoloPreTurnEndCsReq {

}

message FightMatch3SoloPreTurnEndScRsp {
	uint32 retcode = 10;
}

message AssistSimpleInfo {
	uint32 dressed_skin_id = 13;
	uint32 avatar_id = 1;
	uint32 level = 10;
	uint32 pos = 3;
}

message Ihkgnjdnalj {
	uint32 group_id = 13;
	uint32 fccdilggoci = 14;
	uint32 jgmipmdppij = 1;
	uint32 total_star_count = 15;
}

message Kpiglopemcf {
	uint32 ijhlojefcpm = 7;
}

message Phhliogfdek {
	repeated uint32 capiccciebo = 13;
	uint32 ofgbjcccike = 14;
	uint32 ijhlojefcpm = 15;
}

message Bcpdfipomap {
	optional Phhliogfdek lbhjehfjlnf = 14;
}

message Obihngmnkek {
	oneof Jehdfhlgcnl {
		Kpiglopemcf Loonehfnapc = 9;
		Bcpdfipomap Daopohamomf = 6;
	}
}

message Hiejjbdncnh {
	Pcahopmikim display_type = 2;
	optional Ihkgnjdnalj eboomgdgnep = 9;
	optional Obihngmnkek jfpcpdcflmd = 8;
}

message SimpleInfo {
	uint32 anpllaobfji = 9;
	string akcejfcfban = 11;
	string nickname = 10;
	int64 last_active_time = 8;
	uint32 chat_bubble_id = 6;
	uint32 head_icon = 14;
	string signature = 5;
	string gmalcpnohbf = 12;
	uint32 uid = 1;
	PlatformType platform_type = 4;
	bool jfgaekjjpie = 15;
	uint32 level = 7;
	FriendOnlineStatus online_status = 3;
	repeated AssistSimpleInfo assist_simple_info = 13;
}

message DisplayEquipmentInfo {
	uint32 level = 3;
	uint32 rank = 2;
	uint32 tid = 7;
	uint32 promotion = 5;
	uint32 exp = 6;
}

message DisplayRelicInfo {
	uint32 tid = 6;
	uint32 main_affix_id = 13;
	uint32 level = 1;
	uint32 exp = 2;
	uint32 type = 14;
	repeated RelicAffix sub_affix_list = 11;
}

message DisplayAvatarDetailInfo {
	optional DisplayEquipmentInfo equipment = 2;
	uint32 avatar_id = 14;
	uint32 dressed_skin_id = 11;
	uint32 exp = 8;
	uint32 rank = 3;
	uint32 promotion = 5;
	repeated AvatarSkillTree skilltree_list = 10;
	uint32 enhanced_id = 12;
	uint32 pos = 7;
	repeated DisplayRelicInfo relic_list = 1;
	uint32 level = 15;
}

message PlayerCollectionInfo {
	uint32 nljifekdphn = 12;
	uint32 pgcdmmnncjc = 5;
	uint32 pjcjnkbeimk = 6;
	uint32 bdbmikdjlko = 15;
	uint32 ljpekedicml = 7;
}

message PlayerRecordInfo {
	uint32 hknoakgcjbk = 1;
	uint32 cfdfmgllico = 12;
	uint32 gekkndonhlj = 7;
	uint32 ehbdeijjohk = 6;
	uint32 jfpgbkbpbnf = 11;
	uint32 emjdebdmhll = 13;
	uint32 bhfefeodnim = 9;
	uint32 fhkkmpddmgo = 4;
	optional PlayerCollectionInfo collection_info = 10;
}

message PlayerDisplaySettings {
	bool kjncckhjfhe = 7;
	bool aicnfaobcpi = 6;
	bool njfmiljofok = 12;
	bool aponeidmphl = 4;
	bool pbkbglhhkpe = 8;
}

message Knhlnlngahp {
	optional Obihngmnkek jfpcpdcflmd = 12;
	repeated Ihkgnjdnalj challenge_list = 13;
}

message PlayerDetailInfo {
	string akcejfcfban = 4;
	string signature = 6;
	uint32 anpllaobfji = 1212;
	bool show_display_avatars = 13;
	PlatformType platform_type = 9;
	optional Knhlnlngahp onkhlhojhgn = 395;
	uint32 ooopbhimnfd = 1;
	uint32 world_level = 7;
	bool jfgaekjjpie = 12;
	repeated DisplayAvatarDetailInfo display_avatar_list = 440;
	optional PlayerRecordInfo record_info = 8;
	string gmalcpnohbf = 14;
	uint32 head_icon = 3;
	optional PlayerDisplaySettings fdfpgmioimm = 890;
	uint32 uid = 10;
	uint32 kbmgbninfbk = 5;
	repeated DisplayAvatarDetailInfo assist_avatar_list = 11;
	uint32 level = 15;
	string nickname = 2;
}

message FriendListInfo {
	bool is_marked = 15;
	PlayingState playing_state = 13;
	optional SimpleInfo simple_info = 10;
	int64 sent_time = 3;
	string friend_name = 4;
	optional Hiejjbdncnh ilchajcffbf = 7;
}

message FriendApplyInfo {
	optional SimpleInfo simple_info = 9;
	int64 lffcmnahbdp = 2;
}

message FriendRecommendInfo {
	bool jholblpeglj = 12;
	optional SimpleInfo simple_info = 2;
}

message Lpkdgnbjdem {
	optional DisplayAvatarDetailInfo mdhfanlhnma = 2;
	optional SimpleInfo simple_info = 12;
}

message Flcmjahgkfk {
	string gmalcpnohbf = 8;
	uint32 uid = 6;
	PlatformType platform_type = 12;
	uint32 level = 3;
	uint32 nppphgfenph = 15;
	uint32 innaniclcae = 13;
	string friend_name = 11;
	string nickname = 10;
	uint32 head_icon = 4;
}

message FriendChallengeLineup {
	uint32 buff_two = 9;
	uint32 max_star = 15;
	uint32 score = 3;
	uint32 buff_one = 14;
	string friend_name = 8;
	optional SimpleInfo simple_info = 1;
	repeated ChallengeLineup lineup_list = 5;
}

message FriendChallengeClearanceInfo {
	uint32 group_id = 1;
	uint32 total_star_count = 14;
}

message Ognldadpjfo {
	optional RogueFinishInfo finish_info = 9;
	uint32 map_id = 6;
}

message Eaimkomhkhd {
	uint32 avatar_id = 14;
	uint32 ggdiibcdobb = 5;
}

message Angoamadoma {
	optional Jhllljajkep njnjebodmnl = 14;
	uint32 jbloklcpafn = 3;
	uint32 ijhlojefcpm = 12;
	uint32 ofgbjcccike = 6;
}

message Ggkbhalpidk {
	uint32 imlhfgepcan = 4;
	uint32 lhbdonjiicc = 2;
	uint32 area_id = 15;
}

message Lfjpddcnbkc {
	uint32 epljmcapmpc = 4;
	uint32 fnmgaohmlim = 3;
	uint32 fjhigbbmjdm = 5;
	uint32 area_id = 7;
}

message Nhagpmmcdcf {
	uint32 oiajancbabp = 4;
	uint32 area_id = 9;
	uint32 agijkfbcjoc = 8;
	uint32 onahhamhfdb = 11;
}

message Okdbogbabni {
	optional Ggkbhalpidk plccehdnafl = 8;
	optional Nhagpmmcdcf hdljbadekfi = 6;
	optional Lfjpddcnbkc apmjfgkifon = 4;
	oneof Gnkackhfhhd {
		Ognldadpjfo Edgfedjbahf = 551;
		Angoamadoma Opfpolcgmed = 128;
	}
}

message Iojhjahimhm {
	uint32 area_id = 12;
}

message Jienkfadche {
	uint32 njoiciopbnh = 14;
	uint32 area_id = 15;
}

message Meehcbgdbea {
	uint32 challenge_id = 12;
}

message Dhahakmpnaf {
	int64 time = 1;
	DevelopmentType ejhmnkhepfa = 7;
}

message GetFriendListInfoCsReq {

}

message GetFriendListInfoScRsp {
	uint32 retcode = 14;
	repeated FriendListInfo friend_list = 6;
	repeated SimpleInfo pelmgopehkn = 12;
}

message GetPlayerDetailInfoCsReq {
	uint32 uid = 5;
}

message GetPlayerDetailInfoScRsp {
	uint32 retcode = 15;
	optional PlayerDetailInfo player_detail_info = 10;
}

message GetFriendApplyListInfoCsReq {

}

message GetFriendApplyListInfoScRsp {
	uint32 retcode = 14;
	repeated uint32 send_apply_list = 12;
	repeated FriendApplyInfo friend_apply_list = 15;
}

message ApplyFriendCsReq {
	FriendApplySource source = 3;
	uint32 uid = 6;
}

message ApplyFriendScRsp {
	uint32 uid = 6;
	uint32 retcode = 2;
}

message SyncApplyFriendScNotify {
	optional FriendApplyInfo friend_apply_info = 12;
}

message HandleFriendCsReq {
	uint32 uid = 1;
	bool handle_result = 8;
}

message HandleFriendScRsp {
	optional FriendListInfo handle_friend_info = 15;
	bool handle_result = 9;
	uint32 uid = 2;
	uint32 retcode = 11;
}

message SyncHandleFriendScNotify {
	bool handle_result = 8;
	uint32 uid = 13;
	optional FriendListInfo handle_friend_info = 1;
}

message DeleteFriendCsReq {
	uint32 uid = 6;
	uint32 fiocdbipcgb = 14;
}

message DeleteFriendScRsp {
	uint32 retcode = 6;
	uint32 uid = 12;
}

message SyncDeleteFriendScNotify {
	uint32 uid = 11;
}

message AddBlacklistCsReq {
	uint32 uid = 8;
}

message AddBlacklistScRsp {
	uint32 retcode = 11;
	optional SimpleInfo black_info = 6;
}

message SyncAddBlacklistScNotify {
	uint32 uid = 13;
}

message GetFriendRecommendListInfoCsReq {
	bool ahoilnfiieg = 12;
}

message GetFriendRecommendListInfoScRsp {
	repeated FriendRecommendInfo friend_recommend_list = 14;
	uint32 retcode = 4;
}

message SetFriendRemarkNameCsReq {
	uint32 uid = 12;
	string friend_name = 6;
	uint32 reason = 3;
}

message SetFriendRemarkNameScRsp {
	string friend_name = 8;
	uint32 retcode = 9;
	uint32 uid = 2;
}

message ReportPlayerCsReq {
	string mimakhaabah = 13;
	uint32 ehbcljfpooe = 12;
	uint32 uid = 10;
}

message ReportPlayerScRsp {
	uint32 retcode = 10;
}

message DeleteBlacklistCsReq {
	uint32 uid = 4;
}

message DeleteBlacklistScRsp {
	uint32 uid = 2;
	uint32 retcode = 6;
}

message SearchPlayerCsReq {
	repeated uint32 search_uid_list = 9;
	bool ahoilnfiieg = 14;
}

message SearchPlayerScRsp {
	repeated uint32 search_uid_list = 8;
	repeated SimpleInfo search_result_list = 3;
	uint32 retcode = 13;
}

message GetAssistListCsReq {
	bool ahoilnfiieg = 7;
	bool kiboagmojcp = 15;
}

message GetAssistListScRsp {
	uint32 retcode = 10;
	repeated Lpkdgnbjdem giecjkakcko = 8;
}

message SetAssistCsReq {
	uint32 uid = 11;
	uint32 avatar_id = 15;
}

message SetAssistScRsp {
	uint32 retcode = 5;
	uint32 uid = 11;
	uint32 avatar_id = 7;
}

message GetCurAssistCsReq {

}

message GetCurAssistScRsp {
	optional Lpkdgnbjdem dpjbdhelnoe = 11;
	uint32 retcode = 4;
}

message GetAssistHistoryCsReq {

}

message GetAssistHistoryScRsp {
	repeated uint32 phplnjfimdc = 8;
	uint32 omhchjlliif = 5;
	uint32 nfjjapnppkp = 12;
	uint32 pbfneigopmp = 1;
	uint32 retcode = 6;
}

message NewAssistHistoryNotify {
	uint32 nfjjapnppkp = 9;
}

message TakeAssistRewardCsReq {

}

message TakeAssistRewardScRsp {
	optional ItemList reward = 6;
	repeated Flcmjahgkfk nlcnbiehcoh = 12;
	uint32 retcode = 8;
}

message CurAssistChangedNotify {
	optional Lpkdgnbjdem dpjbdhelnoe = 1;
}

message GetPlatformPlayerInfoCsReq {
	PlatformType platform_type = 2;
	repeated string dnenlchjekg = 3;
}

message GetPlatformPlayerInfoScRsp {
	uint32 retcode = 1;
	repeated SimpleInfo friend_recommend_list = 15;
}

message GetFriendLoginInfoCsReq {

}

message GetFriendLoginInfoScRsp {
	repeated uint32 friend_uid_list = 15;
	bool bohnbjmmkbo = 10;
	repeated uint32 iihdbinopmg = 6;
	bool lifcehlfdnm = 14;
	uint32 retcode = 5;
}

message SetForbidOtherApplyFriendCsReq {
	bool mjpflikafej = 13;
}

message SetForbidOtherApplyFriendScRsp {
	bool mjpflikafej = 10;
	uint32 retcode = 6;
}

message SetFriendMarkCsReq {
	uint32 reason = 10;
	bool is_set_mark = 15;
	uint32 uid = 3;
}

message SetFriendMarkScRsp {
	uint32 uid = 5;
	uint32 retcode = 1;
	bool is_set_mark = 2;
}

message GetFriendAssistListCsReq {
	AssistAvatarType mloogabmihp = 1;
	repeated uint32 kcpaodebjdg = 4;
	repeated uint32 bijgjecjmhm = 7;
	uint32 from_uid = 8;
	bool ahoilnfiieg = 10;
}

message GetFriendAssistListScRsp {
	repeated Lpkdgnbjdem giecjkakcko = 11;
	uint32 retcode = 12;
	uint32 from_uid = 9;
}

message GetFriendChallengeLineupCsReq {
	uint32 challenge_id = 9;
}

message GetFriendChallengeLineupScRsp {
	bool onocjeebfci = 13;
	repeated FriendChallengeLineup jaejjmjpmnc = 3;
	uint32 retcode = 8;
}

message GetFriendChallengeDetailCsReq {
	uint32 challenge_id = 11;
	uint32 uid = 4;
}

message GetFriendChallengeDetailScRsp {
	uint32 challenge_id = 10;
	uint32 retcode = 14;
	repeated DisplayAvatarDetailInfo ccgdmoolhhb = 4;
	uint32 uid = 3;
}

message Kamciopbpga {
	repeated uint32 jhiakmchplb = 12;
	string friend_name = 3;
	repeated Oilpiacennh avatar_list = 13;
	optional SimpleInfo simple_info = 1;
}

message Kehmgkihefn {
	oneof Nfgnbbjgang {
		FriendChallengeLineup Gieidjeepac = 11;
		Kamciopbpga Addcjejpfef = 3;
	}
}

message GetFriendRecommendLineupCsReq {
	Dllleandaih type = 1;
	uint32 key = 15;
}

message GetFriendRecommendLineupScRsp {
	repeated Kehmgkihefn jaejjmjpmnc = 11;
	Dllleandaih type = 12;
	bool onocjeebfci = 9;
	uint32 key = 10;
	uint32 retcode = 14;
}

message GetFriendRecommendLineupDetailCsReq {
	uint32 key = 3;
	Dllleandaih type = 6;
	uint32 uid = 11;
}

message GetFriendRecommendLineupDetailScRsp {
	repeated DisplayAvatarDetailInfo ccgdmoolhhb = 12;
	uint32 retcode = 1;
	Dllleandaih type = 14;
	uint32 uid = 6;
	uint32 key = 11;
}

message GetFriendBattleRecordDetailCsReq {
	uint32 uid = 14;
}

message GetFriendBattleRecordDetailScRsp {
	uint32 uid = 4;
	uint32 retcode = 2;
	optional Okdbogbabni pgbbepkahbh = 11;
	repeated FriendChallengeClearanceInfo jdidihobaod = 14;
}

message GetFriendDevelopmentInfoCsReq {
	uint32 uid = 3;
}

message GetFriendDevelopmentInfoScRsp {
	uint32 retcode = 1;
	repeated Dhahakmpnaf jbhbfbjgbph = 3;
	uint32 uid = 13;
}

message GetGachaInfoCsReq {

}

message GachaCeilingAvatar {
	uint32 repeated_cnt = 3;
	uint32 avatar_id = 12;
}

message GachaCeiling {
	bool is_claimed = 12;
	uint32 ceiling_num = 13;
	repeated GachaCeilingAvatar avatar_list = 11;
}

message Lopdjahfphn {
	uint32 chdoibfehlp = 4;
	uint32 iincdjpoomc = 6;
	repeated uint32 dlabdnpihff = 14;
	repeated uint32 jigonealcpc = 9;
}

message GachaInfo {
	string detail_webview = 3;
	repeated uint32 prize_item_list = 1;
	uint32 gacha_id = 4;
	repeated uint32 anngpmhpnim = 9;
	uint32 gdifaahifbh = 12;
	uint32 kmnjnmjfgbg = 14;
	int64 begin_time = 11;
	string drop_history_webview = 13;
	int64 end_time = 7;
	repeated uint32 item_detail_list = 2;
	uint32 iincdjpoomc = 10;
	optional GachaCeiling gacha_ceiling = 15;
}

message GetGachaInfoScRsp {
	uint32 nopbebkhika = 6;
	repeated Lopdjahfphn idehajmemak = 11;
	uint32 retcode = 1;
	uint32 gacha_random = 15;
	uint32 nbelnoipoek = 9;
	uint32 djndmnpebka = 7;
	repeated GachaInfo gacha_info_list = 3;
}

message DoGachaCsReq {
	uint32 gacha_random = 15;
	uint32 gacha_id = 1;
	uint32 simulate_magic = 11;
	uint32 gacha_num = 3;
}

message GachaItem {
	bool is_new = 9;
	optional ItemList transfer_item_list = 7;
	optional Item gacha_item = 2;
	optional ItemList token_item = 15;
}

message DoGachaScRsp {
	uint32 retcode = 13;
	uint32 penilhglhhm = 7;
	uint32 kmnjnmjfgbg = 4;
	repeated GachaItem gacha_item_list = 5;
	uint32 gdifaahifbh = 2;
	uint32 gacha_id = 9;
	uint32 ceiling_num = 1;
	uint32 gacha_num = 10;
	uint32 nopbebkhika = 8;
}

message GetGachaCeilingCsReq {
	uint32 gacha_type = 6;
}

message GetGachaCeilingScRsp {
	uint32 gacha_type = 11;
	uint32 retcode = 12;
	optional GachaCeiling gacha_ceiling = 3;
}

message ExchangeGachaCeilingCsReq {
	uint32 gacha_type = 13;
	uint32 avatar_id = 9;
}

message ExchangeGachaCeilingScRsp {
	uint32 gacha_type = 2;
	optional ItemList transfer_item_list = 5;
	uint32 retcode = 11;
	optional GachaCeiling gacha_ceiling = 8;
	uint32 avatar_id = 14;
}

message SetGachaDecideItemCsReq {
	uint32 gacha_id = 2;
	repeated uint32 dlabdnpihff = 11;
	uint32 chdoibfehlp = 3;
}

message SetGachaDecideItemScRsp {
	uint32 retcode = 12;
	optional Lopdjahfphn gdpoeejnmhn = 2;
}

message Oicenkljicg {
	uint32 dgaklnofdpp = 10;
	bool fbkekcgelbe = 13;
}

message Maiaboommnn {
	Afefbpablhm step = 14;
	uint32 clkeoehplng = 13;
	bool kkgfigchkib = 2;
	bool jmpejfickjo = 3;
	Bfdflhekfgk jiimeljaone = 1;
}

message Mmeinfmdjfg {
	uint32 clkeoehplng = 13;
	uint32 kbmmmmckjni = 9;
}

message GetHeartDialInfoCsReq {

}

message GetHeartDialInfoScRsp {
	repeated Maiaboommnn emdmhabinkg = 3;
	repeated Mmeinfmdjfg ocmoejidlam = 6;
	Ooehgmemkoi nfeojaajmke = 8;
	uint32 retcode = 13;
	repeated Oicenkljicg aboigbjnoho = 4;
}

message ChangeScriptEmotionCsReq {
	Bfdflhekfgk ebnofhdngdh = 1;
	uint32 clkeoehplng = 2;
	uint32 fihncoabela = 9;
}

message ChangeScriptEmotionScRsp {
	uint32 clkeoehplng = 15;
	Bfdflhekfgk kefkogklefc = 2;
	uint32 retcode = 6;
}

message SubmitEmotionItemCsReq {
	uint32 clkeoehplng = 1;
	uint32 fihncoabela = 10;
	optional ItemList item_list = 12;
}

message SubmitEmotionItemScRsp {
	uint32 clkeoehplng = 14;
	uint32 retcode = 12;
}

message FinishEmotionDialoguePerformanceCsReq {
	uint32 fihncoabela = 8;
	uint32 dgaklnofdpp = 5;
	uint32 clkeoehplng = 1;
}

message FinishEmotionDialoguePerformanceScRsp {
	uint32 retcode = 4;
	uint32 clkeoehplng = 7;
	optional ItemList reward_list = 6;
	uint32 dgaklnofdpp = 12;
}

message HeartDialScriptChangeScNotify {
	repeated Oicenkljicg nglhcmbghio = 11;
	repeated Maiaboommnn pkflgdfdmoi = 4;
	repeated Mmeinfmdjfg ocmoejidlam = 8;
	Ooehgmemkoi nfeojaajmke = 6;
}

message HeartDialTraceScriptCsReq {
	optional Mmeinfmdjfg agoipfbddpo = 3;
}

message HeartDialTraceScriptScRsp {
	optional Mmeinfmdjfg agoipfbddpo = 8;
	uint32 retcode = 6;
}

message Dejakpoepkn {
	uint32 cgfgfmgdpnj = 8;
	repeated uint32 lfpmaobgnen = 3;
}

message Jmijjhkiblb {
	uint32 challenge_id = 14;
	uint32 stars = 7;
	bool gjieahdbnni = 10;
}

message HeliobusChallengeLineup {
	uint32 group_id = 7;
	uint32 skill_id = 12;
	repeated uint32 avatar_id_list = 5;
}

message HeliobusActivityDataCsReq {

}

message HeliobusActivityDataScRsp {
	uint32 ibhaaejeehc = 4;
	uint32 eenjbpmndol = 11;
	optional Dejakpoepkn skill_info = 3;
	uint32 retcode = 1;
	uint32 level = 13;
	uint32 iphkdelmoih = 6;
	repeated HeliobusChallengeLineup gcljengjicm = 12;
	repeated Gbjkkfhpffn nfdbmhppfip = 8;
	uint32 phase = 5;
	repeated Jmijjhkiblb challenge_list = 14;
}

message Goammagcijj {
	repeated Goammagcijj jndkooejcfc = 14;
	uint32 eliadkdaeco = 4;
	uint32 kmaempmoccc = 6;
}

message Gbjkkfhpffn {
	uint32 ihkejebceib = 2;
	bool dekhdibcfab = 13;
	repeated Goammagcijj ndjfnhfpcgd = 7;
	uint32 jfmofiidcnp = 1;
	uint32 aknkpkpljhf = 4;
	bool ajciodkllml = 3;
	uint32 fclnoogehmc = 9;
	uint32 cmhgbbhknci = 11;
}

message HeliobusSnsReadCsReq {
	uint32 ihkejebceib = 8;
}

message HeliobusSnsReadScRsp {
	uint32 ihkejebceib = 14;
	uint32 retcode = 7;
}

message HeliobusSnsPostCsReq {
	uint32 ihkejebceib = 6;
	uint32 jfmofiidcnp = 7;
	uint32 fclnoogehmc = 9;
}

message HeliobusSnsPostScRsp {
	uint32 retcode = 8;
	optional Gbjkkfhpffn eimcnifmlbl = 10;
}

message HeliobusSnsLikeCsReq {
	uint32 ihkejebceib = 8;
}

message HeliobusSnsLikeScRsp {
	uint32 ihkejebceib = 4;
	bool dekhdibcfab = 9;
	uint32 retcode = 7;
}

message HeliobusSnsCommentCsReq {
	uint32 kmaempmoccc = 8;
	uint32 kaljkfkjffa = 13;
	uint32 ihkejebceib = 10;
}

message HeliobusSnsCommentScRsp {
	optional Gbjkkfhpffn eimcnifmlbl = 8;
	uint32 retcode = 11;
}

message HeliobusSnsUpdateScNotify {
	repeated Gbjkkfhpffn gkfhmgmbika = 2;
}

message HeliobusInfoChangedScNotify {
	uint32 iphkdelmoih = 9;
	repeated Gbjkkfhpffn gkfhmgmbika = 2;
	uint32 phase = 10;
	uint32 eenjbpmndol = 3;
}

message HeliobusUpgradeLevelCsReq {

}

message HeliobusUpgradeLevelScRsp {
	uint32 retcode = 7;
	uint32 level = 6;
}

message HeliobusUnlockSkillScNotify {
	uint32 cgfgfmgdpnj = 13;
	uint32 skill_id = 8;
}

message HeliobusEnterBattleCsReq {
	repeated uint32 avatar_id_list = 2;
	uint32 event_id = 8;
	uint32 skill_id = 6;
}

message HeliobusEnterBattleScRsp {
	uint32 retcode = 2;
	optional SceneBattleInfo battle_info = 11;
	uint32 event_id = 3;
}

message HeliobusSelectSkillCsReq {
	uint32 skill_id = 8;
}

message HeliobusSelectSkillScRsp {
	uint32 skill_id = 15;
	uint32 retcode = 14;
}

message HeliobusChallengeUpdateScNotify {
	optional Jmijjhkiblb dddikpnnble = 2;
}

message HeliobusLineupUpdateScNotify {
	optional HeliobusChallengeLineup lineup = 8;
}

message HeliobusStartRaidCsReq {
	bool jgeaegmhdoc = 1;
	repeated uint32 avatar_list = 15;
	uint32 skill_id = 4;
	uint32 cenifnknfnp = 11;
	uint32 prop_entity_id = 14;
	uint32 enlknpiblio = 9;
}

message HeliobusStartRaidScRsp {
	optional Fnlgplncpcl scene = 7;
	uint32 retcode = 8;
}

message GetBagCsReq {

}

message Equipment {
	uint32 promotion = 2;
	uint32 rank = 7;
	uint32 equip_avatar_id = 3;
	bool is_protected = 15;
	uint32 tid = 1;
	uint32 unique_id = 14;
	uint32 exp = 6;
	uint32 level = 9;
}

message Relic {
	uint32 level = 12;
	uint32 exp = 7;
	uint32 unique_id = 5;
	repeated RelicAffix reroll_affix_list = 10;
	bool is_protected = 9;
	bool is_discarded = 13;
	uint32 main_affix_id = 3;
	uint32 equip_avatar_id = 8;
	repeated RelicAffix sub_affix_list = 4;
	uint32 tid = 2;
}

message Material {
	uint32 tid = 4;
	uint64 expire_time = 12;
	uint32 num = 13;
}

message WaitDelResource {
	uint32 tid = 2;
	uint32 num = 15;
}

message Material0 {
	uint64 expire_time = 6;
	uint32 tid = 7;
	uint32 num = 1;
}

message Nkdohhodnnh {
	optional PileItem icflihhbpmg = 11;
	repeated PileItem fiphhbdeidf = 6;
}

message Jlehfbohnie {
	repeated Nkdohhodnnh mcbcnkcnoib = 4;
	uint64 time = 3;
}

message GetBagScRsp {
	repeated Jlehfbohnie gnalanjpego = 13;
	repeated uint32 fdbjlgdhcdo = 2;
	uint32 retcode = 6;
	repeated uint32 aoiihcfmfph = 10;
	repeated Material0 phngmeljkbe = 12;
	repeated PileItem bafebhdobfj = 7;
	repeated TurnFoodSwitch turn_food_switch = 3;
	repeated uint32 gemcacjlpij = 8;
	repeated Material ifenmdpbnkg = 11;
	repeated WaitDelResource hlinmkbdknc = 9;
	repeated Material0 fcokffeapmi = 14;
	uint32 aepnidponkc = 1;
	repeated Material material_list = 15;
	repeated Equipment equipment_list = 5;
	repeated Relic relic_list = 4;
}

message PromoteEquipmentCsReq {
	uint32 equipment_unique_id = 9;
	optional ItemCostList item_cost_list = 10;
}

message PromoteEquipmentScRsp {
	uint32 retcode = 1;
}

message LockEquipmentCsReq {
	bool is_protected = 14;
	repeated uint32 equipment_id_list = 15;
}

message LockEquipmentScRsp {
	uint32 retcode = 10;
}

message UseItemCsReq {
	uint32 use_item_id = 5;
	AvatarType mgnnkfnacni = 6;
	uint32 base_avatar_id = 15;
	uint32 use_item_count = 10;
	uint32 optional_reward_id = 9;
	bool felciemkcgf = 1;
}

message UseItemScRsp {
	uint32 use_item_count = 1;
	uint32 use_item_id = 14;
	uint32 gcjobeokmcp = 10;
	uint32 retcode = 7;
	uint64 month_card_out_date_time = 9;
	optional ItemList return_data = 13;
}

message RankUpEquipmentCsReq {
	optional ItemCostList item_cost_list = 13;
	uint32 equipment_unique_id = 3;
}

message RankUpEquipmentScRsp {
	uint32 retcode = 6;
}

message Bepahbkljnn {
	optional ItemCostList item_cost_list = 15;
	uint32 equipment_unique_id = 4;
}

message BatchRankUpEquipmentCsReq {
	repeated Bepahbkljnn param_list = 12;
}

message BatchRankUpEquipmentScRsp {
	uint32 retcode = 6;
}

message ExpUpEquipmentCsReq {
	uint32 equipment_unique_id = 12;
	optional ItemCostList item_cost_list = 13;
}

message ExpUpEquipmentScRsp {
	repeated PileItem return_item_list = 10;
	uint32 retcode = 4;
}

message ComposeItemCsReq {
	uint32 compose_id = 10;
	uint32 count = 1;
	optional ItemCostList compose_item_list = 5;
	optional ItemCostList pjchnokedbe = 4;
}

message ComposeItemScRsp {
	uint32 retcode = 12;
	uint32 count = 2;
	uint32 compose_id = 7;
	optional ItemList return_item_list = 8;
}

message ComposeSelectedRelicCsReq {
	optional ItemCostList fbgodfjicll = 5;
	uint32 compose_relic_id = 4;
	uint32 count = 1;
	uint32 compose_id = 13;
	optional ItemCostList gjfmnmokaic = 11;
	uint32 main_affix_id = 12;
	repeated uint32 ggnpaifhpbb = 15;
}

message ComposeSelectedRelicScRsp {
	uint32 compose_id = 8;
	uint32 retcode = 14;
	optional ItemList return_item_list = 12;
}

message ExpUpRelicCsReq {
	uint32 relic_unique_id = 2;
	optional ItemCostList item_cost_list = 7;
}

message ExpUpRelicScRsp {
	repeated PileItem return_item_list = 4;
	uint32 retcode = 9;
}

message LockRelicCsReq {
	repeated uint32 locked_relic_id_list = 6;
	bool is_batch_op = 7;
	bool is_protected = 14;
}

message LockRelicScRsp {
	uint32 retcode = 13;
}

message DiscardRelicCsReq {
	bool is_discard = 2;
	Icpineholml nlpconnjonf = 10;
	uint64 hnhfdmdibio = 6;
	repeated uint32 locked_relic_id_list = 12;
}

message DiscardRelicScRsp {
	uint32 retcode = 6;
	repeated uint32 locked_relic_id_list = 12;
	bool is_discard = 8;
	Icpineholml nlpconnjonf = 9;
}

message SellItemCsReq {
	optional ItemCostList item_cost_list = 8;
	bool to_material = 9;
}

message SellItemScRsp {
	uint32 retcode = 7;
	optional ItemList return_item_list = 14;
}

message RechargeSuccNotify {
	optional ItemList item_list = 8;
	string ppjdkmhiggj = 9;
	uint64 month_card_out_date_time = 15;
	string mpamhbfikfb = 11;
}

message ExchangeHcoinCsReq {
	uint32 num = 15;
}

message ExchangeHcoinScRsp {
	uint32 retcode = 11;
	uint32 num = 15;
}

message AddEquipmentScNotify {
	uint32 mdmgkhlhiin = 6;
}

message GetRecyleTimeCsReq {
	repeated uint32 cjlndnilgmf = 3;
}

message GetRecyleTimeScRsp {
	uint32 retcode = 9;
	repeated Material0 fcokffeapmi = 12;
}

message Fnhmmmkjgpb {
	uint32 formula_id = 10;
	uint32 ojemelhcmpj = 9;
}

message ComposeLimitNumCompleteNotify {
	repeated Fnhmmmkjgpb dchnaedinmm = 6;
}

message ComposeLimitNumUpdateNotify {
	optional Fnhmmmkjgpb fglfgjdpjpd = 12;
}

message DestroyItemCsReq {
	uint32 mbejblfhcbh = 3;
	uint32 item_id = 9;
	uint32 cfcokeldogj = 14;
}

message DestroyItemScRsp {
	uint32 retcode = 12;
	uint32 cfcokeldogj = 15;
}

message GetMarkItemListCsReq {

}

message GetMarkItemListScRsp {
	uint32 retcode = 12;
	repeated uint32 pdbihonolfj = 8;
}

message MarkItemCsReq {
	uint32 item_id = 3;
	bool naehphhdgek = 4;
}

message MarkItemScRsp {
	bool naehphhdgek = 15;
	uint32 retcode = 13;
	uint32 item_id = 11;
}

message CancelMarkItemNotify {
	uint32 item_id = 11;
}

message SyncTurnFoodNotify {
	repeated uint32 fdbjlgdhcdo = 11;
	repeated TurnFoodSwitch turn_food_switch = 9;
}

message SetTurnFoodSwitchCsReq {
	TurnFoodSwitch jcakhhkfdfn = 9;
	bool bndlhjhalmb = 14;
}

message SetTurnFoodSwitchScRsp {
	TurnFoodSwitch jcakhhkfdfn = 15;
	bool bndlhjhalmb = 8;
	uint32 retcode = 4;
}

message GeneralVirtualItemDataNotify {
	repeated PileItem fdjkccgdnka = 9;
	bool pkbahpfjgdb = 3;
}

message Pacfhnejadb {
	uint32 pbkolnfgjdl = 2;
	bool hnmgpiiilon = 12;
}

message Kfpjggifien {
	optional Pacfhnejadb gfidnaanafh = 8;
	uint32 ehkjhcoakbk = 4;
	optional Iipkannmlfn ibpdgnohfpm = 6;
	string name = 5;
	int64 cabigiplihb = 13;
	uint32 khncedgfpgl = 7;
	bool is_marked = 12;
}

message GetRelicFilterPlanCsReq {

}

message GetRelicFilterPlanScRsp {
	uint32 retcode = 7;
	repeated Kfpjggifien ecnafdibckf = 2;
}

message AddRelicFilterPlanCsReq {
	optional Pacfhnejadb gfidnaanafh = 4;
	string name = 11;
	bool is_marked = 6;
	uint32 ehkjhcoakbk = 12;
	optional Iipkannmlfn ibpdgnohfpm = 15;
}

message AddRelicFilterPlanScRsp {
	optional Kfpjggifien eilidmcocho = 2;
	uint32 retcode = 10;
}

message ModifyRelicFilterPlanCsReq {
	uint32 khncedgfpgl = 4;
	oneof Kfelkjldkeh {
		string Name = 8;
		Pacfhnejadb Gfidnaanafh = 10;
		Iipkannmlfn Ibpdgnohfpm = 11;
	}
}

message ModifyRelicFilterPlanScRsp {
	uint32 retcode = 8;
	uint32 khncedgfpgl = 14;
	int64 cabigiplihb = 7;
	oneof Kfelkjldkeh {
		string Name = 12;
		Pacfhnejadb Gfidnaanafh = 3;
		Iipkannmlfn Ibpdgnohfpm = 6;
	}
}

message DeleteRelicFilterPlanCsReq {
	bool is_batch_op = 5;
	repeated uint32 ndobmajmlnk = 12;
}

message DeleteRelicFilterPlanScRsp {
	bool is_batch_op = 13;
	repeated uint32 ndobmajmlnk = 4;
	uint32 retcode = 3;
}

message MarkRelicFilterPlanCsReq {
	repeated uint32 ndobmajmlnk = 4;
	bool is_batch_op = 5;
	bool is_set_mark = 3;
}

message MarkRelicFilterPlanScRsp {
	bool is_set_mark = 12;
	repeated uint32 ndobmajmlnk = 4;
	bool is_batch_op = 1;
	uint32 retcode = 9;
}

message RelicFilterPlanClearNameScNotify {
	uint32 khncedgfpgl = 15;
}

message RelicReforgeCsReq {
	uint32 relic_unique_id = 10;
}

message RelicReforgeScRsp {
	uint32 retcode = 11;
}

message RelicReforgeConfirmCsReq {
	bool cjoeaeijlgc = 2;
	uint32 relic_unique_id = 10;
}

message RelicReforgeConfirmScRsp {
	uint32 retcode = 4;
}

message UnlockedMusic {
	uint32 group_id = 10;
	bool icfbdppjoad = 2;
	uint32 id = 12;
}

message GetJukeboxDataCsReq {

}

message GetJukeboxDataScRsp {
	repeated UnlockedMusic music_list = 5;
	uint32 playing_id = 15;
	uint32 retcode = 6;
}

message PlayBackGroundMusicCsReq {
	uint32 play_music_id = 12;
}

message PlayBackGroundMusicScRsp {
	uint32 playing_id = 2;
	uint32 play_music_id = 10;
	uint32 retcode = 13;
}

message UnlockBackGroundMusicCsReq {
	repeated uint32 unlock_ids = 7;
}

message UnlockBackGroundMusicScRsp {
	repeated UnlockedMusic music_list = 10;
	repeated uint32 unlocked_ids = 7;
	uint32 retcode = 11;
}

message TrialBackGroundMusicCsReq {
	uint32 pigbbgclamj = 4;
}

message TrialBackGroundMusicScRsp {
	uint32 retcode = 11;
	uint32 pigbbgclamj = 7;
}

message GetStageLineupCsReq {

}

message Jlchbkkfanl {
	uint32 stage_type = 11;
	uint32 dogdacflboe = 4;
}

message GetStageLineupScRsp {
	repeated Jlchbkkfanl nmkpekmmnbp = 5;
	uint32 retcode = 7;
}

message LineupAvatar {
	AvatarType avatar_type = 10;
	uint32 id = 6;
	optional SpBarInfo sp_bar = 15;
	uint32 slot = 13;
	uint32 hp = 3;
	uint32 satiety = 1;
}

message LineupInfo {
	uint32 index = 9;
	bool bfnbklmamkb = 2;
	uint32 mp = 10;
	repeated uint32 mankkfpbfcb = 5;
	uint32 max_mp = 14;
	uint32 plane_id = 6;
	ExtraLineupType extra_lineup_type = 1;
	uint32 game_story_line_id = 4;
	uint32 leader_slot = 15;
	string name = 12;
	repeated uint32 kompcjpapkm = 3;
	repeated LineupAvatar avatar_list = 8;
	repeated uint32 mkdfjccbiop = 11;
	bool is_virtual = 7;
}

message GetCurLineupDataCsReq {

}

message GetCurLineupDataScRsp {
	optional LineupInfo lineup = 7;
	uint32 retcode = 8;
}

message JoinLineupCsReq {
	uint32 slot = 9;
	uint32 base_avatar_id = 12;
	ExtraLineupType extra_lineup_type = 3;
	uint32 index = 7;
	bool is_virtual = 5;
	AvatarType avatar_type = 1;
	uint32 plane_id = 8;
}

message JoinLineupScRsp {
	uint32 retcode = 9;
}

message QuitLineupCsReq {
	ExtraLineupType extra_lineup_type = 9;
	uint32 plane_id = 13;
	uint32 base_avatar_id = 2;
	bool is_virtual = 11;
	uint32 index = 12;
	AvatarType avatar_type = 7;
}

message QuitLineupScRsp {
	uint32 plane_id = 3;
	uint32 retcode = 15;
	bool hiofpdkdofd = 5;
	uint32 base_avatar_id = 10;
	bool is_virtual = 9;
}

message SwapLineupCsReq {
	ExtraLineupType extra_lineup_type = 15;
	bool is_virtual = 10;
	uint32 index = 6;
	uint32 src_slot = 2;
	uint32 dst_slot = 7;
	uint32 plane_id = 1;
}

message SwapLineupScRsp {
	uint32 retcode = 13;
}

message SyncLineupNotify {
	optional LineupInfo lineup = 14;
	repeated SyncReason reason_list = 4;
}

message GetLineupAvatarDataCsReq {

}

message Acmnhkhplod {
	uint32 id = 9;
	AvatarType avatar_type = 4;
	uint32 hp = 1;
}

message GetLineupAvatarDataScRsp {
	uint32 retcode = 14;
	repeated Acmnhkhplod lijinikjnad = 4;
}

message ChangeLineupLeaderCsReq {
	uint32 slot = 10;
}

message ChangeLineupLeaderScRsp {
	uint32 slot = 7;
	uint32 retcode = 9;
}

message SwitchLineupIndexCsReq {
	uint32 index = 12;
}

message SwitchLineupIndexScRsp {
	uint32 retcode = 4;
	uint32 index = 14;
}

message SetLineupNameCsReq {
	uint32 index = 4;
	string name = 6;
}

message SetLineupNameScRsp {
	uint32 retcode = 12;
	uint32 index = 3;
	string name = 8;
}

message GetAllLineupDataCsReq {

}

message GetAllLineupDataScRsp {
	uint32 retcode = 10;
	repeated LineupInfo lineup_list = 9;
	uint32 cur_index = 7;
}

message VirtualLineupDestroyNotify {
	uint32 plane_id = 7;
}

message LineupSlotData {
	uint32 id = 10;
	AvatarType avatar_type = 7;
	uint32 slot = 4;
}

message ReplaceLineupCsReq {
	bool is_virtual = 14;
	ExtraLineupType extra_lineup_type = 5;
	repeated LineupSlotData slots = 10;
	uint32 plane_id = 8;
	uint32 leader_slot = 1;
	uint32 game_story_line_id = 4;
	uint32 index = 11;
}

message ReplaceLineupScRsp {
	uint32 retcode = 1;
}

message ExtraLineupDestroyNotify {
	ExtraLineupType extra_lineup_type = 10;
}

message VirtualLineupTrialAvatarChangeScNotify {
	uint32 plane_id = 2;
	repeated uint32 iblbnianphd = 8;
	bool cliigmnmhna = 6;
	repeated uint32 kfmffggjmne = 7;
}

message LobbyCreateCsReq {
	uint32 nepoddojjfe = 4;
	Noogdpkefkl fight_game_mode = 14;
	optional Epeghcgcmhp ejofcnaedhk = 3;
}

message LobbyCreateScRsp {
	repeated Cbbdiomifhd lipjdjpmokb = 7;
	uint32 nepoddojjfe = 13;
	Noogdpkefkl fight_game_mode = 6;
	uint64 room_id = 10;
	uint32 retcode = 8;
}

message LobbyInviteCsReq {
	repeated uint32 search_uid_list = 9;
}

message LobbyInviteScRsp {
	repeated uint32 search_uid_list = 1;
	uint32 retcode = 12;
}

message LobbyJoinCsReq {
	optional Epeghcgcmhp ejofcnaedhk = 9;
	uint64 room_id = 13;
}

message LobbyJoinScRsp {
	repeated Cbbdiomifhd lipjdjpmokb = 8;
	Noogdpkefkl fight_game_mode = 6;
	uint32 retcode = 4;
	uint32 nepoddojjfe = 13;
	uint64 room_id = 11;
}

message LobbyQuitCsReq {

}

message LobbyQuitScRsp {
	uint32 retcode = 8;
}

message LobbyStartFightCsReq {

}

message LobbyStartFightScRsp {
	uint32 retcode = 11;
}

message LobbyModifyPlayerInfoCsReq {
	uint32 hfdjaelbnga = 15;
	optional Epeghcgcmhp ejofcnaedhk = 8;
	Aokdmakgdgj type = 5;
}

message LobbyModifyPlayerInfoScRsp {
	uint32 retcode = 4;
}

message LobbySyncInfoScNotify {
	repeated Cbbdiomifhd lipjdjpmokb = 3;
	uint32 uid = 12;
	Aokdmakgdgj type = 2;
}

message LobbyKickOutCsReq {
	uint32 uid = 2;
}

message LobbyKickOutScRsp {
	uint32 retcode = 15;
}

message LobbyInviteScNotify {
	uint32 sender_uid = 12;
	Noogdpkefkl fight_game_mode = 10;
	uint32 room_id = 8;
}

message LobbyGetInfoCsReq {

}

message LobbyGetInfoScRsp {
	uint32 retcode = 15;
	uint32 nepoddojjfe = 7;
	Noogdpkefkl fight_game_mode = 12;
	repeated Cbbdiomifhd lipjdjpmokb = 10;
	uint64 room_id = 8;
	uint64 nogfeemnhpc = 6;
}

message LobbyInteractCsReq {
	uint32 cbegnbkmhcd = 12;
	Imaonmhilne ihcilnhklmc = 13;
}

message LobbyInteractScRsp {
	uint32 retcode = 9;
	uint32 cbegnbkmhcd = 7;
}

message LobbyInteractScNotify {
	uint32 sender_uid = 11;
	Imaonmhilne ihcilnhklmc = 8;
}

message GetMailCsReq {
	uint32 cijefnoojjk = 7;
	uint32 dapcdnelcma = 10;
}

message ClientMail {
	int64 expire_time = 7;
	string content = 3;
	uint32 template_id = 1;
	uint32 id = 12;
	repeated string para_list = 5;
	optional ItemList attachment = 15;
	string title = 6;
	bool is_read = 10;
	MailType mail_type = 11;
	int64 time = 4;
	string sender = 8;
}

message GetMailScRsp {
	bool is_end = 4;
	uint32 total_num = 3;
	uint32 start = 11;
	uint32 retcode = 13;
	repeated ClientMail mail_list = 14;
	repeated ClientMail notice_mail_list = 7;
}

message MarkReadMailCsReq {
	uint32 id = 8;
}

message MarkReadMailScRsp {
	uint32 id = 7;
	uint32 retcode = 5;
}

message DelMailCsReq {
	repeated uint32 id_list = 1;
}

message DelMailScRsp {
	uint32 retcode = 11;
	repeated uint32 id_list = 2;
}

message TakeMailAttachmentCsReq {
	repeated uint32 mail_id_list = 9;
	uint32 optional_reward_id = 12;
}

message ClientMailAttachmentItem {
	uint32 item_id = 11;
	uint32 mail_id = 9;
}

message TakeMailAttachmentScRsp {
	uint32 retcode = 12;
	repeated uint32 succ_mail_id_list = 2;
	optional ItemList attachment = 9;
	repeated ClientMailAttachmentItem fail_mail_list = 11;
}

message NewMailScNotify {
	repeated uint32 mail_id_list = 5;
}

message MapRotationData {
	repeated RotaterData rotater_data_list = 10;
	repeated ChargerInfo charger_info_list = 11;
	int32 acnpbbnlmie = 4;
	bool ighlhohcckc = 15;
	uint32 nflbondjaie = 14;
	optional RotateMapInfo map_info = 2;
	optional RotatorEnergyInfo energy_info = 8;
}

message RotatorEnergyInfo {
	uint32 max_num = 11;
	uint32 cur_num = 9;
}

message RotateMapInfo {
	optional RotateVector rotate_vector = 6;
	optional Vector vector = 14;
}

message EnterMapRotationRegionCsReq {
	uint32 nflbondjaie = 11;
	optional MotionInfo motion = 2;
	uint32 acnpbbnlmie = 4;
}

message EnterMapRotationRegionScRsp {
	uint32 acnpbbnlmie = 5;
	uint32 client_pos_version = 1;
	uint32 retcode = 15;
	optional RotatorEnergyInfo energy_info = 8;
	uint32 nflbondjaie = 9;
	optional MotionInfo motion = 14;
}

message ChargerInfo {
	uint32 glhagjgaehe = 5;
	uint32 group_id = 11;
}

message InteractChargerCsReq {
	optional ChargerInfo charger_info = 11;
}

message InteractChargerScRsp {
	optional ChargerInfo charger_info = 14;
	uint32 retcode = 3;
	optional RotatorEnergyInfo energy_info = 13;
}

message RotaterData {
	uint32 group_id = 13;
	uint32 glhagjgaehe = 14;
	float lkefolcgfgd = 9;
}

message DeployRotaterCsReq {
	optional RotaterData rotater_data = 7;
}

message DeployRotaterScRsp {
	optional RotaterData rotater_data = 11;
	uint32 retcode = 6;
	optional RotatorEnergyInfo energy_info = 14;
}

message RotateMapCsReq {
	optional RotateMapInfo map_info = 2;
	uint32 group_id = 5;
	uint32 glhagjgaehe = 9;
	optional MotionInfo motion = 1;
}

message RotateMapScRsp {
	uint32 retcode = 6;
	optional MotionInfo motion = 9;
	uint32 client_pos_version = 14;
}

message LeaveMapRotationRegionCsReq {
	optional MotionInfo motion = 1;
}

message LeaveMapRotationRegionScRsp {
	uint32 retcode = 1;
	uint32 client_pos_version = 14;
	optional MotionInfo motion = 10;
}

message GetMapRotationDataCsReq {

}

message GetMapRotationDataScRsp {
	bool omejllmnpcn = 13;
	repeated ChargerInfo charger_info_list = 8;
	int32 acnpbbnlmie = 12;
	repeated RotaterData rotater_data_list = 15;
	optional RotateMapInfo map_info = 4;
	optional RotatorEnergyInfo energy_info = 14;
	uint32 retcode = 2;
	uint32 nflbondjaie = 10;
}

message ResetMapRotationRegionCsReq {
	optional MotionInfo motion = 14;
	optional RotateMapInfo map_info = 5;
}

message ResetMapRotationRegionScRsp {
	uint32 client_pos_version = 6;
	optional MotionInfo motion = 13;
	uint32 retcode = 5;
}

message LeaveMapRotationRegionScNotify {

}

message UpdateEnergyScNotify {
	optional RotatorEnergyInfo energy_info = 11;
}

message UpdateMapRotationDataScNotify {
	uint32 nflbondjaie = 13;
	repeated ChargerInfo charger_info_list = 15;
	bool omejllmnpcn = 10;
	optional RotatorEnergyInfo energy_info = 7;
	repeated RotaterData rotater_data_list = 12;
	optional RotateMapInfo map_info = 5;
	int32 acnpbbnlmie = 9;
}

message RemoveRotaterCsReq {
	optional RotaterData rotater_data = 15;
}

message RemoveRotaterScRsp {
	optional RotatorEnergyInfo energy_info = 11;
	uint32 retcode = 8;
	optional RotaterData rotater_data = 14;
}

message UpdateRotaterScNotify {
	repeated RotaterData rotater_data_list = 7;
}

message MarbleGetDataCsReq {

}

message MarbleGetDataScRsp {
	repeated uint32 mpbmpffgibo = 12;
	repeated uint32 iogdkgfdfpc = 14;
	repeated uint32 ojnpgiljien = 2;
	int32 score = 8;
	uint32 retcode = 5;
}

message MarbleLevelFinishCsReq {
	uint32 marble_level_id = 4;
	repeated uint32 marble_seal_id_list = 7;
}

message MarbleLevelFinishScRsp {
	uint32 retcode = 2;
	uint32 marble_level_id = 1;
}

message MarbleShopBuyCsReq {
	repeated uint32 marble_seal_id_list = 1;
}

message MarbleShopBuyScRsp {
	uint32 retcode = 15;
	repeated uint32 marble_seal_id_list = 14;
}

message MarbleUnlockSealScNotify {
	repeated uint32 marble_seal_id_list = 9;
}

message MarblePvpDataUpdateScNotify {
	int32 score = 5;
}

message MarbleUpdateShownSealCsReq {
	repeated uint32 shown_seal_list = 6;
}

message MarbleUpdateShownSealScRsp {
	repeated uint32 shown_seal_list = 10;
	uint32 retcode = 13;
}

message Mjfcembpich {
	uint32 group_id = 3;
	uint32 floor_id = 6;
	uint32 config_id = 7;
	uint32 plane_id = 8;
}

message Ibcgaglolna {
	int64 jjcipimcbbj = 12;
	uint32 hobjminnbop = 7;
	repeated Mjfcembpich bcemakcmadn = 5;
}

message GetMarkChestCsReq {

}

message GetMarkChestScRsp {
	uint32 retcode = 2;
	repeated Ibcgaglolna hiccaiapgmm = 12;
}

message UpdateMarkChestCsReq {
	repeated Mjfcembpich bcemakcmadn = 8;
	uint32 hobjminnbop = 10;
	uint32 dbfpaafodkg = 3;
}

message UpdateMarkChestScRsp {
	repeated Ibcgaglolna hiccaiapgmm = 4;
	uint32 retcode = 12;
	uint32 hobjminnbop = 15;
	uint32 dbfpaafodkg = 11;
}

message MarkChestChangedScNotify {
	repeated Ibcgaglolna hiccaiapgmm = 13;
}

message StartMatchCsReq {
	optional Epeghcgcmhp ejofcnaedhk = 13;
	Noogdpkefkl fight_game_mode = 2;
}

message StartMatchScRsp {
	optional Epeghcgcmhp ejofcnaedhk = 8;
	uint32 retcode = 9;
}

message CancelMatchCsReq {

}

message CancelMatchScRsp {
	uint32 retcode = 12;
}

message MatchResultScNotify {
	uint32 retcode = 2;
	repeated Cbbdiomifhd lipjdjpmokb = 6;
}

message GetCrossInfoCsReq {

}

message GetCrossInfoScRsp {
	uint64 room_id = 4;
	uint64 nogfeemnhpc = 8;
	uint32 retcode = 14;
	Noogdpkefkl fight_game_mode = 2;
}

message MatchThreeGetDataCsReq {

}

message Lmpiecfmfoi {
	uint32 ebgmbdmpegm = 5;
	uint32 acjcphifmln = 12;
}

message Dhonnihmaci {
	uint32 pos = 3;
	uint32 count = 12;
	uint32 fmkkabmdinj = 6;
	uint32 bkmpfeocfib = 4;
}

message Abgejnbcdjk {
	repeated Dhonnihmaci bgafcobnlpm = 5;
	map<uint32, uint32> ilbhdlmlmck = 7;
	map<uint32, uint32> begmfiaphlm = 14;
	repeated Lmpiecfmfoi jmbciclchkd = 6;
}

message MatchThreeGetDataScRsp {
	uint32 retcode = 15;
	optional Abgejnbcdjk mfkjdoeblim = 11;
}

message MatchThreeLevelEndCsReq {
	repeated uint32 jeppfdinbnb = 1;
	uint32 bkmpfeocfib = 9;
	uint32 acjcphifmln = 10;
	uint32 ebgmbdmpegm = 3;
	string miilnlhddjm = 4;
	uint32 fmkkabmdinj = 14;
	map<uint32, uint32> ilbhdlmlmck = 13;
}

message MatchThreeLevelEndScRsp {
	uint32 ebgmbdmpegm = 3;
	uint32 acjcphifmln = 4;
	uint32 retcode = 9;
}

message MatchThreeSyncDataScNotify {
	optional Abgejnbcdjk mfkjdoeblim = 6;
}

message MatchThreeSetBirdPosCsReq {
	uint32 pos = 12;
	uint32 bkmpfeocfib = 1;
}

message MatchThreeSetBirdPosScRsp {
	uint32 pos = 5;
	uint32 retcode = 3;
	uint32 bkmpfeocfib = 6;
}

message MatchThreeV2GetDataCsReq {

}

message Gnebbaeikgj {
	repeated uint32 akloeigkgan = 4;
	uint32 acjcphifmln = 12;
}

message Lnoikgkjhlk {
	uint32 fmkkabmdinj = 9;
	uint32 bkmpfeocfib = 7;
	uint32 pos = 10;
	uint32 count = 13;
}

message Kfnjakgefla {
	repeated Khocchabnmn hlpodgbclka = 6;
	repeated Khocchabnmn omkfkgigfpp = 13;
	repeated Khocchabnmn edgjddiepag = 2;
	repeated Gnebbaeikgj ehbghcgkfbh = 3;
	uint32 dpbmlffpokh = 1;
	uint32 cdmpogjjmjm = 8;
	repeated Lnoikgkjhlk bgafcobnlpm = 7;
}

message MatchThreeV2GetDataScRsp {
	uint32 retcode = 5;
	optional Kfnjakgefla eahmjfllggk = 10;
}

message MatchThreeV2BattleItemLevelUpCsReq {
	uint32 ldnjeacfbje = 12;
	uint32 dmkfffpdldi = 9;
}

message MatchThreeV2BattleItemLevelUpScRsp {
	uint32 retcode = 4;
	uint32 dmkfffpdldi = 7;
	uint32 ldnjeacfbje = 5;
}

message MatchThreeV2LevelEndCsReq {
	string miilnlhddjm = 11;
	repeated Khocchabnmn hldnmibklkj = 6;
	uint32 jkfpengnjpi = 9;
	uint32 ehmpemeonge = 12;
	uint32 bkmpfeocfib = 5;
	uint32 acjcphifmln = 15;
	repeated uint32 bbgkakhgoio = 3;
	uint32 dkbjhpijcae = 2;
}

message MatchThreeV2LevelEndScRsp {
	uint32 retcode = 12;
	repeated ItemList mnbejdhhojn = 11;
	uint32 ebhajenikaf = 13;
	optional Lnoikgkjhlk aekcppidnmd = 1;
	uint32 cdmpogjjmjm = 9;
	optional Gnebbaeikgj lmgkmaoicgc = 5;
	optional ItemList pecfjcdbcbn = 4;
	uint32 acjcphifmln = 10;
}

message MatchThreeV2SetBirdPosCsReq {
	uint32 pos = 9;
	uint32 bkmpfeocfib = 3;
}

message MatchThreeV2SetBirdPosScRsp {
	uint32 pos = 6;
	uint32 bkmpfeocfib = 3;
	uint32 retcode = 15;
	uint32 jmhpfpmajfg = 5;
}

message MatchThreeV2ScNotify {
	optional Kfnjakgefla eahmjfllggk = 9;
}

message MatchThreeV2PvpFinishScNotify {
	optional Cdimemfjjfp niaeghjlnmb = 1;
	uint32 kojihjihkia = 8;
	Noogdpkefkl beipbpkkdmi = 5;
	uint32 fdgdokafbdh = 14;
	Keekddahfoe reason = 12;
	optional Kfnjakgefla eahmjfllggk = 9;
}

message GetNpcMessageGroupCsReq {
	repeated uint32 beeldjgiomn = 5;
}

message Nnmlcfaibde {
	uint32 item_id = 10;
	uint32 cmmbbhhpmko = 2;
}

message Eiokjolkjpb {
	uint32 dchlcmgkipk = 15;
	repeated Nnmlcfaibde item_list = 2;
	uint32 id = 1;
	repeated uint32 onleimhgfco = 5;
	Liejljnbjnp status = 11;
}

message Ddbljmpngai {
	repeated Eiokjolkjpb gghlafiiama = 13;
	Llhaabppapd status = 3;
	uint32 id = 1;
	int64 hjegilagjoj = 8;
	uint32 dkpnkgnmceh = 6;
}

message GetNpcMessageGroupScRsp {
	uint32 retcode = 6;
	repeated Ddbljmpngai hoblfdjkojo = 9;
}

message GetNpcStatusCsReq {

}

message Dmoiobfajge {
	uint32 npc_id = 10;
	bool hlnfbgacnpo = 5;
}

message Gemjdhnlklc {
	int64 hjegilagjoj = 6;
	Llhaabppapd ebfajeangea = 7;
	uint32 group_id = 3;
}

message Lopcjeojhcb {
	uint32 lbmncagokif = 2;
	Liejljnbjnp oppampfbfjf = 3;
}

message GetNpcStatusScRsp {
	repeated Dmoiobfajge eipninjnkkp = 2;
	uint32 retcode = 8;
}

message FinishItemIdCsReq {
	uint32 cmmbbhhpmko = 4;
	uint32 item_id = 12;
}

message FinishItemIdScRsp {
	uint32 item_id = 3;
	uint32 cmmbbhhpmko = 12;
	uint32 retcode = 6;
}

message FinishSectionIdCsReq {
	uint32 lbmncagokif = 4;
}

message FinishSectionIdScRsp {
	uint32 lbmncagokif = 4;
	optional ItemList reward = 13;
	uint32 retcode = 2;
}

message FinishPerformSectionIdCsReq {
	repeated Nnmlcfaibde item_list = 6;
	uint32 lbmncagokif = 7;
}

message FinishPerformSectionIdScRsp {
	optional ItemList reward = 8;
	uint32 retcode = 10;
	repeated Nnmlcfaibde item_list = 5;
	uint32 lbmncagokif = 15;
}

message GetMissionMessageInfoCsReq {

}

message GetMissionMessageInfoScRsp {
	uint32 retcode = 12;
	map<uint32, uint32> apoldlgpkop = 4;
}

message ShareCsReq {
	uint32 enfkggnomeo = 5;
}

message Adgnkecpoma {
	uint32 enfkggnomeo = 11;
	uint32 cccdkgamdlb = 6;
}

message ShareScRsp {
	optional ItemList reward = 4;
	uint32 retcode = 12;
	optional Adgnkecpoma fgplilebkgl = 9;
}

message GetShareDataCsReq {

}

message GetShareDataScRsp {
	uint32 retcode = 6;
	repeated Adgnkecpoma mfkjjbpndam = 13;
}

message TakePictureCsReq {

}

message TakePictureScRsp {
	uint32 retcode = 7;
}

message Nlbmcgcaeio {
	repeated uint32 pildefkpkle = 3;
	uint32 afleajihneb = 4;
	uint32 type = 6;
}

message TriggerVoiceCsReq {
	repeated Nlbmcgcaeio mnelhnhckpj = 14;
}

message TriggerVoiceScRsp {
	uint32 retcode = 4;
}

message CancelCacheNotifyCsReq {
	Mgaefjjdmom type = 1;
	repeated string kcljmcakojf = 8;
	repeated uint32 colbgejelgi = 4;
}

message CancelCacheNotifyScRsp {
	uint32 retcode = 1;
}

message SecurityReportCsReq {
	string dgdlniefcpf = 5;
}

message SecurityReportScRsp {
	uint32 retcode = 13;
}

message Gmaajhdfacd {
	Dcadlnjbkbk type = 8;
	uint32 ifaikoioidd = 10;
	uint32 pdomacfemgg = 3;
	uint32 level = 15;
}

message GetMovieRacingDataCsReq {

}

message GetMovieRacingDataScRsp {
	uint32 retcode = 15;
	repeated Gmaajhdfacd odjigebehgc = 9;
}

message UpdateMovieRacingDataCsReq {
	optional Gmaajhdfacd kihchdffpol = 6;
}

message UpdateMovieRacingDataScRsp {
	uint32 retcode = 11;
	optional Gmaajhdfacd kihchdffpol = 8;
}

message SubmitOrigamiItemCsReq {
	uint32 lcbofmopgke = 5;
}

message SubmitOrigamiItemScRsp {
	uint32 lcbofmopgke = 10;
	uint32 retcode = 12;
}

message GetOrigamiPropInfoCsReq {
	uint32 content_id = 15;
	uint32 cur_map_entry_id = 6;
	repeated uint32 floor_id_list = 8;
}

message Lammchabagh {
	uint32 config_id = 13;
	uint32 group_id = 12;
	uint32 state = 14;
}

message Fcholndipkc {
	repeated Lammchabagh cljjafgfkel = 5;
	uint32 floor_id = 1;
}

message GetOrigamiPropInfoScRsp {
	uint32 retcode = 15;
	repeated Fcholndipkc lmebhnldkdj = 9;
	uint32 cur_map_entry_id = 3;
	uint32 content_id = 13;
}

message Klbhfhjdbfi {
	uint32 level = 1;
	bool ncnaonifpfm = 11;
	uint32 ifaikoioidd = 15;
	uint32 bmcjhonbhjh = 10;
}

message GetGunPlayDataCsReq {

}

message GetGunPlayDataScRsp {
	uint32 retcode = 10;
	repeated Klbhfhjdbfi lnbfdjmnacn = 7;
}

message UpdateGunPlayDataCsReq {
	optional Klbhfhjdbfi odfhnchiejn = 5;
	uint32 pneifbegmdh = 14;
	uint32 group_id = 1;
	uint64 miilnlhddjm = 15;
}

message UpdateGunPlayDataScRsp {
	optional Klbhfhjdbfi odfhnchiejn = 10;
	uint32 retcode = 2;
}

message Jcdnmbckplf {
	Giilenmkcah hhmabjdimgm = 11;
	Fjhikfikamo kcmjkgadpip = 5;
	uint32 id = 3;
}

message DifficultyAdjustmentGetDataCsReq {

}

message DifficultyAdjustmentGetDataScRsp {
	uint32 retcode = 4;
	repeated Jcdnmbckplf info_list = 5;
}

message DifficultyAdjustmentUpdateDataCsReq {
	optional Jcdnmbckplf data = 5;
}

message DifficultyAdjustmentUpdateDataScRsp {
	uint32 retcode = 4;
	repeated Jcdnmbckplf info_list = 8;
	optional Jcdnmbckplf data = 10;
}

message MazeKillDirectCsReq {
	repeated uint32 entity_list = 5;
	uint32 mmkogoknpkl = 11;
	Mnijhmepgnn hhmabjdimgm = 10;
}

message MazeKillDirectScRsp {
	uint32 retcode = 7;
	repeated uint32 entity_list = 15;
}

message DirectDeliveryScNotify {
	repeated ItemList lblidldbobm = 4;
	uint32 mddjnckmjhg = 7;
}

message CancelDirectDeliveryNoticeCsReq {
	uint32 mddjnckmjhg = 12;
}

message CancelDirectDeliveryNoticeScRsp {
	uint32 retcode = 13;
	uint32 mddjnckmjhg = 14;
}

message GetMissionDataCsReq {

}

message Ikammklboco {
	Iebnpbjdfgp type = 2;
	uint32 id = 10;
	uint32 display_value = 4;
}

message Mission {
	MissionStatus status = 13;
	uint32 id = 6;
	uint32 progress = 1;
}

message Hpniicaaajk {
	uint32 kmhdfladepi = 12;
	uint32 index = 5;
	string dfdekanjblg = 1;
}

message Gniejgnkkgg {
	repeated Hpniicaaajk kfbpcfdhlhl = 2;
}

message MissionData {
	uint32 id = 3;
	MissionStatus status = 10;
	repeated Hpniicaaajk kfbpcfdhlhl = 9;
}

message Fhabeikafbo {
	uint32 id = 15;
	oneof Ijclepcjboa {
		Gniejgnkkgg Kfbpcfdhlhl = 1935;
	}
}

message Feahpjpkgoa {
	uint32 main_mission_id = 6;
	optional Gniejgnkkgg kfbpcfdhlhl = 13;
}

message GetMissionDataScRsp {
	repeated Mission mission_list = 2;
	uint32 lflbiopjfge = 12;
	uint32 retcode = 9;
	repeated MissionData mission_data_list = 11;
	repeated uint32 ojomocgiaic = 3;
}

message AcceptMainMissionCsReq {
	uint32 main_mission_id = 8;
}

message AcceptMainMissionScRsp {
	uint32 retcode = 10;
	uint32 main_mission_id = 1;
}

message FinishTalkMissionCsReq {
	string hnfbhiolpja = 3;
	repeated Hpniicaaajk kfbpcfdhlhl = 2;
	uint32 lplhiabdbbg = 10;
}

message FinishTalkMissionScRsp {
	uint32 lplhiabdbbg = 1;
	uint32 retcode = 13;
	string hnfbhiolpja = 5;
	repeated Hpniicaaajk kfbpcfdhlhl = 14;
}

message MissionRewardScNotify {
	uint32 main_mission_id = 2;
	optional ItemList reward = 6;
	uint32 lplhiabdbbg = 10;
}

message SubMissionRewardScNotify {
	uint32 lplhiabdbbg = 5;
	optional ItemList reward = 12;
}

message SyncTaskCsReq {
	string key = 10;
}

message SyncTaskScRsp {
	uint32 retcode = 2;
	string key = 14;
}

message MissionGroupWarnScNotify {
	repeated uint32 njocoopicln = 11;
}

message FinishCosumeItemMissionCsReq {
	uint32 lplhiabdbbg = 3;
	optional ItemList item_list = 14;
}

message FinishCosumeItemMissionScRsp {
	uint32 lplhiabdbbg = 8;
	uint32 retcode = 3;
}

message GetMissionStatusCsReq {
	repeated uint32 sub_mission_id_list = 2;
	repeated uint32 main_mission_id_list = 13;
}

message GetMissionStatusScRsp {
	repeated uint32 unfinished_main_mission_id_list = 8;
	repeated Mission sub_mission_status_list = 6;
	repeated uint32 finished_main_mission_id_list = 4;
	repeated Feahpjpkgoa main_mission_mcv_list = 2;
	uint32 retcode = 12;
	repeated uint32 disabled_main_mission_id_list = 15;
	repeated uint32 curversion_finished_main_mission_id_list = 13;
}

message TeleportToMissionResetPointCsReq {

}

message TeleportToMissionResetPointScRsp {
	uint32 client_pos_version = 13;
	optional MotionInfo motion = 3;
	uint32 retcode = 6;
}

message StartFinishSubMissionScNotify {
	uint32 lplhiabdbbg = 1;
}

message StartFinishMainMissionScNotify {
	uint32 main_mission_id = 6;
}

message GetMainMissionCustomValueCsReq {
	repeated uint32 main_mission_id_list = 6;
}

message GetMainMissionCustomValueScRsp {
	repeated MissionData mission_data_list = 3;
	uint32 retcode = 8;
}

message MissionAcceptScNotify {
	repeated uint32 sub_mission_id_list = 2;
}

message UpdateTrackMainMissionIdCsReq {
	Nnfdmniijgo ijdjmnjbobi = 9;
	uint32 lmbceopcigc = 5;
	uint32 lflbiopjfge = 14;
}

message UpdateTrackMainMissionIdScRsp {
	uint32 lflbiopjfge = 8;
	uint32 dkmbbnlmnne = 7;
	uint32 retcode = 12;
}

message FinishedMissionScNotify {
	repeated uint32 finished_mission_id_list = 9;
}

message UpdateMainMissionCustomValueCsReq {
	uint32 main_mission_id = 4;
	string dfdekanjblg = 9;
	uint32 value = 15;
}

message UpdateMainMissionCustomValueScRsp {
	optional MissionData lpjfbmjbepp = 2;
	uint32 retcode = 9;
}

message GetMonopolyInfoCsReq {

}

message Odaijigeajl {
	bool hgmmchhbkpb = 5;
	bool ljfgifbdanc = 15;
	uint32 engjfichdml = 9;
	uint32 ejhdcneegmi = 8;
	uint32 fljbjpahjif = 2;
	uint32 item_value = 3;
}

message Llgniknmcke {
	repeated uint32 ofiodjnlbea = 1;
	Gojoindbkik nmamonllall = 14;
}

message Ooemibfnlld {
	uint32 progress = 2;
	uint32 ekpnclpoenk = 7;
}

message Lailnigfpoo {
	uint64 khgpfhboele = 9;
	bool is_taken_reward = 1;
	bool aelpfebgnok = 5;
}

message Bcmokfhjmpm {
	repeated Lailnigfpoo ebabbejipjn = 6;
	uint32 ljjmleioife = 12;
	uint32 dgalcmfidfp = 10;
	uint32 jgnihljfjpp = 4;
	uint64 jojndgbejek = 9;
	uint64 omgkjljihlh = 11;
	string ddibefmilmp = 1098;
	repeated Ooemibfnlld cjfmaiakenl = 2;
	repeated Ooemibfnlld ifkfepkhlgn = 5;
	string jlegpnihmjd = 1265;
	bool fholfdonoii = 13;
	repeated Ooemibfnlld kgbejknclfk = 7;
	repeated Ooemibfnlld jckngfjeegi = 3;
	uint32 hhjpblekapn = 1;
	uint32 bnoldnbmjhf = 14;
	uint64 eboolgnacjj = 8;
	uint32 dgepmkffoab = 15;
	string pjdfbpbmbba = 2018;
}

message Edkgomnehoh {
	repeated Bcmokfhjmpm fjoafflleok = 13;
}

message GetMonopolyInfoScRsp {
	optional Nfdgijlolgd hehjkfilinn = 4;
	optional Cannibgclcl oelhkeipidj = 3;
	optional Jajgkkdpalc map_info = 11;
	optional Llgniknmcke jnhjeeljfhf = 5;
	optional Icihabolhpn gpfgdokngel = 6;
	repeated uint32 cokcgfmeiba = 7;
	optional Kjbmlbgibjf stt = 9;
	optional Edkgomnehoh iedgkhdjjdc = 13;
	optional Aedkpbfckgo ljaogapdfha = 15;
	optional Afdalbganpc lgopnbhhhbg = 1;
	optional Odaijigeajl hljmhnabfmc = 2;
	optional Hfdgmjjfohm fghciadcmnj = 12;
	uint32 retcode = 8;
}

message Nfdgijlolgd {
	repeated uint32 hfmdlhifmpi = 5;
}

message MonopolyConditionUpdateScNotify {
	optional Nfdgijlolgd hehjkfilinn = 6;
}

message Kjbmlbgibjf {
	repeated uint32 occmnidebbj = 7;
	repeated uint32 jihchilfjpi = 9;
}

message MonopolySttUpdateScNotify {
	optional Kjbmlbgibjf stt = 4;
}

message Iaaccafgepi {
	bool jmdeflafice = 3;
	uint32 map_id = 6;
	uint32 hhcbjghkcpc = 13;
	Ihgjllngdkl mafkcbodmmc = 2;
}

message Jajgkkdpalc {
	uint32 pgalbdiiefg = 12;
	uint32 lbbonkacgej = 8;
	repeated Iaaccafgepi nbmpbgpjonh = 6;
	optional Iaaccafgepi hgbigbfgbom = 9;
	repeated Iaaccafgepi imopiejbhod = 2;
}

message MonopolyEventLoadUpdateScNotify {
	repeated Iaaccafgepi nbmpbgpjonh = 7;
	repeated Iaaccafgepi imopiejbhod = 1;
}

message Comeolglnko {
	uint32 event_id = 6;
}

message Pblcejhpopo {
	uint32 event_id = 10;
}

message Lihocehepdb {
	uint32 event_id = 4;
	uint32 lfcmbgoaibb = 11;
	repeated uint32 hfejhlniggh = 2;
	uint32 kdmlllghjon = 7;
}

message Ohnbchloebl {
	uint32 lfcmbgoaibb = 15;
	uint32 olfnjjklgmk = 8;
	repeated uint32 hfejhlniggh = 5;
	uint32 event_id = 9;
	uint32 eccjbglbigm = 2;
}

message Blmjnffpmcn {
	repeated Lbenaahcpeo kmkfojahelj = 2;
	uint32 pifpgkffbpn = 8;
}

message Aaibakechce {
	uint32 pagcamagflb = 3;
}

message Fgonfnidohj {
	uint32 shop_id = 14;
}

message Iponfkajenj {
	uint32 apaobdgjmeg = 5;
}

message Nalpjmljpnp {
	uint32 ieejchfepha = 5;
	uint32 oefhmbjblgc = 4;
}

message Lbenaahcpeo {
	uint32 okdlmejpche = 8;
	oneof Bmpfoikmgbk {
		Comeolglnko Pecbimkooah = 3;
		Pblcejhpopo Emlnnmlgnkh = 15;
		Lihocehepdb Jbjldppdbbc = 13;
		Aaibakechce Ecoifnnjdap = 14;
		Fgonfnidohj Nbjicdajdgf = 11;
		Iponfkajenj Gajbfpcpigm = 6;
		Nalpjmljpnp Joppaemppfh = 12;
		Ohnbchloebl Joadhbldimf = 7;
		Blmjnffpmcn Iefoghngcmc = 9;
	}
}

message Icihabolhpn {
	optional Lbenaahcpeo fhnpagihinf = 7;
}

message MonopolyContentUpdateScNotify {
	optional Lbenaahcpeo fhnpagihinf = 9;
}

message MonopolyCellUpdateNotify {
	optional Iaaccafgepi hgbigbfgbom = 10;
}

message MonopolyRollDiceCsReq {

}

message MonopolyRollDiceScRsp {
	uint32 blhiabbkgpb = 6;
	uint32 retcode = 14;
}

message MonopolyCheatDiceCsReq {
	uint32 ocfhhdcbfbh = 3;
}

message MonopolyCheatDiceScRsp {
	uint32 ocfhhdcbfbh = 5;
	uint32 retcode = 4;
}

message MonopolyMoveCsReq {
	uint32 cnifhnbiofj = 7;
	uint32 dgbmdpbialg = 1;
}

message MonopolyMoveScRsp {
	uint32 retcode = 6;
	optional Jajgkkdpalc map_info = 9;
	repeated Iaaccafgepi hecjnjniakk = 11;
}

message MonopolySelectOptionCsReq {
	uint32 kdmlllghjon = 15;
	uint32 event_id = 13;
}

message Ddcelcojgnp {
	uint32 kdmlllghjon = 11;
	uint32 lgiiahidlmg = 1;
	uint32 event_id = 5;
}

message MonopolySelectOptionScRsp {
	uint32 event_id = 1;
	uint32 kdmlllghjon = 15;
	repeated Ddcelcojgnp abnoinlokln = 5;
	optional Lbenaahcpeo gpfgdokngel = 2;
	uint32 retcode = 13;
}

message MonopolyRollRandomCsReq {
	uint32 event_id = 7;
}

message MonopolyRollRandomScRsp {
	uint32 event_id = 8;
	optional Lbenaahcpeo gpfgdokngel = 3;
	uint32 retcode = 12;
}

message MonopolyReRollRandomCsReq {
	uint32 event_id = 11;
}

message MonopolyReRollRandomScRsp {
	optional Lbenaahcpeo gpfgdokngel = 4;
	uint32 retcode = 3;
	uint32 event_id = 5;
}

message MonopolyConfirmRandomCsReq {
	uint32 event_id = 2;
}

message MonopolyConfirmRandomScRsp {
	uint32 retcode = 8;
	uint32 event_id = 7;
	optional Lbenaahcpeo gpfgdokngel = 1;
}

message MonopolyBuyGoodsCsReq {
	uint32 shop_id = 15;
	uint32 goods_id = 14;
}

message MonopolyBuyGoodsScRsp {
	uint32 goods_id = 11;
	uint32 retcode = 15;
	uint32 shop_id = 8;
}

message MonopolyUpgradeAssetCsReq {
	uint32 pagcamagflb = 6;
}

message MonopolyUpgradeAssetScRsp {
	uint32 pagcamagflb = 11;
	uint32 retcode = 12;
}

message MonopolyGiveUpCurContentCsReq {
	uint32 content_id = 7;
}

message MonopolyGiveUpCurContentScRsp {
	uint32 content_id = 1;
	uint32 retcode = 10;
}

message MonopolyActionResult {
	uint32 effect_type = 1;
	Gkejfkakenm source_type = 9;
	uint32 click_cell_id = 14;
	optional Nibjamfmefd detail = 4;
	uint32 trigger_map_id = 11;
	uint32 trigger_cell_id = 8;
	uint32 click_map_id = 10;
}

message MonopolyActionResultScNotify {
	repeated MonopolyActionResult pfnokncdpge = 1;
}

message Lmmebmbgldn {
	uint32 hkmihejcaem = 9;
	bool blhdohmacbm = 13;
}

message Nibjamfmefd {

}

message Nmghfolkfaj {
	uint32 gjlkoggiifo = 2;
}

message Lmkaaefpffo {
	uint32 item_id = 9;
	uint32 bmalpkekbel = 11;
	uint32 ogjofmcmfpg = 1;
}

message Lnkmknbpijh {
	uint32 igdbofcdjol = 9;
	uint32 ognkmdnjgog = 8;
}

message Lpbamokkjcm {
	uint32 njdggjbefcn = 14;
	uint32 mdflfllmgna = 7;
	uint32 hnlfmjoknbn = 2;
	uint32 knggppiogae = 12;
}

message Haknofdpbod {
	uint32 fpogialmcip = 4;
	uint32 acdopcbmpnl = 13;
	uint32 config_id = 14;
	oneof Ngikdjmngbg {
		Gjkiapipgan Ejcolgnjgdc = 1;
		Eimobgllefo Lkaniplnkgc = 10;
		Eopfmpaooje Bdempakhgmj = 8;
	}
}

message Hfdgmjjfohm {
	optional Lmmebmbgldn npoigjpcgfb = 1;
	optional Haknofdpbod ajcinkhbdjb = 2;
	repeated Haknofdpbod pefmdfkecod = 12;
}

message MonopolyGameSettleScNotify {
	optional ItemList pemijimjmio = 14;
	optional Haknofdpbod gajbfpcpigm = 11;
	optional ItemList item_list = 15;
}

message MonopolyGameCreateScNotify {
	optional Lmmebmbgldn npoigjpcgfb = 2;
	optional Haknofdpbod gajbfpcpigm = 8;
}

message MonopolyGameRaiseRatioCsReq {
	uint32 acdopcbmpnl = 6;
}

message MonopolyGameRaiseRatioScRsp {
	uint32 retcode = 8;
	uint32 ratio = 6;
}

message DailyFirstEnterMonopolyActivityCsReq {

}

message DailyFirstEnterMonopolyActivityScRsp {
	bool oicaghgmmfp = 2;
	uint32 kekjcdmiddl = 14;
	uint32 retcode = 15;
	optional Aedkpbfckgo ljaogapdfha = 7;
	int64 iihkiklioji = 10;
}

message MonopolyGetDailyInitItemCsReq {
	bool ifhpjjblndl = 3;
}

message MonopolyGetDailyInitItemScRsp {
	int64 iihkiklioji = 13;
	uint32 ioabhfpabbe = 8;
	uint32 ofgnignohaf = 7;
	uint32 heoofpgkdcd = 11;
	uint32 retcode = 4;
	uint32 hbfffgpjkic = 10;
	uint32 hcdbbflpcfl = 6;
}

message Gjkiapipgan {
	uint32 oefjmefpipl = 1;
	repeated uint32 pogemmicila = 4;
	repeated uint32 fhbopepjaen = 2;
	bool nfeadmfnflk = 12;
	repeated uint32 leghknnkomg = 15;
}

message MonopolyGameBingoFlipCardCsReq {
	uint32 hcfpofmdgkn = 10;
}

message MonopolyGameBingoFlipCardScRsp {
	bool nfeadmfnflk = 15;
	uint32 retcode = 10;
	repeated uint32 leghknnkomg = 5;
	uint32 npjeecedpok = 14;
}

message MonopolyGameGachaCsReq {

}

message MonopolyGameGachaScRsp {
	uint32 retcode = 1;
	repeated uint32 result_list = 15;
}

message Nkacimeoapd {
	uint32 ibadobadhjh = 3;
	uint32 pogjhkfbmch = 9;
}

message Eimobgllefo {
	repeated Nkacimeoapd ndggacpicbf = 15;
	repeated uint32 hpnhhcmkjcb = 13;
	uint32 ohlepkekmnh = 4;
	uint32 eaejlofgafo = 10;
	uint32 chjngdioome = 11;
	uint32 bhpfpejbkec = 3;
}

message MonopolyAcceptQuizCsReq {
	repeated Nkacimeoapd ndggacpicbf = 12;
}

message MonopolyAcceptQuizScRsp {
	optional Eimobgllefo lkaniplnkgc = 5;
	uint32 retcode = 3;
}

message Oockalnfhnp {
	uint32 chjngdioome = 11;
	uint32 bgbihidhcon = 13;
	uint32 hmcjobjbpkj = 4;
}

message MonopolyQuizDurationChangeScNotify {
	repeated Oockalnfhnp leadmneimdp = 6;
}

message Eopfmpaooje {
	bool lopdbaegfkp = 6;
	uint32 ppclbdbjlmo = 8;
	uint32 hmhjdbifgdi = 2;
}

message MonopolyGuessChooseCsReq {
	uint32 hmhjdbifgdi = 11;
}

message MonopolyGuessChooseScRsp {
	uint32 hmhjdbifgdi = 5;
	uint32 retcode = 13;
}

message Ackncaaamjm {
	uint32 ppclbdbjlmo = 15;
	optional ItemList item_list = 14;
	uint32 giacfcddjnm = 11;
}

message MonopolyGuessDrawScNotify {
	repeated Ackncaaamjm jhiikpejeie = 6;
}

message MonopolyGuessBuyInformationCsReq {

}

message MonopolyGuessBuyInformationScRsp {
	uint32 retcode = 12;
}

message Aidfbbiapep {
	uint32 level = 13;
	uint32 milkeacflpo = 6;
	uint32 pagcamagflb = 5;
}

message Cannibgclcl {
	repeated Aidfbbiapep magefljgjnd = 11;
}

message Aedkpbfckgo {
	uint32 fnigpgbgehn = 13;
	uint32 ifkdgebcdeg = 2;
	uint32 gimdhbnjooo = 3;
	uint32 efinfpkkjle = 8;
	uint32 pilaagokaof = 6;
	bool imoblgoajcb = 10;
	uint32 pkdlkcbkkpf = 5;
	uint32 pddngkncpeb = 11;
	uint32 kmgiemofogb = 7;
}

message MonopolyDailySettleScNotify {
	optional Aedkpbfckgo ljaogapdfha = 1;
	uint32 kekjcdmiddl = 11;
}

message Bmplfjkeolf {
	uint32 buff_id = 11;
	uint32 okdlmejpche = 8;
	uint32 coffebnibhk = 6;
}

message Afdalbganpc {
	repeated Bmplfjkeolf buff_list = 1;
}

message Indglkcecdc {
	uint32 fnigpgbgehn = 4;
	uint32 hdilbdipgho = 12;
	uint32 dpjkojgcjlp = 6;
	uint32 uid = 7;
	uint32 pilaagokaof = 13;
}

message GetMonopolyFriendRankingListCsReq {

}

message GetMonopolyFriendRankingListScRsp {
	uint32 retcode = 4;
	repeated Indglkcecdc dcfhgaajlnn = 2;
	optional Indglkcecdc icmgegefdle = 8;
}

message MonopolyLikeCsReq {
	uint32 cbegnbkmhcd = 14;
}

message MonopolyLikeScRsp {
	optional ItemList reward_list = 4;
	uint32 cbegnbkmhcd = 12;
	uint32 retcode = 1;
}

message MonopolyLikeScNotify {
	repeated uint32 ofiodjnlbea = 1;
	uint32 hdilbdipgho = 11;
}

message GetMbtiReportCsReq {

}

message Mfdkinpdmke {
	uint32 cnt = 6;
	uint32 fioepgpebfd = 5;
}

message GetMbtiReportScRsp {
	repeated Ddcelcojgnp abnoinlokln = 15;
	int32 phnkkellanm = 3;
	bool pcadcgcelin = 11;
	uint32 retcode = 14;
	uint32 progress = 12;
	bool is_taken_reward = 2;
	repeated Mfdkinpdmke gmdhhogbacn = 5;
	int32 ljhaifciabh = 1;
}

message MonopolyEventSelectFriendCsReq {
	bool bagmaoipmje = 2;
	uint32 ipgeclelhgj = 12;
}

message MonopolyEventSelectFriendScRsp {
	optional Iaaccafgepi hgbigbfgbom = 14;
	uint32 ieejchfepha = 6;
	uint32 retcode = 8;
	uint32 oefhmbjblgc = 10;
}

message SocialEventServerCache {
	uint32 sub_coin = 9;
	uint32 add_coin = 2;
	uint32 src_uid = 3;
	uint32 id = 8;
}

message MonopolySocialEventEffectScNotify {
	repeated SocialEventServerCache miaeaffdgmh = 14;
}

message GetSocialEventServerCacheCsReq {

}

message GetSocialEventServerCacheScRsp {
	uint32 retcode = 12;
	repeated SocialEventServerCache miaeaffdgmh = 13;
}

message DeleteSocialEventServerCacheCsReq {
	repeated uint32 jiddlnhjnpb = 9;
}

message DeleteSocialEventServerCacheScRsp {
	repeated uint32 bfgjmmpcpnj = 12;
	uint32 retcode = 13;
}

message MonopolyGetRaffleTicketCsReq {
	uint32 hhjpblekapn = 7;
}

message MonopolyGetRaffleTicketScRsp {
	uint32 retcode = 12;
	repeated Lailnigfpoo blmedlnokei = 15;
	uint32 hhjpblekapn = 6;
}

message MonopolyTakeRaffleTicketRewardCsReq {
	uint32 hhjpblekapn = 6;
	uint64 pmelcdfhgkc = 11;
}

message MonopolyTakeRaffleTicketRewardScRsp {
	uint32 pmelcdfhgkc = 8;
	uint32 hhjpblekapn = 2;
	optional ItemList reward_list = 5;
	uint32 retcode = 15;
}

message MonopolyScrachRaffleTicketCsReq {
	uint32 hhjpblekapn = 4;
	uint64 pmelcdfhgkc = 13;
}

message MonopolyScrachRaffleTicketScRsp {
	uint32 hhjpblekapn = 5;
	uint64 pmelcdfhgkc = 11;
	uint32 retcode = 14;
}

message MonopolyGetRegionProgressCsReq {

}

message MonopolyGetRegionProgressScRsp {
	uint32 retcode = 13;
	uint32 dpjkojgcjlp = 7;
	uint32 eimgbknlgnf = 2;
}

message MonopolyGetRafflePoolInfoCsReq {

}

message MonopolyGetRafflePoolInfoScRsp {
	optional Edkgomnehoh iedgkhdjjdc = 8;
	uint32 retcode = 4;
}

message MonopolyTakePhaseRewardCsReq {
	repeated uint32 ljbgjhpkkjj = 10;
}

message MonopolyTakePhaseRewardScRsp {
	repeated uint32 ljbgjhpkkjj = 7;
	optional ItemList reward_list = 9;
	uint32 retcode = 5;
}

message GetMonopolyMbtiReportRewardCsReq {

}

message GetMonopolyMbtiReportRewardScRsp {
	uint32 retcode = 6;
	optional ItemList reward_list = 11;
}

message GetMonopolyDailyReportCsReq {

}

message GetMonopolyDailyReportScRsp {
	uint32 retcode = 8;
	optional Aedkpbfckgo ljaogapdfha = 1;
}

message MonopolyClickCellCsReq {
	uint32 hhcbjghkcpc = 10;
	uint32 map_id = 6;
}

message MonopolyClickCellScRsp {
	uint32 hhcbjghkcpc = 10;
	uint32 retcode = 1;
	uint32 map_id = 15;
}

message MonopolyClickMbtiReportCsReq {

}

message MonopolyClickMbtiReportScRsp {
	uint32 retcode = 8;
}

message MultiplayerFightGameStateCsReq {

}

message MultiplayerFightGameStateScRsp {
	repeated Cbbdiomifhd lipjdjpmokb = 9;
	optional Ppggkmdaoea pfffjngnpom = 1;
	uint32 retcode = 12;
}

message MultiplayerGetFightGateCsReq {
	uint32 player_data = 7;
}

message MultiplayerGetFightGateScRsp {
	string ip = 6;
	uint64 nogfeemnhpc = 3;
	uint32 retcode = 1;
	uint32 port = 10;
	string aokcmmpfgbc = 9;
}

message MultiplayerFightGiveUpCsReq {
	uint64 nogfeemnhpc = 6;
}

message MultiplayerFightGiveUpScRsp {
	uint32 retcode = 4;
}

message MultiplayerFightGameStartScNotify {
	repeated Cbbdiomifhd lipjdjpmokb = 2;
	optional Ppggkmdaoea pfffjngnpom = 9;
}

message MultiplayerFightGameFinishScNotify {
	optional Ppggkmdaoea pfffjngnpom = 4;
}

message MultiplayerMatch3FinishScNotify {
	Keekddahfoe reason = 14;
	optional Cdimemfjjfp niaeghjlnmb = 13;
	uint32 kojihjihkia = 15;
	uint32 fdgdokafbdh = 1;
}

message GetMultipleDropInfoCsReq {

}

message Eccnnonkfca {
	uint32 id = 8;
	uint32 olalhikmjop = 3;
}

message GetMultipleDropInfoScRsp {
	uint32 retcode = 7;
	repeated Ohdnchfgfma fchnnkekfcl = 5;
	repeated Eccnnonkfca ljcpdmnkjif = 14;
}

message MultipleDropInfoScNotify {
	repeated Eccnnonkfca ljcpdmnkjif = 13;
}

message GetPlayerReturnMultiDropInfoCsReq {

}

message Jbfipijjidl {
	uint32 dkjgcbjkeen = 6;
	uint32 module_id = 4;
	uint32 pjhdjkmjpkh = 11;
	uint32 ljkffdmhojh = 13;
}

message Ohdnchfgfma {
	uint32 module_id = 9;
	uint32 bjfbglbjbnn = 11;
	uint32 lclmhegdggb = 13;
	uint32 blfaanhjpad = 1;
}

message GetPlayerReturnMultiDropInfoScRsp {
	optional Jbfipijjidl ikgfoejpjcf = 12;
	uint32 retcode = 9;
	repeated Ohdnchfgfma fchnnkekfcl = 8;
}

message MultipleDropInfoNotify {
	repeated Ohdnchfgfma fchnnkekfcl = 3;
	repeated Jbfipijjidl ponjjnddkbh = 5;
	repeated Eccnnonkfca ljcpdmnkjif = 4;
}

message Opgjgdoggnj {
	Kamlglmnjgj pos = 10;
	uint32 bdjcgcdjoeo = 1;
}

message Jmeaocpfeol {
	uint32 hjjfmdheapb = 14;
	repeated Opgjgdoggnj bojmnafdjkh = 15;
	uint32 level = 12;
	uint32 cdnngagbaak = 6;
	uint32 hihlgaghlni = 2;
	uint32 area_id = 3;
}

message Panaijbjmen {
	uint32 beleodaiinb = 13;
	bool hlnfbgacnpo = 6;
}

message Dolgfnlheae {
	uint32 ggfddejhlif = 13;
	uint32 fnpphmblkoa = 6;
	uint32 fileddcmdoc = 2;
	repeated Panaijbjmen fmbfbgnaboc = 9;
	uint32 pngddnajcgg = 15;
	uint32 dcehogagkom = 12;
}

message Olkmlfeefcj {
	uint32 lgkiielghdj = 2;
	uint32 bdjcgcdjoeo = 6;
}

message Blnehdifmoo {
	repeated uint32 haabefkhami = 10;
	uint32 dgjbacbiico = 6;
	uint32 event_id = 11;
	uint32 bmbgklkecaj = 4;
	uint32 hcaglclejnd = 14;
	Aihadkbhpbm state = 8;
	uint32 cogbcplmnfd = 12;
}

message Jnbcpncnoho {
	repeated Blnehdifmoo bjcmphlpknf = 3;
	uint32 lhnjmbgndkc = 1;
	repeated uint32 pnjeepoemca = 5;
}

message GetMuseumInfoCsReq {

}

message GetMuseumInfoScRsp {
	repeated uint32 kndjapnpapk = 9;
	repeated Olkmlfeefcj bojmnafdjkh = 12;
	uint32 jbjldppdbbc = 4;
	uint32 level = 5;
	uint32 hpnmpdocjma = 15;
	optional Jnbcpncnoho ekkolcccnnk = 2;
	uint32 ejnkmkffccl = 8;
	repeated Jmeaocpfeol llephoelgda = 6;
	uint32 dbjhemippim = 11;
	uint32 exp = 10;
	optional Dolgfnlheae jpibmbbkgnd = 7;
	uint32 ejkghbemoob = 3;
	uint32 retcode = 14;
	repeated uint32 kndmdpefadc = 13;
}

message BuyNpcStuffCsReq {
	uint32 bdjcgcdjoeo = 3;
}

message BuyNpcStuffScRsp {
	uint32 retcode = 4;
	uint32 bdjcgcdjoeo = 12;
}

message SetStuffToAreaCsReq {
	uint32 lgkiielghdj = 10;
	uint32 bdjcgcdjoeo = 15;
	Kamlglmnjgj pos = 5;
}

message SetStuffToAreaScRsp {
	uint32 lgkiielghdj = 10;
	Kamlglmnjgj pos = 8;
	uint32 bdjcgcdjoeo = 7;
	uint32 retcode = 6;
}

message RemoveStuffFromAreaCsReq {
	uint32 bdjcgcdjoeo = 10;
}

message RemoveStuffFromAreaScRsp {
	uint32 retcode = 12;
	uint32 bdjcgcdjoeo = 3;
}

message GetStuffScNotify {
	uint32 bdjcgcdjoeo = 1;
	Kgjjjkpdcfg aocelkonhob = 6;
}

message GetExhibitScNotify {
	uint32 bccgcfmabgm = 15;
}

message FinishCurTurnCsReq {
	uint32 cciecpfpfjg = 9;
}

message FinishCurTurnScRsp {
	uint32 retcode = 4;
	uint32 gpoieccpamn = 8;
}

message UpgradeAreaCsReq {
	uint32 area_id = 11;
	uint32 level = 3;
}

message UpgradeAreaScRsp {
	uint32 level = 8;
	uint32 retcode = 7;
	uint32 area_id = 10;
}

message UpgradeAreaStatCsReq {
	uint32 area_id = 12;
	uint32 level = 8;
	Ibbgdgghejl status_info = 1;
}

message UpgradeAreaStatScRsp {
	Ibbgdgghejl status_info = 12;
	uint32 level = 4;
	uint32 retcode = 15;
	uint32 area_id = 10;
}

message MuseumInfoChangedScNotify {
	uint32 exp = 12;
	uint32 dbjhemippim = 7;
	optional Jnbcpncnoho ekkolcccnnk = 2;
	uint32 ejnkmkffccl = 4;
	optional Dolgfnlheae jpibmbbkgnd = 3;
	repeated uint32 kndjapnpapk = 14;
	repeated uint32 kndmdpefadc = 8;
	uint32 hpnmpdocjma = 5;
	repeated Jmeaocpfeol llephoelgda = 15;
	uint32 ejkghbemoob = 10;
	repeated Olkmlfeefcj bojmnafdjkh = 11;
	uint32 level = 1;
	uint32 jbjldppdbbc = 6;
}

message MuseumRandomEventStartScNotify {
	optional Blnehdifmoo hndlhicdnpc = 13;
}

message MuseumRandomEventQueryCsReq {
	int32 cehfiilmjkm = 15;
}

message MuseumRandomEventQueryScRsp {
	uint32 retcode = 7;
	optional Jnbcpncnoho hndlhicdnpc = 10;
}

message MuseumRandomEventSelectCsReq {
	uint32 event_id = 15;
	uint32 dgjbacbiico = 10;
}

message MuseumRandomEventSelectScRsp {
	uint32 dgjbacbiico = 7;
	uint32 retcode = 3;
	uint32 event_id = 2;
}

message MuseumFundsChangedScNotify {
	uint32 dbjhemippim = 7;
}

message MuseumDispatchFinishedScNotify {
	uint32 imblgcaadfl = 6;
	uint32 bdjcgcdjoeo = 4;
	uint32 dbjhemippim = 14;
	uint32 modfabddnkl = 2;
}

message MuseumTargetStartNotify {
	uint32 pngddnajcgg = 2;
}

message MuseumTargetMissionFinishNotify {
	repeated uint32 beleodaiinb = 14;
	uint32 pngddnajcgg = 2;
	bool fpbgadbmead = 6;
}

message MuseumTargetRewardNotify {
	uint32 mbejblfhcbh = 12;
	uint32 pngddnajcgg = 6;
	uint32 item_id = 1;
}

message MuseumTakeCollectRewardCsReq {
	uint32 item_id = 5;
}

message MuseumTakeCollectRewardScRsp {
	optional ItemList reward = 3;
	uint32 item_id = 11;
	uint32 retcode = 8;
}

message Lleogoohjim {
	uint32 immaphmhijk = 2;
	uint32 acjcphifmln = 15;
	bool gkjgcbpojcm = 9;
}

message Pakpcciloln {
	uint32 ojamobmgfbd = 10;
	uint32 blpbigkjpch = 1;
	repeated uint32 nbboabglcjc = 7;
	repeated uint32 dnkjdjjbcdk = 12;
}

message MusicRhythmDataCsReq {
	uint32 player_data = 11;
}

message MusicRhythmDataScRsp {
	repeated Lleogoohjim lkmjinniadi = 14;
	uint32 retcode = 7;
	repeated uint32 fkliofdpjbe = 6;
	repeated Pakpcciloln amdcjjjabcc = 8;
	repeated uint32 bmkmenhffok = 15;
	bool ocephgbcmib = 13;
	repeated uint32 bnanpjbdghb = 9;
	uint32 ljekppnpbpp = 10;
	uint32 cdigalbeima = 1;
}

message MusicRhythmStartLevelCsReq {
	uint32 acjcphifmln = 13;
}

message MusicRhythmStartLevelScRsp {
	string mdlndgijnml = 9;
	uint32 acjcphifmln = 11;
	uint32 retcode = 3;
}

message MusicRhythmFinishLevelCsReq {
	uint32 mhkhaclnbpm = 14;
	bool gkjgcbpojcm = 8;
	uint32 score = 2;
}

message MusicRhythmFinishLevelScRsp {
	uint32 acjcphifmln = 15;
	uint32 retcode = 3;
}

message MusicRhythmUnlockTrackScNotify {
	repeated uint32 jikjhneacjb = 8;
}

message MusicRhythmSaveSongConfigDataCsReq {
	optional Pakpcciloln cgedaboaboh = 12;
}

message MusicRhythmSaveSongConfigDataScRsp {
	uint32 retcode = 15;
	uint32 cdigalbeima = 8;
	uint32 mbldfhldcpi = 14;
}

message MusicRhythmUnlockSongNotify {
	repeated uint32 oafhaopejpo = 6;
}

message MusicRhythmMaxDifficultyLevelsUnlockNotify {

}

message MusicRhythmUnlockSongSfxScNotify {
	repeated uint32 oafhaopejpo = 14;
}

message Hkmkchnpkdc {
	Fbomlibegoc mjgdopckeif = 15;
	repeated uint32 fcfdbnjenjf = 12;
	uint32 njhlopcjjda = 3;
	uint32 kmnlbgoeehg = 14;
	uint32 hidbcpinlmh = 5;
	uint32 mkkfmndmhje = 9;
}

message GetOfferingInfoCsReq {
	repeated uint32 gpjcdjglgof = 4;
}

message GetOfferingInfoScRsp {
	uint32 retcode = 15;
	repeated Hkmkchnpkdc gdamadmhhgf = 4;
}

message SubmitOfferingItemCsReq {
	uint32 interacted_prop_entity_id = 12;
	uint32 kmnlbgoeehg = 4;
}

message SubmitOfferingItemScRsp {
	optional Hkmkchnpkdc ppjdapbpoap = 10;
	uint32 retcode = 1;
}

message TakeOfferingRewardCsReq {
	repeated uint32 fbkccpkieia = 1;
	uint32 kmnlbgoeehg = 15;
	uint32 interacted_prop_entity_id = 6;
}

message TakeOfferingRewardScRsp {
	optional ItemList reward = 10;
	optional Hkmkchnpkdc ppjdapbpoap = 14;
	uint32 retcode = 8;
}

message OfferingInfoScNotify {
	optional Hkmkchnpkdc ppjdapbpoap = 8;
}

message AcceptedPamMissionExpireCsReq {
	uint32 main_mission_id = 5;
}

message AcceptedPamMissionExpireScRsp {
	uint32 retcode = 13;
	uint32 main_mission_id = 10;
}

message SyncAcceptedPamMissionNotify {
	uint64 pambjbfngpo = 15;
	uint32 main_mission_id = 10;
}

message GetPamSkinDataCsReq {

}

message GetPamSkinDataScRsp {
	uint32 retcode = 5;
	repeated uint32 unlocked_pam_skins = 9;
	uint32 current_pam_skin_id = 6;
}

message SelectPamSkinCsReq {
	uint32 pam_skin_id = 5;
}

message SelectPamSkinScRsp {
	uint32 current_pam_skin_id = 1;
	uint32 select_pam_skin_id = 13;
	uint32 retcode = 6;
}

message UnlockPamSkinScNotify {
	uint32 pam_skin_id = 14;
}

message Ggdemgbofgo {
	bool kkehmbpjooc = 14;
	uint32 time = 6;
	uint32 acjcphifmln = 5;
}

message ParkourGetDataCsReq {

}

message ParkourGetDataScRsp {
	repeated Ggdemgbofgo kcmcmpfonko = 6;
	uint32 retcode = 15;
}

message Dgefmlbpfmm {
	uint32 lpbhomfclon = 11;
	uint32 time = 3;
	uint32 id = 5;
}

message Oofkebpanlp {
	uint32 acjcphifmln = 4;
	repeated Dgefmlbpfmm dcfhgaajlnn = 7;
}

message ParkourGetRankingInfoCsReq {

}

message ParkourGetRankingInfoScRsp {
	uint32 retcode = 8;
	repeated Oofkebpanlp pfengldjcmg = 9;
	optional Oofkebpanlp njgpikcfjnl = 3;
}

message ParkourStartLevelCsReq {
	uint32 pofmcalhooc = 7;
	uint32 acjcphifmln = 6;
}

message ParkourStartLevelScRsp {
	uint32 pofmcalhooc = 1;
	uint32 retcode = 11;
	uint32 acjcphifmln = 9;
}

message Bfpolegccpj {
	Hcfffeimcmf type = 11;
	uint32 cnt = 2;
}

message Dckpbicnmkk {
	uint32 id = 5;
	uint32 cnt = 4;
}

message Ooalaodncpe {
	uint32 oigkboohnii = 13;
	uint32 oggegaolpgn = 6;
	uint32 gfdipldifhg = 8;
	uint32 nfphcjipijh = 1;
	uint32 fodekcobffa = 3;
	uint32 nbnekbdillk = 4;
	uint32 mmabimiejnj = 5;
	repeated Dckpbicnmkk apnnbdbenlc = 2;
	uint32 jehjljdkbge = 15;
	uint32 neefgjbmcll = 7;
	uint32 dhdlndfibkc = 9;
}

message Fjjofekpddh {
	uint32 hlkdfincppm = 2;
	uint32 adjopiaibmg = 9;
	uint32 cnjjhfpmiip = 6;
	uint32 chakndokncb = 12;
}

message ParkourEndLevelCsReq {
	uint32 time = 7;
	uint32 rank = 6;
	uint32 baabddjehmc = 3;
	uint32 acjcphifmln = 14;
	repeated Fjjofekpddh hmbheigkdbk = 10;
	Poahabdkpkj hbgclmcgnfm = 9;
	uint32 eefcbbkkflc = 2;
	repeated Bfpolegccpj aedbpadegfi = 11;
	uint32 pofmcalhooc = 12;
	optional Ooalaodncpe ifenfkggiem = 4;
}

message ParkourEndLevelScRsp {
	bool kkehmbpjooc = 2;
	bool fdgmoeoajkp = 5;
	uint32 time = 8;
	uint32 retcode = 4;
	optional Ggdemgbofgo blmdkjkoioh = 3;
	uint32 acjcphifmln = 14;
	Poahabdkpkj hbgclmcgnfm = 7;
}

message GetPetDataCsReq {

}

message GetPetDataScRsp {
	uint32 pet_id = 8;
	repeated uint32 owned_pet_list = 1;
	uint32 retcode = 14;
}

message SummonPetCsReq {
	uint32 summoned_pet_id = 2;
}

message SummonPetScRsp {
	uint32 pet_id = 11;
	uint32 retcode = 2;
	uint32 pet_item_id = 5;
}

message RecallPetCsReq {
	uint32 summoned_pet_id = 10;
}

message RecallPetScRsp {
	uint32 retcode = 13;
	uint32 pet_id = 10;
	uint32 pet_item_id = 11;
}

message CurPetChangedScNotify {
	uint32 pet_id = 1;
}

message GetPhoneDataCsReq {

}

message GetPhoneDataScRsp {
	repeated uint32 owned_chat_bubbles = 8;
	repeated uint32 owned_phone_themes = 1;
	uint32 cur_phone_theme = 7;
	repeated uint32 kkneegdkemd = 4;
	uint32 retcode = 6;
	uint32 lmocamklkpi = 13;
	uint32 cur_chat_bubble = 5;
}

message SelectChatBubbleCsReq {
	uint32 bubble_id = 9;
}

message SelectChatBubbleScRsp {
	uint32 pmdcbfopchb = 13;
	uint32 retcode = 11;
	uint32 cur_chat_bubble = 15;
}

message UnlockChatBubbleScNotify {
	uint32 bubble_id = 2;
}

message SelectPhoneThemeCsReq {
	uint32 theme_id = 9;
}

message SelectPhoneThemeScRsp {
	uint32 cur_phone_theme = 13;
	uint32 retcode = 3;
	uint32 achopojlcce = 11;
}

message UnlockPhoneThemeScNotify {
	uint32 theme_id = 8;
}

message SelectPhoneCaseCsReq {
	uint32 gianhliikia = 9;
}

message SelectPhoneCaseScRsp {
	uint32 retcode = 14;
	uint32 lmocamklkpi = 13;
	uint32 pdacjdieojg = 15;
}

message UnlockPhoneCaseScNotify {
	uint32 gianhliikia = 14;
}

message GetPlanetFesDataCsReq {

}

message GetPlanetFesDataScRsp {
	optional Afbamplgheh kjkbkegighk = 5;
	optional Gcamegpepol lmgkmaoicgc = 4;
	optional Jnipiaadoip ebgngdgbolh = 12;
	uint32 retcode = 10;
	optional Kofollacigo fdhgikjdlgd = 2;
	optional Dkejeoehagm lapcheignmj = 8;
	optional Mioaegbpoma hmffhbhalge = 7;
	optional Oainkjlpcdk hbdliicpkob = 6;
	optional Ajcjchljbgf hljmhnabfmc = 9;
	optional Gjbfgabaamo admjkkoiagd = 3;
	repeated Khocchabnmn kfbpcfdhlhl = 14;
	optional Iacfpgolflm skill_info = 11;
	optional Clknibojlgp heojnaimgkc = 13;
}

message Iikngnhdmfi {
	repeated uint32 mcnmhbjhmme = 8;
}

message PlanetFesSyncChangeScNotify {
	repeated Ccnanlcoddf leadmneimdp = 3;
}

message Oidffleeall {
	uint32 kejnimghoig = 5;
	uint32 ihelajnmmbf = 10;
	uint32 imfcimkmjpl = 3;
}

message Ccnanlcoddf {
	optional Oidffleeall source = 1;
	optional Hmbanckgbii pbhmgchkjgo = 14;
}

message Ofgbmcknldj {
	optional Iikngnhdmfi bjodeepgopc = 13;
	int64 mfknhhnfkgi = 4;
	uint32 dgcflhcpjln = 15;
	optional Iikngnhdmfi jcfplghkjaa = 8;
}

message Kofollacigo {
	repeated Ofgbmcknldj inllekamnpf = 10;
}

message Eoaegaefpfh {
	uint32 avatar_id = 13;
	uint32 paehamjhndd = 15;
	uint32 mhkhaclnbpm = 14;
	uint32 level = 5;
}

message Dkejeoehagm {
	repeated Eoaegaefpfh avatar_list = 7;
}

message Ceoddceiddl {
	uint32 item_id = 11;
	uint32 mbejblfhcbh = 3;
}

message Ajcjchljbgf {
	repeated Ceoddceiddl item_list = 5;
	optional Iikngnhdmfi item_value = 9;
	optional Iikngnhdmfi pcajncbmimm = 3;
}

message Oainkjlpcdk {
	repeated Ppfcjhekolg pocjcmkkjik = 7;
}

message Ppfcjhekolg {
	optional Oidffleeall source = 8;
	uint32 config_id = 10;
	uint64 unique_id = 2;
	repeated Fimacphlmno dfcfhhlbgdc = 11;
}

message Fimacphlmno {
	oneof Kfelkjldkeh {
		int64 Kbefcmiiiin = 7;
	}
}

message Adafjfojdeg {
	Gmfejefibbi status = 3;
	uint32 jlfabhhnhcm = 2;
	uint32 progress = 14;
	uint32 mfanncagdmp = 8;
	oneof Ehacjjjdpah {
		uint32 Bonaghbbicf = 6;
		Iikngnhdmfi Nnhpcoiikff = 5;
	}
}

message Pcodfcnkhjk {
	uint32 dcnphbdddip = 4;
	uint32 eofeldeapeo = 15;
}

message Clknibojlgp {
	repeated Adafjfojdeg quest_list = 10;
	optional Pcodfcnkhjk cmhnljjodjf = 8;
}

message Gcamegpepol {
	uint32 pjolemhlgnl = 5;
	optional Iikngnhdmfi ehbjbpcnplg = 7;
}

message Dhnfbgenlig {
	uint32 progress = 9;
	uint32 bhpcnnfokee = 14;
}

message Afbamplgheh {
	repeated uint32 ihbjiihbibp = 14;
	repeated Dhnfbgenlig nckcmgcbehk = 9;
}

message Hfocnhojlah {
	uint32 level = 8;
	uint32 skill_id = 10;
}

message Iacfpgolflm {
	repeated Hfocnhojlah skill_info_list = 9;
}

message Gjbfgabaamo {
	repeated uint32 hignfpjlfka = 7;
	uint32 eimgbknlgnf = 9;
}

message Mioaegbpoma {
	uint32 fgpacihlanb = 14;
	repeated uint32 fgimacchhdk = 13;
	int64 epcpdocdocb = 1;
}

message Hmbanckgbii {

}

message Olbopgjffpm {
	bool biinncndpcg = 12;
	optional Dhnfbgenlig kjkbkegighk = 3;
}

message Phfbdnnlinf {
	optional Iikngnhdmfi ehbjbpcnplg = 3;
	uint32 pjolemhlgnl = 4;
}

message Giedcjdlege {
	optional Iikngnhdmfi ogjofmcmfpg = 7;
	optional Iikngnhdmfi bmalpkekbel = 15;
	repeated uint32 blcabemfach = 14;
	optional Iikngnhdmfi mfnaglkdpni = 13;
}

message Hpgagbgjlid {
	uint32 bmalpkekbel = 13;
	uint32 item_id = 8;
	uint32 ogjofmcmfpg = 12;
}

message Pgndibbgijn {
	uint32 gfjaghljjdn = 8;
	uint32 ecilicnolfn = 6;
}

message Npaiinekefb {
	optional Iikngnhdmfi dmaimcppjgh = 1;
	uint32 pefdlajlcjb = 4;
	uint32 jlceefbljdc = 3;
	uint32 avatar_id = 11;
}

message Iljjbgifdpe {
	optional Iikngnhdmfi fofhieiicpb = 11;
	uint32 nlaompdenkk = 3;
	optional Iikngnhdmfi eajpdpcdjpk = 6;
	uint32 hdkafnkhala = 7;
	uint32 membicnifli = 4;
	repeated Npaiinekefb oebafbigmbc = 9;
	uint32 nijmjbmcfjf = 14;
	optional Iikngnhdmfi pehingjkgcb = 12;
	map<uint32, uint32> bjelclbgalf = 1;
	uint32 ccigdjcgamd = 2;
}

message Djoeeghmcfj {
	optional Egbkgemfodn aakdahhigif = 11;
}

message Hpcaimkjdij {
	optional Ilmelfjccmd jilaggdmall = 7;
}

message Cbikmffdcgi {
	optional Iikngnhdmfi hhjocipobcf = 15;
}

message Hohdmmndknj {
	optional Jofgdaiadbo nfjlfnbpppg = 10;
	Dfhejcijbej podgjpekeeg = 13;
}

message Fhngonefbde {
	uint32 eimgbknlgnf = 7;
}

message Ohdhpclijnh {
	uint32 cioaogdkfog = 5;
	optional Iikngnhdmfi kjbkngcfbbp = 2;
	uint32 eafomflmojj = 8;
	uint32 ginmoibglnm = 13;
	uint32 iacphgojhmb = 1;
}

message Djiaemangcg {
	repeated Ohdhpclijnh transfer_item_list = 7;
	repeated Ceoddceiddl item_list = 8;
}

message Bfaaefcejpa {
	optional Ceoddceiddl hocnlijhjjk = 15;
	optional Ohdhpclijnh pkbbhjpaeki = 14;
}

message PlanetFesCollectIncomeCsReq {
	uint32 dgcflhcpjln = 3;
}

message PlanetFesCollectIncomeScRsp {
	uint32 retcode = 12;
}

message Pfbfimjfegi {
	uint32 avatar_id = 14;
	uint32 dgcflhcpjln = 3;
}

message PlanetFesSetAvatarWorkCsReq {
	repeated Pfbfimjfegi kngpofhnfaj = 3;
}

message PlanetFesSetAvatarWorkScRsp {
	uint32 retcode = 7;
}

message PlanetFesBuyLandCsReq {
	uint32 dgcflhcpjln = 15;
}

message PlanetFesBuyLandScRsp {
	uint32 retcode = 6;
}

message PlanetFesClientStatusCsReq {
	bool fjinnlfcboj = 4;
}

message PlanetFesClientStatusScRsp {
	uint32 retcode = 8;
}

message PlanetFesCollectAllIncomeCsReq {

}

message PlanetFesCollectAllIncomeScRsp {
	uint32 retcode = 7;
	optional Iikngnhdmfi gndcammiloi = 3;
}

message PlanetFesDoGachaCsReq {
	uint32 ifngnhhcngl = 1;
	uint32 simulate_magic = 6;
	uint32 gacha_id = 9;
}

message Neihldgebhe {
	uint32 avatar_id = 8;
	uint32 fljpkfjajfp = 11;
	uint32 jkjncnclfld = 1;
	optional Bfaaefcejpa lpdeopgelle = 14;
}

message Cgojkboeofo {
	repeated Bfaaefcejpa gmofklbfapl = 8;
	repeated uint32 jcdjcanehjd = 15;
	repeated Neihldgebhe dhhaphnmedf = 6;
	optional Iikngnhdmfi cabcgkngaoc = 1;
}

message Pjcakifoocp {
	optional Djiaemangcg jfmahmofjpi = 3;
	repeated uint32 ecdambiifci = 11;
}

message PlanetFesDoGachaScRsp {
	uint32 gacha_id = 13;
	repeated Ceoddceiddl cikepdangfd = 7;
	uint32 retcode = 9;
	oneof Micmckahmpl {
		Cgojkboeofo Idgklmcepbo = 14;
		Pjcakifoocp Jabdcpfpoke = 11;
	}
}

message PlanetFesAvatarLevelUpCsReq {
	uint32 ldnjeacfbje = 2;
	uint32 avatar_id = 9;
}

message PlanetFesAvatarLevelUpScRsp {
	uint32 retcode = 15;
	uint32 avatar_id = 8;
	optional PlanetFesReward reward = 11;
	uint32 bhpfpejbkec = 10;
	uint32 ldnjeacfbje = 6;
}

message PlanetFesTakeQuestRewardCsReq {
	uint32 jlfabhhnhcm = 14;
}

message PlanetFesTakeQuestRewardScRsp {
	uint32 jlfabhhnhcm = 6;
	uint32 retcode = 11;
	optional Djiaemangcg dnffkabfoef = 2;
}

message PlanetFesUpgradeSkillLevelCsReq {
	uint32 ldnjeacfbje = 8;
	uint32 skill_id = 6;
}

message PlanetFesUpgradeSkillLevelScRsp {
	uint32 retcode = 10;
	optional Ceoddceiddl item_cost_list = 14;
	uint32 skill_level = 3;
	uint32 skill_id = 4;
}

message PlanetFesReward {
	repeated Ceoddceiddl item_list = 15;
	optional Iikngnhdmfi coin = 11;
	map<uint32, uint32> buff_map = 8;
}

message Knokilfkohi {
	uint32 avatar_id = 13;
	uint32 joooeafokhk = 12;
	uint32 aopikhkkglm = 9;
}

message Dlljmiaghdd {
	repeated Knokilfkohi fjhgckenopf = 9;
}

message Efhabdofkde {
	uint32 bpcfoeghonc = 11;
	map<uint32, uint32> agmgppaomka = 9;
	uint32 nngopakjicc = 14;
	uint32 epmoohcjnho = 6;
}

message Cgomnlbljgh {
	uint32 oohnkojhdho = 8;
	optional Hldhemlpjng omcbcgchlgn = 3;
	uint32 afgkfifjfcl = 11;
}

message Pohniiflcge {
	uint32 dgddjnhlggj = 15;
}

message Bkodhaeecjh {
	uint32 cgdgpgjlknm = 15;
	uint32 hddijnadfdd = 8;
	uint32 dgddjnhlggj = 10;
}

message Cboemejiffe {
	uint32 dgddjnhlggj = 14;
}

message Jofgdaiadbo {
	uint32 dajjjfchooj = 3;
	uint32 bkmamgapegh = 4;
	bool chnliokglbp = 9;
	bool pklcnhicgia = 14;
	bool fomjlfjckdb = 2;
	int64 ljheochhcab = 5;
	uint32 hoiokbkgfdn = 13;
	oneof Item {
		Dlljmiaghdd Pgmblloobma = 8;
		Efhabdofkde Gildjpkdpnn = 12;
		Cgomnlbljgh Bolaiplefpi = 10;
		Pohniiflcge Genpkdaeihc = 7;
		Bkodhaeecjh Jfnhpiegmmm = 15;
		Cboemejiffe Jlefnhikfoc = 11;
	}
}

message Ilmelfjccmd {
	optional Iikngnhdmfi pehingjkgcb = 5;
	uint32 bkmamgapegh = 12;
	bool dkhigcipekf = 15;
	repeated Jofgdaiadbo kmndebcffad = 4;
	bool biinncndpcg = 8;
	int64 coifhfpegph = 1;
	map<uint32, uint32> hijddfbedpo = 7;
}

message Flnidkiggbk {
	bool dkhigcipekf = 13;
	uint32 bkmamgapegh = 7;
	optional Iikngnhdmfi kneinmnlcdi = 15;
	repeated Npaiinekefb oebafbigmbc = 6;
	optional Iikngnhdmfi pehingjkgcb = 4;
	uint32 gjpanocngbm = 1;
}

message Leaahdpaieg {
	bool agmambdehlk = 15;
	uint32 hoiokbkgfdn = 11;
}

message Egbkgemfodn {
	repeated Flnidkiggbk dppimjndndf = 2;
	repeated uint32 ccbbdgfffag = 10;
	repeated Leaahdpaieg nfioacfhjnk = 4;
	optional Ilmelfjccmd ncikkfenhjf = 11;
	uint32 hjnoiengedl = 1;
	uint32 blmnekfpagh = 8;
}

message PlanetFesGetBusinessDayInfoCsReq {
	bool mkbpdpafapk = 9;
}

message PlanetFesGetBusinessDayInfoScRsp {
	uint32 retcode = 7;
	int64 bcfbfmmenjk = 13;
	optional Egbkgemfodn aakdahhigif = 8;
}

message Jnipiaadoip {
	bool biinncndpcg = 15;
	uint32 mlgfjgchonh = 10;
	bool dkhigcipekf = 3;
	uint32 blmnekfpagh = 8;
	int64 bcfbfmmenjk = 6;
	uint32 hjnoiengedl = 5;
}

message PlanetFesBusinessDayRefreshEventCsReq {
	uint32 hoiokbkgfdn = 1;
	uint32 bkmamgapegh = 4;
	bool kblpjcfnhle = 10;
}

message PlanetFesBusinessDayRefreshEventScRsp {
	uint32 retcode = 5;
	optional Jofgdaiadbo nfjlfnbpppg = 4;
}

message PlanetFesDeliverPamCargoCsReq {
	uint32 avatar_id = 9;
	uint32 aopikhkkglm = 4;
}

message PlanetFesDeliverPamCargoScRsp {
	optional Jofgdaiadbo nfjlfnbpppg = 2;
	optional PlanetFesReward gcbdedabgko = 3;
	uint32 retcode = 11;
	uint32 avatar_id = 1;
}

message PlanetFesChooseAvatarEventOptionCsReq {
	uint32 nfcaambmmmb = 11;
}

message PlanetFesChooseAvatarEventOptionScRsp {
	optional PlanetFesReward reward = 7;
	uint32 epmoohcjnho = 15;
	uint32 retcode = 2;
	uint32 ojkjpkhdepe = 1;
	optional Jofgdaiadbo nfjlfnbpppg = 14;
	uint32 hakkgodicfi = 13;
}

message PlanetFesDealAvatarEventOptionItemCsReq {
	bool lecdhddceia = 8;
	uint32 nngopakjicc = 13;
}

message PlanetFesDealAvatarEventOptionItemScRsp {
	uint32 retcode = 9;
	optional PlanetFesReward reward = 2;
	uint32 ojkjpkhdepe = 8;
	uint32 hakkgodicfi = 10;
	optional Jofgdaiadbo nfjlfnbpppg = 11;
	bool lecdhddceia = 12;
}

message PlanetFesTakeRegionPhaseRewardCsReq {
	uint32 ndbojandnjn = 1;
}

message PlanetFesTakeRegionPhaseRewardScRsp {
	uint32 retcode = 1;
	uint32 ndbojandnjn = 12;
	optional ItemList reward_list = 8;
}

message Cnlmdffefjm {
	repeated uint32 hfkggoepple = 6;
	repeated uint32 cdlbehlammm = 10;
	uint32 alhanjklboo = 8;
	uint32 gpaghiajicd = 12;
}

message Hldhemlpjng {
	uint32 oohnkojhdho = 3;
	uint32 acdopcbmpnl = 9;
	oneof Ngikdjmngbg {
		Cnlmdffefjm Ejcolgnjgdc = 5;
	}
}

message Fmnhlknjnah {
	repeated uint32 pkhlgkkippa = 6;
}

message PlanetFesStartMiniGameCsReq {
	uint32 oohnkojhdho = 15;
	uint32 acdopcbmpnl = 9;
}

message PlanetFesStartMiniGameScRsp {
	optional PlanetFesReward reward = 13;
	optional Hldhemlpjng omcbcgchlgn = 1;
	uint32 retcode = 15;
	oneof Empmlafdhfa {
		Fmnhlknjnah Jfmahmofjpi = 3;
	}
}

message PlanetFesUseItemCsReq {
	uint32 diookfoccmo = 13;
	uint32 item_id = 5;
}

message PlanetFesUseItemScRsp {
	uint32 retcode = 9;
	optional PlanetFesReward reward = 15;
}

message PlanetFesGameBingoFlipCsReq {
	uint32 hcfpofmdgkn = 12;
}

message PlanetFesGameBingoFlipScRsp {
	uint32 hcfpofmdgkn = 10;
	uint32 retcode = 7;
	optional PlanetFesReward reward = 1;
	bool nfeadmfnflk = 5;
}

message PlanetFesBonusEventInteractCsReq {
	uint32 hoiokbkgfdn = 15;
	uint32 apmodagohna = 14;
}

message PlanetFesBonusEventInteractScRsp {
	uint32 hoiokbkgfdn = 4;
	optional Jofgdaiadbo nfjlfnbpppg = 9;
	optional PlanetFesReward reward = 13;
	uint32 retcode = 3;
}

message Eikaiidaepp {
	uint32 bkmamgapegh = 2;
	optional Iikngnhdmfi hhjocgomeco = 14;
	uint32 hdcbejdenla = 11;
	uint32 lnjiihhpmed = 10;
	uint32 dgjdmocbbii = 8;
	uint32 pjolemhlgnl = 13;
	uint32 uid = 15;
}

message PlanetFesGetFriendRankingInfoListCsReq {

}

message PlanetFesGetFriendRankingInfoListScRsp {
	optional Eikaiidaepp icmgegefdle = 1;
	uint32 retcode = 15;
}

message PlanetFesFriendRankingInfoChangeScNotify {
	repeated Eikaiidaepp cnheklkbmhh = 7;
}

message PlanetFesSetCustomKeyValueCsReq {
	uint32 value = 2;
	uint32 key = 1;
}

message PlanetFesSetCustomKeyValueScRsp {
	uint32 retcode = 8;
	uint32 value = 14;
	uint32 key = 4;
}

message PlanetFesUpgradeFesLevelCsReq {
	uint32 ldnjeacfbje = 7;
}

message PlanetFesUpgradeFesLevelScRsp {
	uint32 retcode = 12;
}

message PlanetFesGetAvatarStatCsReq {

}

message PlanetFesGetAvatarStatScRsp {
	repeated Npaiinekefb oebafbigmbc = 5;
	uint32 retcode = 2;
}

message Deinadpehke {
	repeated uint32 jpacobgbdbg = 11;
	uint32 ofgfhcldobg = 6;
	uint32 pnakhnbdjae = 3;
	int64 lffcmnahbdp = 13;
}

message Bkbilpdkoil {
	int64 time = 6;
	repeated uint32 jpacobgbdbg = 3;
	uint32 lhjpkmdmnmp = 12;
	bool cabehkoflpg = 5;
	uint64 hpjjdcjhhoa = 15;
}

message Gjipjngnfej {
	uint32 ofgfhcldobg = 13;
	uint32 pnakhnbdjae = 11;
	uint32 source = 12;
	repeated uint32 jpacobgbdbg = 7;
	int64 time = 9;
}

message PlanetFesGetExtraCardPieceInfoCsReq {

}

message Ffapkcnapid {
	repeated Deinadpehke gedglncpggn = 14;
	uint32 aoaefeibbmf = 7;
	repeated uint32 iemnjhlfgkd = 6;
	int64 aiieklilmjc = 11;
	uint32 uid = 1;
	repeated Gjipjngnfej obboccnflol = 9;
	uint32 hlkpnecambl = 4;
	repeated Ceoddceiddl pbfhdnbgmbp = 5;
}

message PlanetFesGetExtraCardPieceInfoScRsp {
	optional Ffapkcnapid baamhdnnkia = 14;
	uint32 retcode = 11;
}

message PlanetFesGetFriendCardPieceCsReq {

}

message PlanetFesGetFriendCardPieceScRsp {
	uint32 retcode = 9;
	repeated Ffapkcnapid cgdandnibgj = 14;
}

message PlanetFesChangeCardPieceApplyPermissionCsReq {
	uint32 hlkpnecambl = 13;
}

message PlanetFesChangeCardPieceApplyPermissionScRsp {
	uint32 hlkpnecambl = 2;
	uint32 retcode = 9;
}

message PlanetFesApplyCardPieceCsReq {
	repeated uint32 jpacobgbdbg = 9;
	uint32 cbegnbkmhcd = 1;
}

message PlanetFesApplyCardPieceScRsp {
	uint32 retcode = 5;
	repeated uint32 jpacobgbdbg = 3;
	bool mcffpieeknn = 12;
	uint32 cbegnbkmhcd = 4;
	int64 epcpdocdocb = 1;
	uint32 pnakhnbdjae = 13;
}

message PlanetFesHandleCardPieceApplyCsReq {
	repeated uint32 dlhbcokcidp = 9;
	uint32 pnakhnbdjae = 4;
	bool mdapcfheljl = 12;
	uint32 ofgfhcldobg = 2;
}

message PlanetFesHandleCardPieceApplyScRsp {
	bool mdapcfheljl = 15;
	repeated uint32 dlhbcokcidp = 5;
	uint32 retcode = 3;
	int64 ppiolclpmpl = 8;
	uint32 pnakhnbdjae = 12;
}

message PlanetFesGetOfferedCardPieceCsReq {
	bool cabehkoflpg = 8;
	uint64 hpjjdcjhhoa = 11;
}

message PlanetFesGetOfferedCardPieceScRsp {
	uint64 hpjjdcjhhoa = 9;
	repeated Ceoddceiddl pbfhdnbgmbp = 10;
	repeated Bkbilpdkoil onjgmghcpef = 11;
	uint32 retcode = 15;
	bool cabehkoflpg = 14;
	int64 dljckcmadhj = 13;
}

message PlanetFesGiveCardPieceCsReq {
	uint32 cbegnbkmhcd = 3;
	repeated uint32 dlhbcokcidp = 10;
}

message PlanetFesGiveCardPieceScRsp {
	uint32 retcode = 1;
	uint64 hpjjdcjhhoa = 2;
	int64 ppiolclpmpl = 3;
	uint32 cbegnbkmhcd = 13;
	repeated uint32 dlhbcokcidp = 4;
}

message PlanetFesLargeBonusInteractCsReq {
	uint32 mopffbmabcd = 14;
	uint32 ooiookgmehp = 12;
	uint32 ihcilnhklmc = 5;
}

message PlanetFesLargeBonusInteractScRsp {
	optional Jofgdaiadbo nfjlfnbpppg = 7;
	uint32 retcode = 2;
	uint32 ihcilnhklmc = 4;
	optional Iikngnhdmfi gmidjmmmjkp = 8;
}

message PlanetFesEnterNextBusinessDayCsReq {

}

message PlanetFesEnterNextBusinessDayScRsp {
	uint32 retcode = 9;
}

message PlayerLoginCsReq {
	string ignfblgjioj = 1837;
	string signature = 5;
	LanguageType fadpdibknbi = 12;
	string cost_time = 9;
	bool oeencfmcahd = 1499;
	uint32 client_res_version = 10;
	string oehjlodahfn = 15;
	string bnigpdooili = 7;
	string hjdmjpebppm = 4;
	string kfdjeieobbn = 691;
	string dmpmhccfbkg = 3;
	string ocdacjnnjnj = 13;
	optional Occhnefhgne pklicgmeimb = 1767;
	string ohpckcnaeik = 822;
	uint32 mlnabepindb = 1991;
	uint32 nhbhbalhjml = 2018;
	uint64 login_random = 14;
	string akcejfcfban = 379;
	string lagbgldlgcb = 11;
	string bpckjkdencb = 1403;
	string gmalcpnohbf = 1579;
	bool gehapnihcdo = 150;
	PlatformType platform_type = 2;
	string kibbnbngijd = 6;
	uint32 haehhcpoapp = 320;
	uint32 jmkhdhaioim = 1;
	optional Jgfkicdcflj miohkaoidnk = 1553;
	string bnboaliapae = 8;
}

message PlayerLoginScRsp {
	string pdikpeifann = 5;
	uint32 retcode = 4;
	int32 cur_timezone = 1;
	uint64 login_random = 13;
	uint32 stamina = 14;
	bool jlpkeobincp = 2;
	uint64 server_timestamp_ms = 6;
	string nhmhabjkhog = 12;
	optional PlayerBasicInfo basic_info = 8;
	bool igkbeamlnbj = 10;
}

message Lmipmhhpfhn {

}

message PlayerGetTokenCsReq {
	string mempbkcjjfj = 12;
	string account_uid = 10;
	uint32 platform_type = 15;
	uint32 uid = 11;
	uint32 haehhcpoapp = 5;
	uint32 icmfpnpijjf = 3;
	string token = 6;
	uint32 fgojlpaejec = 9;
}

message PlayerGetTokenScRsp {
	uint64 secret_key_seed = 9;
	optional BlackInfo black_info = 12;
	string msg = 4;
	uint32 retcode = 14;
	uint32 uid = 2;
}

message GmTalkScNotify {
	string msg = 5;
}

message PlayerKickOutScNotify {
	optional BlackInfo black_info = 7;
}

message Kakbfnggohb {

}

message GmTalkCsReq {
	string msg = 6;
}

message GmTalkScRsp {
	string bjdojlkehna = 5;
	uint32 retcode = 15;
}

message GetBasicInfoCsReq {

}

message Ogfiodpilel {
	bool dmklnjboabo = 3;
	bool akheilmndhj = 15;
	uint32 cacekelnmin = 4;
}

message PlayerSettingInfo {
	bool aponeidmphl = 1;
	bool nkekibnjmpa = 9;
	bool pbkbglhhkpe = 14;
	bool mmmnjchemfn = 5;
	bool njfmiljofok = 3;
	bool ilfalcdlaol = 13;
	bool gmjanojmkce = 11;
	bool kapdimgjlnf = 6;
	optional Ogfiodpilel ghkcmdnkopn = 15;
	bool kjncckhjfhe = 12;
	bool aicnfaobcpi = 2;
}

message GetBasicInfoScRsp {
	bool is_gender_set = 1;
	int64 next_recover_time = 5;
	optional PlayerSettingInfo player_setting_info = 9;
	int64 last_set_nickname_time = 3;
	uint32 exchange_times = 10;
	uint32 gender = 12;
	uint32 gameplay_birthday = 6;
	uint32 week_cocoon_finished_count = 11;
	uint32 cur_day = 14;
	uint32 retcode = 13;
}

message ExchangeStaminaCsReq {

}

message ExchangeStaminaScRsp {
	uint32 retcode = 11;
	int64 last_recover_time = 15;
	uint32 exchange_times = 13;
	repeated ItemCost item_cost_list = 14;
	uint32 stamina_add = 5;
}

message GetAuthkeyCsReq {
	uint32 mpgpgfkbmhg = 13;
	uint32 goijemcccgl = 5;
	string acdjgnhjdai = 1;
}

message GetAuthkeyScRsp {
	uint32 retcode = 15;
	string kbnipiiiccn = 13;
	string acdjgnhjdai = 9;
	uint32 mpgpgfkbmhg = 10;
	uint32 goijemcccgl = 7;
}

message RegionStopScNotify {
	int64 stop_begin_time = 2;
	int64 stop_end_time = 8;
}

message AntiAddictScNotify {
	uint32 msg_type = 5;
	string msg = 6;
	string level = 10;
}

message SetNicknameCsReq {
	bool is_modify = 7;
	string nickname = 3;
}

message SetNicknameScRsp {
	bool is_modify = 14;
	int64 jendkbooaip = 2;
	uint32 retcode = 3;
}

message GetLevelRewardTakenListCsReq {

}

message GetLevelRewardTakenListScRsp {
	repeated uint32 amcakcpdnnl = 9;
	uint32 retcode = 13;
}

message GetLevelRewardCsReq {
	uint32 level = 3;
	uint32 interacted_prop_entity_id = 7;
}

message GetLevelRewardScRsp {
	uint32 retcode = 6;
	uint32 level = 7;
	optional ItemList reward = 15;
}

message SetLanguageCsReq {
	LanguageType fadpdibknbi = 6;
}

message SetLanguageScRsp {
	LanguageType fadpdibknbi = 2;
	uint32 retcode = 1;
}

message Kiphkhhmfac {
	uint32 pokidoenkek = 1;
	string bcafjhgdodi = 15;
	string adjcaknjcgo = 5;
	bool ghcaaonigca = 6;
	uint32 config_id = 11;
	string dbckeiojldi = 4;
	uint32 kdcigpamgho = 3;
	int64 end_time = 8;
	int64 begin_time = 9;
}

message ServerAnnounceNotify {
	repeated Kiphkhhmfac pbehmeaeikc = 11;
}

message Gateserver {
	string rogue_tourn_build_ref_h5_url = 470;
	string denlmlcjlpg = 1643;
	string login_white_msg = 927;
	string cloud_game_url = 1869;
	bool forbid_recharge = 174;
	bool use_tcp = 266;
	string third_privacy_in_game_url = 1724;
	string ifix_url = 618;
	string rogue_tourn_build_ref_api_req_color_header_value = 409;
	string custom_service_url = 1616;
	bool enable_watermark = 1876;
	uint32 enable_cdn_ipv6 = 1800;
	string pooolgfkkjl = 2000;
	string ckiofjnkemn = 119;
	string personal_information_in_game_url = 790;
	string design_data_relogin_desc = 41;
	string pre_download_url = 1301;
	string mpnjikpkohj = 1631;
	string hot_point_url = 1891;
	bool enable_save_replay_file = 761;
	uint32 asb_relogin_type = 12;
	string ifix_version = 1799;
	string ip = 3;
	string client_secret_key = 732;
	bool enable_version_update = 2;
	string privacy_in_game_url = 868;
	uint32 design_data_relogin_type = 7;
	string asb_relogin_desc = 10;
	bool use_new_networking = 977;
	string lua_url = 11;
	uint32 rogue_tourn_notice_id = 664;
	string rogue_tourn_build_ref_static_data_url_prefix = 81;
	string community_activity_url = 279;
	string online_replay_upload_url = 216;
	bool enable_android_middle_package = 1567;
	bool enable_upload_battle_log = 2011;
	bool close_redeem_code = 721;
	string player_return_questionnaire_a_url = 620;
	uint32 rogue_tourn_notice_pic_type = 1415;
	string lhoofmaihpc = 71;
	string player_return_questionnaire_b_url = 147;
	string web_tool_url = 429;
	string player_return_invite_h5_url = 1344;
	uint32 retcode = 4;
	int64 stop_begin_time = 9;
	string server_description = 800;
	string msg = 15;
	string official_community_url = 1210;
	string region_name = 13;
	bool ios_exam = 330;
	string teenager_privacy_in_game_url = 1473;
	string user_agreement_url = 890;
	string operation_feedback_url = 1430;
	string ehimaoflgil = 1448;
	string mdk_res_version = 609;
	string redeem_code_url = 1221;
	bool network_diagnostic = 846;
	string game_start_customer_service_url = 1517;
	uint32 port = 5;
	bool enable_design_data_version_update = 6;
	bool ecbfehfpofj = 722;
	string ex_resource_url = 14;
	string ngcimholjba = 215;
	bool mtp_switch = 1921;
	string ipv6_address = 1728;
	bool modibfhpmcp = 1094;
	string rogue_magic_h5_url = 340;
	bool event_tracking_open = 284;
	repeated string oaohiecdgcc = 1442;
	string asset_bundle_url = 1;
	string rogue_tourn_build_ref_api_req_color_header_key = 1741;
	int64 stop_end_time = 8;
	string online_replay_download_url = 1526;
	string temporary_maintenance_url = 2029;
}

message GateServerScNotify {
	string connpkcchje = 13;
}

message SetAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 5;
}

message SetAvatarPathScRsp {
	uint32 retcode = 11;
	MultiPathAvatarType avatar_id = 9;
}

message SetMultipleAvatarPathsCsReq {
	repeated MultiPathAvatarType avatar_id_list = 1;
}

message SetMultipleAvatarPathsScRsp {
	uint32 retcode = 12;
}

message UnlockAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 10;
}

message UnlockAvatarPathScRsp {
	MultiPathAvatarType avatar_id = 7;
	uint32 retcode = 8;
	repeated uint32 halndfogjnf = 1;
	optional ItemList reward = 12;
}

message AvatarPathChangedNotify {
	MultiPathAvatarType cur_multi_path_avatar_type = 9;
	uint32 base_avatar_id = 13;
}

message SetGenderCsReq {
	Gender gender = 8;
}

message SetGenderScRsp {
	MultiPathAvatarType multi_path_type = 13;
	repeated MultiPathAvatarTypeInfo multi_path_type_info = 2;
	uint32 retcode = 10;
}

message SetPlayerInfoCsReq {
	Gender gender = 11;
	bool is_modify = 2;
	string nickname = 13;
}

message SetPlayerInfoScRsp {
	int64 jendkbooaip = 9;
	repeated MultiPathAvatarTypeInfo multi_path_type_info = 11;
	uint32 retcode = 10;
	bool is_modify = 4;
	MultiPathAvatarType multi_path_type = 8;
}

message QueryProductInfoCsReq {

}

message Aapnhpamdck {
	string mpamhbfikfb = 9;
	ProductGiftType dnajfmpcmll = 1;
	bool fkfokhabejn = 5;
	string dbellihmajg = 11;
	int64 begin_time = 2;
	uint32 gcbobamcalk = 12;
	uint32 iecaeabacdm = 7;
	int64 end_time = 14;
	uint32 ioglpebjmdb = 4;
}

message QueryProductInfoScRsp {
	uint32 retcode = 2;
	uint32 odnfiaahkci = 1;
	uint64 month_card_out_date_time = 13;
	uint32 cmghdmpeako = 12;
	repeated Aapnhpamdck pidhegpbcji = 10;
}

message MonthCardRewardNotify {
	optional ItemList reward = 1;
}

message ClientDownloadDataScNotify {
	optional ClientDownloadData download_data = 15;
}

message ClientObjDownloadDataScNotify {
	optional ClientObjDownloadData data = 10;
}

message UpdateFeatureSwitchScNotify {
	repeated Hpiofdcgmej switch_info_list = 10;
}

message DailyRefreshNotify {
	uint32 gmfebdafdpj = 15;
}

message SetGameplayBirthdayCsReq {
	uint32 birthday = 7;
}

message SetGameplayBirthdayScRsp {
	uint32 retcode = 6;
	uint32 birthday = 8;
}

message AceAntiCheaterCsReq {
	string dgdlniefcpf = 15;
	uint32 glnkkfaipob = 12;
}

message AceAntiCheaterScRsp {
	uint32 retcode = 3;
}

message RetcodeNotify {
	repeated uint32 jojppodomah = 12;
	uint32 retcode = 13;
}

message PlayerHeartBeatCsReq {
	uint64 client_time_ms = 9;
	uint32 jbpemofnedg = 7;
	optional ClientUploadData lkjmjgdebee = 8;
}

message PlayerHeartBeatScRsp {
	uint32 retcode = 9;
	uint64 server_time_ms = 3;
	optional ClientDownloadData download_data = 15;
	uint64 client_time_ms = 1;
}

message FeatureSwitchClosedScNotify {
	FeatureSwitchType kimnkfpfbdg = 11;
}

message Kpcimegklll {
	string iaogfcmadlc = 14;
	SecretKeyType type = 11;
}

message GetSecretKeyInfoCsReq {
	bytes cfhgmeadiph = 6;
}

message GetSecretKeyInfoScRsp {
	uint32 retcode = 1;
	repeated Kpcimegklll ebceboebgeh = 14;
	bytes baohefhiden = 13;
}

message PlayerLoginFinishCsReq {

}

message PlayerLoginFinishScRsp {
	uint32 retcode = 3;
}

message VideoKeyInfo {
	uint64 video_key = 2;
	uint32 id = 12;
}

message GetVideoVersionKeyCsReq {

}

message GetVideoVersionKeyScRsp {
	repeated VideoKeyInfo video_key_info_list = 4;
	repeated VideoKeyInfo apmbnedfbpa = 10;
	uint32 retcode = 2;
}

message Nhjghokbdpk {
	uint32 iipdefcedmc = 8;
	uint32 nciadbakmae = 1;
	uint32 jdakkofdgep = 15;
	uint32 content_id = 11;
}

message SetRedPointStatusScNotify {
	uint32 jdakkofdgep = 1;
	uint32 uid = 15;
	uint32 iipdefcedmc = 7;
	repeated Nhjghokbdpk njehhffdghk = 13;
	uint32 content_id = 4;
}

message ReserveStaminaExchangeCsReq {
	uint32 num = 2;
}

message ReserveStaminaExchangeScRsp {
	uint32 num = 13;
	uint32 retcode = 5;
}

message StaminaInfoScNotify {
	uint32 reserve_stamina = 7;
	int64 dpimhemjkoe = 11;
	uint32 stamina = 6;
	int64 next_recover_time = 10;
}

message Onmlpjkagcg {

}

message UpdatePlayerSettingCsReq {
	optional Onmlpjkagcg klkpmljkmjp = 7;
}

message UpdatePlayerSettingScRsp {
	uint32 retcode = 1;
	optional Onmlpjkagcg klkpmljkmjp = 13;
}

message ClientObjUploadCsReq {
	Jidiecghkgk lghokgabgck = 1;
	uint32 jbpemofnedg = 14;
	bytes lkjmjgdebee = 2;
}

message ClientObjUploadScRsp {
	uint32 retcode = 8;
	optional ClientObjDownloadData data = 15;
}

message Menpbggogmc {
	repeated string gkhfbfknhob = 4;
}

message Ncbimlpodon {
	optional Menpbggogmc pelmgopehkn = 9;
	bool iahopfnpfln = 4;
}

message Cjakibdimmj {
	oneof Pmfbbcebacd {
		bool Iahopfnpfln = 517;
		Menpbggogmc Amaljfokcba = 1515;
		Menpbggogmc Oecbelgdlfp = 2038;
	}
}

message UpdatePsnSettingsInfoCsReq {
	oneof Dfopiihejfm {
		Ncbimlpodon Doocplcldpd = 521;
		Cjakibdimmj Inhldidjgha = 1683;
	}
}

message UpdatePsnSettingsInfoScRsp {
	uint32 retcode = 15;
}

message GetGameStateServiceConfigCsReq {

}

message GetGameStateServiceConfigScRsp {
	uint32 retcode = 5;
	repeated string fibijgmkdpp = 2;
	repeated string kaojcobeeon = 9;
	repeated string ledkmdollbb = 6;
}

message HeadIcon {
	uint32 id = 1;
}

message DisplayAvatar {
	uint32 avatar_id = 2;
	uint32 pos = 12;
}

message DisplayAvatarVec {
	bool is_display = 8;
	repeated DisplayAvatar display_avatar_list = 15;
}

message GetPlayerBoardDataCsReq {

}

message GetPlayerBoardDataScRsp {
	repeated HeadIcon unlocked_head_icon_list = 5;
	repeated uint32 display_support_avatar_vec = 2;
	uint32 oldmjonbjom = 3;
	uint32 retcode = 11;
	string signature = 12;
	uint32 current_head_icon_id = 9;
	repeated uint32 kknjhenmgpk = 4;
	optional DisplayAvatarVec display_avatar_vec = 15;
}

message SetHeadIconCsReq {
	uint32 id = 5;
}

message SetHeadIconScRsp {
	uint32 retcode = 12;
	uint32 current_head_icon_id = 7;
}

message SetPersonalCardCsReq {
	uint32 id = 8;
}

message SetPersonalCardScRsp {
	uint32 retcode = 11;
	uint32 oldmjonbjom = 5;
}

message SetDisplayAvatarCsReq {
	repeated DisplayAvatar display_avatar_list = 8;
}

message SetDisplayAvatarScRsp {
	repeated DisplayAvatar display_avatar_list = 15;
	uint32 retcode = 9;
}

message SetIsDisplayAvatarInfoCsReq {
	bool is_display = 8;
}

message SetIsDisplayAvatarInfoScRsp {
	bool is_display = 3;
	uint32 retcode = 8;
}

message SetSignatureCsReq {
	string signature = 13;
}

message SetSignatureScRsp {
	string signature = 11;
	uint32 retcode = 10;
}

message SetAssistAvatarCsReq {
	uint32 avatar_id = 15;
	repeated uint32 avatar_id_list = 4;
}

message SetAssistAvatarScRsp {
	repeated uint32 avatar_id_list = 13;
	uint32 avatar_id = 10;
	uint32 retcode = 9;
}

message PlayerReturnStartScNotify {
	uint32 nchiekedhce = 7;
}

message PlayerReturnSignCsReq {
	uint32 opeedjihjop = 12;
	repeated uint32 nmklegomepj = 15;
}

message PlayerReturnSignScRsp {
	uint32 retcode = 3;
	repeated uint32 nmklegomepj = 15;
	uint32 opeedjihjop = 11;
	repeated ItemList ipflhcjiebm = 6;
}

message PlayerReturnPointChangeScNotify {
	uint32 mamhojmfjof = 8;
}

message PlayerReturnTakePointRewardCsReq {
	uint32 cpnimljnmmf = 6;
	uint32 iifomgofmdl = 8;
}

message PlayerReturnTakePointRewardScRsp {
	uint32 retcode = 10;
	uint32 cpnimljnmmf = 7;
	optional ItemList cfidbmmijhg = 1;
	uint32 iifomgofmdl = 15;
}

message PlayerReturnTakeRewardCsReq {

}

message PlayerReturnTakeRewardScRsp {
	optional ItemList ipflhcjiebm = 1;
	uint32 retcode = 10;
}

message PlayerReturnInfoQueryCsReq {
	uint32 cehfiilmjkm = 7;
}

message Afbneibijnd {
	Nobpmmnfenj status = 13;
	uint32 ilcfojcdnhi = 5;
	int64 coifhfpegph = 14;
	int64 finish_time = 9;
	uint32 world_level = 2;
	uint32 ahnfmdnejnl = 8;
	bool is_taken_reward = 12;
	repeated uint32 nmklegomepj = 6;
	uint32 bgafghipoje = 1;
	bool fjndpcfnflo = 7;
	repeated uint32 caimhcaacfg = 10;
	uint32 mamhojmfjof = 3;
}

message PlayerReturnInfoQueryScRsp {
	optional Afbneibijnd pfeidpolokm = 5;
	uint32 retcode = 3;
	uint32 gmfidnohgco = 4;
}

message PlayerReturnForceFinishScNotify {
	optional Afbneibijnd pfeidpolokm = 11;
}

message PlayerReturnTakeRelicCsReq {
	uint32 avatar_id = 11;
}

message PlayerReturnTakeRelicScRsp {
	optional ItemList item_list = 10;
	uint32 avatar_id = 9;
	uint32 retcode = 3;
}

message FinishPlotCsReq {
	uint32 cldajdjhoii = 2;
}

message FinishPlotScRsp {
	uint32 cldajdjhoii = 5;
	uint32 retcode = 4;
}

message Kaoahkaohfi {
	optional PunkLordBattleRecordList dhlpkmihdnm = 5;
	uint32 cojkeifjnek = 4;
	PunkLordAttackerStatus ekkjlaokiji = 1;
	optional PunkLordMonsterBasicInfo basic_info = 14;
}

message GetPunkLordMonsterDataCsReq {

}

message GetPunkLordMonsterDataScRsp {
	uint32 retcode = 2;
	repeated Kaoahkaohfi fijnjgfabjd = 4;
}

message StartPunkLordRaidCsReq {
	uint32 monster_id = 8;
	uint32 uid = 7;
	bool clommfkjpmm = 15;
}

message StartPunkLordRaidScRsp {
	bool clommfkjpmm = 5;
	repeated uint32 dmilcfhlihp = 7;
	uint32 retcode = 3;
	int64 agegdmgnpdk = 13;
	optional Kaoahkaohfi dpmkammiolb = 11;
	optional Fnlgplncpcl scene = 12;
}

message SharePunkLordMonsterCsReq {
	uint32 monster_id = 12;
	PunkLordShareType share_type = 5;
	uint32 uid = 3;
}

message SharePunkLordMonsterScRsp {
	uint32 retcode = 10;
	uint32 monster_id = 9;
	PunkLordShareType share_type = 4;
	uint32 uid = 5;
}

message SummonPunkLordMonsterCsReq {

}

message SummonPunkLordMonsterScRsp {
	uint32 retcode = 14;
	optional Kaoahkaohfi dpmkammiolb = 12;
}

message TakePunkLordPointRewardCsReq {
	uint32 level = 12;
	bool mdhjkkbnmcf = 15;
}

message TakePunkLordPointRewardScRsp {
	uint32 level = 8;
	bool mdhjkkbnmcf = 9;
	optional ItemList reward = 12;
	uint32 retcode = 5;
}

message PunkLordMonsterInfoScNotify {
	optional PunkLordMonsterBasicInfo basic_info = 4;
	repeated uint32 dmilcfhlihp = 12;
	PunkLordMonsterInfoNotifyReason reason = 5;
	optional Ahkankepadj dhlpkmihdnm = 6;
}

message GetPunkLordDataCsReq {

}

message GetPunkLordDataScRsp {
	uint32 iadcohodgjn = 6;
	int64 bedjdeancoj = 1;
	uint32 retcode = 2;
	uint32 ppnkpnbiien = 3;
	uint32 gnlmkkhaekm = 8;
	uint32 bdpbdgbkdoo = 14;
	uint32 gbjodjcolga = 7;
	repeated uint32 eahbikfallf = 4;
}

message PunkLordRaidTimeOutScNotify {
	optional PunkLordMonsterBasicInfo dpmkammiolb = 9;
}

message PunkLordBattleResultScNotify {
	uint32 pgofpnlapoe = 12;
	uint32 ncacoccjnld = 7;
	optional PunkLordMonsterBasicInfo dpmkammiolb = 14;
	optional Ahkankepadj dhlpkmihdnm = 4;
	uint32 ahjfpngdbdo = 8;
}

message Mdjgoockcmj {
	uint32 lkkjeilkpni = 4;
	int64 sent_time = 9;
	uint32 world_level = 10;
	uint32 config_id = 6;
	bool ppboceckcah = 7;
	uint32 monster_id = 3;
}

message GetKilledPunkLordMonsterDataCsReq {

}

message GetKilledPunkLordMonsterDataScRsp {
	repeated Mdjgoockcmj ddcemdgedio = 8;
	repeated PunkLordMonsterKey oakkccgaekk = 11;
	uint32 retcode = 12;
}

message PunkLordMonsterKilledNotify {
	optional Mdjgoockcmj aiecobkeigb = 7;
}

message TakeKilledPunkLordMonsterScoreCsReq {
	optional PunkLordMonsterKey pkcpjjnoaln = 3;
	bool kfejgfnonip = 12;
}

message TakeKilledPunkLordMonsterScoreScRsp {
	repeated PunkLordMonsterKey jeahdcgkbbb = 5;
	uint32 retcode = 15;
	bool kfejgfnonip = 8;
	uint32 score = 6;
}

message PunkLordDataChangeNotify {
	uint32 bdpbdgbkdoo = 5;
	uint32 gbjodjcolga = 10;
	uint32 iadcohodgjn = 6;
}

message GetPunkLordBattleRecordCsReq {
	optional PunkLordMonsterKey pkcpjjnoaln = 6;
}

message GetPunkLordBattleRecordScRsp {
	uint32 retcode = 5;
	optional PunkLordMonsterKey pkcpjjnoaln = 12;
	repeated Ahkankepadj battle_record_list = 7;
	repeated Cemedoehbge okobgjhjjoa = 15;
}

message GetQuestDataCsReq {

}

message Quest {
	uint32 id = 11;
	QuestStatus status = 2;
	repeated uint32 pgjngnajhpp = 15;
	int64 finish_time = 4;
	uint32 progress = 13;
}

message GetQuestDataScRsp {
	uint32 retcode = 1;
	repeated Quest quest_list = 13;
	uint32 total_achievement_exp = 3;
}

message TakeQuestRewardCsReq {
	repeated uint32 dcgjaboniic = 14;
}

message TakeQuestRewardScRsp {
	optional ItemList reward = 7;
	repeated uint32 nodoemdnbcj = 4;
	uint32 retcode = 10;
	repeated uint32 dcgjaboniic = 1;
}

message TakeQuestOptionalRewardCsReq {
	uint32 optional_reward_id = 2;
	uint32 jlfabhhnhcm = 9;
}

message TakeQuestOptionalRewardScRsp {
	optional ItemList reward = 9;
	uint32 retcode = 10;
	uint32 jlfabhhnhcm = 4;
}

message GetQuestRecordCsReq {

}

message Epjdfbaofdf {
	uint32 ijfihgcknhg = 7;
	uint32 progress = 8;
}

message GetQuestRecordScRsp {
	uint32 retcode = 6;
	repeated Epjdfbaofdf obemgacmgnh = 8;
}

message QuestRecordScNotify {
	optional Epjdfbaofdf feaocokkgbm = 9;
}

message FinishQuestCsReq {
	uint32 group_id = 11;
	uint32 prop_id = 13;
	uint32 jlfabhhnhcm = 15;
}

message FinishQuestScRsp {
	uint32 retcode = 7;
}

message BatchGetQuestDataCsReq {
	repeated uint32 quest_list = 10;
}

message BatchGetQuestDataScRsp {
	repeated Quest quest_list = 4;
	uint32 retcode = 2;
}

message Fnlgplncpcl {
	uint32 world_level = 5;
	optional SceneInfo ghedlclnhij = 4;
	uint32 cenifnknfnp = 2;
	optional LineupInfo lineup = 11;
}

message StartRaidCsReq {
	repeated uint32 avatar_list = 5;
	uint32 world_level = 11;
	uint32 jgeaegmhdoc = 4;
	uint32 cenifnknfnp = 8;
	uint32 prop_entity_id = 10;
}

message StartRaidScRsp {
	uint32 retcode = 2;
	optional Fnlgplncpcl scene = 4;
}

message LeaveRaidCsReq {
	uint32 cenifnknfnp = 4;
	bool jgeaegmhdoc = 3;
}

message LeaveRaidScRsp {
	uint32 cenifnknfnp = 4;
	uint32 world_level = 1;
	uint32 retcode = 13;
}

message Hochoihkkdg {
	uint32 hfaljihkecn = 3;
	Fochdfjanpc mddofmcjjhh = 8;
	uint32 dlppdpbjiim = 12;
}

message RaidInfoNotify {
	uint64 copmfambkdn = 2;
	uint32 cenifnknfnp = 15;
	uint32 world_level = 5;
	Jldfakdkmjj status = 14;
	repeated Hochoihkkdg lheilnacnod = 10;
	optional ItemList item_list = 7;
}

message Amdkbohcfia {
	uint32 cenifnknfnp = 5;
	uint32 stage_score = 3;
}

message Akdajafpdee {
	uint32 world_level = 11;
	uint32 cenifnknfnp = 1;
	repeated uint32 knibaniilde = 8;
}

message GetRaidInfoCsReq {

}

message GetRaidInfoScRsp {
	uint32 retcode = 4;
	repeated Amdkbohcfia challenge_raid_list = 2;
	repeated uint32 challenge_taken_reward_id_list = 11;
	repeated Akdajafpdee finished_raid_info_list = 8;
}

message GetChallengeRaidInfoCsReq {

}

message GetChallengeRaidInfoScRsp {
	repeated uint32 ioodmakjdif = 10;
	uint32 retcode = 1;
	repeated Amdkbohcfia mjgffcljgfn = 6;
}

message TakeChallengeRaidRewardCsReq {
	uint32 oehkjoafpba = 6;
}

message TakeChallengeRaidRewardScRsp {
	optional ItemList reward = 11;
	uint32 oehkjoafpba = 12;
	uint32 retcode = 15;
}

message ChallengeRaidNotify {
	optional Amdkbohcfia ehmiljfijkh = 11;
}

message SetClientRaidTargetCountCsReq {
	uint32 dmmppkmjpmm = 8;
	uint32 progress = 15;
}

message SetClientRaidTargetCountScRsp {
	uint32 retcode = 1;
	uint32 progress = 4;
	uint32 dmmppkmjpmm = 11;
}

message GetSaveRaidCsReq {
	uint32 world_level = 13;
	uint32 cenifnknfnp = 12;
}

message GetSaveRaidScRsp {
	bool jgeaegmhdoc = 12;
	uint32 world_level = 11;
	uint32 cenifnknfnp = 8;
	repeated Hochoihkkdg lheilnacnod = 4;
	uint32 retcode = 7;
}

message Jkdinnedbao {
	repeated Hochoihkkdg lheilnacnod = 12;
	uint32 world_level = 3;
	uint32 cenifnknfnp = 6;
}

message GetAllSaveRaidCsReq {

}

message GetAllSaveRaidScRsp {
	repeated Jkdinnedbao npjhicinona = 14;
	uint32 retcode = 2;
}

message DelSaveRaidScNotify {
	uint32 world_level = 7;
	uint32 cenifnknfnp = 9;
}

message RaidKickByServerScNotify {
	uint32 cenifnknfnp = 5;
	Egkfndoopnn reason = 7;
	optional LineupInfo lineup = 3;
	optional SceneInfo scene = 8;
	uint32 world_level = 2;
}

message Aconlfjejok {
	uint32 jjdmkhbkplm = 14;
}

message RaidCollectionDataCsReq {

}

message RaidCollectionDataScRsp {
	repeated Aconlfjejok challenge_list = 15;
	uint32 retcode = 7;
}

message RaidCollectionDataScNotify {
	optional Aconlfjejok collection_info = 8;
}

message RaidCollectionEnterNextRaidCsReq {
	uint32 world_level = 5;
	uint32 jgeaegmhdoc = 11;
	repeated uint32 avatar_list = 2;
	uint32 cenifnknfnp = 1;
}

message RaidCollectionEnterNextRaidScRsp {
	uint32 retcode = 7;
	optional Fnlgplncpcl scene = 5;
}

message GetRechargeGiftInfoCsReq {

}

message Oiopbdbjhie {
	int32 status = 14;
	uint32 index = 11;
}

message Liglfgkhlhg {

}

message Fpnjlddamgh {
	int64 end_time = 7;
	repeated Oiopbdbjhie migfmpjbelg = 12;
	int64 coifhfpegph = 1;
	uint32 dnajfmpcmll = 15;
}

message GetRechargeGiftInfoScRsp {
	repeated Fpnjlddamgh mmglcjmggih = 5;
	uint32 retcode = 15;
}

message TakeRechargeGiftRewardCsReq {
	uint32 dnajfmpcmll = 1;
}

message TakeRechargeGiftRewardScRsp {
	optional Fpnjlddamgh hnkgcndocak = 14;
	optional ItemList reward = 1;
	uint32 retcode = 15;
}

message GetRechargeBenefitInfoCsReq {

}

message Jmhojkkgnif {
	uint32 id = 2;
	uint32 progress = 8;
	repeated uint32 jclobiapkeg = 13;
	uint32 module_id = 14;
}

message GetRechargeBenefitInfoScRsp {
	repeated Jmhojkkgnif ehndmlffmhi = 12;
	uint32 retcode = 6;
}

message SyncRechargeBenefitInfoScNotify {
	optional Jmhojkkgnif amefppfcfji = 5;
}

message TakeRechargeBenefitRewardCsReq {
	uint32 id = 3;
}

message TakeRechargeBenefitRewardScRsp {
	optional Jmhojkkgnif amefppfcfji = 2;
	optional ItemList reward = 9;
	uint32 retcode = 13;
}

message GetChallengeRecommendLineupListCsReq {
	uint32 challenge_id = 15;
}

message Ahkggggibif {
	uint32 dcholkbfbgi = 12;
	uint32 ceifdikpdam = 7;
	repeated uint32 first_lineup_ids = 5;
	repeated uint32 second_lineup_ids = 6;
}

message GetChallengeRecommendLineupListScRsp {
	uint32 challenge_id = 7;
	uint32 retcode = 5;
	repeated Ahkggggibif jaejjmjpmnc = 2;
}

message RecomendedEquipmentInfo {
	uint32 lgiiahidlmg = 3;
	uint32 mdmgkhlhiin = 7;
}

message RecomendedEquipmentData {
	repeated RecomendedEquipmentInfo equipment_list = 13;
}

message RecomendedRelicInfo {
	uint32 ehceepmbddi = 8;
	uint32 fikkgbibcjk = 15;
	uint32 pdmgjkodfop = 5;
}

message RecomendedRelicData {
	repeated RecomendedRelicInfo cdhdmhlocpo = 3;
}

message Cagflkclgch {
	repeated uint32 dbgnciomiep = 9;
}

message Gpcpgbhofcf {
	repeated Cagflkclgch jaejjmjpmnc = 12;
}

message GetBigDataRecommendCsReq {
	BigDataRecommendType big_data_recommend_type = 7;
	uint32 recommended_avatar_id = 3;
}

message GetBigDataRecommendScRsp {
	BigDataRecommendType big_data_recommend_type = 8;
	uint32 recommended_avatar_id = 5;
	bool ogegkokgppj = 4;
	uint32 retcode = 9;
	oneof RecommendType {
		RecomendedEquipmentData RecomendedEquipmentData = 10;
		RecomendedRelicData RecomendedRelicData = 1;
		Gpcpgbhofcf Kghlfceobkk = 11;
	}
}

message RecomendedAvatarInfo {
	uint32 recommend_avatar_id = 2;
	uint32 relic_set_id = 15;
	repeated uint32 avatar_id_list = 4;
}

message BigDataRecommendRelicAvatar {
	repeated RecomendedAvatarInfo recommended_avatar_info_list = 7;
}

message Nkghhafanhn {
	uint32 fleefjlnlch = 15;
	uint32 kicobnpckae = 6;
	uint32 iikgcjfjadf = 14;
}

message Ghledkfiijh {
	uint32 jicdflimhhd = 8;
	uint32 kicobnpckae = 7;
}

message RecommendedRelicInfo {
	repeated Ghledkfiijh mpmfahlkeob = 8;
	repeated Ghledkfiijh lgejjajpedk = 1;
	uint32 avatar_id = 9;
	repeated Nkghhafanhn nobonccpeng = 7;
	repeated Ghledkfiijh fbbajbinglb = 11;
	repeated Ghledkfiijh kkcmfgmhimo = 13;
	repeated Nkghhafanhn pdbhnhpcnnj = 5;
}

message BigDataRecommendAvatarRelic {
	repeated RecommendedRelicInfo recomended_relic_info_list = 14;
}

message GetBigDataAllRecommendCsReq {
	BigDataRecommendType big_data_recommend_type = 6;
}

message GetBigDataAllRecommendScRsp {
	uint32 retcode = 8;
	BigDataRecommendType big_data_recommend_type = 3;
	oneof RecommendType {
		BigDataRecommendRelicAvatar RelicAvatar = 4;
		BigDataRecommendAvatarRelic AvatarRelic = 15;
	}
}

message Ejbiokmolaf {
	repeated uint32 ffbeebkogpn = 10;
}

message Knchlmgiljc {
	map<uint32, Ejbiokmolaf> mbgijnjfhge = 13;
	uint32 module_id = 1;
	uint32 nopdkldekkf = 7;
}

message GetAllRedDotDataCsReq {

}

message GetAllRedDotDataScRsp {
	uint32 retcode = 11;
	repeated Knchlmgiljc iagibdaichi = 1;
}

message UpdateRedDotDataCsReq {
	uint32 module_id = 11;
	uint32 group_id = 9;
	uint32 nopdkldekkf = 4;
	Ojljhfnfdkp honemgcfbgi = 15;
	repeated uint32 param_list = 14;
}

message UpdateRedDotDataScRsp {
	uint32 retcode = 7;
	uint32 nopdkldekkf = 1;
	uint32 group_id = 4;
	uint32 module_id = 3;
}

message GetSingleRedDotParamGroupCsReq {
	uint32 group_id = 4;
	uint32 nopdkldekkf = 6;
	uint32 module_id = 7;
}

message GetSingleRedDotParamGroupScRsp {
	uint32 group_id = 14;
	optional Ejbiokmolaf chpjjklgokm = 13;
	uint32 nopdkldekkf = 8;
	uint32 module_id = 6;
	uint32 retcode = 15;
}

message RelicSmartWearPlanData {
	repeated uint32 fahcacdfeih = 7;
	uint32 unique_id = 3;
	repeated uint32 egflalhojkf = 4;
	uint32 avatar_id = 14;
}

message RelicSmartWearGetPlanCsReq {
	uint32 avatar_id = 8;
}

message RelicSmartWearGetPlanScRsp {
	uint32 retcode = 14;
	repeated RelicSmartWearPlanData plan_list = 8;
	uint32 avatar_id = 2;
}

message RelicSmartWearAddPlanCsReq {
	optional RelicSmartWearPlanData eilidmcocho = 6;
}

message RelicSmartWearAddPlanScRsp {
	optional RelicSmartWearPlanData eilidmcocho = 15;
	uint32 retcode = 5;
}

message RelicSmartWearUpdatePlanCsReq {
	optional RelicSmartWearPlanData eilidmcocho = 10;
}

message RelicSmartWearUpdatePlanScRsp {
	uint32 retcode = 4;
	optional RelicSmartWearPlanData eilidmcocho = 1;
}

message RelicSmartWearDeletePlanCsReq {
	uint32 unique_id = 6;
}

message RelicSmartWearDeletePlanScRsp {
	uint32 unique_id = 15;
	uint32 retcode = 3;
}

message Pmdjbojkdnk {
	repeated uint32 egflalhojkf = 2;
	Anccglmmdjj jccfeachmbp = 13;
	repeated uint32 fahcacdfeih = 9;
}

message Hammfojbjhf {
	uint32 avatar_id = 9;
	repeated uint32 locked_relic_id_list = 4;
	optional Pmdjbojkdnk oodincnjphb = 10;
}

message RelicSmartWearGetPinRelicCsReq {
	uint32 avatar_id = 15;
}

message RelicSmartWearGetPinRelicScRsp {
	uint32 retcode = 13;
	repeated Hammfojbjhf fajbodiglef = 9;
	uint32 avatar_id = 12;
}

message RelicSmartWearUpdatePinRelicScNotify {
	uint32 relic_unique_id = 9;
	repeated Hammfojbjhf nonckfaogje = 12;
	repeated Hammfojbjhf eodjilefgfb = 8;
}

message RelicSmartWearUpdatePinRelicCsReq {
	optional Hammfojbjhf ibfnkoacmcp = 11;
}

message RelicSmartWearUpdatePinRelicScRsp {
	optional Hammfojbjhf ibfnkoacmcp = 7;
	uint32 retcode = 6;
}

message RelicSmartWearDeletePinRelicCsReq {
	bool nfnojdchonj = 5;
	uint32 avatar_id = 15;
	repeated Pmdjbojkdnk bdgjphfdcah = 13;
}

message RelicSmartWearDeletePinRelicScRsp {
	repeated Pmdjbojkdnk bdgjphfdcah = 8;
	uint32 avatar_id = 3;
	uint32 retcode = 15;
}

message GetReplayTokenCsReq {
	uint32 afehlmfibmd = 9;
	string kihbigpfkkn = 11;
	uint32 stage_id = 12;
	string bbemidhmnlm = 10;
	uint32 cmpbkbbkaoa = 6;
	ReplayType replay_type = 7;
}

message GetReplayTokenScRsp {
	string kihbigpfkkn = 15;
	uint32 retcode = 11;
	uint32 stage_id = 12;
	ReplayType replay_type = 9;
	string token = 14;
}

message GetPlayerReplayInfoCsReq {

}

message GetPlayerReplayInfoScRsp {
	repeated ReplayInfo kgcfealanko = 4;
	uint32 retcode = 14;
}

message GetRndOptionCsReq {
	uint32 id = 9;
}

message GetRndOptionScRsp {
	repeated uint32 eegeggbdhdg = 5;
	uint32 retcode = 11;
}

message DailyFirstMeetPamCsReq {

}

message DailyFirstMeetPamScRsp {
	uint32 retcode = 14;
}

message RogueBuff {
	uint32 buff_id = 8;
	uint32 level = 12;
}

message Oobcejfehmk {
	repeated RogueBuff buff_list = 12;
}

message RogueRoom {
	uint32 site_id = 13;
	Ilnpbecoepl beeeboiojif = 11;
	uint32 room_id = 9;
	Ilnpbecoepl hnlfgdmcjdf = 7;
	uint32 imimgfaaghm = 6;
}

message Ijmgmkchhef {
	repeated RogueRoom jdcliamkdhf = 2;
	uint32 cikibkaabim = 12;
	uint32 cur_site_id = 11;
	uint32 map_id = 1;
	uint32 area_id = 8;
}

message Bkaaebjkjkh {
	RogueStatus mkegbhjljnh = 2;
	Jdakamigkhf nookgajmfji = 6;
	uint32 gmpiiaeggek = 11;
	uint32 map_id = 4;
	bool fjoilohphlc = 7;
	uint32 area_id = 8;
}

message Omogaieofah {
	uint32 igchbpakbcb = 5;
	uint32 ekflpnlapdf = 11;
	uint32 djfckfemgoj = 8;
	uint32 bheidppfcka = 14;
	repeated uint32 pdihilclenm = 13;
	bool ehpmcgoelgb = 12;
	Nniohhmjghg hhmabjdimgm = 3;
	uint32 ipodnbljpol = 1;
	uint32 ckkekmjmabc = 6;
	uint32 cmogblhafhn = 2;
	optional ItemCostList fpoelpfcnbi = 4;
	repeated RogueBuff lhmidpambpd = 10;
	uint32 pdapeheambm = 7;
}

message Kfejfbbgiad {
	repeated RogueBuff kmpmdldhabn = 4;
	optional RogueBuff noenhhilnah = 8;
}

message Igjenciklof {
	uint32 bilbohbdbpn = 6;
	repeated RogueBuff ihgmpjnnmki = 3;
	repeated RogueBuff clplefhhafb = 8;
}

message Gdiilljbdcf {
	uint32 buff_id = 8;
	float famcmagfkcl = 13;
	optional ItemCostList item_cost_list = 6;
}

message RogueBuffEnhanceInfoList {
	repeated Gdiilljbdcf dakmmpkbmko = 15;
}

message Paimogcigij {
	uint32 cur_times = 5;
	uint32 deidchamdba = 11;
	uint32 blfaanhjpad = 12;
	map<uint32, uint32> gmafejejbho = 13;
	uint32 khncedgfpgl = 14;
}

message Olfpckagkak {
	repeated Paimogcigij ckgfonmaeko = 2;
}

message Bfljdbhbmnp {
	optional Olfpckagkak eeppkmpajoh = 7;
	repeated uint32 jacighhgcgb = 2;
}

message Keionffflco {
	repeated uint32 cmaggnfdkag = 8;
}

message Flecflldnfp {
	repeated uint32 imoiceebdco = 1;
}

message Ngffceicacd {
	uint32 ebnpocidpke = 12;
	oneof Micmckahmpl {
		ItemList Jdijkegcibp = 14;
		Oobcejfehmk Cndgjjljdof = 8;
	}
}

message Ejjglgpedee {
	optional ItemCostList gficflciejj = 15;
}

message Jheeloagmig {
	uint32 nidflbkpoeb = 13;
}

message RogueVirtualItemInfo {
	uint32 gfdbgcolkcp = 7;
	uint32 ipodnbljpol = 15;
	uint32 hgblomelble = 9;
	uint32 jkjmcfagocf = 11;
}

message RogueInfo {
	optional Dknmkfbobjf omcbcgchlgn = 285;
	optional Liikcgncbbf lagbgldlgcb = 1559;
}

message Liikcgncbbf {
	optional Mmchophfmah iblembncgpm = 13;
	optional Icildhnfjfg chmhpcngfao = 14;
	optional Hghcogepidm pfeaniahfpc = 10;
	optional Bfkmdfgcncd fejgmnnfflg = 7;
	optional Kicdahaplch rogue_virtual_item_info = 6;
}

message Dknmkfbobjf {
	bool gjboljkmgge = 1;
	optional Ojcealjifnd cmbhklpppad = 4;
	optional RogueCommonPendingAction kndmeilhkej = 15;
	optional Gabcapjghfg chmhpcngfao = 7;
	optional Omochgkhnik eeppkmpajoh = 11;
	optional Cfmapimjdfc lgopnbhhhbg = 2;
	optional Bcllbmeedkp aabchfbkpeg = 14;
	optional Efjdmhoakoo embagmmhipa = 5;
	RogueStatus status = 13;
	optional Ijmgmkchhef map_info = 10;
}

message Bfkmdfgcncd {
	int64 end_time = 11;
	int64 begin_time = 12;
	uint32 ahanjlehcga = 13;
}

message Mmchophfmah {
	repeated Bkaaebjkjkh jmmnaipoefo = 12;
}

message Icildhnfjfg {
	bool aoelkjeegkg = 14;
	uint32 hlbfbfdlaca = 3;
	uint32 alkilfnbfnm = 8;
	repeated uint32 fpchnblonlc = 2;
}

message Kicdahaplch {
	uint32 ifehbimemec = 1;
	uint32 bileoophjef = 15;
}

message Cfmapimjdfc {
	repeated RogueBuff lhmidpambpd = 5;
}

message Omochgkhnik {
	optional Olfpckagkak eeppkmpajoh = 13;
}

message Efjdmhoakoo {
	repeated uint32 avatar_id_list = 6;
	repeated uint32 mankkfpbfcb = 1;
	optional Ejjglgpedee fpjckpnlnfm = 7;
	repeated uint32 trial_avatar_id_list = 12;
}

message Hdjflbmlldp {
	optional Flecflldnfp gkflnmojncp = 8;
}

message Gabcapjghfg {
	bool aoelkjeegkg = 4;
	uint32 amnbmjofjoo = 9;
	uint32 hlbfbfdlaca = 8;
}

message Ojcealjifnd {
	repeated uint32 gjanfnhlogn = 9;
}

message Nikkccaknnp {
	bool aoelkjeegkg = 8;
	uint32 amnbmjofjoo = 7;
	uint32 hlbfbfdlaca = 12;
	repeated uint32 fpchnblonlc = 13;
	uint32 alkilfnbfnm = 3;
}

message Mncdpepcfgc {
	uint32 kobfcomhgce = 4;
	uint32 score = 9;
	uint32 fjjdfpkgopc = 14;
}

message Aojofbbnepa {
	float dpfbdjmnceo = 6;
	repeated Mncdpepcfgc dcmhgokcinf = 12;
	uint32 npjeecedpok = 15;
}

message Fgkcambiahb {
	AvatarType avatar_type = 9;
	uint32 level = 15;
	uint32 id = 11;
	uint32 slot = 2;
}

message Gkjfbbhhlac {
	repeated RogueBuff buff_list = 1;
	repeated uint32 ckgfonmaeko = 6;
	repeated Fgkcambiahb avatar_list = 3;
}

message RogueFinishInfo {
	uint32 mnbiebolccn = 5;
	uint32 lmmeanjpend = 321;
	uint32 bimdlghkaoi = 8;
	uint32 ifehbimemec = 14;
	uint32 score = 13;
	uint32 dedlgfjaeam = 9;
	bool is_win = 7;
	optional Gkjfbbhhlac record_info = 3;
	optional Hghcogepidm agppepmgfmf = 2;
	uint32 area_id = 1286;
	optional ItemList hlobjooebod = 1;
}

message Hghcogepidm {
	repeated uint32 cilnjididhl = 1;
	bool pjhlocdbaeh = 10;
	uint32 hdladibhbhh = 7;
	bool jomnpadaggk = 14;
	int64 hoepojnnfci = 15;
	int64 cigboghafof = 5;
	uint32 hhjpblekapn = 4;
}

message Eacofhbfmlb {
	uint32 aeon_id = 9;
	uint32 exp = 12;
	uint32 jgmipmdppij = 10;
	uint32 level = 13;
}

message Llocdppmjnn {
	uint32 arg_id = 7;
	bool gldjnhiggje = 8;
	uint32 rogue_dialogue_event_id = 13;
	float acdopcbmpnl = 10;
	int32 ggplcpchadn = 1;
}

message Lanlccobdne {
	uint32 game_mode_type = 7;
	uint32 cdjecokfiof = 15;
	repeated Llocdppmjnn dialogue_event_param_list = 8;
	uint32 onlhfcoglal = 2;
	uint32 event_unique_id = 4;
	repeated uint32 eoheeigobkd = 14;
}

message Gghfijkpfln {
	repeated uint32 jjealoemmkk = 1;
	Ffnedmegpjd bplmpmefeam = 3;
	oneof Micmckahmpl {
		ItemList Jdijkegcibp = 15;
	}
}

message GetRogueInfoCsReq {

}

message GetRogueInfoScRsp {
	optional RogueInfo rogue_info = 7;
	uint32 retcode = 12;
}

message StartRogueCsReq {
	uint32 aeon_id = 7;
	repeated uint32 avatar_id_list = 12;
	repeated uint32 trial_avatar_id_list = 1;
	uint32 area_id = 9;
	repeated uint32 base_avatar_id_list = 13;
}

message StartRogueScRsp {
	optional MapRotationData map_rotation_data = 7;
	optional RogueInfo rogue_info = 1;
	optional SceneInfo scene = 6;
	uint32 retcode = 5;
	optional LineupInfo lineup = 15;
}

message EnterRogueCsReq {
	uint32 area_id = 9;
}

message EnterRogueScRsp {
	optional MapRotationData map_rotation_data = 7;
	optional SceneInfo scene = 5;
	optional LineupInfo lineup = 6;
	uint32 retcode = 1;
	optional RogueInfo rogue_info = 15;
}

message LeaveRogueCsReq {

}

message LeaveRogueScRsp {
	optional SceneInfo scene = 7;
	uint32 retcode = 8;
	optional MapRotationData map_rotation_data = 14;
	optional RogueInfo rogue_info = 11;
	optional LineupInfo lineup = 5;
}

message SyncRogueFinishScNotify {
	optional RogueFinishInfo finish_info = 1;
}

message PickRogueAvatarCsReq {
	repeated uint32 trial_avatar_id_list = 6;
	repeated uint32 avatar_id_list = 5;
	uint32 prop_entity_id = 12;
}

message PickRogueAvatarScRsp {
	repeated uint32 trial_avatar_id_list = 10;
	repeated uint32 avatar_id_list = 7;
	uint32 retcode = 4;
}

message ReviveRogueAvatarCsReq {
	repeated uint32 trial_avatar_id_list = 10;
	uint32 interacted_prop_entity_id = 7;
	repeated uint32 avatar_id_list = 1;
}

message ReviveRogueAvatarScRsp {
	uint32 retcode = 12;
	repeated uint32 trial_avatar_id_list = 11;
	optional Ejjglgpedee fpjckpnlnfm = 1;
	repeated uint32 avatar_id_list = 9;
}

message SyncRogueReviveInfoScNotify {
	optional Ejjglgpedee fpjckpnlnfm = 8;
}

message GetRogueBuffEnhanceInfoCsReq {

}

message GetRogueBuffEnhanceInfoScRsp {
	uint32 retcode = 1;
	optional RogueBuffEnhanceInfoList buff_enhance_info = 2;
}

message EnhanceRogueBuffCsReq {
	uint32 ojeblmkkmgo = 12;
}

message EnhanceRogueBuffScRsp {
	uint32 retcode = 7;
	optional RogueBuff rogue_buff = 15;
	bool is_success = 9;
}

message QuitRogueCsReq {
	uint32 area_id = 11;
}

message QuitRogueScRsp {
	uint32 retcode = 1;
	optional RogueInfo rogue_info = 11;
}

message SyncRogueExploreWinScNotify {
	bool gjboljkmgge = 12;
}

message SyncRogueSeasonFinishScNotify {
	optional RogueFinishInfo finish_info = 13;
	optional Hghcogepidm pfeaniahfpc = 1;
	optional LineupInfo lineup = 2;
	optional SceneInfo scene = 9;
	bool nioldfffeln = 6;
}

message EnterRogueMapRoomCsReq {
	uint32 site_id = 13;
	uint32 room_id = 7;
}

message EnterRogueMapRoomScRsp {
	uint32 cur_site_id = 6;
	optional MapRotationData map_rotation_data = 10;
	optional LineupInfo lineup = 3;
	uint32 retcode = 1;
	optional SceneInfo scene = 14;
}

message SyncRogueMapRoomScNotify {
	optional RogueRoom cur_room = 11;
	uint32 map_id = 2;
}

message OpenRogueChestCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool eiddmghlpbp = 10;
}

message OpenRogueChestScRsp {
	optional ItemList reward = 12;
	uint32 retcode = 3;
	optional ItemList nhanakjfeab = 4;
	optional Mbkocmmicpg kjchgehdlno = 14;
}

message ExchangeRogueRewardKeyCsReq {
	uint32 count = 14;
}

message ExchangeRogueRewardKeyScRsp {
	uint32 count = 8;
	uint32 retcode = 5;
}

message SyncRogueAreaUnlockScNotify {
	uint32 area_id = 12;
}

message SyncRogueGetItemScNotify {
	optional ItemList iodfgfomgod = 13;
	optional ItemList acfcjiomjnf = 3;
}

message TakeRogueAeonLevelRewardCsReq {
	uint32 level = 13;
	uint32 aeon_id = 8;
}

message TakeRogueAeonLevelRewardScRsp {
	uint32 level = 5;
	uint32 retcode = 3;
	optional ItemList reward = 9;
	uint32 aeon_id = 13;
}

message SyncRogueAeonLevelUpRewardScNotify {
	optional ItemList reward = 5;
	uint32 aeon_id = 13;
	uint32 level = 1;
}

message GetRogueScoreRewardInfoCsReq {

}

message GetRogueScoreRewardInfoScRsp {
	uint32 retcode = 9;
	optional Hghcogepidm hndlhicdnpc = 10;
}

message TakeRogueScoreRewardCsReq {
	uint32 hhjpblekapn = 1;
	repeated uint32 lmmfpcokhee = 15;
}

message TakeRogueScoreRewardScRsp {
	uint32 hhjpblekapn = 11;
	optional Hghcogepidm pfeaniahfpc = 5;
	uint32 retcode = 9;
	optional ItemList reward = 6;
}

message GetRogueInitialScoreCsReq {

}

message GetRogueInitialScoreScRsp {
	optional Hghcogepidm pfeaniahfpc = 1;
	uint32 retcode = 8;
}

message GetRogueAeonInfoCsReq {

}

message GetRogueAeonInfoScRsp {
	uint32 retcode = 15;
	repeated Eacofhbfmlb belofmfhfdk = 2;
}

message FinishAeonDialogueGroupCsReq {
	uint32 aeon_id = 6;
}

message FinishAeonDialogueGroupScRsp {
	uint32 retcode = 14;
	optional ItemList reward = 1;
	optional Eacofhbfmlb chmhpcngfao = 8;
}

message GetRogueTalentInfoCsReq {

}

message GetRogueTalentInfoScRsp {
	optional RogueTalentInfoList talent_info = 14;
	uint32 retcode = 15;
}

message EnableRogueTalentCsReq {
	uint32 talent_id = 4;
}

message EnableRogueTalentScRsp {
	uint32 retcode = 2;
	optional RogueTalentInfoList talent_info = 1;
}

message SyncRogueVirtualItemInfoScNotify {
	optional RogueVirtualItemInfo rogue_virtual_item_info = 8;
}

message SyncRogueStatusScNotify {
	bool jienhhahfgi = 15;
	RogueStatus status = 2;
}

message SyncRogueRewardInfoScNotify {
	optional Hghcogepidm pfeaniahfpc = 13;
}

message SyncRoguePickAvatarInfoScNotify {
	repeated uint32 trial_avatar_id_list = 5;
	repeated uint32 avatar_id_list = 4;
}

message SyncRogueAeonScNotify {
	optional Nikkccaknnp gcjogflgbbh = 9;
}

message Llpnbnejkii {
	optional MapRotationData map_rotation_data = 6;
	optional LineupInfo lineup = 1;
	optional SceneInfo scene = 12;
}

message RogueArcadeStartCsReq {
	repeated uint32 avatar_id_list = 15;
	uint32 room_id = 10;
}

message RogueArcadeStartScRsp {
	optional Llpnbnejkii lcoclenjjai = 3;
	uint32 room_id = 5;
	uint32 retcode = 15;
}

message RogueArcadeLeaveCsReq {

}

message RogueArcadeLeaveScRsp {
	optional Llpnbnejkii lcoclenjjai = 8;
	uint32 retcode = 12;
}

message RogueArcadeRestartCsReq {

}

message RogueArcadeRestartScRsp {
	uint32 retcode = 8;
	optional Llpnbnejkii lcoclenjjai = 6;
}

message RogueArcadeGetInfoCsReq {

}

message RogueArcadeGetInfoScRsp {
	uint32 retcode = 11;
	uint32 room_id = 7;
}

message Ffamnkoaihf {
	uint32 meipgemgacj = 8;
	uint32 buff_id = 4;
}

message Gckblhadlgn {
	repeated Ffamnkoaihf buff_list = 14;
}

message Elheaghnndm {
	repeated uint32 cpiaahjfigl = 2;
	uint32 igchbpakbcb = 5;
	uint32 ekflpnlapdf = 1;
	optional ItemCostList fpoelpfcnbi = 4;
	uint32 ckkekmjmabc = 8;
	repeated uint32 pdihilclenm = 10;
	uint32 pdapeheambm = 7;
	bool ehpmcgoelgb = 13;
	uint32 cmogblhafhn = 3;
	uint32 djfckfemgoj = 12;
	uint32 bheidppfcka = 15;
	repeated Ffamnkoaihf kkhdljfohkc = 9;
	Nniohhmjghg hhmabjdimgm = 11;
}

message Hkhfbelmdcg {
	uint32 dhmnnemgfbl = 5;
}

message Hcajjefeijd {

}

message Mmndajfijoj {

}

message Djonnopdjhh {
	optional Elheaghnndm nlnbngijafi = 7;
}

message Kglojonkmkp {
	uint32 buff_id = 11;
	optional ItemCostList item_cost_list = 13;
}

message Ngpimhhelmm {
	repeated Kglojonkmkp dakmmpkbmko = 8;
}

message Inempcaknnc {
	uint32 bilbohbdbpn = 6;
	repeated Ffamnkoaihf ihgmpjnnmki = 5;
	repeated Ffamnkoaihf clplefhhafb = 14;
}

message Lefcomgmpcl {
	repeated Ffamnkoaihf ihgmpjnnmki = 10;
	uint32 bilbohbdbpn = 14;
}

message Pbmaklnjeko {
	uint32 ljejkccbcha = 1;
}

message Fkdbihnpche {

}

message Ipgkagffbhf {
	repeated Ffamnkoaihf dlfmgkpgmhl = 1;
	uint32 bilbohbdbpn = 12;
}

message Okefiddnlkg {
	uint32 dhmnnemgfbl = 4;
}

message Dlhpdalgdeh {

}

message Kbpmfkknbjh {
	uint32 bilbohbdbpn = 11;
	repeated Ffamnkoaihf kkhdljfohkc = 1;
}

message Bfbfmlbhgoh {
	uint32 dhmnnemgfbl = 13;
}

message Oopdmmnnkgi {

}

message Kcacnhcadec {
	optional Gckblhadlgn lchkkhngbgj = 12;
}

message Gjoibmfanhl {
	uint32 blfaanhjpad = 4;
	uint32 cur_times = 5;
	map<uint32, uint32> gmafejejbho = 9;
	uint32 deidchamdba = 10;
}

message Lajbhghnbac {
	uint32 bemceedabfd = 6;
	optional Gjoibmfanhl jalamopldho = 9;
	bool ganhklnpapi = 15;
}

message Jpajnjbebfb {
	optional Gjoibmfanhl jibdgcfcdio = 3;
}

message Gliaipcabim {
	uint32 deidchamdba = 4;
}

message Ibibpoopden {
	uint32 lgjfnaiagld = 15;
	optional Gjoibmfanhl jibdgcfcdio = 2;
	uint32 fkpihaahhbi = 14;
}

message Maaaagpjjfe {
	optional Gjoibmfanhl jibdgcfcdio = 8;
}

message Pbaloejcgfn {
	uint32 bemceedabfd = 4;
	optional Gjoibmfanhl jalamopldho = 12;
}

message Hblnhganbab {
	optional Gjoibmfanhl jibdgcfcdio = 1;
}

message Ajpfphkklpg {
	repeated Gjoibmfanhl ckgfonmaeko = 12;
}

message Ebhghgiigom {
	uint32 bilbohbdbpn = 7;
	repeated uint32 komjmfikbam = 12;
	bool apikleggdhm = 9;
	repeated uint32 jacighhgcgb = 10;
	uint32 bmfcbcmclaf = 15;
	uint32 oooecpaacck = 4;
}

message Mpphhnaeedk {
	uint32 cghlhfnladn = 7;
}

message Cffocchbamh {

}

message Jfpfdjppoag {

}

message Honkbmjpjaa {
	optional Ebhghgiigom cjenjifeidi = 7;
}

message Anmcaimelca {
	repeated uint32 cmaggnfdkag = 1;
}

message Gabbehoipjc {
	uint32 bilbohbdbpn = 14;
	repeated uint32 dcjeggjpcdf = 6;
}

message Nalelighdaa {
	uint32 abmamcfpcci = 8;
}

message Paocongeljk {

}

message Mlkiccaelke {
	repeated uint32 anbpnihmkah = 10;
	uint32 bilbohbdbpn = 8;
}

message Pkodmmphibc {
	uint32 jibhljneicm = 2;
}

message Blfjbkbhjil {

}

message Eakecfappkd {
	repeated uint32 fikenbeondj = 4;
	uint32 bilbohbdbpn = 3;
}

message Nhckhplklio {
	uint32 ibemojgallk = 7;
}

message Omjfmbjmfmc {

}

message Eldafcnmfbf {
	uint32 bilbohbdbpn = 1;
	repeated uint32 mdpdadooobn = 10;
}

message Lhjpikekpgh {
	uint32 gakjolgdbbd = 1;
}

message Moiknhhcabh {

}

message Lcagiooiidn {
	repeated uint32 jlhfojodokg = 6;
	uint32 bilbohbdbpn = 1;
}

message Imcbiigokpm {
	uint32 cghlhfnladn = 3;
}

message Fhikplaioei {

}

message Ofpeknmfmab {
	uint32 bilbohbdbpn = 15;
	repeated uint32 jlhfojodokg = 10;
}

message Lkmkhacmapc {
	uint32 cghlhfnladn = 14;
}

message Nococfhoajc {

}

message Imlbibjkpdb {
	uint32 eidnigddohp = 10;
}

message Jcahmiooldb {

}

message Nkidddpflje {
	optional Ajpfphkklpg jlnilijomem = 11;
}

message Dlcjmohobdh {
	repeated uint32 imoiceebdco = 14;
}

message Bcllbmeedkp {
	uint32 amnkmbmhkdf = 3;
	uint32 bpjoapfafkk = 13;
	uint32 dafalaoaooi = 14;
	uint32 mnkeniamhdd = 6;
}

message Kildamjjlmf {
	uint32 display_type = 3;
	uint32 num = 14;
}

message Mdgjikljdde {
	AvatarType avatar_type = 4;
	uint32 avatar_id = 15;
}

message Ddjhdehmhcf {
	uint32 bnckfbfmgmi = 15;
	uint32 geefhdjkokg = 13;
}

message Cfellcpmonh {
	optional ItemList item_list = 4;
}

message Oiaolbgoaag {
	optional Cfellcpmonh hhphlegcldm = 12;
	optional Ddjhdehmhcf noaednnibaf = 10;
}

message Ahccdbfmndi {

}

message Aokijgcoapd {
	int32 count = 10;
}

message Cihfcleakij {
	uint32 deidchamdba = 14;
}

message Ekelnnlplod {

}

message RogueAdventureRoomGameplayWolfGunTarget {

}

message Ckjcfdjkdfg {
	repeated RogueAdventureRoomGameplayWolfGunTarget battle_target_list = 15;
	uint32 dhpabbnjoli = 12;
}

message Fhepdkkhfcf {
	oneof Kfelkjldkeh {
		Ckjcfdjkdfg Lachncfkako = 11;
	}
}

message Cncajkhccec {
	double bdebmbgffka = 12;
	uint32 score = 1;
	optional Fhepdkkhfcf blndmfgkpmj = 9;
	uint32 dpmleipaoil = 15;
	uint32 status = 8;
	uint32 mcmclafdldc = 10;
}

message SyncRogueAdventureRoomInfoScNotify {
	optional Cncajkhccec cdlakdmejlg = 9;
}

message PrepareRogueAdventureRoomCsReq {

}

message PrepareRogueAdventureRoomScRsp {
	uint32 retcode = 2;
	optional Cncajkhccec cdlakdmejlg = 5;
}

message StopRogueAdventureRoomCsReq {
	uint32 mmhmdhihcab = 8;
	repeated uint32 ipogaccfmol = 14;
}

message StopRogueAdventureRoomScRsp {
	optional Cncajkhccec cdlakdmejlg = 7;
	uint32 retcode = 11;
}

message GetRogueAdventureRoomInfoCsReq {

}

message GetRogueAdventureRoomInfoScRsp {
	optional Cncajkhccec cdlakdmejlg = 7;
	uint32 retcode = 1;
}

message UpdateRogueAdventureRoomScoreCsReq {
	uint32 score = 12;
	uint32 hmffhgbkogl = 14;
}

message UpdateRogueAdventureRoomScoreScRsp {
	uint32 retcode = 6;
	optional Cncajkhccec cdlakdmejlg = 7;
}

message Ahclnmjpmij {
	bool poapegkpfob = 8;
	optional ItemCostList item_cost_list = 9;
	optional ItemCostList nblffdipbhi = 2;
	bool bphcbohkhmd = 11;
	uint32 deidchamdba = 4;
}

message Mgkfkecfhhm {
	uint32 buff_id = 14;
	optional ItemCostList item_cost_list = 15;
	optional ItemCostList nblffdipbhi = 1;
	bool poapegkpfob = 12;
	uint32 leaaebafchp = 7;
	bool bphcbohkhmd = 8;
}

message Iilhoakjdnh {
	optional ItemCostList item_cost_list = 1;
	optional ItemCostList nblffdipbhi = 3;
	uint32 formula_id = 5;
	bool bphcbohkhmd = 15;
	bool poapegkpfob = 14;
}

message Nnjolkjlpjg {
	repeated Ahclnmjpmij ckgfonmaeko = 12;
}

message Anjdkfjoeei {
	repeated Mgkfkecfhhm buff_list = 14;
}

message Glppdleccli {
	repeated Iilhoakjdnh omfdhfgbgaa = 10;
}

message GetRogueShopBuffInfoCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool hmilghcpede = 10;
}

message GetRogueShopBuffInfoScRsp {
	int32 efojocfgidj = 3;
	uint32 retcode = 15;
	optional Anjdkfjoeei lgopnbhhhbg = 6;
	optional ItemCostList ihjhccfmifd = 4;
	int32 aefhkanbfnc = 8;
}

message GetRogueShopMiracleInfoCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool hmilghcpede = 12;
}

message GetRogueShopMiracleInfoScRsp {
	uint32 retcode = 7;
	int32 aefhkanbfnc = 15;
	optional Nnjolkjlpjg eeppkmpajoh = 11;
	optional ItemCostList ihjhccfmifd = 12;
	int32 efojocfgidj = 10;
}

message GetRogueShopFormulaInfoCsReq {
	bool hmilghcpede = 14;
	uint32 interacted_prop_entity_id = 2;
}

message GetRogueShopFormulaInfoScRsp {
	optional Glppdleccli ckaanmddkcj = 4;
	uint32 retcode = 5;
	int32 aefhkanbfnc = 7;
	optional ItemCostList ihjhccfmifd = 14;
	int32 efojocfgidj = 10;
}

message BuyRogueShopFormulaCsReq {
	uint32 deidchamdba = 6;
	uint32 interacted_prop_entity_id = 9;
}

message BuyRogueShopBuffCsReq {
	uint32 interacted_prop_entity_id = 10;
	repeated uint32 bought_miracle_list = 6;
}

message BuyRogueShopMiracleCsReq {
	uint32 interacted_prop_entity_id = 6;
	repeated uint32 aoiihcfmfph = 1;
}

message BuyRogueShopMiracleScRsp {
	uint32 retcode = 14;
	optional Nnjolkjlpjg eeppkmpajoh = 13;
}

message BuyRogueShopBuffScRsp {
	uint32 retcode = 4;
	optional Anjdkfjoeei lgopnbhhhbg = 5;
}

message BuyRogueShopFormulaScRsp {
	optional Glppdleccli ckaanmddkcj = 5;
	uint32 retcode = 1;
}

message RogueNpcDisappearCsReq {
	uint32 icinggkoemg = 1;
}

message RogueNpcDisappearScRsp {
	uint32 retcode = 1;
}

message RogueShopBeginBattleCsReq {
	uint32 interacted_prop_entity_id = 5;
}

message RogueShopBeginBattleScRsp {
	optional SceneBattleInfo nopheehjhek = 9;
	uint32 retcode = 6;
}

message SyncRogueCommonActionResultScNotify {
	repeated RogueCommonActionResult action_result_list = 7;
	RogueCommonActionResultDisplayType display_type = 15;
	uint32 rogue_sub_mode = 4;
}

message RogueCommonActionResult {
	optional Pnieaceijkm pbhmgchkjgo = 4;
	Cfjgpifiool source = 8;
}

message Aenockpnfci {
	int32 jpcllfaieec = 11;
	uint32 key = 3;
}

message Mlpknllaoif {
	int32 eegcbbhophg = 5;
	uint32 jpnfbfkhpgd = 8;
	int32 cfclogfjpbd = 14;
}

message Nhehpgonepk {
	uint32 formula_id = 1;
	repeated Aenockpnfci kokiifcmogl = 10;
	bool eeeionccing = 4;
}

message Fcknnieaohi {
	map<uint32, int32> nadoccephjo = 6;
}

message Dbndiagbmji {
	optional Nhehpgonepk gepenpidkij = 1;
}

message Cdnejceknlf {
	optional Nhehpgonepk gepenpidkij = 6;
}

message Dcgjlcpclbl {
	optional Nhehpgonepk gepenpidkij = 12;
}

message Mjcopbfejji {
	optional Nhehpgonepk gepenpidkij = 13;
}

message Fipfphbphlh {
	repeated Mlpknllaoif ilbkmnajgmo = 6;
}

message Lbkkdlhoegn {
	optional Fcknnieaohi value = 14;
}

message Kaajbaoakbo {
	optional Fcknnieaohi dlmhaecabod = 2;
	repeated Mlpknllaoif ilbkmnajgmo = 11;
	repeated Nhehpgonepk omfdhfgbgaa = 9;
}

message Goeekpllcbj {
	uint32 bhapdmjcklb = 14;
}

message Dflkelghook {
	uint32 bhapdmjcklb = 8;
}

message Fbnjofcemil {
	map<uint32, bool> nfnmbgboccl = 5;
}

message Pnieaceijkm {

}

message Lojdfdjgoda {
	uint32 acbggdlenhp = 12;
	bool ehpmcgoelgb = 6;
	uint32 bilbohbdbpn = 8;
	uint32 jcoggobkbpj = 11;
	optional ItemCostList kidaaobhlpd = 14;
	repeated uint32 habohejfcke = 4;
	uint32 kemeoojkoib = 10;
	repeated uint32 ahcgpccoofo = 3;
}

message Nolcmkcneaf {
	uint32 oambghfhfmo = 7;
}

message Plcgkieiegd {

}

message Fhmaianenpo {
	repeated uint32 laldacmchfi = 7;
	uint32 bilbohbdbpn = 12;
}

message Onoofhdeidd {
	uint32 oambghfhfmo = 12;
}

message Hkjegongjnp {

}

message Khgcdeimlhn {

}

message Ehefommbnaf {
	optional Lojdfdjgoda bjehoafbhbe = 9;
}

message Bpddobahpna {
	optional Lojdfdjgoda bjehoafbhbe = 7;
}

message Ekmahafgngj {
	uint32 oambghfhfmo = 9;
}

message Hbiblkkeoac {

}

message Lgcmeepjmha {
	uint32 idignadndnf = 4;
}

message Koegffomkip {
	uint32 slot = 15;
	uint32 type = 7;
	uint32 elpinnnalbd = 4;
}

message Inpinnpihob {
	uint32 level = 14;
	uint32 scepter_id = 8;
}

message Jbihocioanh {
	map<uint32, uint32> trench_count = 2;
	repeated Obipoolidal plmkmopcdlm = 7;
	optional Inpinnpihob scepter = 1;
	repeated Koegffomkip fpgefhenccf = 4;
}

message Obipoolidal {
	uint32 level = 4;
	uint32 unit_id = 1;
}

message Jfgflgblcaj {
	uint32 unique_id = 10;
	optional Obipoolidal lcbecpoogcl = 7;
}

message Knjaeackjib {
	optional Jbihocioanh clmfnahfnll = 15;
}

message Lhpdolpkfeo {
	optional Jbihocioanh clmfnahfnll = 2;
}

message Aeffjlgfamh {
	optional Jbihocioanh clmfnahfnll = 9;
}

message Okecopgklee {
	optional Jfgflgblcaj pmgjicchhdl = 13;
}

message Pgakdejbohf {
	optional Jfgflgblcaj jfpjbbjlifk = 13;
}

message Oedoaogakpp {
	optional Obipoolidal fgdjamhokif = 1;
	repeated Obipoolidal gigibipgpfc = 14;
	uint32 bilbohbdbpn = 3;
	uint32 igchbpakbcb = 7;
	uint32 ckkekmjmabc = 8;
}

message Kkagnmemkog {
	repeated Jfgflgblcaj gigibipgpfc = 7;
	uint32 bilbohbdbpn = 11;
}

message Hhhcpcofppo {
	optional Obipoolidal pobkdoigdab = 11;
}

message Iipeghdkhgd {
	optional Jfgflgblcaj pobkdoigdab = 11;
}

message Mhijocjhong {

}

message Abpncpoijci {

}

message Imnnnjggpag {

}

message Imdhpdbhebc {

}

message Hobkeoicbmi {
	optional Jfgflgblcaj eocipkgjfop = 7;
	repeated uint32 hkklpldnpkd = 3;
}

message Flnagdeoopg {
	repeated Inpinnpihob chpkdjnhpfo = 5;
	uint32 bilbohbdbpn = 2;
}

message Ahkfiakmklo {
	bool abbmhpkgaik = 15;
	optional Inpinnpihob obfpaiamijl = 13;
}

message Bledojdglaa {

}

message Ikcndljlapp {

}

message Jkhkebmobej {
	optional Inpinnpihob jbjggnbjkdj = 6;
}

message Jcdljbphomd {
	optional Inpinnpihob ghelbobfpam = 10;
	bool blciljenelo = 3;
}

message Lgpgcjdoibk {

}

message Lnamgomhgjb {
	uint32 iboekjbomog = 1;
}

message Cgjnhnmamdh {
	uint32 ldfgifdfpcf = 1;
	repeated uint32 kdaoimpppki = 13;
	int32 jmcembehcoj = 6;
}

message Cggbpjichgf {
	uint32 bilbohbdbpn = 1;
	uint32 nclaehaijjb = 14;
	uint32 gmilngghedc = 9;
	uint32 ofbmpojpdoj = 8;
	repeated uint32 gbooalmikob = 7;
	Ndkljjiimgm obiedgmebdl = 2;
}

message Haojlhgnfpm {
	uint32 jmehmhkbjah = 5;
}

message Bljoggmjbmd {

}

message Oopinhfmece {

}

message Onpnbiommgb {
	optional Cggbpjichgf nifjfldkikk = 15;
}

message Pigfbkojnhg {
	uint32 event_unique_id = 7;
}

message Ajnajinfjic {
	bool is_win = 11;
	uint32 battle_event_id = 9;
}

message Mnmloapbhnf {
	uint32 event_unique_id = 8;
}

message SyncRogueCommonPendingActionScNotify {
	uint32 rogue_sub_mode = 4;
	optional RogueCommonPendingAction action = 1;
}

message RogueCommonPendingAction {
	uint32 hbapccegnme = 4;
	optional Eiohagheloa pbhmgchkjgo = 15;
}

message Eiohagheloa {

}

message HandleRogueCommonPendingActionCsReq {
	uint32 ifdkllhfpjb = 4;
}

message HandleRogueCommonPendingActionScRsp {
	uint32 ifdkllhfpjb = 9;
	uint32 hbapccegnme = 6;
	uint32 retcode = 10;
}

message Fcpmbjhfbnj {
	uint32 ojeblmkkmgo = 14;
}

message Giadlheephd {
	bool fjoilohphlc = 13;
	uint32 fhhgdpcecee = 4;
}

message Lognkekhbai {
	bool fjoilohphlc = 11;
	uint32 ajbepahcgik = 5;
}

message Knijhgnjijm {
	uint32 level = 9;
	uint32 exp = 4;
	uint32 aeon_id = 6;
	repeated uint32 dpmibdhkdae = 15;
	uint32 jgmipmdppij = 1;
	repeated uint32 ddgcfjdbooh = 14;
}

message Ooceoilkcfi {
	optional Inpinnpihob jlfddmekljk = 4;
}

message Eoejhkjllpk {
	uint32 unit_id = 3;
	uint32 ppmiogcfooc = 9;
}

message Aeknflomljh {
	repeated Fcpmbjhfbnj buff_list = 9;
	repeated Knijhgnjijm belofmfhfdk = 10;
	repeated Giadlheephd ckgfonmaeko = 7;
	repeated Lognkekhbai bjcmphlpknf = 5;
}

message GetRogueHandbookDataCsReq {

}

message GetRogueHandbookDataScRsp {
	optional Aeknflomljh iakcmplpoee = 13;
	uint32 retcode = 4;
}

message SyncRogueHandbookDataUpdateScNotify {
	repeated Fcpmbjhfbnj abibobfdkld = 15;
	repeated Lognkekhbai haebaambnbb = 7;
	repeated Ooceoilkcfi bjkpkfbfdff = 4;
	repeated Eoejhkjllpk mmhchhcofpb = 12;
	repeated Giadlheephd idddcjonpfn = 5;
}

message TakeRogueMiracleHandbookRewardCsReq {
	repeated uint32 afhddnggnbf = 8;
}

message TakeRogueMiracleHandbookRewardScRsp {
	uint32 retcode = 7;
	optional ItemList reward = 11;
	repeated uint32 feifjadcdfl = 9;
}

message TakeRogueEventHandbookRewardCsReq {
	repeated uint32 idoecnpkgce = 14;
}

message TakeRogueEventHandbookRewardScRsp {
	optional ItemList reward = 12;
	uint32 retcode = 7;
	repeated uint32 dpjhilhgoke = 8;
}

message Findafkpoof {
	map<uint32, uint32> glaphhabohp = 14;
}

message Ladhikpajcj {
	optional Eendhpkpflp bohdminejno = 9;
	int32 icjabpgmacj = 12;
	uint32 amnbmjofjoo = 14;
}

message Ohlcjedcofn {
	repeated uint32 dimhpbcpnlc = 10;
}

message Omdefbabnnb {
	optional ItemCostList gficflciejj = 9;
	repeated uint32 avatar_id_list = 14;
}

message Lgkgehhajje {
	oneof Jpbheojakge {
		Kcacnhcadec Lgopnbhhhbg = 12;
		Nkidddpflje Eeppkmpajoh = 13;
		Findafkpoof Fffccejifdk = 8;
		Ladhikpajcj Chmhpcngfao = 1;
		Ohlcjedcofn Fiocabcbnkb = 7;
		Kaajbaoakbo Ckaanmddkcj = 11;
		Fbnjofcemil Nbdacdnbjik = 15;
		Omdefbabnnb Embagmmhipa = 3;
	}
}

message Pmjgkhpkhcm {
	uint32 illodgaefae = 15;
	uint32 agebambkkbc = 5;
	uint32 rogue_sub_mode = 10;
	repeated Lgkgehhajje biphngcadde = 4;
	uint32 egmebanhhnf = 7;
}

message Klaahjhnlcj {
	bool cdiajkejdha = 6;
	uint32 bhpcnnfokee = 3;
	uint32 progress = 10;
}

message Ibcknkpjfoj {
	Kpabffanjbk status = 6;
	repeated Klaahjhnlcj pgimncfhjea = 12;
	uint32 talent_id = 10;
}

message RogueTalentInfoList {
	repeated Ibcknkpjfoj lgnnmajmeil = 1;
}

message Pojeeialjfi {
	uint32 mgkkgnldgcl = 1;
	uint32 baphhckihmo = 7;
}

message SyncRogueCommonVirtualItemInfoScNotify {
	repeated Pojeeialjfi idjjpafpmdm = 9;
}

message Mapomoilgeh {
	uint32 mbkfininnek = 15;
	uint32 gedjniaefho = 13;
	uint32 bdcffobgkoa = 11;
}

message Plgdcfipeaa {
	repeated Odopdkelaeb jpgcdjdgdbi = 8;
}

message Ilaekjcnemf {
	repeated uint32 afedjkmfodp = 12;
}

message Lgjmdnnmppe {
	optional Ilaekjcnemf nolhgnhaema = 3;
	optional Mapomoilgeh ongpjogkkjn = 15;
	optional Plgdcfipeaa kjkbkegighk = 5;
}

message CommonRogueQueryCsReq {

}

message CommonRogueQueryScRsp {
	uint32 fhhbjlhajfj = 10;
	optional Lgjmdnnmppe lagbgldlgcb = 12;
	uint32 retcode = 1;
}

message CommonRogueUpdateScNotify {
	oneof Dgikifjodbm {
		Mapomoilgeh Ongpjogkkjn = 6;
		Plgdcfipeaa Kjkbkegighk = 10;
		Ilaekjcnemf Nolhgnhaema = 15;
	}
}

message Ikamknhggok {
	uint32 onlhfcoglal = 12;
	uint32 cdjecokfiof = 8;
}

message Gnjapomllhe {
	uint32 bglehmkmapg = 13;
}

message Cnhhpdhbmdc {
	uint32 bglehmkmapg = 2;
}

message Jieaafjenlk {
	uint32 formula_id = 13;
}

message Hpjlafhhgjg {
	uint32 bglehmkmapg = 3;
}

message Afccaoacnak {
	uint32 dgaklnofdpp = 2;
}

message Jbmeclkggdk {
	oneof Acdobbpldbg {
		Ikamknhggok Hpnoggfdpkm = 3;
		Gnjapomllhe Admahlaalnh = 10;
		Cnhhpdhbmdc Oddgcbpoplf = 2;
		Jieaafjenlk Gmakhonaeph = 11;
		Hpjlafhhgjg Cacgekaankl = 9;
		Afccaoacnak Aggblhgkpfj = 7;
	}
}

message Abenfanelfl {
	int32 ggplcpchadn = 7;
	float lmbiodpohge = 3;
}

message Gokkmeomofc {
	uint32 battle_event_id = 6;
}

message Nebpghddepc {
	int32 jefioihhclg = 8;
}

message Hjpgncngilg {
	oneof Dcoeclcedob {
		Gokkmeomofc Capijnmcdam = 10;
		Nebpghddepc Hmlcehikffk = 3;
	}
}

message Gbabekpblhn {
	bool pipmgacmjnn = 6;
	bool gldjnhiggje = 13;
	optional Abenfanelfl display_value = 4;
	uint32 arg_id = 1;
	repeated Hjpgncngilg pocjcmkkjik = 8;
	uint32 kdmlllghjon = 7;
}

message Hgeknliffed {
	uint32 event_unique_id = 4;
	repeated Gbabekpblhn lekpkocnjal = 6;
	optional Jbmeclkggdk bdoemgmhalj = 2;
}

message GetRogueCommonDialogueDataCsReq {

}

message GetRogueCommonDialogueDataScRsp {
	repeated Hgeknliffed dckilldonhg = 9;
	uint32 retcode = 1;
}

message SelectRogueCommonDialogueOptionCsReq {
	uint32 kdmlllghjon = 7;
	uint32 event_unique_id = 12;
}

message SelectRogueCommonDialogueOptionScRsp {
	optional Hgeknliffed oidiaddnacm = 3;
	uint32 kdmlllghjon = 8;
	repeated uint32 jidlbfoebid = 5;
	uint32 retcode = 11;
	bool adjgdbbnplc = 10;
	uint32 event_unique_id = 15;
}

message FinishRogueCommonDialogueCsReq {
	uint32 event_unique_id = 7;
}

message FinishRogueCommonDialogueScRsp {
	uint32 event_unique_id = 9;
	uint32 retcode = 7;
}

message SyncRogueCommonDialogueDataScNotify {
	repeated Hgeknliffed dckilldonhg = 1;
}

message SyncRogueCommonDialogueOptionFinishScNotify {
	optional Gbabekpblhn dgncfmdppbf = 8;
	optional Hgeknliffed oidiaddnacm = 15;
	uint32 event_unique_id = 3;
	uint32 kdmlllghjon = 5;
}

message Mikfnbbopip {
	optional RogueCommonPendingAction kndmeilhkej = 9;
	uint32 egmebanhhnf = 11;
	string mdlndgijnml = 14;
	uint32 rogue_sub_mode = 6;
	uint32 illodgaefae = 3;
	uint32 agebambkkbc = 7;
}

message RogueWorkbenchGetInfoCsReq {
	uint32 prop_entity_id = 11;
}

message RogueWorkbenchGetInfoScRsp {
	map<uint32, Mhccpddkkda> gajpnngmhnk = 12;
	uint32 retcode = 9;
}

message Mhccpddkkda {

}

message Glpeeijalgf {
	uint32 jifkhckpnfm = 13;
	uint32 anlincfgfan = 4;
	optional ItemCostList item_cost_list = 2;
	int32 dmmamjgngnn = 1;
	bool fobaoeafnam = 7;
}

message Jcijcafjjkn {
	uint32 anlincfgfan = 7;
	uint32 jifkhckpnfm = 11;
	int32 dmmamjgngnn = 8;
	optional ItemCostList item_cost_list = 6;
	bool fobaoeafnam = 14;
}

message Ajmibfecflj {
	uint32 cur_num = 14;
	map<uint32, uint32> hcpacbhcmhn = 2;
	uint32 max_num = 6;
}

message Lpilgjepagj {
	uint32 jifkhckpnfm = 6;
	int32 dmmamjgngnn = 7;
	optional ItemCostList item_cost_list = 8;
	map<uint32, bool> nfnicipmjii = 12;
}

message Igilogohejp {
	uint32 jifkhckpnfm = 2;
	int32 dmmamjgngnn = 3;
	optional ItemCostList item_cost_list = 6;
}

message Coahgflonan {
	optional ItemCostList item_cost_list = 13;
	optional Inpinnpihob jlfddmekljk = 4;
	optional ItemCostList hbpblgllien = 2;
	bool ngkjpcehmba = 11;
}

message Khcbgnlnpel {
	repeated Coahgflonan picfhpkdnel = 1;
}

message Aogiimkcjdj {
	uint32 ppmiogcfooc = 13;
	uint32 unit_id = 2;
	optional ItemCostList hbpblgllien = 10;
	optional ItemCostList item_cost_list = 12;
	bool ngkjpcehmba = 7;
}

message Kmhibngafeo {
	repeated Aogiimkcjdj magic_list = 9;
}

message Dmkpfgebilh {
	optional ItemCostList item_cost_list = 11;
	uint32 jifkhckpnfm = 15;
	int32 dmmamjgngnn = 5;
}

message Lfggpngkbch {
	int32 dmmamjgngnn = 6;
	uint32 jifkhckpnfm = 7;
	map<uint32, ItemCostList> iakhmmelmfd = 15;
	optional ItemCostList faidibodmch = 5;
}

message Kifilcjolch {
	uint32 scepter_id = 2;
	optional ItemCostList item_cost_list = 8;
}

message Dhmfcidjbfd {
	repeated Kifilcjolch eldolkcakae = 8;
}

message RogueWorkbenchHandleFuncCsReq {
	uint32 hobjminnbop = 6;
	uint32 prop_entity_id = 7;
	optional Akmbehgcbhe lbobpbhelgj = 10;
}

message RogueWorkbenchHandleFuncScRsp {
	uint32 retcode = 6;
	uint32 hobjminnbop = 14;
	optional Mhccpddkkda mlkioodnllf = 1;
}

message Akmbehgcbhe {
	oneof Item {
		Akkcdlmlkdf Cggnfjcbbkm = 15;
		Alnigmcjfdm Piclegggncf = 10;
		Neoccicfned Eapmicbgoio = 11;
		Kojkplcegen Nnchmgdgdfi = 3;
		Bhjhapdlpno Ndkhogemkja = 5;
		Jdooidbkcim Jlfddmekljk = 7;
		Gjbblcipbhd Lcbecpoogcl = 8;
		Lehglceljmf Ceajnliofhf = 2;
		Fhjglopmfnc Pgpaapopdoc = 13;
		Jbncdffpdop Pmkehgbpcng = 14;
	}
}

message Akkcdlmlkdf {
	uint32 hifgeekagla = 3;
}

message Alnigmcjfdm {
	uint32 pfmgabppdfl = 8;
}

message Neoccicfned {
	uint32 amohedgmlee = 7;
}

message Kojkplcegen {
	repeated uint32 nlklhflbjfm = 7;
}

message Bhjhapdlpno {
	uint32 icaeccokajp = 1;
}

message Jdooidbkcim {
	uint32 fpljoaacdgd = 14;
}

message Gjbblcipbhd {
	repeated uint32 clopkobkhma = 5;
}

message Lehglceljmf {
	repeated uint32 dnkccibpfgk = 10;
}

message Fhjglopmfnc {
	uint32 unit_id = 1;
}

message Jbncdffpdop {
	uint32 scepter_id = 8;
}

message Fkbfooefpae {
	uint32 infbhpgdlnd = 5;
	Hgpokmdgknn status = 3;
}

message Ajakdcddamo {
	uint32 eonlmdcbnme = 8;
	Hhiclpljnco status = 15;
	uint32 infbhpgdlnd = 7;
}

message GetRogueCollectionCsReq {

}

message GetRogueCollectionScRsp {
	repeated Fkbfooefpae pcpedflnbga = 13;
	repeated Ajakdcddamo pahpdbiacha = 11;
	uint32 retcode = 5;
}

message SetRogueCollectionCsReq {
	repeated uint32 fpipmkcagpd = 4;
	repeated Mhkmpgabbpl lghphfppjen = 6;
	repeated uint32 opkmciffcch = 13;
}

message SetRogueCollectionScRsp {
	uint32 retcode = 14;
	repeated Ajakdcddamo pahpdbiacha = 5;
	repeated Fkbfooefpae pcpedflnbga = 12;
}

message Gbpflagfaij {
	Ehcobodeeje status = 6;
	uint32 kbdfbginnbj = 13;
}

message Dmodinlgccb {
	uint32 kbdfbginnbj = 8;
	uint32 eonlmdcbnme = 6;
	Hhiclpljnco status = 4;
}

message GetRogueExhibitionCsReq {

}

message GetRogueExhibitionScRsp {
	repeated Dmodinlgccb pjpjokkfnim = 12;
	uint32 retcode = 10;
	repeated Gbpflagfaij mkcefancaig = 3;
}

message SetRogueExhibitionCsReq {
	repeated uint32 ldifbjdgffe = 14;
	repeated Mhkmpgabbpl anekpinlkfj = 7;
	repeated uint32 heepoeolilo = 1;
}

message SetRogueExhibitionScRsp {
	uint32 retcode = 2;
	repeated Gbpflagfaij mkcefancaig = 6;
	repeated Dmodinlgccb pjpjokkfnim = 3;
}

message Ehkegmcgcmh {
	uint32 deidchamdba = 11;
}

message Pndnjbbdhdp {
	uint32 bimbfjgnpfb = 2;
	uint32 level = 5;
}

message Dopjlbmmphb {
	uint32 bimbfjgnpfb = 7;
	bool kdgbjgopehi = 9;
	oneof Fhdabdhijjb {
		Ehkegmcgcmh Djnabioeenf = 13;
		Pndnjbbdhdp Imcajaogclg = 12;
	}
}

message Lopjejmofbg {
	bool enbijbfbnec = 11;
	repeated Dopjlbmmphb bbpapddenhb = 8;
	uint32 group_id = 2;
}

message Eomodelgnhe {
	bool loffeohfpfl = 7;
	uint32 akkonobbjnk = 13;
	uint32 cur_times = 12;
	optional ItemCostList kedcohkknak = 4;
	uint32 hfbkbhjiegd = 11;
	uint32 ddjddbknpff = 2;
	repeated Lopjejmofbg maze_group_list = 15;
}

message RogueGetGambleInfoCsReq {
	uint32 prop_entity_id = 13;
}

message RogueGetGambleInfoScRsp {
	optional Eomodelgnhe ffmifpfibdd = 14;
	uint32 retcode = 10;
}

message RogueDoGambleCsReq {
	uint32 prop_entity_id = 11;
}

message RogueDoGambleScRsp {
	uint32 retcode = 4;
	optional Eomodelgnhe ffmifpfibdd = 5;
	uint32 cfbglfojoda = 9;
	uint32 jpklmppogdh = 8;
}

message RogueDebugReplaySaveScNotify {
	uint32 uid = 6;
	string dfpfalbjhjh = 15;
	string jdedckkacgo = 2;
	string nepgeejclah = 9;
	string kfamackfhpm = 3;
	string ijppknknlnl = 10;
	string jhjgfdmkihg = 1;
}

message Jnfelckiocm {
	repeated uint32 trial_avatar_id_list = 4;
	uint32 ffkpegnbhod = 2;
	optional Gckblhadlgn lchkkhngbgj = 9;
	uint32 map_id = 12;
	repeated uint32 avatar_id_list = 10;
	RogueStatus status = 14;
	optional Ajpfphkklpg jlnilijomem = 13;
	uint32 gmpiiaeggek = 3;
	uint32 kjgimhfkgbn = 1;
}

message Oendafiaecg {
	uint32 hdllmdnlokp = 13;
	uint32 kkpkaljmamf = 14;
	uint32 jpkjkimnigg = 11;
	uint32 hdjcjbbknaf = 2;
	uint32 bpekcejpofe = 5;
	uint32 aeieojgcmmo = 8;
	uint32 battle_id = 9;
	bool ighlhohcckc = 4;
}

message Peodocnclnp {
	uint32 module_id = 6;
	optional Jnfelckiocm aeloipgfodb = 15;
	optional Oendafiaecg bopaangkogh = 12;
	uint32 area_id = 9;
}

message GetRogueEndlessActivityDataCsReq {

}

message GetRogueEndlessActivityDataScRsp {
	uint32 retcode = 14;
	uint32 anameobfkgn = 1;
	uint32 jchchlmdpen = 8;
	repeated uint32 eahbikfallf = 13;
	repeated Peodocnclnp data = 4;
}

message Bbnhemckdin {
	AvatarType avatar_type = 8;
	uint32 avatar_id = 14;
}

message EnterRogueEndlessActivityStageCsReq {
	repeated Bbnhemckdin avatar_list = 3;
	uint32 mgigdcmleog = 10;
}

message EnterRogueEndlessActivityStageScRsp {
	optional Oendafiaecg bopaangkogh = 7;
	optional SceneBattleInfo battle_info = 4;
	uint32 retcode = 9;
}

message RogueEndlessActivityBattleEndScNotify {
	optional Oendafiaecg bopaangkogh = 4;
}

message TakeRogueEndlessActivityPointRewardCsReq {
	bool mdhjkkbnmcf = 9;
	uint32 level = 13;
}

message TakeRogueEndlessActivityPointRewardScRsp {
	bool mdhjkkbnmcf = 8;
	uint32 jchchlmdpen = 4;
	uint32 retcode = 14;
	uint32 level = 10;
	optional ItemList reward = 12;
	repeated uint32 eahbikfallf = 2;
}

message TakeRogueEndlessActivityAllBonusRewardCsReq {

}

message TakeRogueEndlessActivityAllBonusRewardScRsp {
	optional ItemList reward = 11;
	uint32 retcode = 3;
	repeated uint32 eahbikfallf = 15;
	uint32 jchchlmdpen = 12;
}

message Hfippdggjol {
	optional MapRotationData map_rotation_data = 6;
	optional SceneInfo scene = 4;
	optional LineupInfo lineup = 3;
}

message Bpaifngedgh {
	repeated Oiikgfipmfg mnfjeiininl = 2;
	uint32 ogldnefkndo = 13;
	Jlcbbkkgoej status = 6;
	uint32 bhpgjcicmjm = 10;
	uint32 ppjbgnbmkpm = 4;
}

message Oiikgfipmfg {
	uint32 akdleblpbmd = 14;
	uint32 eipnnejnnkj = 9;
	Jiokhlhgeod status = 11;
	uint32 room_id = 13;
}

message Mjkkoneiobo {
	Jmpphgigffi reason = 10;
	uint32 lfcdodfmhhn = 14;
	repeated Bpaifngedgh ahooafgdehf = 7;
	uint32 acgbelaigbo = 9;
	uint32 bgokheibnkl = 4;
	Behfnmkdomk status = 13;
}

message Jchcgfmgbak {
	repeated Jbihocioanh eldolkcakae = 1;
	repeated Jfgflgblcaj magic_list = 6;
	uint32 nmjaibbldoc = 5;
	bool jfcnajmihci = 10;
}

message Llnhfmgmcmn {
	repeated uint32 dimhpbcpnlc = 13;
}

message Klohnfgbnph {
	uint32 laeejiikmpi = 7;
}

message RogueMagicStartCsReq {
	repeated uint32 avatar_id_list = 7;
	uint32 area_id = 13;
	uint32 jeafpigjdol = 10;
	repeated uint32 ahiibhkdfjb = 11;
}

message Aapkbpeggbh {
	optional Omdefbabnnb lineup = 6;
	optional Nkidddpflje jibdgcfcdio = 7;
	optional Findafkpoof item_value = 11;
	optional Klohnfgbnph cacgekaankl = 8;
	optional Llnhfmgmcmn kkobbenpfph = 4;
	optional Mjkkoneiobo level = 2;
	optional Mikfnbbopip basic_info = 1;
	optional Jchcgfmgbak jlfddmekljk = 9;
}

message RogueMagicStartScRsp {
	uint32 retcode = 2;
	optional Aapkbpeggbh bhmhlpchklg = 12;
	optional Hfippdggjol lcoclenjjai = 5;
}

message RogueMagicEnterCsReq {

}

message RogueMagicEnterScRsp {
	optional Hfippdggjol lcoclenjjai = 15;
	uint32 retcode = 13;
	optional Aapkbpeggbh bhmhlpchklg = 1;
}

message RogueMagicLeaveCsReq {

}

message RogueMagicLeaveScRsp {
	uint32 retcode = 3;
	optional Hfippdggjol lcoclenjjai = 7;
}

message RogueMagicEnterRoomCsReq {
	uint32 bhpgjcicmjm = 10;
	uint32 fllablfbeik = 13;
}

message RogueMagicEnterRoomScRsp {
	uint32 retcode = 7;
	optional Hfippdggjol lcoclenjjai = 14;
}

message RogueMagicEnterLayerCsReq {
	uint32 lfcdodfmhhn = 3;
	uint32 fllablfbeik = 8;
}

message RogueMagicEnterLayerScRsp {
	optional Hfippdggjol lcoclenjjai = 13;
	uint32 retcode = 7;
}

message RogueMagicLevelInfoUpdateScNotify {
	repeated Bpaifngedgh ahooafgdehf = 12;
	Behfnmkdomk status = 10;
	Jmpphgigffi reason = 2;
	uint32 acgbelaigbo = 13;
	uint32 lfcdodfmhhn = 7;
	uint32 bgokheibnkl = 1;
}

message RogueMagicAreaUpdateScNotify {
	repeated Pjebcbnpdic jidjeamdkde = 8;
}

message Caclanloolk {
	bool fbjhgpdkbgm = 14;
	uint32 efkegdoajbh = 6;
}

message Fjjdkdndfdj {
	uint32 kknghgbhcgg = 13;
	bool fbjhgpdkbgm = 5;
}

message Ognbigkhhbm {
	optional Fjjdkdndfdj bjlemfmcodd = 12;
	optional Aapkbpeggbh bhmhlpchklg = 15;
	optional Caclanloolk gcglnkfdkkn = 4;
	optional LineupInfo embagmmhipa = 8;
}

message Hcjgpmdgbjo {
	repeated Obipoolidal epckcookclj = 1;
	repeated Inpinnpihob klmgaebeagk = 15;
	repeated uint32 mnkcjfelcng = 5;
	repeated uint32 blbfdcgceda = 7;
}

message RogueMagicBattleFailSettleInfoScNotify {
	optional Hfippdggjol lcoclenjjai = 1;
	optional Ognbigkhhbm njnjebodmnl = 10;
}

message RogueMagicSettleCsReq {

}

message RogueMagicSettleScRsp {
	optional Hfippdggjol lcoclenjjai = 12;
	optional Ognbigkhhbm njnjebodmnl = 8;
	optional Hcjgpmdgbjo mgcfoglkmch = 10;
	optional ItemList gfonfdbfbna = 13;
	uint32 retcode = 9;
}

message RogueMagicReviveCostUpdateScNotify {
	optional ItemCostList gficflciejj = 14;
}

message RogueMagicReviveAvatarCsReq {
	repeated uint32 avatar_id_list = 2;
	uint32 interacted_prop_entity_id = 3;
}

message RogueMagicReviveAvatarScRsp {
	optional ItemCostList gficflciejj = 4;
	uint32 retcode = 7;
}

message RogueMagicQueryCsReq {

}

message Olfgbamefji {
	uint32 ofbiahgopcm = 13;
	uint32 nnnkjkclblo = 14;
	uint32 hmkgbmidgop = 5;
	uint32 njiempgeeog = 9;
	repeated Jfgflgblcaj magic_list = 1233;
	uint32 blfdfmcffim = 2;
	repeated Jbihocioanh eldolkcakae = 1106;
	uint32 ipodnbljpol = 11;
	uint32 fonnghlgjfa = 12;
	uint32 bgokheibnkl = 8;
	repeated uint32 jlhfojodokg = 816;
	repeated uint32 avatar_id_list = 1688;
	uint32 nmjaibbldoc = 15;
}

message Koiicmieaef {
	repeated uint32 dpplcddhbge = 1520;
}

message Pjebcbnpdic {
	bool biifelfegnk = 2;
	bool knbdpfeidnm = 11;
	repeated uint32 npbnmmkhkop = 13;
	uint32 ifpoilopfag = 7;
	bool is_taken_reward = 3;
	optional Olfgbamefji record_info = 6;
	optional Koiicmieaef cgaijcclkbh = 14;
	uint32 area_id = 8;
}

message Cchiedibofm {
	uint32 handcdpibld = 12;
	bool knbdpfeidnm = 7;
}

message Bgapfbpijhp {
	repeated uint32 eacemapdndh = 10;
}

message Pbbedpiipek {
	optional Bgapfbpijhp story_info = 1;
	repeated Ooceoilkcfi picfhpkdnel = 9;
	repeated Pjebcbnpdic jidjeamdkde = 4;
	repeated Cchiedibofm dimgdinccji = 15;
	repeated Eoejhkjllpk magic_list = 6;
	repeated uint32 kglbndeaphf = 5;
	optional Iejppfjfjlj okakamonpfl = 2;
}

message RogueMagicQueryScRsp {
	optional Aapkbpeggbh bhmhlpchklg = 5;
	uint32 retcode = 14;
	optional Pbbedpiipek lagbgldlgcb = 3;
}

message RogueMagicScepterDressInUnitCsReq {
	uint32 scepter_id = 1;
	uint32 elpinnnalbd = 5;
	uint32 slot_id = 3;
}

message RogueMagicScepterDressInUnitScRsp {
	uint32 retcode = 12;
}

message RogueMagicAutoDressInUnitCsReq {
	repeated uint32 bhkankfpdcp = 13;
}

message RogueMagicAutoDressInUnitScRsp {
	uint32 retcode = 13;
}

message RogueMagicSetAutoDressInMagicUnitCsReq {
	bool khdhahnnalm = 6;
}

message RogueMagicSetAutoDressInMagicUnitScRsp {
	bool khdhahnnalm = 7;
	uint32 retcode = 4;
}

message RogueMagicAutoDressInMagicUnitChangeScNotify {
	bool khdhahnnalm = 12;
}

message RogueMagicScepterTakeOffUnitCsReq {
	uint32 scepter_id = 3;
	repeated uint32 bhkankfpdcp = 15;
}

message RogueMagicScepterTakeOffUnitScRsp {
	uint32 retcode = 14;
}

message RogueMagicUnitComposeCsReq {
	repeated uint32 bhkankfpdcp = 1;
}

message RogueMagicUnitComposeScRsp {
	uint32 retcode = 11;
}

message RogueMagicUnitReforgeCsReq {
	repeated uint32 bhkankfpdcp = 1;
}

message RogueMagicUnitReforgeScRsp {
	uint32 retcode = 14;
}

message Iejppfjfjlj {
	uint32 cmadmlialjl = 9;
	optional RogueTalentInfoList talent_info = 11;
}

message RogueMagicGetTalentInfoCsReq {

}

message RogueMagicGetTalentInfoScRsp {
	uint32 retcode = 2;
	optional Iejppfjfjlj okakamonpfl = 12;
}

message RogueMagicEnableTalentCsReq {
	uint32 talent_id = 7;
}

message RogueMagicEnableTalentScRsp {
	uint32 retcode = 9;
	optional Iejppfjfjlj okakamonpfl = 3;
}

message RogueMagicGetMiscRealTimeDataCsReq {

}

message RogueMagicGetMiscRealTimeDataScRsp {
	uint32 retcode = 2;
	optional Fjjdkdndfdj bjlemfmcodd = 6;
	optional Caclanloolk gcglnkfdkkn = 12;
}

message RogueMagicStoryInfoUpdateScNotify {
	uint32 mnbccbabcha = 15;
}

message Eddhmigfdji {
	uint32 inbjppapcag = 1;
	uint32 mbgkckldhib = 5;
	bool pipmgacmjnn = 10;
}

message Foiacpfkdhk {
	repeated uint32 onnjgdjnflg = 9;
	uint32 mbgkckldhib = 5;
	bool pipmgacmjnn = 10;
	uint32 inbjppapcag = 2;
}

message Pogcnjmngpi {
	uint32 inbjppapcag = 3;
	bool pipmgacmjnn = 15;
	repeated uint32 onnjgdjnflg = 6;
}

message Ainblbbfdbj {
	uint32 inbjppapcag = 14;
	repeated uint32 nhgojdodgma = 8;
	uint32 nijagoajpem = 12;
	bool pipmgacmjnn = 15;
}

message Ajeeiakemip {
	uint32 cehfiilmjkm = 2;
}

message Khmjbjlobpg {
	uint32 cpocngekiib = 1;
}

message Gfgdodhmbpk {
	uint32 kokpceamabc = 4;
}

message Npdipkhdcnf {
	repeated uint32 nhgojdodgma = 11;
	uint32 inbjppapcag = 13;
	bool pipmgacmjnn = 3;
	uint32 iigoemfhgll = 8;
}

message Egalagnaefb {
	uint32 olgljhecdof = 3;
	uint32 gpdeiiioipn = 11;
	uint32 gclebgddiip = 5;
}

message Ndgljknkefk {
	uint32 ojeblmkkmgo = 1;
}

message Egfdajdihnj {
	uint32 item_id = 3;
	uint32 mbejblfhcbh = 1;
}

message Pnikofbimjl {
	uint32 num = 11;
	uint32 eoaefbknffe = 13;
	uint32 nejdmegnfgk = 1;
}

message Jjdkoeehbjo {
	uint32 num = 3;
	uint32 ooofgdbldce = 2;
}

message Okgmdmjhcmk {
	uint32 cehfiilmjkm = 15;
}

message Cfkbhpnbcnb {
	uint32 mbgkckldhib = 13;
}

message Bbbeoeoifjk {
	bool pipmgacmjnn = 11;
	uint32 inbjppapcag = 15;
	repeated uint32 onnjgdjnflg = 4;
}

message Ahpnapgpjeg {
	uint32 ojeblmkkmgo = 9;
	uint32 amojfmfeoge = 6;
}

message Fpchmkkcgfa {
	uint32 bnckfbfmgmi = 5;
	uint32 affjhmjdibn = 7;
	Njchljfiodm lghokgabgck = 8;
}

message Ndfookghhop {
	bool pipmgacmjnn = 5;
	uint32 inbjppapcag = 10;
	repeated uint32 cegckbndalf = 4;
}

message Mdbjbiekkee {
	uint32 lipapomhmce = 11;
}

message Blcpnbikclp {
	uint32 count = 7;
}

message Aekpjeldapd {
	optional Fpchmkkcgfa scepter = 7;
	uint64 pkfcldincal = 14;
	Lgmdbcffjof hhmabjdimgm = 3;
	oneof Kfelkjldkeh {
		Ndfookghhop Kbobeemcndd = 1772;
	}
}

message Eendhpkpflp {
	repeated Aekpjeldapd mebjclenpio = 15;
}

message RogueModifierAddNotify {
	optional Aekpjeldapd pdaampcelaa = 3;
}

message RogueModifierSelectCellCsReq {
	uint32 hhcbjghkcpc = 9;
}

message RogueModifierSelectCellScRsp {
	uint32 retcode = 3;
	uint32 hhcbjghkcpc = 9;
	optional ItemList jdijkegcibp = 7;
}

message RogueModifierUpdateNotify {
	optional Aekpjeldapd pdaampcelaa = 12;
}

message RogueModifierDelNotify {
	uint64 pkfcldincal = 3;
}

message RogueModifierStageStartNotify {
	Lgmdbcffjof hhmabjdimgm = 14;
}

message Fjemjbnajfj {
	optional SceneInfo scene = 3;
	optional MapRotationData map_rotation_data = 6;
	optional LineupInfo lineup = 15;
}

message Cfcdhlpoogc {
	optional Mikfnbbopip ikobkinkhcf = 1;
	oneof Kfelkjldkeh {
		Lhadmkcgcko Icffjlicimb = 184;
	}
}

message Nkpkiaamodg {
	uint32 ldfehkdcnel = 8;
	uint32 jdbahpebfjc = 1;
	uint32 mnnkjpliilj = 6;
	bool fbjhgpdkbgm = 4;
}

message Nnijcdkhpkl {
	uint32 cdinhfhbmog = 1;
	bool fbjhgpdkbgm = 13;
	uint32 aiplflibpkj = 6;
	uint32 jedjbedkcji = 12;
}

message Gpnjmehndmn {
	uint32 hipjhpjolbe = 5;
	bool fbjhgpdkbgm = 8;
	uint32 japdcmjpiej = 15;
}

message Fbhnfjcnhml {
	bool fbjhgpdkbgm = 7;
	uint32 japdcmjpiej = 9;
}

message Bmnmbpnbbhm {
	bool pgcbeoleioo = 12;
}

message Lhadmkcgcko {
	optional Kaajbaoakbo hpdbjalemmo = 5;
	optional Fbnjofcemil bdjebpnjelp = 4;
	optional Bmnmbpnbbhm lmpgbonbhgn = 9;
	optional Nkidddpflje jibdgcfcdio = 8;
	optional Fnijjhaenbl kkobbenpfph = 10;
	optional Aggmhdjgfdi ijbphigkmhf = 1;
	optional Omdefbabnnb lineup = 2;
	optional Findafkpoof item_value = 11;
	optional Gekleellcbf level = 7;
	optional Kcacnhcadec lkkfhfdpfke = 15;
	optional Cgjnhnmamdh jmidlldkjbi = 3;
}

message Gekleellcbf {
	bool ejoijgclcjo = 7;
	bool lgbohdicfpk = 13;
	uint32 lfcdodfmhhn = 14;
	repeated Babhbomomdf ahooafgdehf = 9;
	Akkhkmecafl reason = 3;
	Ogadimmljhn status = 2;
}

message Aggmhdjgfdi {
	uint32 klgmnchbicp = 1;
	uint32 ognhpkojhjp = 11;
}

message Fnijjhaenbl {
	repeated uint32 dimhpbcpnlc = 5;
}

message Babhbomomdf {
	uint32 bhpgjcicmjm = 2;
	repeated Lhomiedaoid mnfjeiininl = 8;
	uint32 ppjbgnbmkpm = 11;
	uint32 ogldnefkndo = 6;
	Odbnigdlncf status = 15;
}

message Lhomiedaoid {
	uint32 akdleblpbmd = 6;
	uint32 room_id = 13;
	uint32 eipnnejnnkj = 2;
	Lmiknfdlffo status = 11;
}

message RogueTournStartCsReq {
	repeated uint32 avatar_id_list = 6;
	uint32 area_id = 10;
	bool lgbohdicfpk = 15;
	bool ejoijgclcjo = 5;
}

message RogueTournStartScRsp {
	uint32 khjcgnllfoh = 11;
	optional Fjemjbnajfj lcoclenjjai = 15;
	uint32 retcode = 7;
	optional Cfcdhlpoogc bhmhlpchklg = 13;
}

message RogueTournEnterCsReq {

}

message RogueTournEnterScRsp {
	optional Fjemjbnajfj lcoclenjjai = 9;
	optional Cfcdhlpoogc bhmhlpchklg = 13;
	uint32 retcode = 8;
}

message RogueTournLeaveCsReq {

}

message RogueTournLeaveScRsp {
	uint32 retcode = 12;
	optional Fjemjbnajfj lcoclenjjai = 1;
}

message RogueTournSettleCsReq {

}

message Jhllljajkep {
	optional Nkpkiaamodg cjcojamleel = 3;
	optional Nnijcdkhpkl gcglnkfdkkn = 5;
	optional LineupInfo embagmmhipa = 8;
	optional Fbhnfjcnhml pfoepfphfnj = 9;
	optional Gpnjmehndmn kgciaiafibe = 12;
	optional Kclchjmnpgl clkhpondddo = 4;
	optional Cfcdhlpoogc bhmhlpchklg = 10;
}

message RogueTournSettleScRsp {
	optional Fjemjbnajfj lcoclenjjai = 10;
	optional Jhllljajkep njnjebodmnl = 2;
	uint32 retcode = 5;
}

message RogueTournEnterRoomCsReq {
	uint32 bhpgjcicmjm = 7;
	uint32 fllablfbeik = 9;
}

message RogueTournEnterRoomScRsp {
	optional Fjemjbnajfj lcoclenjjai = 12;
	uint32 retcode = 15;
}

message RogueTournEnterLayerCsReq {
	uint32 fllablfbeik = 8;
	uint32 lfcdodfmhhn = 15;
}

message RogueTournEnterLayerScRsp {
	uint32 retcode = 4;
	optional Fjemjbnajfj lcoclenjjai = 5;
}

message RogueTournLevelInfoUpdateScNotify {
	Ogadimmljhn status = 13;
	repeated Babhbomomdf ahooafgdehf = 3;
	uint32 lfcdodfmhhn = 8;
	Akkhkmecafl reason = 7;
}

message RogueTournTakeExpRewardCsReq {
	repeated uint32 lopmhjfbhim = 15;
	uint32 acgkfedndfh = 12;
}

message RogueTournTakeExpRewardScRsp {
	optional ItemList reward = 15;
	uint32 retcode = 14;
	uint32 exp = 4;
	repeated uint32 ckbmgabeego = 12;
}

message RogueTournExpNotify {
	uint32 exp = 5;
}

message RogueTournQueryCsReq {

}

message Olkfphpbpdl {
	bool is_taken_reward = 2;
	bool gmopljjgbpo = 12;
	repeated uint32 hdmdaodjacb = 1;
	bool biifelfegnk = 8;
	bool knbdpfeidnm = 10;
	uint32 area_id = 9;
}

message Lhaeabojgop {
	uint32 khjcgnllfoh = 12;
	uint32 lfpccpoljpc = 3;
	int64 end_time = 11;
	bool gpodhhaohnp = 14;
}

message Ndnkbaggdhd {
	repeated uint32 ckbmgabeego = 6;
	uint32 exp = 7;
}

message Boicekfmcic {
	optional RogueTalentInfoList talent_info = 12;
	uint32 bjceklknlcd = 10;
}

message Jigdnfdnojd {
	uint32 handcdpibld = 6;
	bool knbdpfeidnm = 9;
}

message Pmbnjoonhpa {
	uint32 acgkfedndfh = 7;
	uint32 kaeojcobihc = 10;
}

message Kgdofadndaj {
	repeated uint32 nffbjbbcdmg = 15;
	repeated uint32 bkgjpcclidn = 4;
	repeated uint32 idoecnpkgce = 5;
	repeated uint32 fajcnmekknn = 12;
	repeated uint32 ppconkkpipm = 7;
	uint32 boflhofkacn = 1;
	repeated uint32 kcdlmnincge = 13;
}

message Kclchjmnpgl {
	uint32 ofgbjcccike = 2;
	uint32 ngiambeihpi = 4;
}

message Chgggegamdi {
	repeated Olkfphpbpdl jidjeamdkde = 12;
	optional Kgdofadndaj iakcmplpoee = 2;
	repeated Jigdnfdnojd dimgdinccji = 1;
	optional Boicekfmcic ehobbjmedee = 9;
	optional Kclchjmnpgl lkcefcljcbm = 7;
	repeated Cjpkpjfjkdg gmopekcolbe = 5;
	optional Pmbnjoonhpa fejgmnnfflg = 8;
	optional Gigpoffbieo llaoogchhdk = 15;
	optional Lhaeabojgop jdbmbikpbjb = 6;
	optional Ndnkbaggdhd hndbkklomlc = 4;
}

message RogueTournQueryScRsp {
	optional Cfcdhlpoogc bhmhlpchklg = 7;
	uint32 retcode = 14;
	optional Chgggegamdi lagbgldlgcb = 11;
}

message RogueTournAreaUpdateScNotify {
	repeated Olkfphpbpdl jidjeamdkde = 5;
}

message Cjpkpjfjkdg {
	optional Bkffnnaiodc data = 1;
	optional Cfcdhlpoogc bhmhlpchklg = 8;
	int64 time = 15;
	string name = 10;
	uint32 khncedgfpgl = 3;
	int64 end_time = 12;
	optional Pmbnjoonhpa fejgmnnfflg = 13;
}

message Bkffnnaiodc {
	repeated Gjoibmfanhl ckgfonmaeko = 8;
	uint32 item_value = 3;
	repeated Ffamnkoaihf buff_list = 14;
}

message RogueTournGetAllArchiveCsReq {

}

message RogueTournGetAllArchiveScRsp {
	uint32 retcode = 5;
	repeated Cjpkpjfjkdg edjpodpnmed = 11;
}

message RogueTournDeleteArchiveCsReq {
	uint32 khncedgfpgl = 6;
}

message RogueTournDeleteArchiveScRsp {
	uint32 khncedgfpgl = 4;
	uint32 retcode = 7;
}

message RogueTournRenameArchiveCsReq {
	uint32 khncedgfpgl = 15;
	string name = 6;
}

message RogueTournRenameArchiveScRsp {
	uint32 retcode = 4;
	uint32 khncedgfpgl = 11;
	string name = 6;
}

message RogueTournClearArchiveNameScNotify {
	uint32 khncedgfpgl = 3;
}

message Oomghibbcbn {
	repeated uint32 hmjfcdlcifd = 10;
	repeated Bmpcjdeaiih hgcgilabndl = 8;
	uint32 acgkfedndfh = 11;
	repeated uint32 mkaifjibjik = 3;
	uint32 kaeojcobihc = 4;
	repeated uint32 amldailbmbo = 12;
	repeated uint32 jncbpdhcahi = 2;
}

message Bmpcjdeaiih {
	uint32 ofikkogklgo = 9;
	repeated uint32 bijgjecjmhm = 7;
	uint32 avatar_id = 4;
	uint32 fclolobfpal = 15;
	uint32 khncedgfpgl = 11;
}

message Abdabiikojc {
	int64 time = 12;
	optional Oomghibbcbn gndiodgogpi = 4;
	uint32 khncedgfpgl = 13;
	string name = 3;
}

message RogueTournGetAllBuildRefCsReq {

}

message RogueTournGetAllBuildRefScRsp {
	repeated Abdabiikojc iiccngokklf = 2;
	uint32 retcode = 3;
}

message RogueTournDeleteBuildRefCsReq {
	repeated uint32 ndobmajmlnk = 12;
}

message RogueTournDeleteBuildRefScRsp {
	uint32 retcode = 11;
	repeated uint32 ndobmajmlnk = 3;
}

message RogueTournSaveBuildRefCsReq {
	uint32 khncedgfpgl = 4;
	optional Oomghibbcbn gndiodgogpi = 5;
	string name = 2;
}

message RogueTournSaveBuildRefScRsp {
	uint32 retcode = 10;
	string name = 11;
	uint32 khncedgfpgl = 13;
}

message RogueTournRenameBuildRefCsReq {
	string name = 11;
	uint32 khncedgfpgl = 10;
}

message RogueTournRenameBuildRefScRsp {
	uint32 khncedgfpgl = 4;
	string name = 10;
	uint32 retcode = 2;
}

message RogueTournGetPermanentTalentInfoCsReq {

}

message RogueTournGetPermanentTalentInfoScRsp {
	uint32 retcode = 3;
	optional Boicekfmcic ehobbjmedee = 1;
}

message RogueTournEnablePermanentTalentCsReq {
	uint32 talent_id = 11;
}

message RogueTournEnablePermanentTalentScRsp {
	optional Boicekfmcic ehobbjmedee = 12;
	uint32 retcode = 13;
}

message RogueTournResetPermanentTalentCsReq {

}

message RogueTournResetPermanentTalentScRsp {
	optional Boicekfmcic ehobbjmedee = 6;
	uint32 retcode = 10;
}

message RogueTournEnterRogueCocoonSceneCsReq {
	repeated Phhkombgppk avatar_list = 11;
	uint32 pbalfienefo = 2;
	bool eiddmghlpbp = 1;
	uint32 ibgnlboebcg = 10;
	uint32 pilmkhckmed = 13;
}

message RogueTournEnterRogueCocoonSceneScRsp {
	uint32 retcode = 2;
	optional Fjemjbnajfj lcoclenjjai = 4;
}

message RogueTournLeaveRogueCocoonSceneCsReq {

}

message RogueTournLeaveRogueCocoonSceneScRsp {
	optional Fjemjbnajfj lcoclenjjai = 4;
	uint32 retcode = 11;
}

message RogueTournReEnterRogueCocoonStageCsReq {
	bool eiddmghlpbp = 7;
}

message RogueTournReEnterRogueCocoonStageScRsp {
	optional SceneBattleInfo battle_info = 8;
	uint32 retcode = 14;
}

message RogueTournGetCurRogueCocoonInfoCsReq {

}

message RogueTournGetCurRogueCocoonInfoScRsp {
	uint32 pilmkhckmed = 8;
	uint32 ibgnlboebcg = 14;
	uint32 retcode = 13;
	uint32 pbalfienefo = 15;
}

message RogueTournDifficultyCompNotify {
	repeated uint32 gggfigcpklf = 7;
}

message Jniaogiiogb {
	uint32 deidchamdba = 10;
}

message Jcccacnfdjg {
	uint32 deidchamdba = 3;
}

message Jfihgdpoiid {
	uint32 buff_id = 1;
}

message Ecgochpmcpd {
	uint32 event_id = 7;
}

message Apfjlofinfj {
	uint32 formula_id = 11;
}

message Fidfnncjaje {
	uint32 ijppknknlnl = 10;
	uint32 level = 14;
	uint32 iboekjbomog = 7;
	uint32 dchpogobdko = 9;
}

message RogueTournHandBookNotify {

}

message RogueTournGetSettleInfoCsReq {
	uint32 area_id = 11;
}

message RogueTournGetSettleInfoScRsp {
	uint32 retcode = 1;
	optional Jhllljajkep njnjebodmnl = 10;
}

message RogueTournConfirmSettleCsReq {
	uint32 khncedgfpgl = 15;
	uint32 area_id = 8;
	string name = 13;
}

message RogueTournConfirmSettleScRsp {
	optional ItemList jplaapjccbh = 2;
	optional Fjemjbnajfj lcoclenjjai = 6;
	uint32 retcode = 4;
	optional ItemList gfonfdbfbna = 8;
	optional Cjpkpjfjkdg ohhjkgfofhb = 5;
}

message RogueTournWeekChallengeUpdateScNotify {
	optional Lhaeabojgop jdbmbikpbjb = 8;
}

message RogueTournGetMiscRealTimeDataCsReq {

}

message RogueTournGetMiscRealTimeDataScRsp {
	uint32 retcode = 12;
	optional Nnijcdkhpkl gcglnkfdkkn = 7;
	optional Kclchjmnpgl clkhpondddo = 2;
	optional Gpnjmehndmn kgciaiafibe = 4;
	optional Fbhnfjcnhml pfoepfphfnj = 5;
	optional Nkpkiaamodg cjcojamleel = 1;
}

message RogueTournGetArchiveRepositoryCsReq {

}

message RogueTournGetArchiveRepositoryScRsp {
	repeated uint32 lnejmjbfllh = 15;
	repeated uint32 hkdoclopkoh = 6;
	uint32 retcode = 5;
}

message RogueTournReviveCostUpdateScNotify {
	optional ItemCostList gficflciejj = 4;
}

message RogueTournReviveAvatarCsReq {
	repeated uint32 avatar_id_list = 14;
	uint32 interacted_prop_entity_id = 13;
}

message RogueTournReviveAvatarScRsp {
	optional ItemCostList gficflciejj = 2;
	uint32 retcode = 13;
}

message RogueTournBattleFailSettleInfoScNotify {
	optional Fjemjbnajfj lcoclenjjai = 5;
	optional Jhllljajkep njnjebodmnl = 12;
}

message Gigpoffbieo {
	uint32 cmoghiandfl = 3;
	optional RogueTalentInfoList talent_info = 9;
}

message RogueTournGetSeasonTalentInfoCsReq {

}

message RogueTournGetSeasonTalentInfoScRsp {
	uint32 retcode = 15;
	optional Gigpoffbieo llaoogchhdk = 6;
}

message RogueTournEnableSeasonTalentCsReq {
	uint32 talent_id = 9;
}

message RogueTournEnableSeasonTalentScRsp {
	uint32 retcode = 14;
	optional Gigpoffbieo llaoogchhdk = 10;
}

message RogueTournTitanUpdateTitanBlessProgressScNotify {
	uint32 ldfgifdfpcf = 11;
}

message GetRollShopInfoCsReq {
	uint32 roll_shop_id = 2;
}

message GetRollShopInfoScRsp {
	uint32 roll_shop_id = 8;
	uint32 gacha_random = 5;
	repeated uint32 bchaohddila = 2;
	uint32 retcode = 9;
}

message DoGachaInRollShopCsReq {
	uint32 roll_shop_id = 7;
	uint32 ifngnhhcngl = 12;
	uint32 gacha_random = 5;
}

message DoGachaInRollShopScRsp {
	optional ItemList reward = 15;
	uint32 penilhglhhm = 10;
	uint32 ordering_index = 12;
	uint32 roll_shop_id = 4;
	uint32 retcode = 11;
}

message TakeRollShopRewardCsReq {
	uint32 roll_shop_id = 14;
}

message TakeRollShopRewardScRsp {
	uint32 retcode = 9;
	uint32 group_type = 1;
	uint32 roll_shop_id = 4;
	optional ItemList reward = 2;
}

message SceneActorInfo {
	uint32 uid = 14;
	uint32 base_avatar_id = 11;
	AvatarType avatar_type = 1;
	uint32 map_layer = 7;
}

message Eehijpmfiin {
	uint32 elite_group = 8;
	uint32 dneampllfme = 13;
	uint32 level = 7;
	uint32 ehieoodecmi = 2;
	uint32 hard_level_group = 3;
}

message Edbjjknjpfm {
	oneof Kfelkjldkeh {
		Eehijpmfiin RogueInfo = 1;
	}
}

message Oepandokejd {
	repeated uint32 ifoedpljkoa = 6;
	uint32 stage_id = 3;
}

message SceneNpcMonsterInfo {
	uint32 monster_id = 3;
	bool mpfedfbkkdf = 12;
	uint32 event_id = 7;
	bool idpjidnlehh = 4;
	uint32 world_level = 1;
	optional Oepandokejd geifpdhbkbf = 14;
	optional Edbjjknjpfm extra_info = 2;
}

message NpcDialogueEventParam {
	uint32 rogue_dialogue_event_id = 8;
	uint32 arg_id = 14;
}

message NpcRogueGameInfo {
	uint32 event_unique_id = 14;
	map<uint32, uint32> kjcbneindhl = 6;
	uint32 onlhfcoglal = 7;
	bool eccdglbkeje = 3;
	bool jenfhombkke = 9;
	uint32 cdjecokfiof = 13;
	bool lomilomcaom = 1;
}

message Kkfkkppldai {
	bool iagodfdjaik = 14;
	uint32 amlkpohdeln = 6;
	uint32 visitor_id = 10;
}

message Clfacbcgifl {
	uint32 klfcnoaggpc = 15;
	uint32 incagnldjmn = 10;
}

message NpcExtraInfo {
	oneof Kfelkjldkeh {
		NpcRogueGameInfo RogueInfo = 15;
		Kkfkkppldai Jkjopmefcbo = 10;
		Clfacbcgifl Pnbjjbjnmgl = 6;
	}
}

message SceneNpcInfo {
	optional NpcExtraInfo extra_info = 14;
	uint32 npc_id = 11;
}

message PropRogueInfo {
	uint32 room_id = 5;
	uint32 bbnfiifmgak = 2;
	uint32 ccdepapjnko = 4;
	uint32 site_id = 9;
}

message Pplbhacnego {
	uint32 poijkblcjla = 2;
	uint32 aeon_id = 5;
	uint32 kapmkjghiei = 12;
}

message Aoiheklndid {
	bool algafomniia = 13;
	bool akcghbfgbcc = 4;
}

message Hdocjdhlapd {
	uint32 nbocipljmhi = 14;
	bool pjdnhbhddha = 13;
	uint32 eipnnejnnkj = 11;
}

message Jeghkicdaoo {
	uint32 eipnnejnnkj = 1;
	bool pjdnhbhddha = 11;
	uint32 nbocipljmhi = 8;
}

message Akmciglbjad {
	bool gldjnhiggje = 13;
	uint32 hobjminnbop = 7;
}

message Eekihhefaic {
	uint32 pmjaippjfkc = 5;
	repeated Akmciglbjad gnoncmjmcbf = 8;
}

message Eigoiecdmna {
	uint32 mgdmhlgjhoc = 13;
	optional Eomodelgnhe ffmifpfibdd = 6;
}

message Ojckhbbbfef {
	uint32 kigaehdgklm = 12;
}

message Lnojkicccme {
	bool mbankgmdfmj = 1;
	bytes ddcjbfloame = 7;
}

message Jneobocbffg {
	optional Lnojkicccme djnfcmfddoa = 13;
	oneof Kfelkjldkeh {
		PropRogueInfo RogueInfo = 2;
		Pplbhacnego Chmhpcngfao = 11;
		Aoiheklndid Jjfkkdkpcpo = 7;
		Hdocjdhlapd Hakiplkcokd = 14;
		Eekihhefaic Mabcfpoclol = 12;
		Eigoiecdmna Oidcbkggndg = 3;
		Ojckhbbbfef Ddckmelbcdj = 6;
		Jeghkicdaoo Omekfjepfle = 5;
	}
}

message ScenePropInfo {
	uint64 create_time_ms = 9;
	optional Jneobocbffg extra_info = 11;
	uint32 life_time_ms = 7;
	uint32 prop_id = 15;
	repeated string trigger_name_list = 13;
	uint32 prop_state = 4;
}

message SceneSummonUnitInfo {
	uint32 summon_unit_id = 11;
	repeated string trigger_name_list = 2;
	uint32 caster_entity_id = 6;
	int32 life_time_ms = 14;
	uint32 attach_entity_id = 15;
	uint64 create_time_ms = 3;
}

message SceneEntityInfo {
	uint32 inst_id = 1;
	uint32 group_id = 7;
	optional MotionInfo motion = 4;
	uint32 entity_id = 3;
	oneof Entity {
		SceneActorInfo Actor = 13;
		SceneNpcMonsterInfo NpcMonster = 14;
		SceneNpcInfo Npc = 2;
		ScenePropInfo Prop = 8;
		SceneSummonUnitInfo SummonUnit = 15;
	}
}

message BuffInfo {
	map<string, float> dynamic_values = 5;
	uint32 buff_id = 13;
	uint64 add_time_ms = 2;
	uint32 base_avatar_id = 3;
	float life_time = 6;
	uint32 target_entity_id = 7;
	uint32 level = 10;
	uint32 count = 1;
}

message EntityBuffInfo {
	uint32 entity_id = 4;
	repeated BuffInfo buff_list = 8;
}

message Nomfjhmoeah {
	uint32 value = 4;
	uint32 ohdeoighiem = 14;
}

message CustomSaveData {
	string save_data = 10;
	uint32 group_id = 4;
}

message Kegmihdfpmm {
	uint32 cppdjfkiihk = 1;
	uint32 blogjdckahm = 11;
}

message SceneEntityGroupInfo {
	repeated SceneEntityInfo entity_list = 7;
	uint32 state = 10;
	map<string, int32> hejamoojbcj = 4;
	uint32 group_id = 3;
}

message SceneGroupState {
	uint32 state = 2;
	uint32 group_id = 5;
	bool is_default = 1;
}

message MissionStatusBySceneInfo {
	repeated uint32 finished_mission_id_list = 9;
	repeated uint32 ndnonhfimfi = 3;
	repeated Mission sub_mission_status_list = 10;
	repeated uint32 icbikgmghik = 14;
	repeated Feahpjpkgoa bigehkdpgpn = 4;
}

message SceneInfo {
	uint32 client_pos_version = 7;
	uint32 game_story_line_id = 1187;
	uint32 leader_entity_id = 8;
	map<uint32, Kegmihdfpmm> mpehibkeobe = 4;
	repeated BuffInfo scene_buff_info_list = 12;
	repeated uint32 chest_id_list = 538;
	uint32 content_id = 1557;
	repeated SceneGroupState group_state_list = 468;
	uint32 world_id = 15;
	repeated EntityBuffInfo entity_buff_info_list = 6;
	uint32 entry_id = 13;
	uint32 floor_id = 9;
	repeated SceneEntityGroupInfo entity_group_list = 937;
	uint32 gfhglffhfbd = 1652;
	repeated SceneEntityInfo entity_list = 10;
	optional MissionStatusBySceneInfo scene_mission_info = 1403;
	repeated uint32 lighten_section_list = 2;
	map<string, int32> floor_saved_data = 788;
	uint32 plane_id = 1;
	repeated CustomSaveData custom_data_list = 3;
	uint32 game_mode_type = 14;
}

message EntityMotion {
	uint32 map_layer = 5;
	bool nfopikdkpgg = 1;
	uint32 entity_id = 6;
	optional MotionInfo motion = 8;
}

message SceneEntityMoveCsReq {
	uint32 entry_id = 9;
	repeated EntityMotion entity_motion_list = 14;
	uint64 pemlejjbaje = 12;
}

message SceneEntityMoveScRsp {
	uint32 retcode = 1;
	repeated EntityMotion entity_motion_list = 6;
	optional ClientDownloadData download_data = 9;
}

message SceneEntityMoveScNotify {
	optional MotionInfo motion = 2;
	uint32 client_pos_version = 9;
	uint32 entry_id = 11;
	uint32 entity_id = 13;
}

message SceneUpdatePositionVersionNotify {
	uint32 djjbkeiaobd = 14;
}

message InteractPropCsReq {
	uint32 prop_entity_id = 5;
	uint32 interact_id = 2;
}

message InteractPropScRsp {
	uint32 retcode = 2;
	uint32 prop_entity_id = 7;
	uint32 prop_state = 6;
}

message ChangePropTimelineInfoCsReq {
	uint32 prop_entity_id = 9;
	optional Lnojkicccme djnfcmfddoa = 10;
	uint64 miilnlhddjm = 3;
	bool dlbedaonnkh = 7;
}

message ChangePropTimelineInfoScRsp {
	uint32 prop_entity_id = 11;
	uint32 retcode = 3;
}

message Dkijloakkbo {
	uint32 gbllcemjjfi = 13;
	MonsterBattleType endjgmlkpbp = 2;
}

message Jnhlelnabbd {
	string key = 1;
	float value = 14;
}

message AssistMonsterWave {
	repeated uint32 entity_id_list = 5;
}

message SceneCastSkillCsReq {
	string kegdfimpnkh = 1;
	repeated uint32 hit_target_entity_id_list = 14;
	optional MotionInfo target_motion = 8;
	uint32 caster_id = 10;
	repeated SceneCastSkillType casted_skill_type_list = 3;
	uint32 hchdhljcije = 15;
	repeated AssistMonsterWave assist_monster_wave_list = 7;
	uint32 attacked_group_id = 12;
	repeated Jnhlelnabbd dynamic_values = 9;
	uint32 skill_index = 13;
	repeated uint32 assist_monster_entity_id_list = 11;
}

message SceneCastSkillScRsp {
	uint32 retcode = 12;
	optional SceneBattleInfo battle_info = 13;
	uint32 attacked_group_id = 11;
	repeated Dkijloakkbo kgnglgmiebg = 1;
}

message SceneCastSkillCostMpCsReq {
	uint32 caster_id = 9;
	uint32 attacked_group_id = 11;
	uint32 skill_index = 8;
}

message SceneCastSkillCostMpScRsp {
	uint32 retcode = 8;
	uint32 attacked_group_id = 15;
}

message SceneCastSkillMpUpdateScNotify {
	uint32 mp = 5;
	uint32 attacked_group_id = 7;
}

message SceneEnterStageCsReq {
	Lipekjfjmnm nikhbkchhjg = 8;
	uint32 event_id = 13;
	bool pmjahilblfl = 9;
}

message SceneEnterStageScRsp {
	uint32 retcode = 2;
	optional SceneBattleInfo battle_info = 12;
}

message SceneReviveAfterRebattleCsReq {
	Lipekjfjmnm nikhbkchhjg = 1;
}

message SceneReviveAfterRebattleScRsp {
	uint32 retcode = 13;
}

message GetCurSceneInfoCsReq {

}

message GetCurSceneInfoScRsp {
	optional SceneInfo scene = 15;
	uint32 retcode = 1;
}

message EntityBuffChangeInfo {
	uint32 entity_id = 3;
	uint32 attacked_group_id = 6;
	EntityBuffChangeType reason = 5;
	oneof Kfelkjldkeh {
		BuffInfo AddBuffInfo = 7;
		uint32 RemoveBuffId = 12;
	}
}

message SyncEntityBuffChangeListScNotify {
	repeated EntityBuffChangeInfo entity_buff_info_list = 15;
}

message SpringRefreshCsReq {
	uint32 floor_id = 11;
	uint32 plane_id = 12;
	uint32 prop_entity_id = 4;
}

message SpringRefreshScRsp {
	uint32 retcode = 5;
}

message LastSpringRefreshTimeNotify {
	int64 jbicindpigm = 13;
}

message ReturnLastTownCsReq {

}

message ReturnLastTownScRsp {
	uint32 retcode = 14;
	optional SceneInfo scene = 3;
}

message EnterSectionCsReq {
	uint32 lbmncagokif = 9;
}

message EnterSectionScRsp {
	uint32 retcode = 4;
}

message SetCurInteractEntityCsReq {
	uint32 entity_id = 1;
}

message SetCurInteractEntityScRsp {
	uint32 retcode = 2;
}

message RecoverAllLineupCsReq {

}

message RecoverAllLineupScRsp {
	uint32 retcode = 4;
}

message SavePointsInfoNotify {
	int64 refresh_time = 12;
	uint32 valid_times = 11;
}

message StartCocoonStageCsReq {
	uint32 world_level = 6;
	uint32 wave = 9;
	uint32 cocoon_id = 10;
	uint32 prop_entity_id = 14;
}

message StartCocoonStageScRsp {
	uint32 prop_entity_id = 6;
	uint32 retcode = 7;
	uint32 wave = 9;
	optional SceneBattleInfo battle_info = 14;
	uint32 cocoon_id = 2;
}

message EntityBindPropCsReq {
	bool mjjmpiflmkf = 6;
	optional MotionInfo motion = 12;
}

message EntityBindPropScRsp {
	uint32 retcode = 7;
}

message SetClientPausedCsReq {
	bool paused = 10;
}

message SetClientPausedScRsp {
	bool paused = 5;
	uint32 retcode = 1;
}

message DeactivateFarmElementCsReq {
	uint32 entity_id = 10;
}

message DeactivateFarmElementScRsp {
	uint32 entity_id = 10;
	uint32 retcode = 14;
}

message ActivateFarmElementCsReq {
	uint32 entity_id = 11;
	uint32 world_level = 6;
}

message ActivateFarmElementScRsp {
	uint32 world_level = 14;
	uint32 entity_id = 13;
	uint32 retcode = 12;
}

message Heejkkagimo {
	uint32 avatar_id = 8;
	uint32 jlafldchdgj = 5;
}

message Fpdakbkbjkf {
	uint32 eidnigifnaa = 12;
	bool ghdepancgpf = 10;
	repeated Heejkkagimo bcglmlabogf = 2;
}

message UpdateMechanismBarScNotify {
	uint32 plane_id = 1;
	uint32 floor_id = 10;
	optional Nomfjhmoeah gigkdapgnme = 4;
}

message SetGroupCustomSaveDataCsReq {
	uint32 entry_id = 2;
	uint32 group_id = 12;
	string save_data = 15;
}

message SetGroupCustomSaveDataScRsp {
	uint32 entry_id = 7;
	uint32 retcode = 2;
	uint32 group_id = 9;
}

message ReEnterLastElementStageCsReq {
	uint32 stage_id = 7;
}

message ReEnterLastElementStageScRsp {
	uint32 stage_id = 10;
	uint32 retcode = 7;
	optional SceneBattleInfo battle_info = 9;
}

message SceneEntityTeleportCsReq {
	optional EntityMotion entity_motion = 12;
	uint32 entry_id = 14;
}

message SceneEntityTeleportScRsp {
	uint32 retcode = 2;
	uint32 client_pos_version = 13;
	optional EntityMotion entity_motion = 3;
}

message EnterSceneCsReq {
	uint32 entry_id = 9;
	uint32 game_story_line_id = 6;
	bool dlbedaonnkh = 15;
	uint32 content_id = 2;
	uint32 teleport_id = 3;
}

message EnterSceneScRsp {
	uint32 game_story_line_id = 4;
	bool iiaafopfcbn = 2;
	uint32 retcode = 1;
	bool dlbedaonnkh = 13;
	uint32 content_id = 15;
}

message EnterSceneByServerScNotify {
	EnterSceneReason reason = 13;
	optional SceneInfo scene = 12;
	optional LineupInfo lineup = 14;
}

message ScenePlaneEventScNotify {
	optional ItemList acfcjiomjnf = 11;
	optional ItemList mhdjadhndkd = 2;
	optional ItemList meekfpcobai = 7;
	optional ItemList get_item_list = 14;
}

message GetSceneMapInfoCsReq {
	repeated uint32 floor_id_list = 14;
	bool igfikghllno = 11;
	repeated uint32 entry_id_list = 5;
	uint32 content_id = 10;
	uint32 cur_map_entry_id = 4;
}

message MazeProp {
	uint32 config_id = 9;
	uint32 state = 11;
	uint32 group_id = 13;
}

message Ofcaigdhpoh {
	optional Jneobocbffg extra_info = 10;
	uint32 group_id = 15;
	uint32 config_id = 3;
	uint32 state = 12;
}

message MazeGroup {
	uint32 group_id = 14;
	int64 modify_time = 4;
	repeated uint32 nobkeonakle = 1;
	bool ilbeaaoojjp = 13;
}

message MazeChest {
	uint32 unlocked_amount_list = 8;
	uint32 total_amount_list = 2;
	MapInfoChestType map_info_chest_type = 13;
}

message ChestUnlockProgress {
	uint32 type = 4;
	uint32 unlocked_chest_count = 10;
	uint32 total_chest_count = 6;
}

message MazeMapData {
	repeated MazeChest unlocked_chest_list = 11;
	repeated Ofcaigdhpoh lmngahfnaon = 2;
	repeated ChestUnlockProgress chest_unlock_progress_list = 15;
	uint32 entry_id = 9;
	uint32 gfhglffhfbd = 6;
	uint32 floor_id = 14;
	uint32 retcode = 7;
	uint32 lmeefkjbpec = 4;
	repeated MazeProp maze_prop_list = 12;
	map<string, int32> floor_saved_data = 1;
	repeated uint32 unlocked_teleport_list = 3;
	repeated MazeGroup maze_group_list = 13;
	repeated uint32 lighten_section_list = 5;
}

message GetSceneMapInfoScRsp {
	uint32 cur_map_entry_id = 6;
	repeated MazeMapData map_list = 10;
	uint32 content_id = 3;
	bool igfikghllno = 14;
	uint32 retcode = 13;
}

message SyncServerSceneChangeNotify {

}

message GameplayCounterCountDownCsReq {
	uint32 nmglnhpanah = 14;
	uint32 cur_times = 10;
}

message GameplayCounterCountDownScRsp {
	uint32 retcode = 7;
}

message GameplayCounterUpdateScNotify {
	uint32 nmglnhpanah = 11;
	Cnppaammffd reason = 7;
	uint32 blogjdckahm = 14;
}

message GameplayCounterRecoverCsReq {
	uint32 nmglnhpanah = 10;
	uint32 labooddaloe = 1;
}

message GameplayCounterRecoverScRsp {
	uint32 retcode = 4;
}

message UpdateFloorSavedValueNotify {
	uint32 gfhglffhfbd = 6;
	uint32 floor_id = 10;
	uint32 plane_id = 5;
	map<string, int32> oaifmglieep = 11;
}

message GetUnlockTeleportCsReq {
	repeated uint32 entry_id_list = 11;
}

message GetUnlockTeleportScRsp {
	repeated uint32 unlocked_teleport_list = 2;
	uint32 retcode = 10;
}

message OpenChestScNotify {
	uint32 kigaehdgklm = 8;
}

message SceneEntityRefreshInfo {
	oneof RefreshType {
		SceneEntityInfo AddEntity = 1;
		uint32 DelEntity = 15;
		uint32 Mhhoaahdgao = 12;
	}
}

message Cmgfhbhaffb {
	string jaibieekheg = 3;
	int32 agfijniebkf = 12;
	int32 dlmamkinnco = 7;
}

message SceneGroupRefreshInfo {
	repeated Cmgfhbhaffb bccgjihncdn = 12;
	uint32 group_id = 7;
	uint32 state = 13;
	repeated SceneEntityRefreshInfo refresh_entity = 9;
	SceneGroupRefreshType group_refresh_type = 15;
}

message SceneGroupRefreshScNotify {
	uint32 floor_id = 15;
	repeated SceneGroupRefreshInfo group_refresh_info = 8;
	uint32 gfhglffhfbd = 3;
}

message GroupStateInfo {
	uint32 entry_id = 10;
	uint32 group_state = 9;
	uint32 player_uid = 7;
	uint32 group_id = 1;
}

message GroupStateChangeCsReq {
	optional GroupStateInfo group_state_info = 15;
}

message GroupStateChangeScRsp {
	optional GroupStateInfo group_state_info = 1;
	uint32 retcode = 2;
}

message GroupStateChangeScNotify {
	optional GroupStateInfo group_state_info = 15;
}

message EnteredSceneInfo {
	uint32 plane_id = 12;
	uint32 floor_id = 4;
}

message GetEnteredSceneCsReq {

}

message GetEnteredSceneScRsp {
	uint32 retcode = 9;
	repeated EnteredSceneInfo entered_scene_info = 15;
}

message EnteredSceneChangeScNotify {
	repeated EnteredSceneInfo entered_scene_info = 12;
}

message RefreshTriggerByClientCsReq {
	uint32 trigger_entity_id = 5;
	optional MotionInfo trigger_motion = 12;
	string trigger_name = 11;
	repeated uint32 trigger_target_id_list = 13;
}

message RefreshTriggerByClientScRsp {
	bool refresh_trigger = 6;
	uint32 retcode = 15;
	string trigger_name = 9;
	uint32 trigger_entity_id = 2;
}

message RefreshTriggerByClientScNotify {
	repeated uint32 trigger_target_id_list = 10;
	uint32 trigger_entity_id = 5;
	string trigger_name = 1;
}

message DeleteSummonUnitCsReq {
	repeated uint32 entity_id_list = 12;
}

message DeleteSummonUnitScRsp {
	repeated uint32 entity_id_list = 9;
	uint32 retcode = 15;
}

message UnlockedAreaMapScNotify {
	repeated uint32 entry_id_list = 2;
}

message UnlockTeleportNotify {
	uint32 entry_id = 4;
	uint32 teleport_id = 8;
}

message UpdateGroupPropertyCsReq {
	int32 mojohjebcnj = 3;
	uint32 gfhglffhfbd = 2;
	uint32 group_id = 10;
	uint32 floor_id = 12;
	string jaibieekheg = 4;
}

message UpdateGroupPropertyScRsp {
	int32 agfijniebkf = 1;
	string jaibieekheg = 15;
	uint32 gfhglffhfbd = 4;
	uint32 retcode = 5;
	uint32 group_id = 2;
	uint32 floor_id = 6;
	int32 dlmamkinnco = 14;
}

message TrainWorldIdChangeScNotify {
	uint32 npebnekdlen = 14;
}

message ServerPrefs {
	uint32 server_prefs_id = 11;
	bytes data = 15;
}

message GetAllServerPrefsDataCsReq {

}

message GetAllServerPrefsDataScRsp {
	repeated ServerPrefs lfbeohkkdoi = 11;
	uint32 retcode = 5;
}

message GetServerPrefsDataCsReq {
	uint32 server_prefs_id = 13;
}

message GetServerPrefsDataScRsp {
	optional ServerPrefs server_prefs = 2;
	uint32 retcode = 11;
}

message UpdateServerPrefsDataCsReq {
	optional ServerPrefs server_prefs = 3;
}

message UpdateServerPrefsDataScRsp {
	uint32 retcode = 5;
	uint32 server_prefs_id = 15;
}

message Shop {
	int64 begin_time = 12;
	int64 end_time = 11;
	uint32 shop_id = 13;
	uint32 city_level = 5;
	uint64 city_taken_level_reward = 10;
	uint32 city_exp = 9;
	repeated Goods goods_list = 3;
}

message Goods {
	uint32 buy_times = 8;
	uint32 item_id = 4;
	int64 end_time = 11;
	uint32 goods_id = 7;
	int64 begin_time = 10;
}

message GetShopListCsReq {
	uint32 shop_type = 4;
}

message GetShopListScRsp {
	repeated Shop shop_list = 13;
	uint32 shop_type = 6;
	uint32 retcode = 10;
}

message BuyGoodsCsReq {
	repeated uint32 fmpnheaimdn = 3;
	uint32 goods_num = 11;
	uint32 interacted_prop_entity_id = 6;
	uint32 goods_id = 1;
	uint32 item_id = 9;
	uint32 shop_id = 5;
}

message BuyGoodsScRsp {
	uint32 retcode = 2;
	uint32 goods_id = 9;
	optional ItemList return_item_list = 4;
	uint32 goods_buy_times = 3;
	uint32 shop_id = 14;
}

message TakeCityShopRewardCsReq {
	uint32 level = 2;
	uint32 shop_id = 8;
}

message TakeCityShopRewardScRsp {
	uint32 level = 14;
	uint32 shop_id = 3;
	optional ItemList reward = 12;
	uint32 retcode = 11;
}

message CityShopInfoScNotify {
	uint32 shop_id = 6;
	uint32 exp = 1;
	uint64 taken_level_reward = 2;
	uint32 level = 10;
}

message Fafgmlpadmi {
	bool halbhknpikh = 3;
	uint32 unique_id = 8;
	uint32 bejeedaebbe = 11;
	repeated uint32 item_list = 10;
	repeated uint32 igjcppkaibi = 12;
	uint32 fclnoogehmc = 2;
}

message Ipjaiinegel {
	uint32 ecbalmaebjc = 10;
	uint32 bejeedaebbe = 9;
}

message SpaceZooDataCsReq {

}

message SpaceZooDataScRsp {
	repeated uint32 kmoadeogapa = 2;
	repeated Fafgmlpadmi aagihkbfmfi = 6;
	repeated uint32 kjfhkicggde = 3;
	repeated Ipjaiinegel inihlancnfi = 1;
	uint32 retcode = 14;
	repeated uint32 pmcmecdlemc = 7;
	repeated uint32 bnhndbnabfn = 12;
	uint32 pblcahnmfjg = 13;
	repeated uint32 dplkbeehplb = 8;
}

message SpaceZooBornCsReq {
	repeated uint32 hdcbacooind = 10;
	uint32 lheonphgbnb = 7;
}

message SpaceZooBornScRsp {
	repeated Ipjaiinegel goeaofnfjod = 9;
	optional Fafgmlpadmi kpkdhghdgnb = 1;
	uint32 retcode = 14;
	bool iklpncgbppc = 10;
}

message SpaceZooMutateCsReq {
	uint32 unique_id = 14;
	uint32 item_id = 10;
}

message SpaceZooMutateScRsp {
	uint32 retcode = 12;
	optional Fafgmlpadmi eflcmhmajal = 9;
	repeated Ipjaiinegel goeaofnfjod = 5;
	bool iklpncgbppc = 10;
}

message SpaceZooOpCatteryCsReq {
	uint32 nileedjlgin = 5;
	uint32 op_type = 7;
	uint32 algeienioan = 3;
}

message SpaceZooOpCatteryScRsp {
	repeated uint32 kjfhkicggde = 9;
	uint32 retcode = 6;
}

message SpaceZooDeleteCatCsReq {
	repeated uint32 dejaooebbha = 15;
}

message SpaceZooDeleteCatScRsp {
	repeated uint32 nfheagelici = 3;
	uint32 retcode = 2;
}

message SpaceZooCatUpdateNotify {
	bool fpmncagjebg = 8;
	bool iklpncgbppc = 7;
	repeated Fafgmlpadmi aikmbppnokd = 1;
}

message SpaceZooExchangeItemCsReq {
	uint32 item_id = 13;
}

message SpaceZooExchangeItemScRsp {
	uint32 retcode = 2;
	uint32 item_id = 14;
}

message SpaceZooTakeCsReq {
	uint32 hlnmajidifd = 2;
}

message SpaceZooTakeScRsp {
	uint32 hlnmajidifd = 12;
	optional ItemList reward = 9;
	uint32 retcode = 13;
}

message StarFightData {
	bool acelagjphma = 14;
	uint32 cbindiaamjg = 15;
	uint32 group_id = 8;
	uint32 mpaecapoheo = 11;
	uint32 ifangmhnkbb = 9;
}

message GetStarFightDataCsReq {

}

message GetStarFightDataScRsp {
	uint32 retcode = 2;
	repeated StarFightData star_fight_data_list = 10;
}

message StarFightAvatar {
	AvatarType avatar_type = 15;
	uint32 avatar_id = 1;
}

message StartStarFightLevelCsReq {
	uint32 difficulty = 13;
	repeated StarFightAvatar avatar_list = 7;
	uint32 group_id = 4;
}

message StartStarFightLevelScRsp {
	uint32 difficulty = 14;
	optional SceneBattleInfo battle_info = 15;
	uint32 group_id = 5;
	uint32 retcode = 12;
}

message StarFightDataChangeNotify {
	uint32 group_id = 2;
	optional StarFightData star_fight_data = 15;
}

message GetStoryLineInfoCsReq {

}

message GetStoryLineInfoScRsp {
	repeated uint32 fmihhbhfhoa = 4;
	uint32 glhflieimjk = 13;
	uint32 retcode = 2;
	repeated uint32 trial_avatar_id_list = 7;
}

message StoryLineInfoScNotify {
	repeated uint32 trial_avatar_id_list = 13;
	repeated uint32 fmihhbhfhoa = 8;
	uint32 fimcejgdagf = 3;
	uint32 glhflieimjk = 4;
}

message ChangeStoryLineFinishScNotify {
	uint32 glhflieimjk = 14;
	bool koocceighma = 7;
	uint32 kidkhjecjlf = 5;
	Amjocdiaphf action = 2;
}

message StoryLineTrialAvatarChangeScNotify {
	bool cliigmnmhna = 6;
	repeated uint32 kfmffggjmne = 10;
	repeated uint32 iblbnianphd = 15;
}

message StrongChallengeAvatar {
	AvatarType avatar_type = 6;
	uint32 avatar_id = 11;
}

message Jpfjgfopkhb {
	repeated uint32 buff_list = 14;
	repeated StrongChallengeAvatar avatar_list = 3;
}

message Caaakpfoeji {
	uint32 stage_score = 1;
	uint32 jgbainfdban = 14;
	uint32 stage_id = 8;
	uint32 module_id = 11;
	optional Jpfjgfopkhb ahinpckgkjg = 2;
}

message Hlkgcnfccia {
	map<uint32, Caaakpfoeji> alcedmlhflm = 4;
}

message GetStrongChallengeActivityDataCsReq {

}

message GetStrongChallengeActivityDataScRsp {
	optional Hlkgcnfccia giilgffkhda = 11;
	uint32 retcode = 13;
}

message EnterStrongChallengeActivityStageCsReq {
	uint32 stage_id = 3;
	repeated StrongChallengeAvatar avatar_list = 5;
	repeated uint32 buff_list = 10;
}

message EnterStrongChallengeActivityStageScRsp {
	optional SceneBattleInfo battle_info = 12;
	uint32 retcode = 5;
	uint32 stage_id = 15;
}

message StrongChallengeActivityBattleEndScNotify {
	uint32 stage_id = 2;
	uint32 ahjfpngdbdo = 12;
	BattleEndStatus end_status = 9;
	uint32 jamlokncakc = 1;
	uint32 stage_score = 7;
	uint32 score = 6;
	uint32 total_damage = 4;
	uint32 ggbecchphcd = 15;
}

message Pgbhmolfbmm {
	uint32 group_id = 6;
	uint32 difficulty = 10;
	uint32 stars = 8;
}

message GetSummonActivityDataCsReq {

}

message GetSummonActivityDataScRsp {
	uint32 retcode = 11;
	repeated Pgbhmolfbmm jhomkemcdmg = 13;
}

message Onoeplfnell {
	uint32 avatar_id = 9;
	AvatarType avatar_type = 15;
}

message EnterSummonActivityStageCsReq {
	uint32 difficulty = 15;
	uint32 group_id = 2;
	optional Onoeplfnell mnoedeclhbj = 1;
	repeated Onoeplfnell avatar_list = 9;
}

message EnterSummonActivityStageScRsp {
	uint32 retcode = 14;
	optional SceneBattleInfo battle_info = 11;
	uint32 difficulty = 2;
	uint32 group_id = 13;
}

message SummonActivityBattleEndScNotify {
	uint32 group_id = 5;
	uint32 stars = 8;
	uint32 hmffhgbkogl = 2;
	uint32 difficulty = 9;
}

message Fpppjcpijjf {
	uint32 config_id = 15;
	uint32 mcbiohmimgn = 10;
	bytes mjnnblcdcbj = 9;
	optional MotionInfo ofolpkmalgi = 7;
	uint32 gfjiiabanlm = 4;
}

message SwitchHandDataCsReq {
	uint32 config_id = 12;
}

message SwitchHandDataScRsp {
	uint32 abojjandfno = 9;
	repeated Fpppjcpijjf lbomdfhffcf = 1;
	uint32 retcode = 2;
	uint32 dlnghhdmjjm = 15;
}

message SwitchHandStartCsReq {
	uint32 config_id = 15;
}

message SwitchHandStartScRsp {
	uint32 retcode = 7;
	uint32 config_id = 10;
}

message SwitchHandFinishCsReq {

}

message SwitchHandFinishScRsp {
	optional Fpppjcpijjf cmfmacmipee = 12;
	uint32 retcode = 8;
}

message Pmgecpbkjcj {
	uint32 iefmadjgadb = 11;
	uint32 kdlpeighjak = 14;
	uint32 group_id = 9;
	Leglgdjopkc op_type = 7;
}

message SwitchHandUpdateCsReq {
	optional Fpppjcpijjf opbhjagoagg = 11;
	optional Pmgecpbkjcj clbmgbfanlc = 4;
}

message SwitchHandUpdateScRsp {
	uint32 retcode = 1;
	optional Fpppjcpijjf cmfmacmipee = 9;
	optional Pmgecpbkjcj clbmgbfanlc = 10;
}

message SwitchHandCoinUpdateCsReq {
	uint32 mcbiohmimgn = 9;
}

message SwitchHandCoinUpdateScRsp {
	uint32 retcode = 3;
	uint32 mcbiohmimgn = 12;
}

message SwitchHandResetHandPosCsReq {
	optional MotionInfo ofolpkmalgi = 2;
	uint32 config_id = 9;
}

message SwitchHandResetHandPosScRsp {
	uint32 retcode = 6;
	optional Fpppjcpijjf lbomdfhffcf = 4;
}

message SwitchHandResetGameCsReq {
	optional Fpppjcpijjf dpjncbbohke = 3;
}

message SwitchHandResetGameScRsp {
	optional Fpppjcpijjf lbomdfhffcf = 9;
	uint32 retcode = 4;
}

message Alefdnllklb {
	optional Bppmeigahgi nncjoeckcka = 9;
	optional Pgggcfbkdpk gbeabimobic = 13;
	optional Jkmfmmpmnam kndmeilhkej = 1;
	uint32 eenjbpmndol = 5;
	optional Dmjlkifemmn ljgcpnogifo = 8;
	optional Ocbolhfoigi afpdjdkneni = 14;
	repeated uint32 fdeigepccbp = 11;
	optional Gjbniiinkfb skill_info = 15;
}

message Gjbniiinkfb {
	repeated uint32 cckhkbnmapn = 3;
	uint32 bilegelkmcb = 7;
	uint32 mcegaibnmgb = 15;
}

message Pgggcfbkdpk {
	uint32 game_story_line_id = 12;
	repeated uint32 cnbckefnfge = 4;
}

message Mmoibacbpka {
	Hdijjmdpile pjgbfknjpno = 9;
	uint32 value = 14;
}

message Bppmeigahgi {
	repeated Mmoibacbpka migfmpjbelg = 5;
	uint32 iomgdikelia = 3;
	uint32 pdmdkapcojm = 2;
}

message Leehjgnbgnk {
	uint32 level = 5;
	uint32 hbapccegnme = 14;
}

message Ocbolhfoigi {
	repeated Leehjgnbgnk fmdkhadmcoc = 7;
}

message Dmjlkifemmn {
	uint32 ighlabggije = 284;
	oneof Kfelkjldkeh {
		Klinpbnkiia Gaibhjhdohb = 7;
		Pbmkkicmlda Kpjafbcpegi = 8;
	}
}

message Piibojcejjn {
	uint32 colbgejelgi = 2;
	uint32 gimlndloffa = 7;
}

message Klinpbnkiia {
	Bjncdefeeji ccljmnckecp = 5;
	repeated uint32 eijdeopofnb = 13;
	repeated Piibojcejjn dncbpcenkif = 6;
}

message Pbmkkicmlda {
	uint32 fhbomfblgpd = 1;
}

message Jkmfmmpmnam {
	oneof Kfelkjldkeh {
		Dpdiegoagbp Kangpcokfne = 9;
		Fpegpjceoei Hhcifnfmkla = 7;
		Fkhfonpkdip Ocgplmnkmlk = 2;
		Aejccmeplgo Akmnkladolm = 11;
		Nigcopghamj Kkddandlfbd = 5;
		Khphaifnjei Affnconkekp = 12;
		Plodidcjoka Cnibngjdnjp = 3;
		Khcakpomgnk Oapmklfjkkg = 14;
	}
}

message Dpdiegoagbp {

}

message Fpegpjceoei {

}

message Fkhfonpkdip {
	uint32 dgaklnofdpp = 1;
}

message Aejccmeplgo {

}

message Nigcopghamj {
	bool hhgapdfindi = 14;
	uint32 bglehmkmapg = 3;
}

message Khphaifnjei {

}

message Plodidcjoka {

}

message Khcakpomgnk {
	bool mmkijaemnbl = 15;
	uint32 bglehmkmapg = 5;
}

message Omojdeifdam {
	optional Cghkidbjhfh pbhmgchkjgo = 6;
	Pkhjbpmibba source = 13;
}

message Cghkidbjhfh {

}

message Hjkdngihmaa {
	uint32 dgaklnofdpp = 14;
}

message Nlcalklpgog {
	uint32 ogjofmcmfpg = 15;
	uint32 bmalpkekbel = 7;
	Hdijjmdpile pjgbfknjpno = 10;
}

message Ojlehppjbbc {
	uint32 ogjofmcmfpg = 7;
	uint32 bmalpkekbel = 9;
}

message Ocjgnpifobm {
	uint32 hbapccegnme = 8;
	uint32 gffbdandhmk = 7;
	uint32 level = 11;
}

message Nmenkignbca {
	uint32 eenjbpmndol = 9;
	optional Dmjlkifemmn ifnmbngifph = 6;
}

message Fgpbibijcoh {
	uint32 bglehmkmapg = 11;
	bool hhgapdfindi = 1;
}

message SwordTrainingGameSyncChangeScNotify {
	repeated Omojdeifdam leadmneimdp = 2;
}

message Hdfkpeebgen {
	uint32 progress = 2;
	uint32 id = 15;
}

message Nokodmnohmn {
	repeated uint32 onilffenamo = 15;
	repeated Hdfkpeebgen nckcmgcbehk = 9;
}

message GetSwordTrainingDataCsReq {

}

message GetSwordTrainingDataScRsp {
	uint32 retcode = 7;
	repeated uint32 cnbckefnfge = 10;
	uint32 dchgiodeddk = 15;
	bool klbpecanfig = 11;
	optional Alefdnllklb gajbfpcpigm = 3;
	optional Nokodmnohmn kjkbkegighk = 2;
	repeated uint32 joefnhggago = 8;
	repeated uint32 fabkphmjghl = 13;
}

message SwordTrainingTurnActionCsReq {
	repeated uint32 bhnfgpehomo = 11;
	repeated uint32 phajehibkfi = 2;
}

message SwordTrainingTurnActionScRsp {
	uint32 retcode = 5;
	repeated uint32 bhnfgpehomo = 3;
}

message SwordTrainingDailyPhaseConfirmCsReq {
	Bjncdefeeji ifenlnhlbab = 4;
}

message SwordTrainingDailyPhaseConfirmScRsp {
	uint32 retcode = 6;
	bool mllaefjemcf = 7;
}

message SwordTrainingDialogueSelectOptionCsReq {
	uint32 kdmlllghjon = 1;
}

message SwordTrainingDialogueSelectOptionScRsp {
	uint32 retcode = 9;
}

message SwordTrainingExamResultConfirmCsReq {

}

message SwordTrainingExamResultConfirmScRsp {
	uint32 retcode = 8;
}

message EnterSwordTrainingExamCsReq {

}

message EnterSwordTrainingExamScRsp {
	uint32 retcode = 5;
	optional SceneBattleInfo battle_info = 12;
}

message SwordTrainingLearnSkillCsReq {
	uint32 skill_id = 6;
}

message SwordTrainingLearnSkillScRsp {
	uint32 skill_id = 3;
	uint32 retcode = 12;
}

message SwordTrainingStartGameCsReq {
	uint32 game_story_line_id = 6;
}

message SwordTrainingStartGameScRsp {
	uint32 retcode = 15;
	optional Alefdnllklb gajbfpcpigm = 3;
}

message SwordTrainingStoryConfirmCsReq {
	uint32 bglehmkmapg = 12;
}

message SwordTrainingStoryConfirmScRsp {
	uint32 retcode = 5;
	uint32 bglehmkmapg = 4;
}

message SwordTrainingGiveUpGameCsReq {

}

message SwordTrainingGiveUpGameScRsp {
	uint32 retcode = 10;
}

message SwordTrainingGameSettleScNotify {
	uint32 pigeebckcoo = 7;
	Hdmkphalalg reason = 15;
	repeated uint32 ppimfpoookb = 3;
	optional ItemList reward = 9;
	uint32 ifnmbngifph = 1;
	repeated uint32 ccdchkkmgjf = 2;
	uint32 game_story_line_id = 14;
	uint32 fpbnipmhanh = 13;
}

message SwordTrainingUnlockSyncScNotify {
	repeated Hdfkpeebgen nckcmgcbehk = 6;
	repeated uint32 onilffenamo = 4;
}

message SwordTrainingSelectEndingCsReq {
	uint32 decjmbhnnhd = 13;
}

message SwordTrainingSelectEndingScRsp {
	uint32 retcode = 8;
	uint32 decjmbhnnhd = 15;
}

message SwordTrainingRestoreGameCsReq {

}

message SwordTrainingRestoreGameScRsp {
	optional Alefdnllklb gajbfpcpigm = 8;
	uint32 retcode = 5;
}

message SwordTrainingStoryBattleCsReq {

}

message SwordTrainingStoryBattleScRsp {
	uint32 retcode = 11;
	optional SceneBattleInfo battle_info = 2;
}

message SwordTrainingActionTurnSettleScNotify {
	repeated Mmoibacbpka mcccnliiibc = 14;
	uint32 cgfcmknccdc = 6;
}

message SwordTrainingResumeGameCsReq {
	uint32 game_story_line_id = 6;
}

message SwordTrainingResumeGameScRsp {
	uint32 retcode = 10;
	optional Alefdnllklb gajbfpcpigm = 3;
}

message SwordTrainingSetSkillTraceCsReq {
	uint32 skill_id = 5;
}

message SwordTrainingSetSkillTraceScRsp {
	uint32 skill_id = 12;
	uint32 retcode = 2;
}

message SwordTrainingMarkEndingViewedCsReq {

}

message SwordTrainingMarkEndingViewedScRsp {
	uint32 retcode = 13;
}

message Blpmhfgioac {
	uint32 keneknbjgmg = 6;
	uint32 stamina = 1;
}

message BoardDataSync {
	string signature = 11;
	bool pagjkdjigpi = 9;
	repeated uint32 almmhkfkhlk = 15;
	repeated HeadIcon unlocked_head_icon_list = 10;
}

message AvatarSync {
	repeated Avatar avatar_list = 1;
}

message MissionSync {
	repeated uint32 hnepoedcidk = 15;
	repeated uint32 finished_mission_id_list = 10;
	repeated Mission mission_list = 4;
	repeated Ikammklboco ejbggjonbol = 12;
	repeated uint32 anihpckngbm = 2;
	repeated uint32 mcfonopkokd = 5;
	repeated Fhabeikafbo gaegmbiogoh = 6;
}

message Dmbmpahkhla {
	repeated uint32 lkkidnjcfja = 14;
	repeated uint32 dingkfdbcjj = 12;
}

message Lpfmhajhdmm {
	repeated uint32 lnejlgefple = 12;
	repeated Lopcjeojhcb omaalpkjiih = 1;
	repeated uint32 cngldjnpopi = 7;
	repeated Gemjdhnlklc kmmbeandijh = 9;
}

message PlayerSyncScNotify {
	optional Blpmhfgioac iggogfjfpdj = 10;
	repeated Nkdohhodnnh cglekfodmag = 1311;
	repeated Gkdihiffhfd igipeimgeaa = 709;
	uint32 total_achievement_exp = 405;
	optional PlayerBasicInfo basic_info = 5;
	optional Dmbmpahkhla omjopkgjplg = 153;
	repeated Equipment equipment_list = 14;
	repeated Relic relic_list = 3;
	repeated WaitDelResource hlinmkbdknc = 8;
	repeated Material material_list = 4;
	repeated MultiPathAvatarTypeInfo multi_path_avatar_type_info_list = 549;
	repeated Material fcokffeapmi = 249;
	optional BoardDataSync board_data_sync = 1978;
	optional Lpfmhajhdmm bkebjfipjeh = 1160;
	optional AvatarSync avatar_sync = 13;
	optional ItemList mjoklhfpgad = 507;
	repeated Quest quest_list = 1;
	repeated uint32 del_relic_list = 2;
	optional MissionSync gejlekbbfnc = 12;
	repeated uint32 olflkcbbjoh = 1447;
	repeated uint32 del_equipment_list = 11;
}

message GetNpcTakenRewardCsReq {
	uint32 npc_id = 13;
}

message GetNpcTakenRewardScRsp {
	repeated uint32 iifaoneejck = 10;
	uint32 retcode = 11;
	uint32 npc_id = 9;
}

message TakeTalkRewardCsReq {
	uint32 iemoeoimhma = 8;
	optional Vector olconcnjmmp = 7;
}

message TakeTalkRewardScRsp {
	uint32 retcode = 7;
	uint32 iemoeoimhma = 2;
	optional ItemList reward = 3;
}

message GetFirstTalkNpcCsReq {
	repeated uint32 npc_id_list = 15;
}

message FirstNpcTalkInfo {
	bool iagodfdjaik = 5;
	uint32 npc_id = 6;
}

message GetFirstTalkNpcScRsp {
	uint32 retcode = 1;
	repeated FirstNpcTalkInfo npc_talk_info_list = 8;
}

message FinishFirstTalkNpcCsReq {
	uint32 npc_id = 4;
}

message FinishFirstTalkNpcScRsp {
	uint32 npc_id = 3;
	uint32 retcode = 2;
}

message SelectInclinationTextCsReq {
	uint32 pkdcpmnagbc = 11;
}

message SelectInclinationTextScRsp {
	uint32 retcode = 5;
	uint32 pkdcpmnagbc = 9;
}

message NpcTalkInfo {
	bool iagodfdjaik = 12;
	uint32 npc_talk_id = 5;
}

message GetFirstTalkByPerformanceNpcCsReq {
	repeated uint32 npc_talk_list = 6;
}

message GetFirstTalkByPerformanceNpcScRsp {
	uint32 retcode = 4;
	repeated NpcTalkInfo npc_talk_info_list = 5;
}

message FinishFirstTalkByPerformanceNpcCsReq {
	uint32 npc_talk_id = 12;
}

message FinishFirstTalkByPerformanceNpcScRsp {
	uint32 retcode = 9;
	uint32 npc_talk_id = 12;
	optional ItemList reward = 8;
}

message Ejdgknkhkhh {
	uint32 level = 13;
	uint32 id = 10;
}

message Bkmgdphacke {
	bool biinncndpcg = 3;
	uint32 id = 6;
}

message Floickmnmll {
	repeated Bkmgdphacke dgpejfljnoj = 11;
	repeated Ejdgknkhkhh cnijnmdgedd = 3;
}

message Ofdgogdbhac {
	repeated uint32 libllkbldch = 14;
	repeated uint32 omicajeoljf = 8;
}

message TarotBookGetDataCsReq {

}

message TarotBookGetDataScRsp {
	optional Floickmnmll hefjejhojea = 1;
	uint32 fdckfkfkhlo = 4;
	map<uint32, uint32> ndcjjpgnfln = 8;
	map<uint32, uint32> jkemdjiamhi = 14;
	uint32 lenpidmpecp = 6;
	uint32 retcode = 13;
	uint32 energy_info = 5;
	optional Ofdgogdbhac ipninopekbp = 11;
}

message TarotBookOpenPackCsReq {

}

message TarotBookOpenPackScRsp {
	uint32 retcode = 7;
	map<uint32, uint32> cjencdiflcf = 6;
	uint32 energy_info = 11;
	uint32 fdckfkfkhlo = 4;
	uint32 lenpidmpecp = 14;
	map<uint32, uint32> iikbcnbjkki = 2;
}

message TarotBookUnlockStoryCsReq {
	repeated uint32 ppimfpoookb = 3;
}

message TarotBookUnlockStoryScRsp {
	optional Ejdgknkhkhh ppdggociede = 15;
	repeated uint32 ppimfpoookb = 2;
	map<uint32, uint32> ndcjjpgnfln = 9;
	map<uint32, uint32> jkemdjiamhi = 1;
	uint32 retcode = 10;
}

message TarotBookFinishStoryCsReq {
	uint32 bglehmkmapg = 11;
}

message TarotBookFinishStoryScRsp {
	uint32 retcode = 12;
	uint32 bglehmkmapg = 8;
	optional Floickmnmll hefjejhojea = 13;
}

message TarotBookModifyEnergyScNotify {
	uint32 energy_info = 6;
	uint32 lplhiabdbbg = 11;
}

message TarotBookFinishInteractionCsReq {
	uint32 nblhjjjegno = 6;
}

message TarotBookFinishInteractionScRsp {
	uint32 retcode = 1;
	uint32 nblhjjjegno = 6;
}

message TarotBookUnlockInteractionCsReq {
	repeated uint32 ohkhpolfibp = 15;
}

message TarotBookUnlockInteractionScRsp {
	repeated uint32 ohkhpolfibp = 1;
	uint32 retcode = 6;
}

message TarotBookSyncDataScNotify {
	uint32 lenpidmpecp = 12;
	uint32 fdckfkfkhlo = 14;
	map<uint32, uint32> ndcjjpgnfln = 6;
	map<uint32, uint32> jkemdjiamhi = 8;
	uint32 energy_info = 3;
	optional Floickmnmll hefjejhojea = 2;
}

message TarotBookMultiOpenPackAndUnlockStoryCsReq {

}

message TarotBookMultiOpenPackAndUnlockStoryScRsp {
	optional Floickmnmll hefjejhojea = 3;
	uint32 retcode = 10;
	repeated uint32 ngblpgnjomd = 11;
	uint32 energy_info = 15;
	uint32 lenpidmpecp = 4;
	uint32 fdckfkfkhlo = 12;
	map<uint32, uint32> ndcjjpgnfln = 13;
	map<uint32, uint32> jkemdjiamhi = 7;
}

message Ogjdnlijkfb {
	uint32 ninlfbglbll = 8;
	uint32 kegcjppokbk = 3;
	uint32 stage_score = 9;
}

message GetTelevisionActivityDataCsReq {

}

message GetTelevisionActivityDataScRsp {
	uint32 retcode = 7;
	repeated Ogjdnlijkfb kadgmhhgkmp = 9;
}

message TelevisionActivityDataChangeScNotify {
	repeated Ogjdnlijkfb kadgmhhgkmp = 14;
}

message TelevisionActivityBattleEndScNotify {
	uint32 fidioihllga = 6;
	uint32 fcepipccomn = 10;
	optional Ogjdnlijkfb dfccbdpnlea = 11;
	uint32 hoehiobiiej = 14;
	uint32 npjeecedpok = 1;
}

message Depeahjnkgj {
	uint32 avatar_id = 13;
	AvatarType avatar_type = 15;
}

message EnterTelevisionActivityStageCsReq {
	repeated uint32 buff_list = 2;
	repeated Depeahjnkgj avatar_list = 6;
	uint32 ninlfbglbll = 9;
}

message EnterTelevisionActivityStageScRsp {
	optional SceneBattleInfo battle_info = 9;
	uint32 ninlfbglbll = 13;
	uint32 retcode = 14;
}

message TextJoinInfo {
	uint32 nlfnjpmacpm = 10;
	uint32 fanokembmpb = 2;
	uint32 adinnbpinak = 13;
	string hbjkeebdjml = 5;
	string nkioiioiaog = 15;
}

message TextJoinSaveCsReq {
	uint32 adinnbpinak = 6;
	string hbjkeebdjml = 7;
	uint32 fanokembmpb = 10;
}

message TextJoinSaveScRsp {
	string hbjkeebdjml = 13;
	uint32 adinnbpinak = 14;
	uint32 fanokembmpb = 10;
	uint32 retcode = 15;
}

message TextJoinQueryCsReq {
	repeated uint32 text_join_id_list = 2;
}

message TextJoinQueryScRsp {
	repeated TextJoinInfo text_join_list = 1;
	uint32 retcode = 3;
}

message TextJoinBatchSaveCsReq {
	repeated TextJoinInfo text_join_list = 6;
}

message TextJoinBatchSaveScRsp {
	uint32 retcode = 9;
	repeated TextJoinInfo text_join_list = 8;
}

message Cgligecgakn {
	uint32 stage_id = 5;
	uint32 stage_score = 14;
}

message GetTrackPhotoActivityDataCsReq {

}

message GetTrackPhotoActivityDataScRsp {
	uint32 retcode = 11;
	repeated Cgligecgakn emgfldopkgl = 5;
}

message Geoaeofjogc {
	bool kfboaonldem = 9;
	uint32 entity_id = 15;
}

message SettleTrackPhotoStageCsReq {
	uint32 stage_id = 10;
	uint32 bclnmidffoh = 3;
	repeated Geoaeofjogc lpihaniojfi = 9;
}

message SettleTrackPhotoStageScRsp {
	uint32 score = 9;
	uint32 stage_id = 11;
	repeated Geoaeofjogc lpihaniojfi = 12;
	uint32 retcode = 4;
}

message StartTrackPhotoStageCsReq {
	uint32 stage_id = 7;
	bool djfcmlipdab = 15;
}

message StartTrackPhotoStageScRsp {
	uint32 retcode = 3;
	uint32 mdlndgijnml = 4;
}

message QuitTrackPhotoStageCsReq {
	uint32 stage_id = 14;
}

message QuitTrackPhotoStageScRsp {
	uint32 retcode = 7;
}

message TrainPartyCardData {
	uint32 upgrade_level = 12;
	uint32 card_id = 5;
	repeated uint32 hcpgealodme = 9;
	uint32 unique_id = 15;
}

message TrainPartyCards {
	repeated TrainPartyCardData card_data_list = 5;
}

message TrainPartyCard {
	optional TrainPartyCards card_data_list = 5;
	uint32 extra_ratio = 13;
	bool has_modify_all_passenger_stat_effect = 2;
}

message TrainPartyGridData {
	uint32 ghfaihlceln = 14;
	uint32 hfnhlcfnhkd = 4;
	uint32 unique_id = 15;
	uint32 display_value = 6;
}

message TrainPartyMeetingCountInfo {
	uint32 hcfocpkfobg = 10;
	uint32 ncdcgfkoloe = 8;
	uint32 blhpiciofai = 1;
	uint32 papkgjojpii = 9;
	repeated uint32 kddppgocomb = 6;
	uint32 jodnmdoamkc = 15;
}

message TrainPartyGrids {
	uint32 bihmelmjhpo = 12;
	uint32 lljefmpdjkh = 6;
	repeated TrainPartyGridData mkoambmkdid = 2;
	optional TrainPartyMeetingCountInfo gdghcbghlnd = 9;
}

message TrainPartyPassengerStatusInfo {
	uint32 kpakapnhnnd = 11;
	uint32 khhlnggecpb = 2;
}

message TrainPartyPassengerSkillInfo {
	uint32 skill_level = 4;
	uint32 skill_id = 7;
	uint32 jgmipmdppij = 15;
}

message TrainPartyPassengerData {
	uint32 passenger_id = 3;
	uint32 mihlfgcgkno = 14;
	optional TrainPartyPassengerStatusInfo status_info = 12;
}

message TrainPartyPassengerPersistentData {
	repeated uint32 diary_data_list = 6;
	uint32 attempts = 7;
	bool cinmlckbhim = 15;
	uint32 passenger_id = 8;
}

message TrainPartyPassenger {
	repeated TrainPartyPassengerSkillInfo skill_info_list = 4;
	repeated uint32 cfkpaicdjpj = 12;
	repeated TrainPartyPassengerData kbgdcehiffj = 6;
	uint32 upgrade_level = 14;
	uint32 pkidbdgpilo = 3;
	uint32 oafaaeemnfb = 7;
}

message Oibmnpclnjj {
	repeated uint32 diary_data_list = 10;
	repeated TrainPartyPassengerPersistentData mebofhokepi = 1;
}

message TrainPartyAreaInfo {
	repeated uint32 elfphfpkbfi = 15;
	optional Daipphmlpcb mlhdkjmfdai = 13;
	uint32 area_id = 12;
	repeated Mcnckbnoejg opdipfbcfdp = 1;
	uint32 progress = 3;
	repeated uint32 knojnbjiokb = 10;
	repeated uint32 hbccbgbfplo = 7;
}

message Indffnnhohc {
	repeated uint32 elfphfpkbfi = 10;
	uint32 area_id = 1;
}

message Ppkdpajpagf {
	uint32 gjfhpcieboj = 7;
	TrainPartyBuildStatus status = 10;
	uint32 jlhdkolmeda = 6;
}

message Daipphmlpcb {
	repeated Ppkdpajpagf imekhgciedn = 1;
	uint32 heidcikedpd = 5;
}

message Mcnckbnoejg {
	uint32 cigajenpmkh = 2;
	uint32 slot_id = 15;
}

message Hhallekojia {
	uint32 dbjhemippim = 2;
	uint32 ppffkfgollj = 3;
	uint32 eebnaapbkcn = 1;
	repeated uint32 mcfmaepokbk = 13;
	uint32 flbnekgidbo = 11;
	repeated Indffnnhohc eohbbeakodf = 12;
	uint32 cnajoignmlj = 7;
	repeated TrainPartyAreaInfo llephoelgda = 4;
	repeated uint32 cigacghpdgk = 6;
	uint32 obokglcmkke = 8;
}

message Lpkdpmlbejo {
	optional Hhallekojia nhjjbkokldb = 12;
	optional Cdngndnlnaj cefmbafcnpk = 8;
	uint32 klgbflnjkbl = 13;
	uint32 aianofknlhg = 3;
	optional Oibmnpclnjj ijmekpadhjj = 6;
	uint32 attempts = 2;
}

message Cdngndnlnaj {
	optional TrainPartyPassenger aakhcnedbcd = 9;
	optional TrainPartyGrids eeihdcpolef = 11;
	uint32 goneakbdgek = 15;
	optional Gcfehmenonm gbfclmlimhc = 6;
	optional TrainPartyCard hbheajijegf = 14;
}

message TrainPartyGetDataCsReq {

}

message TrainPartyGetDataScRsp {
	uint32 retcode = 7;
	optional Lpkdpmlbejo behnkmghghd = 12;
}

message TrainPartyUseCardCsReq {
	uint32 eeghhhkcghb = 2;
}

message TrainPartyUseCardScRsp {
	uint32 retcode = 12;
	uint32 eeghhhkcghb = 6;
}

message TrainPartyMoveScNotify {
	repeated TrainPartyGridData peadiocnimf = 1;
	uint32 gheeoeohmfi = 14;
}

message TrainPartySettleNotify {
	optional Fkmbflmegeb hilomekafbp = 8;
	uint32 eeghhhkcghb = 15;
}

message Fkmbflmegeb {
	repeated Baepnhdciem foaplialhdi = 12;
	uint32 heijcnlnhhi = 9;
	repeated TrainPartyPassengerData kbgdcehiffj = 15;
}

message Baepnhdciem {
	uint32 ijfihgcknhg = 7;
	repeated uint32 param_list = 12;
}

message Nclcbopcejg {
	optional TrainPartyCardData hmffhbhalge = 2;
}

message Idbeommckik {
	optional TrainPartyPassengerStatusInfo status_info = 3;
	uint32 passenger_id = 1;
}

message Ibomhkhbaao {
	repeated Idbeommckik nfeolnaogdk = 7;
}

message Enjhdlhkino {
	optional Gcfehmenonm kndmeilhkej = 13;
}

message Fnoghghpjpd {
	uint32 upgrade_level = 13;
}

message Jldhcfggeao {
	optional TrainPartyPassengerSkillInfo mhmeddehbhi = 3;
}

message Pfgiahaidlm {
	repeated TrainPartyPassengerSkillInfo skill_info_list = 9;
}

message Jhmnlcobjcj {
	optional TrainPartyPassengerPersistentData abbnhmggpil = 2;
}

message Fkjlbfniggm {
	repeated uint32 diary_data_list = 8;
}

message Hakmebiajcf {
	repeated TrainPartyGridData mkoambmkdid = 12;
}

message Hmopiblfcln {
	bool has_modify_all_passenger_stat_effect = 15;
	uint32 extra_ratio = 6;
	optional TrainPartyMeetingCountInfo gdghcbghlnd = 11;
	optional TrainPartyCards lnmmkfmeajm = 12;
}

message Plkcmgdedck {
	TrainPartyUpdateSrc src = 4;
}

message TrainPartySyncUpdateScNotify {
	repeated Plkcmgdedck fflpklldhlm = 6;
}

message Gcfehmenonm {
	uint32 hbapccegnme = 4;
	oneof Dmjfkdoofmp {
		Njkenncjlcf Iamkdjcfmib = 1447;
		Miiaiodleoa Leehaeobeba = 345;
		Emmdenjbfpf Oaoofnjgidh = 55;
		Epbgfbedanm Pmmgocjfeej = 433;
	}
}

message Hhpiafbhjcf {
	bool pipmgacmjnn = 6;
	uint32 kdmlllghjon = 4;
}

message Njkenncjlcf {
	uint32 event_id = 11;
	repeated Hhpiafbhjcf lekpkocnjal = 10;
	Ijdnojemian hoiokbkgfdn = 15;
}

message Hpfkgddifhg {
	uint32 event_id = 4;
	uint32 kdmlllghjon = 12;
}

message Bfifanaocpc {
	optional Fkmbflmegeb hilomekafbp = 11;
}

message Ocmhofemnhi {
	uint32 level = 4;
	uint32 skill_id = 13;
	uint32 jgmipmdppij = 10;
}

message Miiaiodleoa {
	uint32 passenger_id = 9;
	repeated Ocmhofemnhi ganakfaibfc = 13;
}

message Epbgfbedanm {
	uint32 idaihkmmdek = 2;
	repeated TrainPartyPassengerSkillInfo llijagdkjco = 11;
}

message Glbfbnhfcno {
	uint32 iehhdalhgpi = 1;
}

message Mbinmaonbcd {
	repeated TrainPartyPassengerSkillInfo skill_info_list = 4;
}

message Pjjdmmbkkcn {
	uint32 passenger_id = 7;
	uint32 unique_id = 3;
	uint32 khhlnggecpb = 5;
}

message Heojldbkkge {
	uint32 num = 10;
	uint32 passenger_id = 14;
}

message Emmdenjbfpf {
	uint32 npjeecedpok = 8;
	repeated Pjjdmmbkkcn mmeiphbnked = 14;
	repeated Bjgldljkidh kjmliamgdle = 7;
	repeated Heojldbkkge ccgbhhfbafj = 15;
	uint32 kmlppmnmpke = 6;
	uint32 mliijgoaeck = 5;
	uint32 mlipplkiifd = 11;
	uint32 cfokigihcfp = 9;
}

message Lpcnjmfipnp {
	Lcdemgacekd skill_type = 9;
	uint32 flejagfjdkm = 5;
	uint32 skill_id = 6;
}

message Oajopdgkjdo {
	uint32 unique_id = 15;
	uint32 eglmghlekef = 7;
	repeated Lpcnjmfipnp fajccghlcac = 8;
}

message Phoefkfbikd {
	uint32 mkegodinhnc = 15;
	optional ItemList ojcjnbgnicf = 13;
	repeated uint32 npojmhhibki = 12;
}

message Pecglkcicgo {
	repeated uint32 canngfdafoe = 13;
}

message Jbocjhndamc {
	repeated Lpcnjmfipnp bihfecjhpgh = 8;
	optional Phoefkfbikd mfakjhfmaib = 9;
	uint32 npjeecedpok = 11;
	uint32 cfokigihcfp = 12;
	repeated Oajopdgkjdo omggnaeahif = 3;
	repeated Heojldbkkge ccgbhhfbafj = 4;
	uint32 score = 10;
	TrainPartyMtSkillType ijppknknlnl = 6;
	optional TrainPartyMeetingCountInfo gdghcbghlnd = 2;
	repeated Pjjdmmbkkcn mmeiphbnked = 1;
}

message Encjkpgoial {
	repeated uint32 canngfdafoe = 14;
}

message Fbglldnlgpe {
	uint32 kmlppmnmpke = 4;
	repeated Lpcnjmfipnp nicgnemched = 3;
	repeated Pjjdmmbkkcn mmeiphbnked = 12;
	repeated Heojldbkkge ccgbhhfbafj = 10;
}

message TrainPartyHandlePendingActionCsReq {
	uint32 hbapccegnme = 4;
}

message TrainPartyHandlePendingActionScRsp {
	optional Fkmbflmegeb hilomekafbp = 1;
	bool dlncbjfgkaa = 11;
	uint32 hbapccegnme = 2;
	uint32 retcode = 12;
}

message TrainPartyBuildStartStepCsReq {
	uint32 heidcikedpd = 3;
	uint32 area_id = 10;
	uint32 gjfhpcieboj = 8;
	optional Mcnckbnoejg alaoddbghpl = 1;
}

message TrainPartyBuildStartStepScRsp {
	uint32 dbjhemippim = 10;
	uint32 retcode = 15;
}

message Cikohjnagon {
	uint32 area_id = 6;
	optional Mcnckbnoejg kcjbmkjlfba = 14;
}

message TrainPartyBuildDiyCsReq {
	uint32 slot_id = 6;
	uint32 area_id = 5;
	bool ganhklnpapi = 4;
	uint32 cigajenpmkh = 14;
}

message TrainPartyBuildDiyScRsp {
	bool ganhklnpapi = 4;
	uint32 area_id = 15;
	uint32 retcode = 6;
	repeated Mcnckbnoejg opdipfbcfdp = 2;
	repeated Cikohjnagon fflpklldhlm = 13;
}

message Kmbdkdlnhmc {
	uint32 okhcjkljghf = 15;
	repeated Ppkdpajpagf cgfihjccgcd = 6;
}

message Jnahojlcnja {
	uint32 heidcikedpd = 4;
	repeated Ppkdpajpagf cgfihjccgcd = 5;
	uint32 area_id = 14;
	uint32 progress = 10;
}

message Iefkfkfmepl {
	uint32 obokglcmkke = 8;
	uint32 ppffkfgollj = 10;
}

message Fnpmcdnkdfj {
	uint32 bdccopiehin = 6;
}

message Gegjhbmloem {
	uint32 flbnekgidbo = 15;
}

message Bfddpplmkpg {
	uint32 mnleikiehhp = 7;
	uint32 area_id = 11;
}

message Kmlehllogjg {
	uint32 cigajenpmkh = 6;
}

message Okfgjeihljm {
	uint32 fbfihjiiabo = 4;
}

message Kakjcjomfgh {
	uint32 cnajoignmlj = 4;
}

message Mclncbcpaff {
	repeated uint32 cgfihjccgcd = 14;
	uint32 area_id = 1;
}

message Lndgcgobdjl {
	repeated Mclncbcpaff llephoelgda = 8;
}

message Ppkgjkifelk {

}

message TrainPartyBuildingUpdateNotify {
	repeated Ppkgjkifelk bjdfkemkaol = 4;
}

message TrainPartyEnterCsReq {

}

message TrainPartyEnterScRsp {
	uint32 retcode = 12;
}

message TrainPartyLeaveCsReq {

}

message TrainPartyLeaveScRsp {
	uint32 retcode = 1;
}

message Bjgldljkidh {
	TrainPartyMtSkillType jllnmgbenaf = 8;
	uint32 level = 9;
}

message TrainPartyGamePlaySettleNotify {
	uint32 attempts = 12;
	optional Oibmnpclnjj hanfphgemgf = 13;
	repeated uint32 olbagkmfdaj = 5;
	uint32 aianofknlhg = 8;
}

message TrainPartyGamePlayStartCsReq {
	repeated uint32 kbgdcehiffj = 5;
	uint32 goneakbdgek = 14;
}

message TrainPartyGamePlayStartScRsp {
	optional Cdngndnlnaj kmdphcmbjgb = 9;
	uint32 retcode = 8;
}

message TrainPartyAddBuildDynamicBuffCsReq {

}

message TrainPartyAddBuildDynamicBuffScRsp {
	uint32 buff_id = 12;
	uint32 retcode = 4;
}

message TrainPartyTakeBuildLevelAwardCsReq {
	uint32 ecclpifmmpp = 11;
}

message TrainPartyTakeBuildLevelAwardScRsp {
	optional ItemList item_list = 3;
	uint32 retcode = 10;
	uint32 ecclpifmmpp = 12;
}

message Gbcdkgekcpp {
	uint32 visitor_id = 10;
	bool iagodfdjaik = 11;
}

message TrainVisitorBehaviorFinishCsReq {
	uint32 visitor_id = 4;
}

message TrainVisitorBehaviorFinishScRsp {
	uint32 retcode = 12;
	uint32 visitor_id = 9;
	optional ItemList reward = 6;
}

message GetTrainVisitorBehaviorCsReq {
	repeated uint32 oifnlnbkdma = 14;
}

message GetTrainVisitorBehaviorScRsp {
	repeated Gbcdkgekcpp ecfopdhgkfb = 6;
	uint32 retcode = 4;
}

message TrainRefreshTimeNotify {
	uint64 train_refresh_time = 13;
}

message TrainVisitorRewardSendNotify {
	uint32 visitor_id = 5;
	optional ItemList reward = 1;
	Iippjkhmpch type = 10;
}

message Hglkmjfehmb {
	repeated uint32 edhhgcpdkik = 8;
	bool ijabkdepgma = 10;
	uint32 visitor_id = 4;
	uint32 opaokgjbooe = 5;
	Llmibdpfjnd status = 6;
}

message GetTrainVisitorRegisterCsReq {
	Jfjjfgaeoab type = 5;
}

message GetTrainVisitorRegisterScRsp {
	repeated Hglkmjfehmb fdmfkaljbaj = 9;
	repeated uint32 famhpmfoijh = 1;
	uint32 retcode = 13;
}

message TakeTrainVisitorUntakenBehaviorRewardCsReq {
	uint32 visitor_id = 13;
}

message TakeTrainVisitorUntakenBehaviorRewardScRsp {
	uint32 visitor_id = 9;
	uint32 retcode = 12;
	repeated uint32 edhhgcpdkik = 4;
}

message ShowNewSupplementVisitorCsReq {
	repeated uint32 famhpmfoijh = 8;
}

message ShowNewSupplementVisitorScRsp {
	uint32 retcode = 15;
}

message Nhbddinfkoh {
	uint32 iimoplcfhah = 8;
	uint32 item_id = 12;
	uint64 unique_id = 4;
	int32 ieagbpemflg = 9;
	int32 lljaegobhmp = 15;
	uint32 kbcdecdnefm = 3;
}

message Kchjhcljock {
	uint32 cpodejofpdd = 2;
	repeated Nhbddinfkoh hjbpkcfkhli = 4;
	Hgkkppljboi clfgfaboiop = 10;
	Dcjaopdinoi embkicmefco = 11;
	uint32 diphgghfmcp = 7;
}

message TravelBrochureGetDataCsReq {

}

message TravelBrochureGetDataScRsp {
	uint32 kmhdfladepi = 15;
	uint32 retcode = 8;
	map<uint32, Kchjhcljock> mibclbgmdla = 5;
	map<uint32, uint32> fkbbomhekpe = 9;
}

message TravelBrochurePageUnlockScNotify {
	uint32 cpodejofpdd = 15;
}

message TravelBrochureSelectMessageCsReq {
	uint32 diphgghfmcp = 14;
	uint32 cpodejofpdd = 13;
}

message TravelBrochureSelectMessageScRsp {
	uint32 retcode = 13;
	optional ItemList reward = 8;
	optional Kchjhcljock cagglkliimf = 11;
}

message TravelBrochureApplyPasterCsReq {
	uint32 kbcdecdnefm = 15;
	uint32 item_id = 10;
	uint32 cpodejofpdd = 3;
	int32 ieagbpemflg = 11;
	uint32 iimoplcfhah = 1;
	int32 lljaegobhmp = 7;
}

message TravelBrochureApplyPasterScRsp {
	optional Kchjhcljock cagglkliimf = 6;
	uint32 retcode = 5;
}

message TravelBrochureRemovePasterCsReq {
	uint32 item_id = 7;
	uint64 unique_id = 6;
	uint32 cpodejofpdd = 2;
}

message TravelBrochureRemovePasterScRsp {
	uint32 retcode = 2;
	optional Kchjhcljock cagglkliimf = 13;
}

message TravelBrochureUpdatePasterPosCsReq {
	uint64 unique_id = 9;
	uint32 item_id = 14;
	int32 ieagbpemflg = 2;
	int32 lljaegobhmp = 15;
	uint32 cpodejofpdd = 4;
	uint32 iimoplcfhah = 8;
	uint32 kbcdecdnefm = 1;
}

message TravelBrochureUpdatePasterPosScRsp {
	uint32 retcode = 13;
	optional Kchjhcljock cagglkliimf = 3;
}

message TravelBrochureGetPasterScNotify {
	uint32 num = 10;
	uint32 fkkobdmfhil = 13;
}

message Gkdihiffhfd {
	uint32 num = 8;
	uint32 fkkobdmfhil = 9;
}

message TravelBrochureSetCustomValueCsReq {
	uint32 value = 3;
}

message TravelBrochureSetCustomValueScRsp {
	uint32 retcode = 4;
}

message TravelBrochureSetPageDescStatusCsReq {
	uint32 cpodejofpdd = 13;
	Dcjaopdinoi geibgfdenja = 11;
}

message TravelBrochureSetPageDescStatusScRsp {
	uint32 retcode = 9;
}

message TravelBrochurePageResetCsReq {
	uint32 cpodejofpdd = 6;
}

message TravelBrochurePageResetScRsp {
	optional Kchjhcljock cagglkliimf = 9;
	uint32 retcode = 13;
}

message Kbjphlnapgi {
	uint32 item_id = 13;
	uint32 iimoplcfhah = 15;
	int32 lljaegobhmp = 12;
	uint32 kbcdecdnefm = 5;
	int32 ieagbpemflg = 2;
}

message TravelBrochureApplyPasterListCsReq {
	repeated Kbjphlnapgi gedglncpggn = 3;
	uint32 cpodejofpdd = 8;
}

message TravelBrochureApplyPasterListScRsp {
	optional Kchjhcljock cagglkliimf = 8;
	uint32 retcode = 1;
}

message Injfohnjgmg {
	Imknbjcoiop type = 15;
	uint32 ilhgneplodm = 10;
	uint32 nclomnehpmj = 1;
	uint32 jelmcjbicjn = 11;
	uint32 egkdinmmena = 3;
}

message TreasureDungeonDataScNotify {
	optional Klcknklponm dlejpjjcelj = 15;
}

message TreasureDungeonFinishScNotify {
	map<uint32, uint32> jbcgkldmhnl = 13;
	uint32 nlmdemohboo = 7;
	uint32 pikapdjhgnd = 11;
	bool is_win = 2;
	uint32 aecncdpjpdg = 6;
	map<uint32, uint32> kgmmpgfgodj = 10;
	uint32 hohhbihfjeh = 14;
}

message Klcknklponm {
	uint32 phhkbaenbmm = 8;
	uint32 jafnpnmohcm = 10;
	repeated Injfohnjgmg bbckfjihidm = 12;
	repeated Lkcmfeaahhm mkoambmkdid = 2;
	repeated Enbnfolcdie buff_list = 1906;
	repeated Pcaignjkafa gffojccklfm = 2023;
	bool nmfapgolodj = 163;
	uint32 map_id = 9;
	bool cfdpdenppdh = 432;
	uint32 nlmdemohboo = 3;
	bool nodbpkhojec = 29;
	repeated Lhanbgnjcif item_list = 1544;
	repeated Lkhhgjppmpp kjjomephjee = 868;
	uint32 fcjeckcickb = 1;
	uint32 pikapdjhgnd = 14;
	repeated Pcaignjkafa avatar_list = 638;
	uint32 iialglddnad = 464;
	uint32 ncbhadloaga = 4;
}

message Lhanbgnjcif {
	uint32 item_id = 4;
	uint32 mbejblfhcbh = 10;
}

message Pcaignjkafa {
	optional SpBarInfo sp_bar = 2;
	uint32 avatar_type = 3;
	uint32 avatar_id = 13;
	uint32 eajljnbnpnp = 5;
	uint32 hp = 7;
}

message Lkhhgjppmpp {
	uint32 avatar_id = 14;
	uint32 avatar_type = 1;
}

message Enbnfolcdie {
	uint32 buff_id = 7;
	uint32 akahnmlnefn = 15;
}

message Lkcmfeaahhm {
	repeated Gggcocpgbbh buff_list = 1757;
	uint32 ollhobhdden = 13;
	bool demncglljcp = 9;
	bool limmileapjm = 11;
	bool knlfeldecal = 10;
	bool locked = 7;
	uint32 monhibbpkee = 12;
	uint32 hfnhlcfnhkd = 6;
}

message Gggcocpgbbh {
	uint32 leaaebafchp = 13;
	uint32 buff_id = 14;
	uint32 hfnhlcfnhkd = 3;
	uint32 egkdinmmena = 10;
	uint32 ecghnfccbjj = 2;
}

message Abhfabfgpof {
	uint32 fcjeckcickb = 6;
	bool biinncndpcg = 7;
	uint32 jafnpnmohcm = 14;
	bool cloonoifefo = 1;
	uint32 pikapdjhgnd = 13;
	uint32 nkhkdjkegdh = 2;
	uint32 nlmdemohboo = 10;
}

message GetTreasureDungeonActivityDataCsReq {

}

message GetTreasureDungeonActivityDataScRsp {
	repeated Abhfabfgpof hiookmoandn = 3;
	uint32 retcode = 8;
}

message EnterTreasureDungeonCsReq {
	repeated Jackejlkjna avatar_list = 2;
	uint32 nlmdemohboo = 11;
}

message EnterTreasureDungeonScRsp {
	optional Klcknklponm dlejpjjcelj = 1;
	uint32 retcode = 15;
}

message OpenTreasureDungeonGridCsReq {
	uint32 hfnhlcfnhkd = 4;
	uint32 nlmdemohboo = 1;
}

message OpenTreasureDungeonGridScRsp {
	uint32 retcode = 7;
	optional Klcknklponm dlejpjjcelj = 6;
}

message InteractTreasureDungeonGridCsReq {
	uint32 nlmdemohboo = 6;
	uint32 display_value = 2;
	uint32 hfnhlcfnhkd = 4;
}

message InteractTreasureDungeonGridScRsp {
	uint32 retcode = 15;
	optional Klcknklponm dlejpjjcelj = 8;
}

message UseTreasureDungeonItemCsReq {
	uint32 item_id = 15;
	uint32 hfnhlcfnhkd = 10;
	uint32 nlmdemohboo = 2;
}

message UseTreasureDungeonItemScRsp {
	uint32 retcode = 11;
	optional Klcknklponm dlejpjjcelj = 1;
}

message Jackejlkjna {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 6;
}

message FightTreasureDungeonMonsterCsReq {
	uint32 nlmdemohboo = 14;
	uint32 hfnhlcfnhkd = 8;
	repeated Jackejlkjna avatar_list = 12;
}

message FightTreasureDungeonMonsterScRsp {
	optional SceneBattleInfo battle_info = 9;
	uint32 retcode = 15;
}

message QuitTreasureDungeonCsReq {
	uint32 nlmdemohboo = 15;
	bool pcpdfjhdjcc = 4;
}

message QuitTreasureDungeonScRsp {
	uint32 retcode = 11;
}

message Tutorial {
	uint32 id = 13;
	TutorialStatus status = 12;
}

message TutorialGuide {
	uint32 id = 5;
	TutorialStatus status = 15;
}

message GetTutorialCsReq {

}

message GetTutorialScRsp {
	uint32 retcode = 9;
	repeated Tutorial tutorial_list = 5;
}

message GetTutorialGuideCsReq {

}

message GetTutorialGuideScRsp {
	repeated TutorialGuide tutorial_guide_list = 1;
	uint32 retcode = 14;
}

message UnlockTutorialCsReq {
	uint32 tutorial_id = 3;
}

message UnlockTutorialScRsp {
	optional Tutorial tutorial = 4;
	uint32 retcode = 11;
}

message UnlockTutorialGuideCsReq {
	uint32 group_id = 1;
}

message UnlockTutorialGuideScRsp {
	uint32 retcode = 9;
	optional TutorialGuide tutorial_guide = 5;
}

message FinishTutorialCsReq {
	uint32 tutorial_id = 5;
	Mpjppghfheh bmlemobcncm = 11;
}

message FinishTutorialScRsp {
	optional Tutorial tutorial = 6;
	uint32 retcode = 3;
}

message FinishTutorialGuideCsReq {
	uint32 group_id = 5;
}

message FinishTutorialGuideScRsp {
	optional TutorialGuide tutorial_guide = 15;
	uint32 retcode = 14;
	optional ItemList reward = 13;
}

message Oiphnjefjlp {
	uint32 id = 7;
	bool is_new = 3;
	uint32 khfgdkngfdp = 2;
}

message Eikmjejlmgc {
	uint32 id = 9;
	bool is_new = 5;
	uint32 nckelkegbgl = 8;
	repeated uint32 ioodmakjdif = 14;
}

message Ljjokghfidf {
	optional Eikmjejlmgc gokhjlmpnff = 14;
	repeated Oiphnjefjlp konbfjpinhn = 13;
}

message GetWaypointCsReq {
	uint32 kiekjeffphk = 4;
}

message GetWaypointScRsp {
	uint32 hoeahbifkci = 12;
	uint32 retcode = 7;
	optional Ljjokghfidf fjjflkcmidj = 1;
}

message SetCurWaypointCsReq {
	uint32 nkcmnafaioi = 12;
}

message SetCurWaypointScRsp {
	uint32 hoeahbifkci = 12;
	uint32 retcode = 4;
}

message GetChapterCsReq {

}

message GetChapterScRsp {
	uint32 retcode = 1;
	repeated Eikmjejlmgc ielpiclbbji = 9;
	uint32 hoeahbifkci = 15;
}

message WaypointShowNewCsNotify {
	uint32 nkcmnafaioi = 3;
	uint32 kiekjeffphk = 14;
}

message TakeChapterRewardCsReq {
	uint32 kiekjeffphk = 12;
	uint32 akdghhnklej = 8;
}

message TakeChapterRewardScRsp {
	uint32 akdghhnklej = 10;
	uint32 kiekjeffphk = 2;
	uint32 retcode = 12;
}

message Hfpffjimckm {
	bool bdnflicnfhn = 10;
	optional MotionInfo motion = 2;
	uint32 lkjmlidaodm = 6;
	repeated Vector opcldnllnfh = 9;
}

message Hehpioggieg {
	string miilnlhddjm = 6;
	optional Hfpffjimckm hefjejhojea = 15;
	bool bdnflicnfhn = 5;
	repeated Vector opcldnllnfh = 7;
	uint32 id = 12;
	uint32 lkjmlidaodm = 8;
}

message StartWolfBroGameCsReq {
	optional MotionInfo motion = 6;
	uint32 id = 7;
	optional GroupStateInfo group_state_info = 14;
	bool djfcmlipdab = 15;
}

message StartWolfBroGameScRsp {
	uint32 retcode = 11;
	optional Hehpioggieg dnplihjgjih = 2;
}

message ArchiveWolfBroGameCsReq {
	optional MotionInfo motion = 6;
	uint32 id = 3;
}

message ArchiveWolfBroGameScRsp {
	optional Hehpioggieg dnplihjgjih = 10;
	uint32 retcode = 6;
}

message RestoreWolfBroGameArchiveCsReq {
	uint32 id = 2;
}

message RestoreWolfBroGameArchiveScRsp {
	optional Hehpioggieg dnplihjgjih = 7;
	uint32 retcode = 9;
}

message QuitWolfBroGameCsReq {
	uint32 id = 14;
}

message QuitWolfBroGameScRsp {
	optional Hehpioggieg dnplihjgjih = 11;
	uint32 retcode = 3;
}

message GetWolfBroGameDataCsReq {
	uint32 id = 12;
}

message GetWolfBroGameDataScRsp {
	optional Hehpioggieg dnplihjgjih = 9;
	uint32 retcode = 11;
}

message WolfBroGameDataChangeScNotify {
	optional Hehpioggieg dnplihjgjih = 12;
}

message WolfBroGameUseBulletCsReq {
	optional Vector mibcfimmikg = 4;
	repeated uint32 assist_monster_entity_id_list = 2;
}

message WolfBroGameUseBulletScRsp {
	uint32 retcode = 9;
	optional Hehpioggieg dnplihjgjih = 12;
}

message WolfBroGamePickupBulletCsReq {
	optional Vector mibcfimmikg = 6;
}

message WolfBroGamePickupBulletScRsp {
	optional Hehpioggieg dnplihjgjih = 5;
	uint32 retcode = 14;
}

message WolfBroGameActivateBulletCsReq {
	uint32 config_id = 13;
	uint32 group_id = 5;
}

message WolfBroGameActivateBulletScRsp {
	uint32 retcode = 6;
}

message WolfBroGameExplodeMonsterCsReq {
	repeated uint32 assist_monster_entity_id_list = 4;
}

message WolfBroGameExplodeMonsterScRsp {
	uint32 retcode = 14;
}

message WorldUnlockCsReq {
	uint32 npebnekdlen = 2;
}

message WorldUnlockScRsp {
	uint32 retcode = 1;
	uint32 npebnekdlen = 5;
}

message Lnkfbaedodi {
	uint32 dghngblhail = 1;
	uint32 mpgpgfkbmhg = 2;
	uint32 gkjkkdaopam = 3;
	uint32 olccimlmmad = 4;
	uint32 elhepmnlapg = 5;
	uint32 piamlfbihpi = 6;
	uint32 cfcajemdfkj = 7;
	uint32 fephhkigoop = 8;
	uint32 mopdhnencpc = 9;
	uint32 edfpconikdc = 10;
	uint32 id = 11;
	uint32 hoghlbeedga = 12;
	uint32 bipfifcjcbn = 13;
}

enum Hilaijmdkej {
	KickSqueezed = 0;
	KickBlack = 1;
	KickChangePwd = 2;
	KickLoginWhiteTimeout = 3;
	KickAceAntiCheater = 4;
	KickByGm = 5;
}

enum Ipkpkdcebki {
	NotReach = 0;
	Received = 1;
	CanReceive = 2;
}

enum PlayerActionType {
	PlayerActionNone = 0;
	PlayerActionRegister = 1;
	PlayerActionLogin = 2;
	PlayerActionLogout = 3;
	PlayerActionAddExp = 4;
	PlayerActionLevelUp = 5;
	PlayerActionAddMaterial = 6;
	PlayerActionSaveStat = 7;
	PlayerActionTravelBrochureInteract = 8;
	PlayerActionRecharge = 101;
	PlayerActionBuyGoods = 102;
	PlayerActionAddCoin = 103;
	PlayerActionMonthCardDailyHcoin = 104;
	PlayerActionMonthCardBuyMcoin = 105;
	PlayerActionRechargeFreeCoin = 106;
	PlayerActionAddMonthCard = 107;
	PlayerActionRechargeGiftPay = 108;
	PlayerActionRechargeGiftFree = 109;
	PlayerActionRechargeBenefit = 110;
	PlayerActionRechargeGiftTakeReward = 111;
	PlayerActionRechargeGiftReach = 112;
	PlayerActionRechargeBenefitReach = 113;
	PlayerActionMissionAccept = 201;
	PlayerActionMissionFinish = 202;
	PlayerActionMissionFail = 203;
	PlayerActionMainMissionAccept = 204;
	PlayerActionSubMissionAccept = 205;
	PlayerActionMainMissionFinish = 206;
	PlayerActionSubMissionFinish = 207;
	PlayerActionDailyTaskFinish = 208;
	PlayerActionDailyTaskTakeReward = 209;
	PlayerActionNpcTalkReward = 210;
	PlayerActionMainMissionRecover = 211;
	PlayerActionMainMissionDisable = 212;
	PlayerActionConsumeItemSubMissionFinish = 213;
	PlayerActionItemMonitorAllSources = 999;
	PlayerActionGm = 1001;
	PlayerActionCustomOp = 1002;
	PlayerActionCheckSum = 1003;
	PlayerActionPlayerLocation = 1004;
	PlayerActionChangeLanguage = 1005;
	PlayerActionClientReport = 1006;
	PlayerActionAceReport = 1007;
	PlayerActionPlayerPowerInfo = 1008;
	PlayerActionDailyRefresh = 1009;
	PlayerActionAvatarValueInfo = 1010;
	PlayerActionMoveCheckFailedReport = 1011;
	PlayerActionBattleFailedReport = 1012;
	PlayerActionSecurityReport = 1013;
	PlayerActionAvatarPromotion = 1101;
	PlayerActionAvatarAdd = 1103;
	PlayerActionAvatarUseExpItem = 1104;
	PlayerActionAvatarLevelUp = 1105;
	PlayerActionSkillTreeUp = 1106;
	PlayerActionAvatarHpChange = 1107;
	PlayerActionAvatarMpChange = 1108;
	PlayerActionAvatarAddExp = 1109;
	PlayerActionAvatarRankUp = 1110;
	PlayerActionAvatarRepeated = 1111;
	PlayerActionMpMaxChange = 1112;
	PlayerActionAvatarTakePromotionReward = 1113;
	PlayerActionAvatarRelicAffixInfo = 1114;
	PlayerActionAvatarMark = 1115;
	PlayerActionAvatarSystemPowerReset = 1116;
	PlayerActionAvatarChangePath = 1119;
	PlayerActionSetGrowthTargetAvatar = 1120;
	PlayerActionDelAvatar = 1121;
	PlayerActionAvatarSkinChange = 1122;
	PlayerActionSetGrowthTargetFunctionConfig = 1123;
	PlayerActionAvatarSkinActivityReissue = 1124;
	PlayerActionSetAvatarEnhancedId = 1125;
	PlayerActionStageBegin = 1202;
	PlayerActionStageEnd = 1203;
	PlayerActionCocoonStageBegin = 1205;
	PlayerActionCocoonStageEnd = 1206;
	PlayerActionFarmElementEnd = 1207;
	PlayerActionElementStageEnd = 1208;
	PlayerActionCocoonSweep = 1209;
	PlayerActionFarmElementSweep = 1210;
	PlayerActionRecoverStamina = 1301;
	PlayerActionExchangeStamina = 1302;
	PlayerActionLoginReward = 1303;
	PlayerActionModifyNickname = 1304;
	PlayerActionGetLevelReward = 1305;
	PlayerActionWorldLevelUp = 1306;
	PlayerActionAddStamina = 1307;
	PlayerActionGameplayBirthdayRewardMail = 1308;
	PlayerActionRechargeRebateReward = 1309;
	PlayerActionGameplayBirthdaySet = 1310;
	PlayerActionReserveStaminaExchange = 1311;
	PlayerActionReserveStaminaAdd = 1312;
	PlayerActionReserveStaminaChange = 1313;
	PlayerActionNowStamina = 1314;
	PlayerActionFtcResetNickname = 1315;
	PlayerActionMail = 1401;
	PlayerActionMailOpByUser = 1402;
	PlayerActionMailOpByMuip = 1403;
	PlayerActionMailOpByGm = 1404;
	PlayerActionMailOpByFull = 1405;
	PlayerActionMailOpByExpire = 1406;
	PlayerActionMailOpByInternal = 1407;
	PlayerActionAddMail = 1408;
	PlayerActionDelMail = 1409;
	PlayerActionTakeAttachment = 1410;
	PlayerActionReadMail = 1411;
	PlayerActionBattleAvatar = 1501;
	PlayerActionBattleMonster = 1502;
	PlayerActionBattleEnd = 1504;
	PlayerActionBattleReplay = 1505;
	PlayerActionBattleAvatarDeath = 1506;
	PlayerActionBattleSwitchPhase = 1507;
	PlayerActionBattleMonsterSkill = 1508;
	PlayerActionBattleRebattle = 1509;
	PlayerActionBattleAvatarServant = 1510;
	PlayerActionMissionReward = 1602;
	PlayerActionQuestAccept = 1603;
	PlayerActionQuestFinish = 1604;
	PlayerActionQuestRemove = 1605;
	PlayerActionQuestReward = 1606;
	PlayerActionQuestAutoClose = 1607;
	PlayerActionQuestExpired = 1608;
	PlayerActionMissionRequired = 1609;
	PlayerActionSubmissionReward = 1610;
	PlayerActionAchievementLevelReward = 1611;
	PlayerActionQuestDelete = 1612;
	PlayerActionSubMissionReward = 1613;
	PlayerActionMissionCompensate = 1614;
	PlayerActionMissionRecycle = 1615;
	PlayerActionQuestReset = 1616;
	PlayerActionQuestOptionalReward = 1617;
	PlayerActionMcvChange = 1618;
	PlayerActionQuestReissue = 1619;
	PlayerActionPropInteract = 1704;
	PlayerActionAvatarMazeSkill = 1705;
	PlayerActionEnterMaze = 1706;
	PlayerActionOrdinaryInteract = 1707;
	PlayerActionChestInteract = 1708;
	PlayerActionCheckPointUnlock = 1709;
	PlayerActionCheckPointInteract = 1710;
	PlayerActionCheckPointRevive = 1711;
	PlayerActionCheckPointTransfer = 1712;
	PlayerActionMonsterInteract = 1714;
	PlayerActionNpcInteract = 1716;
	PlayerActionPropHit = 1717;
	PlayerActionPrelogueRevive = 1718;
	PlayerActionPropState = 1719;
	PlayerActionCheckPointRecover = 1720;
	PlayerActionMechanismBar = 1722;
	PlayerActionSubmitOrigamiItem = 1723;
	PlayerActionMazeBuffDropItem = 1724;
	PlayerActionFsvChange = 1725;
	PlayerActionTimelinePropState = 1726;
	PlayerActionGroupPropertyChange = 1727;
	PlayerActionEquipmentPromotion = 1901;
	PlayerActionAddItem = 1902;
	PlayerActionUseItem = 1904;
	PlayerActionEquipmentRankUp = 1905;
	PlayerActionEquipmentLevelUp = 1906;
	PlayerActionExpUpEquipmentReturn = 1907;
	PlayerActionBagFullRewardMail = 1908;
	PlayerActionEquipmentAdd = 1909;
	PlayerActionEquipmentWear = 1910;
	PlayerActionItemCompose = 1911;
	PlayerActionRelicLevelUp = 1912;
	PlayerActionExpUpRelicReturn = 1913;
	PlayerActionRelicNumChanged = 1914;
	PlayerActionRelicWear = 1915;
	PlayerActionRelicCompose = 1916;
	PlayerActionSellItem = 1917;
	PlayerActionUnlockMusic = 1918;
	PlayerActionExchangeHcoinWithPayMcoin = 1919;
	PlayerActionGetReward = 1920;
	PlayerActionExchangeHcoinWithFreeMcoin = 1921;
	PlayerActionItemComposeFormulaUnlock = 1922;
	PlayerActionExchangeHcoin = 1923;
	PlayerActionCityShopLevelReward = 1924;
	PlayerActionItemRecycle = 1925;
	PlayerActionMuseumFundsConsume = 1926;
	PlayerActionMuseumEventBuyStuff = 1927;
	PlayerActionMuseumMarketBuyStuff = 1928;
	PlayerActionMuseumRandomEvent = 1929;
	PlayerActionMuseumInitialItem = 1930;
	PlayerActionOptionalBoxReward = 1931;
	PlayerActionDestroyItem = 1932;
	PlayerActionTransferExp = 1933;
	PlayerActionOndutyUse = 1934;
	PlayerActionItemMark = 1935;
	PlayerActionRelicDiscard = 1936;
	PlayerActionGeneralVirtualItemChange = 1937;
	PlayerActionRelicLock = 1938;
	PlayerActionRelicFilterPlanSave = 1939;
	PlayerActionRelicFilterPlanDelete = 1940;
	PlayerActionRelicFilterPlanMark = 1941;
	PlayerActionRelicSell = 1942;
	PlayerActionRelicReforge = 1943;
	PlayerActionRelicSmartWearCustomPlan = 1944;
	PlayerActionRecoverRelic = 1945;
	PlayerActionRecoverEquipment = 1946;
	PlayerActionEquipmentSell = 1947;
	PlayerActionRelicSmartWearPinRelic = 1948;
	PlayerActionRelicCocoonSetting = 1949;
	PlayerActionPersonalCardChange = 1950;
	PlayerActionPhoneCaseChange = 1951;
	PlayerActionDeliveryItemReward = 1952;
	PlayerActionItemAutoTransfer = 1953;
	PlayerActionItemAutoTransferInBag = 1954;
	PlayerActionItemAutoTransferOnAdd = 1955;
	PlayerActionTutorialGuideFinish = 2001;
	PlayerActionTutorial = 2002;
	PlayerActionTutorialGuide = 2003;
	PlayerActionMonsterDrop = 2101;
	PlayerActionFinishChallenge = 2201;
	PlayerActionChallengeStars = 2202;
	PlayerActionChallengeStart = 2203;
	PlayerActionChallengeEnd = 2204;
	PlayerActionChallengeWin = 2205;
	PlayerActionChallengeFail = 2206;
	PlayerActionChallengeLeave = 2207;
	PlayerActionChallengeSwitch = 2208;
	PlayerActionChallengeBonusReward = 2210;
	PlayerActionChallengeStarsReward = 2211;
	PlayerActionChallengeRestart = 2212;
	PlayerActionChallengeStoryStart = 2213;
	PlayerActionChallengeStoryEnd = 2214;
	PlayerActionChallengeFastPass = 2215;
	PlayerActionChallengeStoryFastPass = 2216;
	PlayerActionChallengeMemoryFastPass = 2217;
	PlayerActionChallengeBattleTarget = 2218;
	PlayerActionChallengeBossEnd = 2219;
	PlayerActionChallengeBossFastPass = 2220;
	PlayerActionChallengeStartPartial = 2221;
	PlayerActionChallengeBossPhaseStart = 2222;
	PlayerActionChallengeBossPhaseEnd = 2223;
	PlayerActionChallengeBossPhaseEndBeforeBattle = 2224;
	PlayerActionChallengeRecommendLineup = 2225;
	PlayerActionChallengeStoryFeverBattleEnd = 2226;
	PlayerActionTeamInfoChange = 2301;
	PlayerActionChangeCurrentAvatar = 2302;
	PlayerActionCreateVirtualTeam = 2303;
	PlayerActionTeamNameEdit = 2304;
	PlayerActionAvatarBuffChange = 2401;
	PlayerActionEnvBuffChange = 2402;
	PlayerActionGameCore = 2403;
	PlayerActionAvatarGlobalBuff = 2404;
	PlayerActionRogueExploreStart = 2501;
	PlayerActionRogueEnterRoom = 2502;
	PlayerActionRogueLeaveRoom = 2503;
	PlayerActionRogueExploreFinish = 2504;
	PlayerActionRogueSelectBuff = 2505;
	PlayerActionRogueRollBuff = 2506;
	PlayerActionRogueRevive = 2507;
	PlayerActionRogueChallengeStart = 2512;
	PlayerActionRogueMiracle = 2514;
	PlayerActionRogueAddBuff = 2515;
	PlayerActionRoguePickAvatar = 2516;
	PlayerActionRogueSeasonChanged = 2522;
	PlayerActionRogueAeonLevelUp = 2524;
	PlayerActionRogueOpenDoor = 2525;
	PlayerActionRogueScoreReward = 2526;
	PlayerActionRogueEnhanceBuff = 2527;
	PlayerActionRogueSelectBonus = 2528;
	PlayerActionRogueAreaFirstReward = 2529;
	PlayerActionRogueEnableTalent = 2530;
	PlayerActionRogueAeonUnlock = 2531;
	PlayerActionRogueAeonAddExp = 2532;
	PlayerActionRogueImmerseLevelUp = 2533;
	PlayerActionRogueSelectMiracle = 2534;
	PlayerActionRogueUnlockArea = 2535;
	PlayerActionRogueExploreScoreChange = 2536;
	PlayerActionRogueUpdateRewardPool = 2537;
	PlayerActionRogueSwapBuff = 2539;
	PlayerActionRogueWeeklyRefresh = 2540;
	PlayerActionRogueExchangeKey = 2541;
	PlayerActionRogueGetObjectReward = 2542;
	PlayerActionRogueAreaMonsterDrop = 2543;
	PlayerActionRogueAddMiracle = 2544;
	PlayerActionRogueSwapMiracle = 2545;
	PlayerActionRogueOpenObjectReward = 2546;
	PlayerActionRogueAeonEffect = 2547;
	PlayerActionRogueReforgeBuff = 2548;
	PlayerActionRogueTradeMiracle = 2549;
	PlayerActionRogueRemoveAvatar = 2550;
	PlayerActionRogueDialogueSelect = 2551;
	PlayerActionRogueSelectAeon = 2552;
	PlayerActionRogueDialogueFinish = 2553;
	PlayerActionRogueHandbookReward = 2554;
	PlayerActionRogueAdventureRoomReward = 2555;
	PlayerActionRogueShopBuy = 2556;
	PlayerActionRogueRepairMiracle = 2557;
	PlayerActionRogueReplaceAllMiracle = 2558;
	PlayerActionRogueMiracleBroken = 2559;
	PlayerActionRogueShopRefresh = 2560;
	PlayerActionRogueLevelMechanism = 2561;
	PlayerActionRogueRemoveMiracle = 2562;
	PlayerActionRogueDropBuff = 2563;
	PlayerActionRogueDestroyMiracle = 2564;
	PlayerActionRogueActivateFormula = 2565;
	PlayerActionRogueDeactivateFormula = 2566;
	PlayerActionRogueRemoveBuff = 2567;
	PlayerActionRogueSelectFormula = 2568;
	PlayerActionRogueDropFormula = 2569;
	PlayerActionRogueRollFormula = 2570;
	PlayerActionRogueReforgeFormula = 2571;
	PlayerActionRogueComposeMiracle = 2572;
	PlayerActionRogueReforgeMiracle = 2573;
	PlayerActionRogueDoGamble = 2574;
	PlayerActionRogueKeywordActivate = 2575;
	PlayerActionRogueKeywordDeactivate = 2576;
	PlayerActionRogueSourceDefault = 2577;
	PlayerActionRoguePlayerSelect = 2578;
	PlayerActionRogueLayerSettlement = 2579;
	PlayerActionRogueFormula = 2580;
	PlayerActionRogueWorkbench = 2581;
	PlayerActionRogueModifier = 2582;
	PlayerActionRogueReforge = 2583;
	PlayerActionRogueTalent = 2584;
	PlayerActionRogueReroll = 2585;
	PlayerActionRogueCoinChange = 2586;
	PlayerActionRogueMagicScepterShop = 2587;
	PlayerActionRogueMagicUnitShop = 2588;
	PlayerActionRogueMagicScepterLevelUp = 2589;
	PlayerActionGacha = 2601;
	PlayerActionAddGachaTicket = 2602;
	PlayerActionGachaExchange = 2603;
	PlayerActionSetGachaDecideItem = 2604;
	PlayerActionEventMissionAccept = 2801;
	PlayerActionEventMissionFinish = 2802;
	PlayerActionEventMissionReward = 2803;
	PlayerActionRaidFinish = 2901;
	PlayerActionRaidBegin = 2902;
	PlayerActionChallengeRaidReward = 2903;
	PlayerActionStartRaid = 2904;
	PlayerActionEndRaid = 2905;
	PlayerActionRaidTargetFinish = 2906;
	PlayerActionArchiveRaid = 2907;
	PlayerActionHeroBaseTypeChange = 3051;
	PlayerActionHeroBaseTypeAddByMission = 3052;
	PlayerActionHeroBaseTypeAddByReq = 3053;
	PlayerActionHeroBaseTypeAdd = 3054;
	PlayerActionDialogueSelect = 3101;
	PlayerActionExpeditionStart = 3151;
	PlayerActionExpeditionFinish = 3152;
	PlayerActionExpeditionReward = 3153;
	PlayerActionActivityExpeditionStart = 3154;
	PlayerActionActivityExpeditionFinish = 3155;
	PlayerActionActivityExpeditionReward = 3156;
	PlayerActionActivityExpeditionBegin = 3157;
	PlayerActionActivityExpeditionEnd = 3158;
	PlayerActionActivityLoginReward = 3201;
	PlayerActionFriendReport = 3301;
	PlayerActionAssistReward = 3302;
	PlayerActionAssistAvatarRefresh = 3303;
	PlayerActionAssistAvatarBattleStart = 3304;
	PlayerActionAssistAvatarBattleEnd = 3305;
	PlayerActionFriendApply = 3306;
	PlayerActionFriendManage = 3307;
	PlayerActionFriendBlacklist = 3308;
	PlayerActionFriendModifyRemarkName = 3309;
	PlayerActionFriendMark = 3310;
	PlayerActionFriendAssistList = 3311;
	PlayerActionBattlePassLevelReward = 3202;
	PlayerActionBattlePass128tierReward = 3203;
	PlayerActionBattlePassLevelRewardAutoMail = 3204;
	PlayerActionBuyBattlePass = 3205;
	PlayerActionAddBattlePassExp = 3206;
	PlayerActionBattlePassLevelUp = 3207;
	PlayerActionBuyBattlePassLevel = 3208;
	PlayerActionBattlePassEndMail = 3209;
	PlayerActionBattlePass68tierReward = 3210;
	PlayerActionModifySign = 3401;
	PlayerActionDisplayAvatarSet = 3402;
	PlayerActionAssistAvatarSet = 3403;
	PlayerActionAchievementFinish = 3501;
	PlayerActionAchievementReward = 3502;
	PlayerActionAchievementAddExp = 3503;
	PlayerActionAchievementLevelUp = 3504;
	PlayerActionPunkLordReward = 3601;
	PlayerActionPunkLordBossSearch = 3604;
	PlayerActionPunkLordBossShare = 3605;
	PlayerActionStartPunkLordRaid = 3606;
	PlayerActionPunkLordSupportTimes = 3608;
	PlayerActionPunkLordScoreReward = 3609;
	PlayerActionPunkLordListRefresh = 3610;
	PlayerActionPunkLordPowerAttack = 3611;
	PlayerActionPunkLordBattleEnd = 3612;
	PlayerActionPunkLordBossDeath = 3613;
	PlayerActionPunkLordBossScore = 3614;
	PlayerActionDailyActiveLevelReward = 3701;
	PlayerActionDailyActiveAddPoint = 3702;
	PlayerActionDailyActiveDeleteOldQuest = 3703;
	PlayerActionFightActivityBegin = 3791;
	PlayerActionFightActivityEnd = 3792;
	PlayerActionFightActivityReward = 3801;
	PlayerActionActivityEndMail = 3802;
	PlayerActionAppointmentMail = 3803;
	PlayerActionShareReward = 3804;
	PlayerActionActivityTrialReward = 3805;
	PlayerActionActivityTrialStart = 3806;
	PlayerActionPsPreOrderMail1 = 3811;
	PlayerActionPsPreOrderMail2 = 3812;
	PlayerActionPsLoginMail = 3813;
	PlayerActionLoginMail = 3814;
	PlayerActionGooglePoints100Mail = 3821;
	PlayerActionGooglePoints150Mail = 3822;
	PlayerActionTrainVisitorBehaviorFinish = 3901;
	PlayerActionEnterViewTrain = 3902;
	PlayerActionTrainVisitorBehaviorRewardForceSend = 3903;
	PlayerActionTrainVisitorRegisterOpen = 3904;
	PlayerActionTrainVisitorBehaviorRewardForceSendByRegister = 3905;
	PlayerActionTrainVisitorClearLastTrainVisitor = 3906;
	PlayerActionTrainVisitorRefreshTrainVisitor = 3907;
	PlayerActionTrainVisitorRefreshNpc = 3908;
	PlayerActionMessageGroupAccept = 3951;
	PlayerActionMessageSectionAccept = 3952;
	PlayerActionMessageSectionFinish = 3953;
	PlayerActionMessageItemFinish = 3954;
	PlayerActionFinishMessageGroupReward = 3955;
	PlayerActionSubstituteMessageGroupReward = 3956;
	PlayerActionDeleteMessageGroup = 3957;
	PlayerActionDeleteMessageSection = 3958;
	PlayerActionDeleteMessageGroupByConfig = 3959;
	PlayerActionDeleteMessageGroupByActivity = 3960;
	PlayerActionDeleteMessageGroupByMission = 3961;
	PlayerActionTextJoinSave = 4001;
	PlayerActionBoxingClubStart = 4051;
	PlayerActionBoxingClubFinish = 4052;
	PlayerActionBoxingClubPause = 4053;
	PlayerActionBoxingClubStageStart = 4054;
	PlayerActionTalkSend = 4101;
	PlayerActionSelectInclinationText = 4102;
	PlayerActionMuseumSettleTurnOpen = 4201;
	PlayerActionMuseumUpgradeArea = 4202;
	PlayerActionMuseumUpgradeAreaStat = 4203;
	PlayerActionMuseumDispatchRewardRegular = 4204;
	PlayerActionMuseumDispatchRewardDirectional = 4205;
	PlayerActionMuseumPhaseTargetFinished = 4206;
	PlayerActionMuseumGetStuff = 4207;
	PlayerActionMuseumGetExhibit = 4208;
	PlayerActionMuseumTakeCollectMission = 4209;
	PlayerActionMuseumAreaUnlock = 4210;
	PlayerActionMuseumAreaUpgrade = 4211;
	PlayerActionMuseumAreaStatUpgrade = 4212;
	PlayerActionMuseumEnterNextRound = 4213;
	PlayerActionMuseumStartDispatch = 4214;
	PlayerActionMuseumSettleDispatch = 4215;
	PlayerActionMuseumRenewPointChanged = 4216;
	PlayerActionMuseumTargetReward = 4217;
	PlayerActionMuseumPhaseUpgrade = 4218;
	PlayerActionMuseumCollectReward = 4219;
	PlayerActionMuseumTargetStart = 4220;
	PlayerActionMuseumTargetFinish = 4221;
	PlayerActionActivityMonsterResearchConsumeMaterial = 4301;
	PlayerActionActivityMonsterResearchTakeReward = 4302;
	PlayerActionPlayerReturnStart = 4401;
	PlayerActionPlayerReturnSign = 4402;
	PlayerActionPlayerReturnPoint = 4403;
	PlayerActionPlayerReturnCountdown = 4404;
	PlayerActionPlayerReturnFinish = 4405;
	PlayerActionPlayerReturnCompensate = 4406;
	PlayerActionPlayerReturnGetRelic = 4407;
	PlayerActionRogueChallengeActivityStart = 4411;
	PlayerActionRogueChallengeActivityFinish = 4412;
	PlayerActionRogueChallengeActivitySave = 4413;
	PlayerActionAetherDivideUsePassiveSkillItem = 4450;
	PlayerActionAetherDivideClearPassiveSkill = 4451;
	PlayerActionAetherDivideFinishChallenge = 4452;
	PlayerActionAetherDivideOverflowChunkReward = 4453;
	PlayerActionAetherDivideLevelUp = 4454;
	PlayerActionAetherDivideNewReward = 4455;
	PlayerActionAetherDivideMonsterAdd = 4456;
	PlayerActionAetherDivideMonsterLevel = 4457;
	PlayerActionAetherDivideMonsterSkillWear = 4458;
	PlayerActionAetherDivideTeamChange = 4459;
	PlayerActionAetherDivideStageBegin = 4460;
	PlayerActionAetherDivideStageEnd = 4461;
	PlayerActionAetherDivideStageRoll = 4462;
	PlayerActionAlleyEventFinish = 4501;
	PlayerActionAlleyTakeReward = 4502;
	PlayerActionAlleyPrestigeLevelUp = 4503;
	PlayerActionAlleyLogisticsFinish = 4504;
	PlayerActionAlleyPlacingGameFinish = 4505;
	PlayerActionAlleyGuaranteedFunds = 4506;
	PlayerActionAlleyTakeEventReward = 4507;
	PlayerActionAlleySpecialOrderFinish = 4508;
	PlayerActionSensitiveWordShield = 4601;
	PlayerActionSensitiveWordServerInternalError = 4602;
	PlayerActionSensitiveWordPlatformError = 4603;
	PlayerActionTreasureDungeonStart = 4701;
	PlayerActionTreasureDungeonFinish = 4702;
	PlayerActionTreasureDungeonEnterFloor = 4703;
	PlayerActionTreasureDungeonLeaveFloor = 4704;
	PlayerActionTreasureDungeonUseItem = 4705;
	PlayerActionTreasureDungeonAvatarChange = 4706;
	PlayerActionTreasureDungeonBattleStart = 4707;
	PlayerActionTreasureDungeonBattleEnd = 4708;
	PlayerActionTreasureDungeonPickupBuff = 4709;
	PlayerActionChessRogueFirstFinish = 4801;
	PlayerActionChessRogueGiveupDice = 4802;
	PlayerActionChessRogueSubStorySelect = 4803;
	PlayerActionChessRogueActionPoint = 4804;
	PlayerActionChessRogueReviveByProp = 4805;
	PlayerActionChessRogueStartLevel = 4806;
	PlayerActionChessRogueDiceEffect = 4807;
	PlayerActionChessRogueMainStoryFinish = 4808;
	PlayerActionChessRogueAeonTalentEffect = 4809;
	PlayerActionChessRogueModifierOthersEffect = 4810;
	PlayerActionChessRogueAddBuff = 4811;
	PlayerActionChessRogueReforgeBuff = 4812;
	PlayerActionChessRogueBuffLevelUp = 4813;
	PlayerActionChessRogueEnhanceBuff = 4814;
	PlayerActionChessRogueAddMiracle = 4815;
	PlayerActionChessRogueSwapMiracle = 4816;
	PlayerActionChessRogueSelectBonus = 4817;
	PlayerActionChessRogueDialogueFinish = 4818;
	PlayerActionChessRogueSubStoryFinish = 4819;
	PlayerActionChessRogueAdventureRoomFinish = 4820;
	PlayerActionChessRogueFinishLevel = 4821;
	PlayerActionChessRogueStartLayer = 4822;
	PlayerActionChessRogueFinishLayer = 4823;
	PlayerActionChessRogueEnterRoom = 4824;
	PlayerActionChessRogueLeaveRoom = 4825;
	PlayerActionChessRogueRollDice = 4826;
	PlayerActionChessRogueSelectDice = 4827;
	PlayerActionChessRogueUnlockDice = 4828;
	PlayerActionChessRogueBoardEvent = 4829;
	PlayerActionChessRogueDimensionPoint = 4830;
	PlayerActionChessRoguePickAvatar = 4831;
	PlayerActionChessRogueReviveAvatar = 4832;
	PlayerActionChessRogueNousSubStorySelect = 4833;
	PlayerActionChessRogueLevelMechanism = 4844;
	PlayerActionChessRogueNousStartLevel = 4845;
	PlayerActionChessRogueNousFinishLevel = 4846;
	PlayerActionChessRogueNousStartLayer = 4847;
	PlayerActionChessRogueNousFinishLayer = 4848;
	PlayerActionChessRogueNousEnterRoom = 4849;
	PlayerActionChessRogueNousLeaveRoom = 4850;
	PlayerActionChessRogueNousSelectDice = 4851;
	PlayerActionChessRogueNousUnlockDiceBranch = 4852;
	PlayerActionChessRogueNousUnlockDiceSurface = 4853;
	PlayerActionChessRogueNousEditDice = 4854;
	PlayerActionChessRogueNousValueChange = 4855;
	PlayerActionChessRogueNousMainStoryTrigger = 4856;
	PlayerActionChessRogueNousMainStoryFinish = 4857;
	PlayerActionChessRogueNousSubStoryTrigger = 4858;
	PlayerActionChessRogueNousSubStoryFinish = 4859;
	PlayerActionChessRogueNousEnableTalent = 4860;
	PlayerActionChessRogueSelectBuff = 4861;
	PlayerActionChessRogueSelectMiracle = 4862;
	PlayerActionChessRogueRemoveMiracle = 4863;
	PlayerActionChessRogueBoardCell = 4864;
	PlayerActionFantasticStoryBattleBegin = 4901;
	PlayerActionFantasticStoryBattleEnd = 4902;
	PlayerActionRogueEndlessReward = 4950;
	PlayerActionRogueEndlessLevelStart = 4951;
	PlayerActionRogueEndlessStageBegin = 4952;
	PlayerActionRogueEndlessStageEnd = 4953;
	PlayerActionBattleCollegeReward = 5001;
	PlayerActionCommonRogueMiracleForBuffShop = 5051;
	PlayerActionCommonRogueAdventureRoomFinish = 5052;
	PlayerActionCommonRogueBuyBuffShop = 5053;
	PlayerActionCommonRogueBuyBuffShopRefresh = 5054;
	PlayerActionCommonRogueCollectionUnlock = 5055;
	PlayerActionCommonRogueCollectionSet = 5056;
	PlayerActionCommonRogueExhibitionUnlock = 5057;
	PlayerActionCommonRogueExhibitionSet = 5058;
	PlayerActionCommonRogueChestInteract = 5059;
	PlayerActionCommonRogueAdventureRoomWolfgunFinish = 5060;
	PlayerActionHeliobusPostIncomeReward = 5101;
	PlayerActionHeliobusPostFansReward = 5102;
	PlayerActionHeliobusLevelUpgrade = 5103;
	PlayerActionHeliobusPostReplyReward = 5104;
	PlayerActionHeliobusCommentReplyReward = 5105;
	PlayerActionHeliobusChallengeFirstReward = 5106;
	PlayerActionHeliobusFansAdd = 5107;
	PlayerActionHeliobusActionDaySettle = 5108;
	PlayerActionHeliobusSkillUnlock = 5109;
	PlayerActionHeliobusStageBegin = 5110;
	PlayerActionHeliobusStageEnd = 5111;
	PlayerActionHeliobusSnsRead = 5112;
	PlayerActionHeliobusSnsPostUnlock = 5113;
	PlayerActionHeliobusSnsCommentUnlock = 5114;
	PlayerActionHeliobusSnsComment = 5115;
	PlayerActionHeliobusSnsPost = 5116;
	PlayerActionHeliobusSnsLike = 5117;
	PlayerActionHeliobusPhaseUpgrade = 5118;
	PlayerActionPsPointCard30Reward = 5201;
	PlayerActionPsPointCard50Reward = 5202;
	PlayerActionPsPointCard100Reward = 5203;
	PlayerActionPsnPlusGiftReward = 5204;
	PlayerActionAppleGiftCardReward = 5205;
	PlayerActionHeartDialSubmitItem = 5301;
	PlayerActionHeartDialDialoguePerform = 5302;
	PlayerActionHeartDialTraceConsume = 5303;
	PlayerActionHeartDialChangeEmotion = 5304;
	PlayerActionTravelBrochureAddDefaultPaster = 5401;
	PlayerActionSpaceZooBorn = 5501;
	PlayerActionSpaceZooMutate = 5502;
	PlayerActionSpaceZooDelete = 5503;
	PlayerActionSpaceZooExchangeItem = 5504;
	PlayerActionSpaceZooExpPoint = 5505;
	PlayerActionSpaceZooTakeReward = 5506;
	PlayerActionSpaceZooCollection = 5507;
	PlayerActionSpaceZooShow = 5508;
	PlayerActionSpaceZooSpecialData = 5509;
	PlayerActionStrongChallengeBattleBegin = 5701;
	PlayerActionStrongChallengeBattleEnd = 5702;
	PlayerActionRollShopDoGacha = 5751;
	PlayerActionRollShopTakeReward = 5752;
	PlayerActionOfferingSubmitItem = 5801;
	PlayerActionOfferingTakeReward = 5802;
	PlayerActionTravelBrochurePageUnlock = 5851;
	PlayerActionTravelBrochurePageInteractAward = 5852;
	PlayerActionTravelBrochureStickerUnlock = 5853;
	PlayerActionTravelBrochureStickerApply = 5854;
	PlayerActionTravelBrochureStickerRemove = 5855;
	PlayerActionTravelBrochurePageReset = 5856;
	PlayerActionTrackMainMissionId = 5901;
	PlayerActionWolfBroBegin = 5911;
	PlayerActionWolfBroGroupStateChange = 5912;
	PlayerActionWolfBroEnd = 5913;
	PlayerActionWolfBroBulletZero = 5914;
	PlayerActionWolfBroActivateBullet = 5915;
	PlayerActionWolfBroBulletNumChange = 5916;
	PlayerActionWolfBroUseBulletNull = 5917;
	PlayerActionWolfBroUseBulletHitMonster = 5918;
	PlayerActionWolfBroPickUpBullet = 5919;
	PlayerActionWolfBroRestoreArchive = 5920;
	PlayerActionTelevisionActivityBattleBegin = 5921;
	PlayerActionTelevisionActivityBattleEnd = 5922;
	PlayerActionFeverTimeActivityBattleBegin = 5923;
	PlayerActionFeverTimeActivityBattleEnd = 5924;
	PlayerActionGunPlayEnd = 5925;
	PlayerActionActivityStarFightBegin = 5926;
	PlayerActionActivityStarFightEnd = 5927;
	PlayerActionMapRotationEnterRegion = 5931;
	PlayerActionMapRotationLeaveRegion = 5932;
	PlayerActionMapRotationInteractCharger = 5933;
	PlayerActionMapRotationDeployRotater = 5934;
	PlayerActionMapRotationRotateMap = 5935;
	PlayerActionMapRotationAddEnergy = 5936;
	PlayerActionMapRotationSetMaxEnergy = 5937;
	PlayerActionMapRotationRemoveRotater = 5938;
	PlayerActionMapRotationAutoDeployRotater = 5939;
	PlayerActionMapRotationAutoRemoveRotater = 5940;
	PlayerActionDrinkMakerAddTips = 5951;
	PlayerActionDrinkMakerFinishChallenge = 5952;
	PlayerActionDrinkMakerGuestMaxFaithReward = 5953;
	PlayerActionDrinkMakerMakeDrink = 5954;
	PlayerActionDrinkMakerSaveCustomDrink = 5955;
	PlayerActionDrinkMakerEndSequence = 5956;
	PlayerActionDrinkMakerCheersMakeDrink = 5957;
	PlayerActionDrinkMakerCheersNpcDrink = 5958;
	PlayerActionChangeStoryLine = 6001;
	PlayerActionContentPackageStatusChange = 6011;
	PlayerActionContentPackageTrackChange = 6012;
	PlayerActionContentPackageAcceptMainMission = 6013;
	PlayerActionWorldDirectUnlock = 6041;
	PlayerActionMonopolyTurnFinish = 6051;
	PlayerActionMonopolyAssetTurntax = 6052;
	PlayerActionMonopolyAssetBonus = 6053;
	PlayerActionMonopolyEventEffect = 6054;
	PlayerActionMonopolyMiniGameSettle = 6055;
	PlayerActionMonopolyGameRaiseRatio = 6056;
	PlayerActionMonopolyMoveRollDice = 6057;
	PlayerActionMonopolyMove = 6059;
	PlayerActionMonopolyBuyGoods = 6060;
	PlayerActionMonopolyUpgradeAsset = 6061;
	PlayerActionMonopolyEventRerollRandom = 6062;
	PlayerActionMonopolyDailyRefresh = 6063;
	PlayerActionMonopolyGameGuessBuyInformation = 6064;
	PlayerActionMonopolyDailyFirstEnterActivity = 6065;
	PlayerActionMonopolySocialEvent = 6066;
	PlayerActionMonopolyRaffleTicketReward = 6067;
	PlayerActionMonopolyLike = 6068;
	PlayerActionMonopolyPhaseReward = 6069;
	PlayerActionMonopolyMbtiReportReward = 6070;
	PlayerActionMonopolyDailySettle = 6071;
	PlayerActionMonopolyStart = 6072;
	PlayerActionMonopolyGetBuff = 6073;
	PlayerActionMonopolyAssetFundsChange = 6074;
	PlayerActionMonopolyAssetUpgrade = 6075;
	PlayerActionMonopolyDirectCoinGameSettle = 6076;
	PlayerActionMonopolyExtractRaffleTicket = 6077;
	PlayerActionMonopolyMbtiProgressChange = 6078;
	PlayerActionMonopolyQuizGameSettle = 6079;
	PlayerActionMonopolyEventSettle = 6080;
	PlayerActionMonopolyItemChange = 6081;
	PlayerActionMonopolyCellTrigger = 6082;
	PlayerActionMonopolyEventTrigger = 6083;
	PlayerActionMonopolyClickEffect = 6084;
	PlayerActionEvolveBuildLevelFinish = 6101;
	PlayerActionEvolveBuildShopAbilityUp = 6102;
	PlayerActionEvolveBuildShopAbilityDown = 6103;
	PlayerActionEvolveBuildTakeExpReward = 6104;
	PlayerActionEvolveBuildBattleEndAddCoin = 6105;
	PlayerActionEvolveBuildShopAbilityReset = 6106;
	PlayerActionEvolveBuildLevelStart = 6107;
	PlayerActionEvolveBuildLevelEnd = 6108;
	PlayerActionEvolveBuildStageStart = 6109;
	PlayerActionEvolveBuildStageEnd = 6110;
	PlayerActionEvolveBuildLevelLeave = 6111;
	PlayerActionClockParkUnlockScript = 6151;
	PlayerActionClockParkUnlockTalent = 6152;
	PlayerActionClockParkFinishScript = 6153;
	PlayerActionClockParkRoundUpdate = 6154;
	PlayerActionClockParkScriptBegin = 6155;
	PlayerActionRogueTournStartLevel = 6200;
	PlayerActionRogueTournFinishLevel = 6201;
	PlayerActionRogueTournExpReward = 6202;
	PlayerActionRogueTournFinishWeekChallenge = 6203;
	PlayerActionRogueTournPermanentTalentEffect = 6204;
	PlayerActionRogueTournFinishFormulaStory = 6205;
	PlayerActionRogueTournRevive = 6206;
	PlayerActionRogueTournStageBegin = 6207;
	PlayerActionRogueTournStageEnd = 6208;
	PlayerActionRogueTournPermanentEnableTalent = 6209;
	PlayerActionRogueTournPermanentResetTalent = 6210;
	PlayerActionRogueTournCocoonStageBegin = 6211;
	PlayerActionRogueTournCocoonStageEnd = 6212;
	PlayerActionRogueTournExpUpdate = 6213;
	PlayerActionRogueTournEnterRoom = 6214;
	PlayerActionRogueTournLeaveRoom = 6215;
	PlayerActionRogueTournArchiveSave = 6216;
	PlayerActionRogueTournSelectBonus = 6217;
	PlayerActionRogueTournDialogueFinish = 6218;
	PlayerActionRogueTournDoGamble = 6219;
	PlayerActionRogueTournRoomContentGenerate = 6220;
	PlayerActionRogueTournAddMiracle = 6221;
	PlayerActionRogueTournRemoveMiracle = 6222;
	PlayerActionRogueTournSelectMiracle = 6223;
	PlayerActionRogueTournDropMiracle = 6224;
	PlayerActionRogueTournAddBuff = 6225;
	PlayerActionRogueTournSelectBuff = 6226;
	PlayerActionRogueTournBuffLevelUp = 6227;
	PlayerActionRogueTournRemoveBuff = 6228;
	PlayerActionRogueTournAddFormula = 6229;
	PlayerActionRogueTournRemoveFormula = 6230;
	PlayerActionRogueTournSelectFormula = 6231;
	PlayerActionRogueTournActivateFormula = 6232;
	PlayerActionRogueTournAdventureRoomFinish = 6233;
	PlayerActionRogueTournAlterLineup = 6234;
	PlayerActionRogueTournSeasonEnableTalent = 6235;
	PlayerActionRogueTournTitanStartLevel = 6236;
	PlayerActionRogueTournTitanFinishLevel = 6237;
	PlayerActionRogueTournTitanEnterRoom = 6238;
	PlayerActionRogueTournTitanLeaveRoom = 6239;
	PlayerActionRogueTournTitanStageBegin = 6240;
	PlayerActionRogueTournTitanStageEnd = 6241;
	PlayerActionRogueTournTitanArchiveSave = 6243;
	PlayerActionRogueTournTitanAddTitanBless = 6244;
	PlayerActionRogueTournTitanSelectTitanBless = 6245;
	PlayerActionRogueTournDivisionChange = 6246;
	PlayerActionRogueTournSelectReRollMiracle = 6247;
	PlayerActionRogueTournTriggerBattleByShop = 6248;
	PlayerActionRogueWorkbenchReforgeFormula = 6281;
	PlayerActionRogueWorkbenchReforgeMiracle = 6282;
	PlayerActionRogueWorkbenchComposeMiracle = 6283;
	PlayerActionRogueWorkbenchReforgeBuff = 6284;
	PlayerActionRogueWorkbenchEnhanceBuff = 6285;
	PlayerActionMatchThreePveSettle = 6301;
	PlayerActionMatchThreeSettle = 6302;
	PlayerActionFightMatch3GameStart = 6303;
	PlayerActionFightMatch3GameEnd = 6304;
	PlayerActionFightMatch3TurnEnd = 6305;
	PlayerActionMatchThreeBirdPos = 6306;
	PlayerActionMultiplePlayInvite = 6307;
	PlayerActionMultiplePlayInviteRespond = 6308;
	PlayerActionMultiplePlayLobbyEnter = 6309;
	PlayerActionMultiplePlayLobbyQuit = 6310;
	PlayerActionMultiplePlayLobbyKick = 6311;
	PlayerActionMultiplePlayLobbyMatch = 6312;
	PlayerActionMarbleSettle = 6313;
	PlayerActionMatchThreeSoloSettle = 6314;
	PlayerActionMatchThreeV2BattleitemLevelup = 6315;
	PlayerActionMatchThreeV2PveSettle = 6316;
	PlayerActionMatchThreeV2PvpSettle = 6317;
	PlayerActionMatch3SoloGameStart = 6318;
	PlayerActionMatch3SoloGameEnd = 6319;
	PlayerActionMatch3SoloRoundEnd = 6320;
	PlayerActionSwordTrainingLearnSkill = 6351;
	PlayerActionSwordTrainingNormalAction = 6352;
	PlayerActionSwordTrainingStoryEffect = 6353;
	PlayerActionSwordTrainingEndingHint = 6354;
	PlayerActionSwordTrainingActionHint = 6355;
	PlayerActionSwordTrainingRestoreGameByExam = 6356;
	PlayerActionSwordTrainingStoryLineFirstClear = 6357;
	PlayerActionSwordTrainingTakeEndingReward = 6358;
	PlayerActionSwordTrainingStoryLineBegin = 6359;
	PlayerActionSwordTrainingEnterTurn = 6360;
	PlayerActionSwordTrainingPlanAction = 6361;
	PlayerActionSwordTrainingActionPhaseEnd = 6362;
	PlayerActionSwordTrainingStory = 6363;
	PlayerActionSwordTrainingStatusChange = 6364;
	PlayerActionSwordTrainingMoodChange = 6365;
	PlayerActionSwordTrainingBattleBegin = 6366;
	PlayerActionSwordTrainingBattleEnd = 6367;
	PlayerActionSwordTrainingCombatRankChange = 6368;
	PlayerActionSwordTrainingStoryLineEnd = 6369;
	PlayerActionSwordTrainingResumeStoryLine = 6370;
	PlayerActionSwordTrainingGameSuccess = 6371;
	PlayerActionSwordTrainingGameGiveUp = 6372;
	PlayerActionSwordTrainingExam = 6374;
	PlayerActionSwordTrainingDialogue = 6375;
	PlayerActionSwordTrainingSetSkillTrace = 6376;
	PlayerActionFightFestFinishScoreRaceMission = 6401;
	PlayerActionFightFestFinishScoreRacePhase = 6402;
	PlayerActionFightFestRaceStart = 6403;
	PlayerActionFightFestRaceEnd = 6404;
	PlayerActionFightFestChallengeStart = 6405;
	PlayerActionFightFestChallengeEnd = 6406;
	PlayerActionFightFestGetCoachItem = 6407;
	PlayerActionFightFestAcceptScoreRaceMission = 6408;
	PlayerActionPetUse = 6451;
	PlayerActionMusicRhythmPassLevelStar = 6501;
	PlayerActionMusicRhythmLevelBegin = 6502;
	PlayerActionMusicRhythmLevelEnd = 6503;
	PlayerActionTrackPhotoStageBegin = 6551;
	PlayerActionTrackPhotoStageEnd = 6552;
	PlayerActionSummonActivityBattleBegin = 6561;
	PlayerActionSummonActivityBattleEnd = 6562;
	PlayerActionRaidCollectionEnterNextRaid = 6571;
	PlayerActionDifficultyAdjustmentSet = 6572;
	PlayerActionDifficultyAdjustmentUnset = 6573;
	PlayerActionRogueArcadeAdventureRoomStart = 6580;
	PlayerActionRogueArcadeAdventureRoomFinish = 6581;
	PlayerActionRogueMagicStartLevel = 6601;
	PlayerActionRogueMagicFinishLevel = 6602;
	PlayerActionRogueMagicRevive = 6603;
	PlayerActionRogueMagicEnterRoom = 6604;
	PlayerActionRogueMagicLeaveRoom = 6605;
	PlayerActionRogueMagicAddMiracle = 6606;
	PlayerActionRogueMagicRemoveMiracle = 6607;
	PlayerActionRogueMagicStageBegin = 6608;
	PlayerActionRogueMagicStageEnd = 6609;
	PlayerActionRogueMagicEnableTalent = 6610;
	PlayerActionRogueMagicFinishStory = 6611;
	PlayerActionRogueMagicAddScepter = 6612;
	PlayerActionRogueMagicSelectScepter = 6613;
	PlayerActionRogueMagicMountUnit = 6614;
	PlayerActionRogueMagicAutoMountUnit = 6615;
	PlayerActionRogueMagicAddMagicUnit = 6616;
	PlayerActionRogueMagicRemoveMagicUnit = 6617;
	PlayerActionRogueMagicWorkbenchComposeMagicUnit = 6618;
	PlayerActionRogueMagicWorkbenchReforgeMagicUnit = 6619;
	PlayerActionRogueMagicWorkbenchLevelUpScepter = 6620;
	PlayerActionTrainPartyGamePlayStart = 6701;
	PlayerActionTrainPartyPhaseBegin = 6702;
	PlayerActionTrainPartyPhaseEnd = 6703;
	PlayerActionTrainPartyRound = 6704;
	PlayerActionTrainPartyMeetingBegin = 6705;
	PlayerActionTrainPartyMeetingEnd = 6706;
	PlayerActionTrainPartyMeetingPlayCard = 6707;
	PlayerActionTrainPartyMeetingReRoll = 6708;
	PlayerActionTrainPartyBuildAreaUnlock = 6709;
	PlayerActionTrainPartyBuildStep = 6710;
	PlayerActionTrainPartyBuildLevelAward = 6711;
	PlayerActionTrainPartyBuildingDynamicBuff = 6712;
	PlayerActionTrainPartyBuildDiy = 6713;
	PlayerActionSwitchHandOpPropState = 6801;
	PlayerActionEraFlipperChangeRegionState = 6811;
	PlayerActionEraFlipperChangePropState = 6812;
	PlayerActionActivityBenefitReward = 6820;
	PlayerActionActivityBenefitJoin = 6821;
	PlayerActionActivityBenefitInitialReward = 6822;
	PlayerActionPamSkinChangeSkin = 6851;
	PlayerActionChestFind = 6861;
	PlayerActionReissueMarkChestItemMail = 6862;
	PlayerActionMarblePassMatch = 6871;
	PlayerActionMarbleBuySeal = 6872;
	PlayerActionMarbleFightGameBegin = 6873;
	PlayerActionMarbleFightGameEnd = 6874;
	PlayerActionMarbleFightGameRound = 6875;
	PlayerActionMarbleFightGameTurn = 6876;
	PlayerActionPlanetFesLevelUp = 6901;
	PlayerActionPlanetFesActivityInit = 6902;
	PlayerActionPlanetFesAvatarLevelUp = 6903;
	PlayerActionPlanetFesTakeRegionPhaseReward = 6904;
	PlayerActionPlanetFesAddItem = 6905;
	PlayerActionPlanetFesQuest = 6906;
	PlayerActionPlanetFesBusinessDayFinish = 6907;
	PlayerActionPlanetFesAvatarStarUp = 6908;
	PlayerActionPlanetFesUnlockLand = 6909;
	PlayerActionPlanetFesBusinessEventFinish = 6910;
	PlayerActionPlanetFesActivateCard = 6911;
	PlayerActionPlanetFesSkillLevelUp = 6912;
	PlayerActionPlanetFesGacha = 6913;
	PlayerActionPlanetFesBusinessEventHandle = 6914;
	PlayerActionPlanetFesCardApplyPermission = 6915;
	PlayerActionPlanetFesCardInteract = 6916;
	PlayerActionPlanetFesToSns = 6917;
	PlayerActionPlanetFesSetWorkAvatar = 6918;
	PlayerActionPlanetFesSummary = 6919;
	PlayerActionTarotBookCharacterLevelUp = 6951;
	PlayerActionTarotBookOpenPack = 6952;
	PlayerActionTarotBookUnlockStory = 6953;
	PlayerActionTarotBookUnlockStorySingle = 6954;
	PlayerActionTarotBookFinishStory = 6955;
	PlayerActionTarotBookFinishInteraction = 6956;
	PlayerActionTarotBookChangeEnergy = 6957;
	PlayerActionTarotBookUnlockInteraction = 6958;
	PlayerActionChimeraRoundStart = 6971;
	PlayerActionChimeraRoundWorkStart = 6972;
	PlayerActionChimeraRoundWorkEnd = 6973;
	PlayerActionChimeraEndlessStart = 6974;
	PlayerActionChimeraEndlessEnd = 6975;
	PlayerActionChimeraEndlessWorkStart = 6976;
	PlayerActionChimeraEndlessWorkEnd = 6977;
	PlayerActionChimeraRankChange = 6978;
	PlayerActionChimeraGet = 6979;
	PlayerActionStoryTokenTakeActivityReward = 6991;
	PlayerActionReissueAvatarTokenItem = 6992;
	PlayerActionAvatarDeliverRewardActivityTakeReward = 7001;
	PlayerActionElfRestaurantBuyField = 7011;
	PlayerActionElfRestaurantPlantSeed = 7012;
	PlayerActionElfRestaurantRecycleSeed = 7013;
	PlayerActionElfRestaurantHarvestCrop = 7014;
	PlayerActionElfRestaurantUpgradeEmployeeLevel = 7015;
	PlayerActionElfRestaurantUpgradeFacilityLevel = 7016;
	PlayerActionElfRestaurantUpgradeRecipeLevel = 7017;
	PlayerActionElfRestaurantBuyShopItem = 7018;
	PlayerActionElfRestaurantFinishTradeOrder = 7019;
	PlayerActionElfRestaurantTakeVillagerReward = 7020;
	PlayerActionElfRestaurantSettleRestaurantPlay = 7021;
	PlayerActionElfRestaurantInit = 7022;
	PlayerActionElfRestaurantSettleProgress = 7023;
	PlayerActionElfRestaurantSettleDay = 7024;
	PlayerActionElfRestaurantAddItem = 7025;
	PlayerActionLocalLegendReward = 7031;
	PlayerActionFateLevelStart = 7041;
	PlayerActionFateLevelSettle = 7042;
	PlayerActionFateBattleStart = 7043;
	PlayerActionFateBattleEnd = 7044;
	PlayerActionFateAddHougu = 7045;
	PlayerActionFateSelectHougu = 7046;
	PlayerActionFateSelectReiju = 7047;
	PlayerActionFateRefreshReiju = 7048;
	PlayerActionFateAddCoin = 7049;
	PlayerActionFateBuyBuff = 7050;
	PlayerActionFateSellBuff = 7051;
	PlayerActionFateRefreshShop = 7052;
	PlayerActionFateLockGoods = 7053;
	PlayerActionFateUnlockGoods = 7054;
	PlayerActionFateTakeExpReward = 7055;
	PlayerActionFateAddExp = 7056;
	PlayerActionFateMasterHpChange = 7057;
	PlayerActionParkourStartLevel = 7061;
	PlayerActionParkourEndLevel = 7062;
	PlayerActionBasinChestInteractResult = 7091;
	PlayerActionRogueMiracleSwap = 7092;
}

enum AvatarSlot {
	AvatarSlot1 = 0;
	AvatarSlot2 = 1;
	AvatarSlot3 = 2;
}

enum ItemType {
	None = 0;
	ItemAvatarCard = 1;
	ItemEquipment = 2;
	ItemMaterial = 3;
	ItemAvatarExp = 4;
	ItemRelic = 5;
}

enum VirtualItemType {
	VirtualItemNone = 0;
	VirtualItemHcoin = 1;
	VirtualItemScoin = 2;
	VirtualItemMcoin = 3;
	VirtualItemStamina = 11;
	VirtualItemReserveStamina = 12;
	VirtualItemAvatarExp = 21;
	VirtualItemExp = 22;
	VirtualItemDailyActivePoint = 23;
	VirtualItemMpMax = 24;
	VirtualItemPlayerReturnPoint = 25;
	VirtualItemBattleCollegePoint = 26;
	VirtualItemRogueCoin = 31;
	VirtualItemRogueTalentCoin = 32;
	VirtualItemRogueRewardKey = 33;
	VirtualItemAchievementExp = 41;
	VirtualItemBpExp = 51;
	VirtualItemBpRealExp = 52;
	VirtualItemMuseumFunds = 53;
	VirtualTrainpartyBuildingFunds = 54;
	VirtualTrainpartyAreaUnlockCoin = 55;
	VirtualTrainpartyMobility = 56;
	VirtualItemWarriorExp = 190;
	VirtualItemRogueExp = 191;
	VirtualItemMageExp = 192;
	VirtualItemShamanExp = 193;
	VirtualItemWarlockExp = 194;
	VirtualItemKnightExp = 195;
	VirtualItemPriestExp = 196;
	VirtualItemPunkLordPoint = 100000;
	VirtualItemGameplayCounterMonsterSneakVision = 280001;
	VirtualItemGameplayCounterWolfBroBullet = 280002;
	VirtualItemAlleyFunds = 281001;
	VirtualItemRoguePumanCoupon = 281012;
	VirtualItemMonthCard = 300101;
	VirtualItemBpNormal = 300102;
	VirtualItemBpDeluxe = 300103;
	VirtualItemBpUpgrade = 300104;
	VirtualItemHeliobusFans = 281002;
	VirtualItemSpaceZooHybridItem = 281003;
	VirtualItemSpaceZooExpPoint = 281004;
	VirtualItemRogueNousTalentCoin = 281013;
	VirtualItemEvolveBuildCoin = 281019;
	VirtualItemDrinkMakerTip = 281005;
	VirtualItemMonopolyDice = 281014;
	VirtualItemMonopolyCoin = 281015;
	VirtualItemMonopolyCheatdice = 281016;
	VirtualItemMonopolyReroll = 281017;
	VirtualItemRogueTournPermanentTalentCoin = 281018;
	VirtualItemRogueTournSeasonTalentCoin = 281020;
	VirtualItemRogueTournExp = 281022;
	VirtualItemMatchthreeCoin = 281024;
	VirtualItemSwordTrainingSkillPoint = 281023;
	VirtualItemFightFestCoin = 281025;
	VirtualItemRogueMagicTalentCoin = 281026;
	VirtualItemEvolveBuildScCoin = 281027;
	VirtualItemEvolveBuildRewardExp = 281028;
	VirtualItemMatchthreeV2Coin = 281029;
}

enum GameplayCounterType {
	GameplayCounterNone = 0;
	GameplayCounterMonsterSneakVision = 280001;
}

enum BlackLimitLevel {
	All = 0;
}

enum AreaType {
	AreaNone = 0;
	AreaCn = 1;
	AreaJp = 2;
	AreaAsia = 3;
	AreaWest = 4;
	AreaKr = 5;
	AreaOverseas = 6;
}

enum EntityType {
	EntityNone = 0;
	EntityAvatar = 1;
	EntityMonster = 2;
	EntityNpc = 3;
	EntityProp = 4;
	EntityTrigger = 5;
	EntityEnv = 6;
	EntitySummonUnit = 7;
}

enum LanguageType {
	LanguageNone = 0;
	LanguageSc = 1;
	LanguageTc = 2;
	LanguageEn = 3;
	LanguageKr = 4;
	LanguageJp = 5;
	LanguageFr = 6;
	LanguageDe = 7;
	LanguageEs = 8;
	LanguagePt = 9;
	LanguageRu = 10;
	LanguageTh = 11;
	LanguageVi = 12;
	LanguageId = 13;
}

enum PlatformType {
	Editor = 0;
	Ios = 1;
	Android = 2;
	Pc = 3;
	Web = 4;
	Wap = 5;
	Ps4 = 6;
	Nintendo = 7;
	CloudAndroid = 8;
	CloudPc = 9;
	CloudIos = 10;
	Ps5 = 11;
	Mac = 12;
	CloudMac = 13;
	CloudWebAndroid = 20;
	CloudWebIos = 21;
	CloudWebPc = 22;
	CloudWebMac = 23;
	CloudWebTouch = 24;
	CloudWebKeyboard = 25;
	CloudDouyinIos = 27;
	CloudDouyinAndroid = 28;
}

enum Omefdocpemd {
	NoKick = 0;
	ForceKick = 1;
	IdleKick = 2;
	Silence = 3;
}

enum AvatarType {
	None = 0;
	AvatarTrialType = 1;
	AvatarLimitType = 2;
	AvatarFormalType = 3;
	AvatarAssistType = 4;
	AvatarAetherDivideType = 5;
	AvatarUpgradeAvailableType = 6;
}

enum MultiPathAvatarType {
	None = 0;
	Mar7thKnightType = 1001;
	Mar7thRogueType = 1224;
	BoyWarriorType = 8001;
	GirlWarriorType = 8002;
	BoyKnightType = 8003;
	GirlKnightType = 8004;
	BoyShamanType = 8005;
	GirlShamanType = 8006;
	BoyMemoryType = 8007;
	GirlMemoryType = 8008;
}

enum Jnicoeppdfn {
	AvatarTagNone = 0;
	AvatarTagPlayerHasSetEnhancedId = 1;
	AvatarTagMax = 32;
}

enum Gender {
	None = 0;
	Man = 1;
	Woman = 2;
}

enum Bnhjenkfgea {
	ProductNone = 0;
	ProductNormal = 1;
	ProductLimit = 2;
	ProductLimitNoPay = 3;
	ProductNoProcessOrder = 4;
}

enum ProductGiftType {
	ProductGiftNone = 0;
	ProductGiftCoin = 1;
	ProductGiftMonthCard = 2;
	ProductGiftBp68 = 3;
	ProductGiftBp128 = 4;
	ProductGiftBp68Upgrade128 = 5;
	ProductGiftPointCard = 6;
	ProductGiftPsPreOrder1 = 7;
	ProductGiftPsPreOrder2 = 8;
	ProductGiftGooglePoints100 = 9;
	ProductGiftGooglePoints150 = 10;
	ProductGiftPsPointCard030 = 11;
	ProductGiftPsPointCard050 = 12;
	ProductGiftPsPointCard100 = 13;
	ProductGiftPsnPlus = 14;
	ProductGiftSingle6 = 15;
	ProductGiftDailyLogin30 = 16;
	ProductGiftAppleGiftCard = 17;
	ProductGiftFtcUpGachaTicket1 = 18;
	ProductGiftFtcUpGachaTicket10 = 19;
	ProductGiftFtcNormalGachaTicket1 = 20;
	ProductGiftFtcNormalGachaTicket10 = 21;
	ProductGiftTicket10 = 22;
}

enum FeatureSwitchType {
	FeatureSwitchNone = 0;
	FeatureSwitchShop = 1;
	FeatureSwitchLineupName = 2;
	FeatureSwitchRechargeShop = 3;
	FeatureSwitchNickname = 4;
	FeatureSwitchSignature = 5;
	FeatureSwitchBattlepass = 6;
	FeatureSwitchPunkLord = 7;
	FeatureSwitchMonthcardDaily = 8;
	FeatureSwitchPictureShare = 9;
	FeatureSwitchRogue = 10;
	FeatureSwitchChallenge = 11;
	FeatureSwitchCocoon = 12;
	FeatureSwitchRaid = 13;
	FeatureSwitchMazePlaneEvent = 14;
	FeatureSwitchActivityPanel = 15;
	FeatureSwitchMailbox = 16;
	FeatureSwitchQuest = 17;
	FeatureSwitchGacha = 18;
	FeatureSwitchChat = 19;
	FeatureSwitchModifyFriendAlias = 20;
	FeatureSwitchUseItem = 21;
	FeatureSwitchActivitySchedule = 22;
	FeatureSwitchFarmElement = 23;
	FeatureSwitchAchievementLevel = 24;
	FeatureSwitchDailyActiveLevel = 25;
	FeatureSwitchPlayerReturn = 26;
	FeatureSwitchFirstSetNickname = 27;
	FeatureSwitchMainMissionReward = 28;
	FeatureSwitchSubMissionReward = 29;
	FeatureSwitchPamMission = 30;
	FeatureSwitchDestroyItem = 32;
	FeatureSwitchConsumeItemTurn = 33;
	FeatureSwitchRogueModifier = 34;
	FeatureSwitchChessRogue = 35;
	FeatureSwitchChessRogueBoard = 36;
	FeatureSwitchRollShop = 37;
	FeatureSwitchH5Return = 38;
	FeatureSwitchOffering = 39;
	FeatureSwitchServerRedPoint = 40;
	FeatureSwitchMonopolyOptionRatio = 41;
	FeatureSwitchMonopolyGetRaffleTicket = 42;
	FeatureSwitchMonopolyTakeRaffleReward = 43;
	FeatureSwitchChallengeRecommendLineup = 44;
	FeatureSwitchPsnMemberShipCheck = 45;
	FeatureSwitchPlayerBoardDevelopment = 46;
	FeatureSwitchPvp = 47;
	FeatureSwitchRogueMode = 48;
	FeatureSwitchRogueTournUgc = 49;
	FeatureSwitchRelicFilterPlanName = 50;
	FeatureSwitchMazeItemUseBuffDrop = 51;
	FeatureSwitchRedDot = 52;
	FeatureSwitchGameStateService = 53;
	FeatureSwitchBenefitIndex = 54;
	FeatureSwitchRogueTournBuildRef = 55;
	FeatureSwitchPreAvatarSetGrowthTarget = 56;
	FeatureSwitchImportRelicFilterPlan = 58;
	FeatureSwitchGachaDecideItem = 59;
	FeatureSwitchItemSync = 60;
	FeatureSwitchRechargeBenefit = 61;
	FeatureSwitchRechargeGift = 62;
	FeatureSwitchRogueTournBuildRefShareCode = 63;
	FeatureSwitchGachaAvatarToast = 64;
	FeatureSwitchRogueTournBuildRefShareCodeRename = 65;
	FeatureSwitchRelicSmartDiscard = 66;
	FeatureSwitchPlanetfesSocial = 67;
	FeatureSwitchRelicReforge = 68;
	FeatureSwitchRelicCompose = 69;
	FeatureSwitchRelicDecompose = 70;
	FeatureSwitchRogueTournCocoon = 71;
	FeatureSwitchItemCompose = 72;
	FeatureSwitchGrowMaterialAutoComplete = 73;
	FeatureSwitchSkipPerformance = 74;
	FeatureSwitchFate = 75;
	FeatureSwitchFateAvatarHandbook = 76;
	FeatureSwitchElfRestaurant = 77;
	FeatureSwitchBattleTimeoutLegal = 78;
}

enum SecretKeyType {
	SecretKeyNone = 0;
	SecretKeyServerCheck = 1;
	SecretKeyVideo = 2;
	SecretKeyBattleTime = 3;
}

enum ReplayType {
	None = 0;
	PunkLord = 1;
}

enum PunkLordShareType {
	None = 0;
	Friend = 1;
	All = 2;
}

enum PunkLordAttackerStatus {
	None = 0;
	Attacked = 1;
	Attacking = 2;
	AttackedAndAttacking = 3;
}

enum PunkLordMonsterInfoNotifyReason {
	None = 0;
	EnterRaid = 1;
	BattleEnd = 2;
	LeaveRaid = 3;
}

enum ChatType {
	None = 0;
	Private = 1;
	Group = 2;
}

enum MsgType {
	None = 0;
	CustomText = 1;
	Emoji = 2;
	Invite = 3;
	PlanetFes = 4;
}

enum Gejhdkjnclp {
	PlanetFesMsgContentNone = 0;
	PlanetFesMsgContentApplyReq = 1;
	PlanetFesMsgContentPieceOffered = 2;
}

enum ShieldType {
	None = 0;
	Replace = 1;
	Shied = 2;
}

enum FuncUnlockIdType {
	FuncUnlockIdNone = 0;
	FuncUnlockIdRelic = 403;
	FuncUnlockIdRelicNum = 404;
	FuncUnlockIdEquipment = 401;
	FuncUnlockIdSkilltree = 402;
	FuncUnlockIdGacha = 2300;
	FuncUnlockIdExpedition = 3100;
	FuncUnlockIdCompose = 4100;
	FuncUnlockIdFightactivity = 3700;
}

enum AssistAvatarType {
	AssistAvatarUnknow = 0;
	AssistAvatarLevel = 1;
	AssistAvatarRank = 2;
}

enum DevelopmentType {
	DevelopmentNone = 0;
	DevelopmentRogueCosmos = 1;
	DevelopmentRogueChess = 2;
	DevelopmentRogueChessNous = 3;
	DevelopmentMemoryChallenge = 4;
	DevelopmentStoryChallenge = 5;
	DevelopmentUnlockAvatar = 6;
	DevelopmentUnlockEquipment = 7;
	DevelopmentActivityStart = 8;
	DevelopmentActivityEnd = 9;
	DevelopmentBossChallenge = 10;
	DevelopmentRogueTourn = 11;
	DevelopmentRogueTournWeek = 12;
	DevelopmentRogueMagic = 13;
}

enum PlayingState {
	None = 0;
	PlayingRogueCosmos = 1;
	PlayingRogueChess = 2;
	PlayingRogueChessNous = 3;
	PlayingChallengeMemory = 4;
	PlayingChallengeStory = 5;
	PlayingChallengeBoss = 6;
	PlayingRogueTourn = 7;
	PlayingRogueMagic = 8;
}

enum MatchRoomCharacterType {
	MatchRoomCharacterNone = 0;
	MatchRoomCharacterLeader = 1;
	MatchRoomCharacterMember = 2;
	MatchRoomCharacterWatcher = 3;
}

enum MatchRoomCharacterStatus {
	None = 0;
	Idle = 1;
	Operating = 2;
	Ready = 3;
	Fighting = 4;
	Watching = 5;
}

enum Mgecfloeoeg {
	PlanetFesCardPieceApplyPermissionReview = 0;
	PlanetFesCardPieceApplyPermissionFree = 1;
	PlanetFesCardPiecePermissionBan = 2;
}

enum Ghangcboemc {
	PlanetFesCardPieceInteractApplying = 0;
	PlanetFesCardPieceInteractOffered = 1;
	PlanetFesCardPieceInteractOfferTaken = 2;
	PlanetFesCardPieceInteractApplyCanceld = 3;
	PlanetFesCardPieceInteractApplyCompensated = 4;
}

enum Ijhbcbeopfe {
	PlanetFesCardPieceOfferSourceReviewApply = 0;
	PlanetFesCardPieceOfferSourceFreeApply = 1;
	PlanetFesCardPieceOfferSourceGive = 2;
}

enum Dlbfahoagph {
	FateSourceTypeNone = 0;
	FateSourceTypeFateBuff = 1;
	FateSourceTypeTraitBuff = 2;
	FateSourceTypeReiju = 3;
	FateSourceTypeHougu = 4;
	FateSourceTypeAffix = 5;
	FateSourceTypeReijuAffix = 6;
	FateSourceTypeLevel = 7;
	FateSourceTypeMaster = 8;
	FateSourceTypeTrait = 9;
}

enum Enhdplikfhm {
	MatchThreeVersionNone = 0;
	MatchThreeV1 = 1;
	MatchThreeV2 = 2;
}

enum Dllleandaih {
	FriendRecommendLineupTypeNone = 0;
	FriendRecommendLineupTypeChallenge = 1;
	FriendRecommendLineupTypeLocalLegend = 2;
}

enum BattleCheckStrategyType {
	BattleCheckStrategyIdentical = 0;
	BattleCheckStrategyServer = 1;
	BattleCheckStrategyClient = 2;
	BattleCheckStrategyTimeoutLegal = 3;
}

enum BattleCheckResultType {
	BattleCheckResultSucc = 0;
	BattleCheckResultFail = 1;
	BattleCheckResultPass = 2;
}

enum BattleModuleType {
	BattleModuleMaze = 0;
	BattleModuleChallenge = 1;
	BattleModuleCocoon = 2;
	BattleModuleRogue = 3;
	BattleModuleChallengeActivity = 4;
	BattleModuleTrialLevel = 5;
	BattleModuleAetherDivide = 6;
}

enum AetherdivideSpiritLineupType {
	AetherdivideSpiritLineupNone = 0;
	AetherdivideSpiritLineupNormal = 1;
	AetherdivideSpiritLineupTrial = 2;
}

enum Pilniphdkhi {
	BattleTargetTypeNone = 0;
	BattleTargetTypeScore = 1;
	BattleTargetTypeAchievement = 2;
	BattleTargetTypeRaid = 3;
	BattleTargetTypeChallengeScore = 4;
	BattleTargetTypeCommon = 5;
	BattleTargetTypeClientAchievement = 6;
}

enum DeathSource {
	Unknown = 0;
	KilledByOthers = 1;
	KilledBySelf = 2;
	Escape = 3;
}

enum Agbpcblfnol {
	TagNone = 0;
	TagHideNpcMonster = 1;
}

enum Hembndjafda {
	NormalCreate = 0;
	FormChange = 1;
}

enum BattleEndReason {
	None = 0;
	AllDie = 1;
	TurnLimit = 2;
}

enum Oedifangclh {
	BattleStaticticEventNone = 0;
	BattleStaticticEventTreasureDungeonAddExplore = 1;
	BattleStaticticEventTreasureDungeonOpenGrid = 2;
	BattleStaticticEventTreasureDungeonPickupItem = 3;
	BattleStaticticEventTreasureDungeonUseBuff = 4;
	BattleStaticticEventTelevisionActivityUpdateMazeBuffLayer = 5;
	BattleStaticticEventRogueTournTitanExtraCoin = 6;
	BattleStaticticEventRogueTournTitanExtraCoinTimes = 7;
}

enum Bojgakmdpdl {
	EvolveBuildFuncNone = 0;
	EvolveBuildFuncGearReset = 1;
	EvolveBuildFuncGearRemove = 2;
	EvolveBuildFuncGearSkip = 3;
	EvolveBuildFuncCardReset = 4;
}

enum Jegleikmncl {
	KNone = 0;
	KkillEliteMonsterNum = 1;
	KkillMonsterNum = 2;
}

enum BattleEndStatus {
	BattleEndNone = 0;
	BattleEndWin = 1;
	BattleEndLose = 2;
	BattleEndQuit = 3;
}

enum Jeblpliahnm {
	ManualAvatarUpgradeNone = 0;
	ManualAvatarUpgradeFate = 1;
}

enum Noogdpkefkl {
	FightGameModeNone = 0;
	FightGameModeMatch3 = 1;
	FightGameModeMarble = 2;
	FightGameModeMatch3Solo = 3;
}

enum Dkiifbicieg {
	FightKickoutUnknown = 0;
	FightKickoutBlack = 1;
	FightKickoutByGm = 2;
	FightKickoutTimeout = 3;
	FightKickoutSessionReset = 4;
}

enum Hbpfdgnndef {
	LobbyCharacterNone = 0;
	LobbyCharacterLeader = 1;
	LobbyCharacterMember = 2;
	LobbyCharacterWatcher = 3;
}

enum Edkfijacjgl {
	LobbyCharacterStatusNone = 0;
	LobbyCharacterStatusIdle = 1;
	LobbyCharacterStatusOperating = 2;
	LobbyCharacterStatusReady = 3;
	LobbyCharacterStatusFighting = 4;
	LobbyCharacterStatusWatching = 5;
	LobbyCharacterStatusMatching = 6;
	LobbyCharacterStatusLobbyStartFight = 7;
}

enum Aokdmakgdgj {
	LobbyModifyTypeNone = 0;
	LobbyModifyTypeIdle = 1;
	LobbyModifyTypeReady = 2;
	LobbyModifyTypeOperating = 3;
	LobbyModifyTypeCancelMatch = 4;
	LobbyModifyTypeMatch = 5;
	LobbyModifyTypeQuitLobby = 6;
	LobbyModifyTypeKickOut = 7;
	LobbyModifyTypeTimeOut = 8;
	LobbyModifyTypeJoinLobby = 9;
	LobbyModifyTypeLobbyDismiss = 10;
	LobbyModifyTypeMatchTimeOut = 11;
	LobbyModifyTypeFightStart = 12;
	LobbyModifyTypeLogout = 13;
	LobbyModifyTypeFightEnd = 14;
	LobbyModifyTypeFightRoomDestroyInInit = 15;
	LobbyModifyTypeLobbyStartFight = 16;
	LobbyModifyTypeLobbyStartFightTimeout = 17;
}

enum Efdedkhgmpi {
	FightRoomDestroyReasonNone = 0;
	FightRoomDestroyReasonSvrStop = 1;
	FightRoomDestroyReasonGameEnd = 2;
}

enum Keekddahfoe {
	Match3FinishReasonDefault = 0;
	Match3FinishReasonLeave = 1;
	Match3FinishReasonDie = 2;
	Match3FinishReasonGameend = 3;
	Match3FinishReasonKickout = 4;
	Match3FinishReasonWin = 5;
	Match3FinishReasonLose = 6;
	Match3FinishReasonTie = 7;
}

enum Khjpjangecp {
	MatchUnitTypeNone = 0;
	MatchUnitTypeNormal = 1;
	MatchUnitTypeRobot = 2;
	MatchUnitTypeGm = 3;
}

enum Ffjppngglff {
	FightPlayerResultNone = 0;
	FightPlayerResultWin = 1;
	FightPlayerResultFail = 2;
	FightPlayerResultDraw = 3;
}

enum Imaonmhilne {
	LobbyInteractTypeNone = 0;
	LobbyInteractTypeRemindPrepare = 1;
}

enum Retcode {
	RetSucc = 0;
	RetFail = 1;
	RetServerInternalError = 2;
	RetTimeout = 3;
	RetRepeatedReq = 4;
	RetReqParaInvalid = 5;
	RetPlayerDataError = 6;
	RetPlayerClientPaused = 7;
	RetFuncCheckFailed = 8;
	RetFeatureSwitchClosed = 9;
	RetFreqOverLimit = 10;
	RetSystemBusy = 11;
	RetPlayerNotOnline = 12;
	RetOperationInCd = 13;
	RetRepeateLogin = 1000;
	RetRetryLogin = 1001;
	RetWaitLogin = 1002;
	RetNotInWhiteList = 1003;
	RetInBlackList = 1004;
	RetAccountVerifyError = 1005;
	RetAccountParaError = 1006;
	RetAntiAddictLogin = 1007;
	RetCheckSumError = 1008;
	RetReachMaxPlayerNum = 1009;
	RetAlreadyRegistered = 1010;
	RetGenderError = 1011;
	SetNicknameRetCallbackProcessing = 1012;
	RetInGmBindAccess = 1013;
	RetQuestRewardAlreadyTaken = 1100;
	RetQuestNotAccept = 1101;
	RetQuestNotFinish = 1102;
	RetQuestStatusError = 1103;
	RetAchievementLevelNotReach = 1104;
	RetAchievementLevelAlreadyTaken = 1105;
	RetAvatarNotExist = 1200;
	RetAvatarResExpNotEnough = 1201;
	RetAvatarExpReachPromotionLimit = 1202;
	RetAvatarReachMaxPromotion = 1203;
	RetSkilltreeConfigNotExist = 1204;
	RetSkilltreeAlreadyUnlock = 1205;
	RetSkilltreePreLocked = 1206;
	RetSkilltreeLevelNotMeet = 1207;
	RetSkilltreeRankNotMeet = 1208;
	RetAvatarDressNoEquipment = 1209;
	RetAvatarExpItemNotExist = 1210;
	RetSkilltreePointLocked = 1211;
	RetSkilltreePointLevelUpgradeNotMatch = 1212;
	RetSkilltreePointLevelReachMax = 1213;
	RetWorldLevelNotMeet = 1214;
	RetPlayerLevelNotMeet = 1215;
	RetAvatarRankNotMatch = 1216;
	RetAvatarRankReachMax = 1217;
	RetHeroBasicTypeNotMatch = 1218;
	RetAvatarPromotionNotMeet = 1219;
	RetPromotionRewardConfigNotExist = 1220;
	RetPromotionRewardAlreadyTaken = 1221;
	RetAvatarSkinItemNotExist = 1222;
	RetAvatarSkinAlreadyDressed = 1223;
	RetAvatarNotDressSkin = 1224;
	RetAvatarSkinNotMatchAvatar = 1225;
	RetAvatarPathNotMatch = 1226;
	RetAvatarEnhancedIdNotExist = 1227;
	RetAvatarEnhancedIdAlreadySet = 1228;
	RetAvatarNotCurEnhancedId = 1229;
	RetItemNotExist = 1300;
	RetItemCostNotEnough = 1301;
	RetItemCostTooMuch = 1302;
	RetItemNoCost = 1303;
	RetItemNotEnough = 1304;
	RetItemInvalid = 1305;
	RetItemConfigNotExist = 1306;
	RetScoinNotEnough = 1307;
	RetItemRewardExceedLimit = 1308;
	RetItemInvalidUse = 1309;
	RetItemUseConfigNotExist = 1310;
	RetRewardConfigNotExist = 1311;
	RetItemExceedLimit = 1312;
	RetItemCountInvalid = 1313;
	RetItemUseTargetTypeInvalid = 1314;
	RetItemUseSatietyFull = 1315;
	RetItemComposeNotExist = 1316;
	RetRelicComposeNotExist = 1317;
	RetItemCanNotSell = 1318;
	RetItemSellExceddLimit = 1319;
	RetItemNotInCostList = 1320;
	RetItemSpecialCostNotEnough = 1321;
	RetItemSpecialCostTooMuch = 1322;
	RetItemFormulaNotExist = 1323;
	RetItemAutoGiftOptionalNotExist = 1324;
	RetRelicComposeRelicInvalid = 1325;
	RetRelicComposeMainAffixIdInvalid = 1326;
	RetRelicComposeWrongFormulaType = 1327;
	RetRelicComposeRelicNotExist = 1328;
	RetRelicComposeBlackGoldCountInvalid = 1329;
	RetRelicComposeBlackGoldNotNeed = 1330;
	RetMonthCardCannotUse = 1331;
	RetItemRewardExceedDisappear = 1332;
	RetItemNeedRecycle = 1333;
	RetItemComposeExceedLimit = 1334;
	RetItemCanNotDestroy = 1335;
	RetItemAlreadyMark = 1336;
	RetItemMarkExceedLimit = 1337;
	RetItemNotMark = 1338;
	RetItenTurnFoodNotSet = 1339;
	RetItemTurnFoodAlreadySet = 1340;
	RetItemTurnFoodConsumeTypeError = 1341;
	RetItemTurnFoodSwitchAlreadyOpen = 1342;
	RetItemTurnFoodSwitchAlreadyClose = 1343;
	RetHcoinExchangeTooMuch = 1344;
	RetItemTurnFoodSceneTypeError = 1345;
	RetEquipmentAlreadyDressed = 1350;
	RetEquipmentNotExist = 1351;
	RetEquipmentReachLevelLimit = 1352;
	RetEquipmentConsumeSelf = 1353;
	RetEquipmentAlreadyLocked = 1354;
	RetEquipmentAlreadyUnlocked = 1355;
	RetEquipmentLocked = 1356;
	RetEquipmentSelectNumOverLimit = 1357;
	RetEquipmentRankUpMustConsumeSameTid = 1358;
	RetEquipmentPromotionReachMax = 1359;
	RetEquipmentRankUpReachMax = 1360;
	RetEquipmentLevelReachMax = 1361;
	RetEquipmentExceedLimit = 1362;
	RetRelicNotExist = 1363;
	RetRelicReachLevelLimit = 1364;
	RetRelicConsumeSelf = 1365;
	RetRelicAlreadyDressed = 1366;
	RetRelicLocked = 1367;
	RetRelicAlreadyLocked = 1368;
	RetRelicAlreadyUnlocked = 1369;
	RetRelicLevelIsNotZero = 1370;
	RetUniqueIdRepeated = 1371;
	RetEquipmentLevelNotMeet = 1372;
	RetEquipmentItemNotInCostList = 1373;
	RetEquipmentLevelGreaterThanOne = 1374;
	RetEquipmentAlreadyRanked = 1375;
	RetRelicExceedLimit = 1376;
	RetRelicAlreadyDiscarded = 1377;
	RetRelicAlreadyUndiscarded = 1378;
	RetEquipmentBatchLockTooFast = 1379;
	RetRelicFilterPlanSlotEmpty = 1380;
	RetRelicFilterPlanNumExceedLimit = 1381;
	RetRelicFilterPlanNameUtf8Error = 1382;
	RetRelicFilterPlanNameFormatError = 1383;
	RetRelicFilterPlanNoChange = 1384;
	RetRelicReforgeNotConfirmed = 1385;
	RetEquipmentAlreadyLevelup = 1386;
	RetEquipmentRarityError = 1387;
	RetLineupInvalidIndex = 1400;
	RetLineupInvalidMemberPos = 1401;
	RetLineupSwapNotExist = 1402;
	RetLineupAvatarAlreadyIn = 1403;
	RetLineupCreateAvatarError = 1404;
	RetLineupAvatarInitError = 1405;
	RetLineupNotExist = 1406;
	RetLineupOnlyOneMember = 1407;
	RetLineupSameLeaderSlot = 1408;
	RetLineupNoLeaderSelect = 1409;
	RetLineupSwapSameSlot = 1410;
	RetLineupAvatarNotExist = 1411;
	RetLineupTrialAvatarCanNotQuit = 1412;
	RetLineupVirtualLineupPlaneNotMatch = 1413;
	RetLineupNotValidLeader = 1414;
	RetLineupSameIndex = 1415;
	RetLineupIsEmpty = 1416;
	RetLineupNameFormatError = 1417;
	RetLineupTypeNotMatch = 1418;
	RetLineupReplaceAllFailed = 1419;
	RetLineupNotAllowEdit = 1420;
	RetLineupAvatarIsAlive = 1421;
	RetLineupAssistHasOnlyMember = 1422;
	RetLineupAssistCannotSwitch = 1423;
	RetLineupAvatarTypeInvalid = 1424;
	RetLineupNameUtf8Error = 1425;
	RetLineupLeaderLock = 1426;
	RetLineupStoryLineNotMatch = 1427;
	RetLineupAvatarLock = 1428;
	RetLineupAvatarInvalid = 1429;
	RetLineupAvatarAlreadyInit = 1430;
	RetLineupLimited = 1431;
	RetMailNotExist = 1700;
	RetMailRangeInvalid = 1701;
	RetMailMailIdInvalid = 1702;
	RetMailNoMailTakeAttachment = 1703;
	RetMailNoMailToDel = 1704;
	RetMailTypeInvalid = 1705;
	RetMailParaInvalid = 1706;
	RetMailAttachementInvalid = 1707;
	RetMailTicketInvalid = 1708;
	RetMailTicketRepeated = 1709;
	RetStageSettleError = 1800;
	RetStageConfigNotExist = 1801;
	RetStageNotFound = 1802;
	RetStageCocoonPropNotValid = 1804;
	RetStageCocoonWaveNotValid = 1805;
	RetStagePropIdNotEqual = 1806;
	RetStageCocoonWaveOver = 1807;
	RetStageWeekCocoonOverCnt = 1808;
	RetStageCocoonNotOpen = 1809;
	RetStageTrialNotOpen = 1810;
	RetStageFarmNotOpen = 1811;
	RetStageFarmTypeError = 1812;
	RetStageFarmSweepCd = 1813;
	RetChapterLock = 1900;
	RetChapterChallengeNumNotEnough = 1901;
	RetChapterRewardIdNotExist = 1902;
	RetChapterRewardAlreadyTaken = 1903;
	RetBattleStageNotMatch = 2000;
	RetInBattleNow = 2001;
	RetBattleCheat = 2002;
	RetBattleFail = 2003;
	RetBattleNoLineup = 2004;
	RetBattleLineupEmpty = 2005;
	RetBattleVersionNotMatch = 2006;
	RetBattleQuitByServer = 2007;
	RetInBattleCheck = 2008;
	RetBattleCheckNeedRetry = 2009;
	RetBattleCostTimeCheckFail = 2010;
	RetLackExchangeStaminaTimes = 2100;
	RetLackStamina = 2101;
	RetStaminaFull = 2102;
	RetAuthkeySignTypeError = 2103;
	RetAuthkeySignVerError = 2104;
	RetNicknameFormatError = 2105;
	RetSensitiveWords = 2106;
	RetLevelRewardHasTaken = 2107;
	RetLevelRewardLevelError = 2108;
	RetLanguageInvalid = 2109;
	RetNicknameInCd = 2110;
	RetGameplayBirthdayInvalid = 2111;
	RetGameplayBirthdayAlreadySet = 2112;
	RetNicknameUtf8Error = 2113;
	RetNicknameDigitLimitError = 2114;
	RetSensitiveWordsPlatformError = 2115;
	RetPlayerSettingTypeInvalid = 2116;
	RetMazeLackTicket = 2201;
	RetMazeNotUnlock = 2202;
	RetMazeNoAbility = 2204;
	RetMazeNoPlane = 2205;
	RetMazeMapNotExist = 2207;
	RetMazeMpNotEnough = 2213;
	RetSpringNotEnable = 2214;
	RetSpringTooFar = 2216;
	RetNotInMaze = 2218;
	RetMazeTimeOfDayTypeError = 2223;
	RetSceneTransferLockedByTask = 2224;
	RetPlotNotUnlock = 2300;
	RetMissionNotExist = 2400;
	RetMissionAlreadyDone = 2401;
	RetDailyTaskNotFinish = 2402;
	RetDailyTaskRewardHasTaken = 2403;
	RetMissionNotFinish = 2404;
	RetMissionNotDoing = 2405;
	RetMissionFinishWayNotMatch = 2406;
	RetMissionSceneNotMatch = 2407;
	RetMissionCustomValueNotValid = 2408;
	RetMissionSubMissionNotMatch = 2409;
	RetAdventureMapNotExist = 2500;
	RetSceneEntityNotExist = 2600;
	RetNotInScene = 2601;
	RetSceneMonsterNotExist = 2602;
	RetInteractConfigNotExist = 2603;
	RetUnsupportedPropState = 2604;
	RetSceneEntryIdNotMatch = 2605;
	RetSceneEntityMoveCheckFailed = 2606;
	RetAssistMonsterCountLimit = 2607;
	RetSceneUseSkillFail = 2608;
	RetPropIsHidden = 2609;
	RetLoadingSuccAlready = 2610;
	RetSceneEntityTypeInvalid = 2611;
	RetInteractTypeInvalid = 2612;
	RetInteractNotInRegion = 2613;
	RetInteractSubTypeInvalid = 2614;
	RetNotLeaderEntity = 2615;
	RetMonsterIsNotFarmElement = 2616;
	RetMonsterConfigNotExist = 2617;
	RetAvatarHpAlreadyFull = 2618;
	RetCurInteractEntityNotMatch = 2619;
	RetPlaneTypeNotAllow = 2620;
	RetGroupNotExist = 2621;
	RetGroupSaveDataInCd = 2622;
	RetGroupSaveLenghReachMax = 2623;
	RetRecentElementNotExist = 2624;
	RetRecentElementStageNotMatch = 2625;
	RetScenePositionVersionNotMatch = 2626;
	RetGameplayCounterNotExist = 2627;
	RetGameplayCounterNotEnough = 2628;
	RetGroupStateNotMatch = 2629;
	RetSceneEntityPosNotMatch = 2630;
	RetGroupStateCustomSaveDataOff = 2631;
	RetSceneNotMatch = 2632;
	RetPropTypeInvalid = 2633;
	RetNotInCorrectScene = 2634;
	RetNotInCorrectDimension = 2635;
	RetNotCorrectGroupPropertyName = 2636;
	RetBuyTimesLimit = 2700;
	RetBuyLimitType = 2701;
	RetShopNotOpen = 2702;
	RetGoodsNotOpen = 2703;
	RetCityLevelRewardTaken = 2704;
	RetCityLevelNotMeet = 2705;
	RetSingleBuyLimit = 2706;
	RetTutorialNotUnlock = 2751;
	RetTutorialUnlockAlready = 2752;
	RetTutorialFinishAlready = 2753;
	RetTutorialPreNotUnlock = 2754;
	RetTutorialPlayerLevelNotMatch = 2755;
	RetTutorialTutorialNotFound = 2756;
	RetChallengeNotExist = 2801;
	RetChallengeNotUnlock = 2802;
	RetChallengeAlready = 2803;
	RetChallengeLineupEditForbidden = 2804;
	RetChallengeLineupEmpty = 2805;
	RetChallengeNotDoing = 2806;
	RetChallengeNotFinish = 2807;
	RetChallengeTargetNotFinish = 2808;
	RetChallengeTargetRewardTaken = 2809;
	RetChallengeTimeNotValid = 2810;
	RetChallengeStarsCountNotMeet = 2811;
	RetChallengeStarsRewardTaken = 2812;
	RetChallengeStarsNotExist = 2813;
	RetChallengeCurSceneNotEntryFloor = 2814;
	RetChallengeNoTeamArchive = 2815;
	RetChallengeLineupAvatarTypeInvalid = 2816;
	RetChallengeLineupRecommendInCd = 2817;
	RetBasicTypeAlready = 2850;
	RetNoBasicType = 2851;
	RetNotChooseBasicType = 2852;
	RetNotFuncClose = 2853;
	RetNotChooseGender = 2854;
	RetNotReqUnlockBasicType = 2855;
	RetAvatarPathLocked = 2856;
	RetRogueStatusNotMatch = 2901;
	RetRogueSelectBuffNotExist = 2902;
	RetRogueCoinNotEnough = 2903;
	RetRogueStaminaNotEnough = 2904;
	RetRogueAppraisalCountNotEnough = 2905;
	RetRoguePropAlreadyUsed = 2906;
	RetRogueRecordAlreadySaved = 2907;
	RetRogueRollBuffMaxCount = 2908;
	RetRoguePickAvatarInvalid = 2909;
	RetRogueQuestExpire = 2910;
	RetRogueQuestRewardAlready = 2911;
	RetRogueReviveCountNotEnough = 2912;
	RetRogueAreaInvalid = 2913;
	RetRogueScoreRewardPoolInvalid = 2914;
	RetRogueScoreRewardRowInvalid = 2915;
	RetRogueAeonLevelNotMeet = 2916;
	RetRogueAeonLevelRewardAlreadyTaken = 2917;
	RetRogueAeonConfigNotExist = 2918;
	RetRogueTrialAvatarInvalid = 2919;
	RetRogueHandbookRewardAlreadyTaken = 2920;
	RetRogueRoomTypeNotMatch = 2921;
	RetRogueShopGoodNotFound = 2922;
	RetRogueShopGoodAlreadyBought = 2923;
	RetRogueShopGoodAlreadyOwn = 2924;
	RetRogueShopMiracleNotExist = 2925;
	RetRogueShopNotExist = 2926;
	RetRogueShopCannotRefresh = 2927;
	RetRogueSelectBuffCertainMismatch = 2928;
	RetRogueActionQueueNotEmptyBattle = 2929;
	RetRogueActionQueueNotEmptyOthers = 2930;
	RetMissionEventConfigNotExist = 2951;
	RetMissionEventNotClient = 2952;
	RetMissionEventFinished = 2953;
	RetMissionEventDoing = 2954;
	RetHasChallengeMissionEvent = 2955;
	RetNotChallengeMissionEvent = 2956;
	RetGachaIdNotExist = 3001;
	RetGachaNumInvalid = 3002;
	RetGachaFirstGachaMustOne = 3003;
	RetGachaReqDuplicated = 3004;
	RetGachaNotInSchedule = 3005;
	RetGachaNewbieClose = 3006;
	RetGachaTodayLimited = 3007;
	RetGachaNotSupport = 3008;
	RetGachaCeilingNotEnough = 3009;
	RetGachaCeilingClose = 3010;
	RetGachaLocked = 3011;
	RetGachaDecideItemTypeInvalid = 3012;
	RetGachaDecideItemIdInvalid = 3013;
	RetNotInRaid = 3101;
	RetRaidDoing = 3102;
	RetNotProp = 3103;
	RetRaidIdNotMatch = 3104;
	RetRaidRestartNotMatch = 3105;
	RetRaidLimit = 3106;
	RetRaidAvatarListEmpty = 3107;
	RetRaidAvatarNotExist = 3108;
	RetChallengeRaidRewardAlready = 3109;
	RetChallengeRaidScoreNotReach = 3110;
	RetChallengeRaidNotOpen = 3111;
	RetRaidFinished = 3112;
	RetRaidWorldLevelNotLock = 3113;
	RetRaidCannotUseAssist = 3114;
	RetRaidAvatarNotMatch = 3115;
	RetRaidCanNotSave = 3116;
	RetRaidNoSave = 3117;
	RetActivityRaidNotOpen = 3118;
	RetRaidAvatarCaptainNotExist = 3119;
	RetRaidStoryLineNotMatch = 3120;
	RetTalkEventAlreadyTaken = 3151;
	RetNpcAlreadyMeet = 3152;
	RetNpcNotInConfig = 3153;
	RetDialogueGroupDismatch = 3154;
	RetDialogueEventInvalid = 3155;
	RetTalkEventTakeProtoNotMatch = 3156;
	RetTalkEventNotValid = 3157;
	RetExpeditionConfigNotExist = 3201;
	RetExpeditionRewardConfigNotExist = 3202;
	RetExpeditionNotUnlocked = 3203;
	RetExpeditionAlreadyAccepted = 3204;
	RetExpeditionRepeatedAvatar = 3205;
	RetAvatarAlreadyDispatched = 3206;
	RetExpeditionNotAccepted = 3207;
	RetExpeditionNotFinish = 3208;
	RetExpeditionAlreadyFinish = 3209;
	RetExpeditionTeamCountLimit = 3210;
	RetExpeditionAvatarNumNotMatch = 3211;
	RetExpeditionNotOpen = 3212;
	RetExpeditionFriendAvatarNotValid = 3213;
	RetExpeditionNotPublished = 3214;
	RetLoginActivityHasTaken = 3301;
	RetLoginActivityDaysLack = 3302;
	RetTrialActivityRewardAlreadyTake = 3303;
	RetTrialActivityStageNotFinish = 3304;
	RetMaterialSubmitActivityHasTaken = 3305;
	RetMaterialSubmitActivityMaterialNotSubmitted = 3306;
	RetMaterialSubmitActivityMaterialAlreadySubmitted = 3307;
	RetFantasticStoryActivityStoryError = 3308;
	RetFantasticStoryActivityStoryNotOpen = 3309;
	RetFantasticStoryActivityBattleError = 3310;
	RetFantasticStoryActivityBattleNotOpen = 3311;
	RetFantasticStoryActivityBattleAvatarError = 3312;
	RetFantasticStoryActivityBattleBuffError = 3313;
	RetFantasticStoryActivityPreBattleScoreNotEnough = 3314;
	RetTrialActivityAlreadyInTrialActivity = 3315;
	RetCommonActivityNotOpen = 3316;
	RetBenefitNotReady = 3317;
	RetCommonActivityBusy = 3318;
	RetAvatarDeliverRewardPhaseError = 3319;
	RetMessageConfigNotExist = 3501;
	RetMessageSectionNotTake = 3502;
	RetMessageGroupNotTake = 3503;
	RetMessageSectionIdNotMatch = 3504;
	RetMessageSectionCanNotFinish = 3505;
	RetMessageItemCanNotFinish = 3506;
	RetMessageItemRaidCanNotFinish = 3507;
	RetFriendAlreadyIsFriend = 3601;
	RetFriendIsNotFriend = 3602;
	RetFriendApplyExpire = 3603;
	RetFriendInBlacklist = 3604;
	RetFriendNotInBlacklist = 3605;
	RetFriendNumberLimit = 3606;
	RetFriendBlacklistNumberLimit = 3607;
	RetFriendDailyApplyLimit = 3608;
	RetFriendInHandleLimit = 3609;
	RetFriendApplyInCd = 3610;
	RetFriendRemarkNameFormatError = 3611;
	RetFriendPlayerNotFound = 3612;
	RetFriendInTargetBlacklist = 3613;
	RetFriendTargetNumberLimit = 3614;
	RetAssistQueryTooFast = 3615;
	RetAssistNotExist = 3616;
	RetAssistUsedAlready = 3617;
	RetFriendReportReasonFormatError = 3618;
	RetFriendReportSensitiveWords = 3619;
	RetAssistUsedTimesOver = 3620;
	RetAssistQuitAlready = 3621;
	RetAssistAvatarInLineup = 3622;
	RetAssistNoReward = 3623;
	RetFriendSearchNumLimit = 3624;
	RetFriendSearchInCd = 3625;
	RetFriendRemarkNameUtf8Error = 3626;
	RetFriendReportReasonUtf8Error = 3627;
	RetAssistSetAlready = 3628;
	RetFriendTargetForbidOtherApply = 3629;
	RetFriendMarkedCntMax = 3630;
	RetFriendMarkedAlready = 3631;
	RetFriendNotMarked = 3632;
	RetFriendChallengeLineupRecommendInCd = 3633;
	RetViewPlayerCardInCd = 3634;
	RetViewPlayerBattleRecordInCd = 3635;
	RetPlayerBoardHeadIconNotExist = 3701;
	RetPlayerBoardHeadIconLocked = 3702;
	RetPlayerBoardHeadIconAlreadyUnlocked = 3703;
	RetPlayerBoardDisplayAvatarNotExist = 3704;
	RetPlayerBoardDisplayAvatarExceedLimit = 3705;
	RetPlayerBoardDisplayRepeatedAvatar = 3706;
	RetPlayerBoardDisplayAvatarSamePos = 3707;
	RetPlayerBoardDisplayAvatarLocked = 3708;
	RetSignatureLengthExceedLimit = 3709;
	RetSignatureSensitiveWords = 3710;
	RetPlayerBoardAssistAvatarNotExist = 3712;
	RetPlayerBoardAssistAvatarLocked = 3713;
	RetSignatureUtf8Error = 3714;
	RetPlayerBoardAssistAvatarCntError = 3715;
	RetPlayerBoardPersonalCardNotExist = 3716;
	RetPlayerBoardPersonalCardLocked = 3717;
	RetPlayerBoardPersonalNoChange = 3718;
	RetBattlePassTierNotValid = 3801;
	RetBattlePassLevelNotMeet = 3802;
	RetBattlePassRewardTakeAlready = 3803;
	RetBattlePassNotPremium = 3804;
	RetBattlePassNotDoing = 3805;
	RetBattlePassLevelInvalid = 3806;
	RetBattlePassNotUnlock = 3807;
	RetBattlePassNoReward = 3808;
	RetBattlePassQuestNotValid = 3809;
	RetBattlePassNotChooseOptional = 3810;
	RetBattlePassNotTakeReward = 3811;
	RetBattlePassOptionalNotValid = 3812;
	RetBattlePassBuyAlready = 3813;
	RetBattlePassNearEnd = 3814;
	RetMusicLocked = 3901;
	RetMusicNotExist = 3902;
	RetMusicUnlockFailed = 3903;
	RetPunkLordLackSummonTimes = 4001;
	RetPunkLordAttackingMonsterLimit = 4002;
	RetPunkLordMonsterNotExist = 4003;
	RetPunkLordMonsterAlreadyShared = 4004;
	RetPunkLordMonsterExpired = 4005;
	RetPunkLordSelfMonsterAttackLimit = 4006;
	RetPunkLordLackSupportTimes = 4007;
	RetPunkLordMonsterAlreadyKilled = 4008;
	RetPunkLordMonsterAttackerLimit = 4009;
	RetPunkLordWorldLevleNotValid = 4010;
	RetPunkLordRewardLevleNotExist = 4011;
	RetPunkLordPointNotMeet = 4012;
	RetPunkLordInAttacking = 4013;
	RetPunkLordOperationInCd = 4014;
	RetPunkLordRewardAlreadyTaken = 4015;
	RetPunkLordOverBonusRewardLimit = 4016;
	RetPunkLordNotInSchedule = 4017;
	RetPunkLordMonsterNotAttacked = 4018;
	RetPunkLordMonsterNotKilled = 4019;
	RetPunkLordMonsterKilledScoreAlreadyTake = 4020;
	RetPunkLordRewardLevleAlreadyTake = 4021;
	RetDailyActiveLevelInvalid = 4101;
	RetDailyActiveLevelRewardAlreadyTaken = 4102;
	RetDailyActiveLevelApNotEnough = 4103;
	RetDailyMeetPam = 4201;
	RetReplayIdNotMatch = 4251;
	RetReplayReqNotValid = 4252;
	RetFightActivityDifficultyLevelNotPassed = 4301;
	RetFightActivityDifficultyLevelRewardAlreadyTake = 4302;
	RetFightActivityStageNotOpen = 4303;
	RetFightActivityLevelNotUnlock = 4304;
	RetTrainVisitorVisitorNotExist = 4351;
	RetTrainVisitorBehaviorNotExist = 4352;
	RetTrainVisitorBehaviorFinished = 4353;
	RetTrainVisitorAllBehaviorRewardTaken = 4354;
	RetTrainVisitorGetOnMissionNotFinish = 4355;
	RetTrainVisitorNotGetOffOrBeTrainMember = 4356;
	RetTextJoinUnknowIsOverride = 4401;
	RetTextJoinIdNotExist = 4402;
	RetTextJoinCanNotOverride = 4403;
	RetTextJoinItemIdError = 4404;
	RetTextJoinSensitiveCheckError = 4405;
	RetTextJoinMustOverride = 4406;
	RetTextJoinTextEmpty = 4407;
	RetTextJoinTextFormatError = 4408;
	RetTextJoinTextUtf8Error = 4409;
	RetTextJoinBatchReqIdRepeat = 4410;
	RetTextJoinTypeNotSupportBatchReq = 4411;
	RetTextJoinAvatarIdNotExist = 4412;
	RetTextJoinUnknowType = 4413;
	RetPamMissionMissionIdError = 4451;
	RetPamMissionMissionExpire = 4452;
	RetChatTypeNotExist = 4501;
	RetMsgTypeNotExist = 4502;
	RetChatNoTargetUid = 4503;
	RetChatMsgEmpty = 4504;
	RetChatMsgExceedLimit = 4505;
	RetChatMsgSensitiveCheckError = 4506;
	RetChatMsgUtf8Error = 4507;
	RetChatForbidSwitchOpen = 4508;
	RetChatForbid = 4509;
	RetChatMsgIncludeSpecialStr = 4510;
	RetChatMsgEmojiNotExist = 4511;
	RetChatMsgEmojiGenderNotMatch = 4512;
	RetChatMsgEmojiNotMarked = 4513;
	RetChatMsgEmojiAlreadyMarked = 4514;
	RetChatMsgEmojiMarkedMaxLimit = 4515;
	RetBoxingClubChallengeNotOpen = 4601;
	RetMuseumNotOpen = 4651;
	RetMuseumTurnCntNotMatch = 4652;
	RetMuseumPhaseNotReach = 4653;
	RetMuseumUnknowStuff = 4654;
	RetMuseumUnknowArea = 4655;
	RetMuseumUnknowPos = 4656;
	RetMuseumStuffAlreadyInArea = 4657;
	RetMuseumStuffNotInArea = 4658;
	RetMuseumGetNpcRepeat = 4659;
	RetMuseumGetNpcUnlock = 4660;
	RetMuseumGetNpcNotEnough = 4661;
	RetMuseumChangeStuffAreaError = 4662;
	RetMuseumNotInit = 4663;
	RetMuseumEventError = 4664;
	RetMuseumUnknowChooseEventId = 4665;
	RetMuseumEventOrderNotMatch = 4666;
	RetMuseumEventPhaseNotUnlock = 4667;
	RetMuseumEventMissionNotFound = 4668;
	RetMuseumAreaLevelUpAlready = 4669;
	RetMuseumStuffAlreadyUsed = 4670;
	RetMuseumEventRoundNotUnlock = 4671;
	RetMuseumStuffInArea = 4672;
	RetMuseumStuffDispatch = 4673;
	RetMuseumIsEnd = 4674;
	RetMuseumStuffLeaving = 4675;
	RetMuseumEventMissionNotFinish = 4678;
	RetMuseumCollectRewardNotExist = 4679;
	RetMuseumCollectRewardAlreadyTaken = 4680;
	RetMuseumAcceptMissionMaxLimit = 4681;
	RetRogueChallengeNotOpen = 4701;
	RetRogueChallengeAssisRefreshLimit = 4702;
	RetAlleyNotInit = 4721;
	RetAlleyNotOpen = 4722;
	RetAlleyMapNotExist = 4724;
	RetAlleyEmptyPosList = 4725;
	RetAlleyLinePosInvalid = 4726;
	RetAlleyShopNotUnlock = 4727;
	RetAlleyDepotFull = 4728;
	RetAlleyShopNotInclude = 4729;
	RetAlleyEventNotUnlock = 4730;
	RetAlleyEventNotRefresh = 4731;
	RetAlleyEventStateDoing = 4732;
	RetAlleyEventStateFinish = 4733;
	RetAlleyEventError = 4734;
	RetAlleyRewardLevelError = 4735;
	RetAlleyRewardPrestigeNotEnough = 4736;
	RetAlleyShipEmpty = 4737;
	RetAlleyShipIdDismatch = 4738;
	RetAlleyShipNotExist = 4739;
	RetAlleyShipNotUnlock = 4740;
	RetAlleyGoodsNotExist = 4741;
	RetAlleyGoodsNotUnlock = 4742;
	RetAlleyProfitNotPositive = 4743;
	RetAlleySpecialOrderDismatch = 4744;
	RetAlleyOrderGoodsOverLimit = 4745;
	RetAlleySpecialOrderConditionNotMeet = 4746;
	RetAlleyDepotSizeOverLimit = 4747;
	RetAlleyGoodsNotEnough = 4748;
	RetAlleyOrderIndexInvalid = 4749;
	RetAlleyRewardAlreadyTake = 4750;
	RetAlleyRewardNotExist = 4751;
	RetAlleyMainMissionNotDoing = 4752;
	RetAlleyCriticalEventNotFinish = 4753;
	RetAlleyShopGoodsNotValid = 4754;
	RetAlleySlashNotOpen = 4755;
	RetAlleyPlacingAnchorInvalid = 4756;
	RetAlleyPlacingGoodsIndexInvalid = 4757;
	RetAlleySaveMapTooQuick = 4758;
	RetAlleyMapNotLink = 4759;
	RetAlleyFundsNotLowerBase = 4760;
	RetAlleyEventNotFinish = 4761;
	RetAlleyNormalOrderNotMeet = 4762;
	RetPlayerReturnNotOpen = 4801;
	RetPlayerReturnIsSigned = 4802;
	RetPlayerReturnPointNotEnough = 4803;
	RetPlayerReturnConditionInvalid = 4804;
	RetPlayerReturnHasSigned = 4805;
	RetPlayerReturnRewardTaken = 4806;
	RetPlayerReturnRelicTaken = 4807;
	RetAetherDivideNoLineup = 4851;
	RetAetherDivideLineupInvalid = 4852;
	RetChatBubbleIdError = 4901;
	RetChatBubbleIdNotUnlock = 4902;
	RetPhoneThemeIdError = 4903;
	RetPhoneThemeIdNotUnlock = 4904;
	RetChatBubbleSelectIsCurrent = 4905;
	RetPhoneThemeSelectIsCurrent = 4906;
	RetPhoneCaseIdError = 4907;
	RetPhoneCaseIdNotUnlock = 4908;
	RetPhoneCaseSelectIsCurrent = 4909;
	RetChessRogueConfigNotFound = 4951;
	RetChessRogueConfigInvalid = 4952;
	RetChessRogueNoValidRoom = 4963;
	RetChessRogueNoCellInfo = 4964;
	RetChessRogueCellNotFinish = 4965;
	RetChessRogueCellIsLocked = 4966;
	RetChessRogueScheduleNotMatch = 4967;
	RetChessRogueStatusFail = 4968;
	RetChessRogueAreaNotExist = 4969;
	RetChessRogueLineupFail = 4970;
	RetChessRogueAeonFail = 4980;
	RetChessRogueEnterCellFail = 4981;
	RetChessRogueRollDiceFail = 4982;
	RetChessRogueDiceStatusFail = 4983;
	RetChessRogueDiceCntNotFull = 4984;
	RetChessRogueUnlock = 4985;
	RetChessRoguePickAvatarFail = 4986;
	RetChessRogueAvatarInvalid = 4987;
	RetChessRogueCellCanNotSelect = 4988;
	RetChessRogueDiceConfirmed = 4989;
	RetChessRogueNousDiceNotMatch = 4990;
	RetChessRogueNousDiceRarityFail = 4991;
	RetChessRogueNousDiceSurfaceDuplicate = 4992;
	RetChessRogueNotInRogue = 4993;
	RetChessRogueNousDiceBranchLimit = 4994;
	RetHeliobusNotOpen = 5101;
	RetHeliobusSnsPostNotUnlock = 5102;
	RetHeliobusSnsAlreadyRead = 5103;
	RetHeliobusSnsAlreadyLiked = 5104;
	RetHeliobusSnsAlreadyCommented = 5105;
	RetHeliobusSnsInMission = 5106;
	RetHeliobusSnsAlreadyPosted = 5107;
	RetHeliobusSnsNotDoingMission = 5108;
	RetHeliobusRewardLevelMax = 5109;
	RetHeliobusIncomeNotEnough = 5110;
	RetHeliobusSnsCommentNotUnlock = 5111;
	RetHeliobusChallengeNotUnlock = 5112;
	RetHeliobusChallengeIdError = 5113;
	RetHeliobusSkillNotUnlock = 5114;
	RetHeliobusAcceptPostMissionFail = 5115;
	RetHeliobusSkillNotSelected = 5116;
	RetHeliobusPlaneTypeInvalid = 5117;
	RetReddotParamInvalid = 5151;
	RetReddotActivityNotOpen = 5152;
	RetRogueEndlessActivityConfigError = 5201;
	RetRogueEndlessActivityNotOpen = 5202;
	RetRogueEndlessActivityOverBonusRewardLimit = 5203;
	RetRogueEndlessActivityScoreNotMeet = 5204;
	RetRogueEndlessActivityRewardLevleAlreadyTake = 5205;
	RetHeartDialScriptNotFound = 5251;
	RetHeartDialScriptEmotionTheSame = 5252;
	RetHeartDialScriptStepNotNormal = 5253;
	RetHeartDialScriptConditionNotMatch = 5254;
	RetHeartDialScriptSubmitItemNumNotMatch = 5255;
	RetHeartDialScriptSubmitItemIdNotMatch = 5256;
	RetHeartDialDialogueNotFound = 5257;
	RetHeartDialDialogueAlreadyPerformed = 5258;
	RetHeartDialNpcNotFound = 5259;
	RetHeartDialTraceConfigNotFound = 5260;
	RetHeartDialFloorTraceExist = 5261;
	RetHeartDialTraceFloorNotMatch = 5262;
	RetTravelBrochureConfigError = 5301;
	RetTravelBrochureParamInvalid = 5302;
	RetTravelBrochureLocked = 5303;
	RetTravelBrochureCannotOperate = 5304;
	RetTravelBrochureWorldIdNotMatch = 5305;
	RetTravelBrochureHasNoWorldBook = 5306;
	RetTravelBrochurePageFull = 5307;
	RetMapRotationNotInRegion = 5351;
	RetMapRotationRotaterAlreadyDeployed = 5352;
	RetMapRotationEnergyNotEnough = 5353;
	RetMapRotationEntityNotOnCurPose = 5354;
	RetMapRotationRotaterNotDeployed = 5355;
	RetMapRotationPoseRotaterMismatch = 5356;
	RetMapRotationRotaterNotRemovable = 5357;
	RetMapRotationRotaterDisposable = 5358;
	RetSpaceZooActivityCatNotFound = 5401;
	RetSpaceZooActivityCatParamInvalid = 5402;
	RetSpaceZooActivityCatItemNotEnough = 5403;
	RetSpaceZooActivityCatBagFull = 5404;
	RetSpaceZooActivityCatNotToMutate = 5405;
	RetSpaceZooActivityCatStateError = 5406;
	RetSpaceZooActivityCatCatteryLocked = 5407;
	RetSpaceZooActivityCatOutNow = 5408;
	RetSpaceZooActivityCatConfigNotFound = 5409;
	RetSpaceZooActivityCatFeatureNotFound = 5410;
	RetSpaceZooActivityCatAddCatError = 5411;
	RetSpaceZooActivityCatMoneyNotEnough = 5412;
	RetSpaceZooActivityCatCondNotMatch = 5413;
	RetStrongChallengeActivityStageCfgMiss = 5501;
	RetStrongChallengeActivityStageNotOpen = 5502;
	RetStrongChallengeActivityBuffError = 5503;
	RetRollShopNotFound = 5551;
	RetRollShopGroupEmpty = 5552;
	RetRollShopEmpty = 5553;
	RetRollShopGachaReqDuplicated = 5554;
	RetRollShopRandomError = 5555;
	RetRollShopGroupTypeNotFound = 5556;
	RetRollShopHasStoredRewardAlready = 5557;
	RetRollShopNoStoredReward = 5558;
	RetRollShopNotInValidScene = 5559;
	RetRollShopInvalidRollShopType = 5560;
	RetActivityRaidCollectionPrevNotFinish = 5601;
	RetActivityRaidCollectionGroupEnterNextUnavailable = 5602;
	RetActivityRaidCollectionIsLast = 5603;
	RetActivityRaidCollectionIsNotNext = 5604;
	RetOfferingNotUnlock = 5651;
	RetOfferingLevelNotUnlock = 5652;
	RetOfferingReachMaxLevel = 5653;
	RetOfferingItemNotEnough = 5654;
	RetOfferingLongtailNotOpen = 5655;
	RetOfferingRewardCondition = 5656;
	RetDrinkMakerChatInvalid = 5701;
	RetDrinkMakerParamInvalid = 5702;
	RetDrinkMakerParamNotUnlock = 5703;
	RetDrinkMakerConfigNotFound = 5704;
	RetDrinkMakerNotLastChat = 5705;
	RetDrinkMakerDayAndFreePhaseNotOpen = 5706;
	RetDrinkMakerCheersNotAbleToNextGroup = 5707;
	RetDrinkMakerCheersDrinkAlreadyMade = 5708;
	RetDrinkMakerCheersActivityNotOpen = 5709;
	RetDrinkMakerCheersMakeDrinkPreMissionNotFinished = 5710;
	RetMonopolyNotOpen = 5751;
	RetMonopolyConfigError = 5752;
	RetMonopolyDiceNotEnough = 5753;
	RetMonopolyCurCellNotFinish = 5754;
	RetMonopolyCoinNotEnough = 5755;
	RetMonopolyCellWaitPending = 5756;
	RetMonopolyCellStateError = 5757;
	RetMonopolyCellContentError = 5758;
	RetMonopolyItemNotEnough = 5759;
	RetMonopolyCellContentCannotGiveup = 5760;
	RetMonopolyAssetLevelInvalid = 5761;
	RetMonopolyTurnNotFinish = 5762;
	RetMonopolyGuideNotFinish = 5763;
	RetMonopolyRaffleRewardReissued = 5764;
	RetMonopolyNoGameActive = 5771;
	RetMonopolyGameRatioNotIncreasable = 5772;
	RetMonopolyGameRatioMax = 5773;
	RetMonopolyGameTargetRatioInvalid = 5774;
	RetMonopolyGameBingoFlipPosInvalid = 5775;
	RetMonopolyGameGuessAlreadyChoose = 5776;
	RetMonopolyGameGuessChooseInvalid = 5777;
	RetMonopolyGameGuessInformationAlreadyBought = 5778;
	RetMonopolyGameRaiseRatioNotUnlock = 5779;
	RetMonopolyFriendNotSynced = 5785;
	RetMonopolyGetFriendRankingListInCd = 5786;
	RetMonopolyLikeTargetNotFriend = 5787;
	RetMonopolyDailyAlreadyLiked = 5788;
	RetMonopolySocialEventStatusNotMatch = 5789;
	RetMonopolySocialEventServerCacheNotExist = 5790;
	RetMonopolyActivityIdNotMatch = 5791;
	RetMonopolyRafflePoolNotExist = 5792;
	RetMonopolyRafflePoolTimeNotMatch = 5793;
	RetMonopolyRafflePoolPhaseNotMeet = 5794;
	RetMonopolyRafflePoolShowTimeNotMeet = 5795;
	RetMonopolyRaffleTicketNotFound = 5796;
	RetMonopolyRaffleTicketTimeNotMeet = 5797;
	RetMonopolyRaffleTicketRewardAlreadyTaken = 5798;
	RetMonopolyRafflePoolNotInRaffleTime = 5799;
	RetMonopolyMbtiReportRewardAlreadyTaken = 5800;
	RetEvolveBuildLevelGaming = 5801;
	RetEveolveBuildLevelBanRandom = 5802;
	RetEvolveBuildFirstRewardAlreadyTaken = 5803;
	RetEvolveBuildLevelUnfinish = 5804;
	RetEvolveBuildShopAbilityMaxLevel = 5805;
	RetEvolveBuildShopAbilityMinLevel = 5806;
	RetEvolveBuildShopAbilityNotGet = 5807;
	RetEvolveBuildLevelLock = 5808;
	RetEvolveBuildExpNotEnough = 5809;
	RetEvolveBuildShopAbilityLevelError = 5810;
	RetEvolveBuildActivityNotOpen = 5811;
	RetEvolveBuildShopAbilityEmpty = 5812;
	RetEvolveBuildLevelNotStart = 5813;
	RetEvolveBuildShopLock = 5814;
	RetEvolveBuildRewardLock = 5815;
	RetEvolveBuildRewardLevelMax = 5816;
	RetEvolveBuildRewardAlreadyAllTaken = 5717;
	RetEvolveBuildSeasonError = 5718;
	RetEvolveBuildTeachSkipQuestNotFinish = 5719;
	RetClockParkConfigError = 5851;
	RetClockParkEffectError = 5852;
	RetClockParkScriptAlreadyUnlock = 5853;
	RetClockParkScriptUnlockConditionNotMeet = 5854;
	RetClockParkTalentAlreadyUnlock = 5855;
	RetClockParkScriptLocked = 5856;
	RetClockParkHasOngoingScript = 5857;
	RetClockParkNoOngoingScript = 5858;
	RetClockParkDicePlacementError = 5859;
	RetClockParkMismatchStatus = 5860;
	RetClockParkNoBuff = 5861;
	RetClockParkSlotMachineGachaReqDuplicated = 5862;
	RetClockParkSlotMachineCostNotEnough = 5863;
	RetClockParkSlotMachineGachaCntExceedLimit = 5864;
	RetClockParkNotOpen = 5865;
	RetTournRogueStatusMismatch = 5901;
	RetMagicRogueStatusMismatch = 5902;
	RetAutoMountMagicUnitNoMatchedMagicScepter = 5903;
	RetMagicUnitWorkbenchReforgeGenFail = 5904;
	RetMatchAlreadyInMatch = 6201;
	RetMatchNotInMatch = 6202;
	RetMatchPlayNotOpen = 6203;
	RetCrossStateError = 6204;
	RetMatchVersionNotEqual = 6205;
	RetMatchPlayerNotInLobbyRoom = 6206;
	RetLobbyStateNotMatch = 6207;
	RetLobbyRoomNotExist = 6208;
	RetLobbyRoomPalyerFull = 6209;
	RetLobbyRoomPalyerNotReady = 6210;
	RetLobbyRoomPalyerFighting = 6211;
	RetFightRoomNotExist = 6250;
	RetFightMatch3PlayerStateErr = 6251;
	RetFightMatch3RoomStateErr = 6252;
	RetCrossStateTimeOut = 6253;
	RetLobbyStartFightDisable = 6254;
	RetLobbyStartFightPlayerLack = 6255;
	RetMatchClientDataVersionLow = 6256;
	RetLobbyStartMatchDisable = 6257;
	RetLobbyInteractInCd = 6258;
	RetLobbyOwnerStateErr = 6259;
	RetLobbyOpTooFast = 6260;
	RetFightMatch3SoloPlayerTurnErr = 6261;
	RetSwordTrainingNoActiveGame = 6301;
	RetSwordTrainingNoPendingActionMatch = 6302;
	RetSwordTrainingPartnerAbilityInvalid = 6303;
	RetSwordTrainingSkillAlreadyLearned = 6304;
	RetSwordTrainingConditionNotMeet = 6305;
	RetSwordTrainingParentSkillNotLearned = 6306;
	RetSwordTrainingSkillTypeNotUnlock = 6307;
	RetSwordTrainingGameAlreadyExist = 6308;
	RetSwordTrainingEndingHintNotMatch = 6309;
	RetSwordTrainingStorylineConfigNotFound = 6310;
	RetSwordTrainingStoryConfigNotFound = 6311;
	RetSwordTrainingUnlockNotFinish = 6312;
	RetSwordTrainingOptionMismatch = 6313;
	RetSwordTrainingRestoreWithoutExamFailed = 6314;
	RetSwordTrainingNoRestoreGameAvailable = 6315;
	RetSwordTrainingEndingStoryNotMatch = 6316;
	RetSwordTrainingEndingNotFinish = 6317;
	RetSwordTrainingEndingRewardTaken = 6318;
	RetSwordTrainingCombatRankNotChange = 6319;
	RetSwordTrainingDirectBattleDisable = 6320;
	RetFightFestPhaseNotMatch = 6351;
	RetFightFestScoreRaceAlreadyFinish = 6352;
	RetFightFestChallengeLocked = 6353;
	RetFightFestCoachSkillLocked = 6354;
	RetFightFestCoachSkillEquipTypeExisted = 6355;
	RetFightFestScoreRaceMissionDoind = 6356;
	RetFightFestCoachSkillNoEquip = 6357;
	RetPetNotExist = 6401;
	RetPetAlreadySummoned = 6402;
	RetPetNotSummoned = 6403;
	RetMusicRhythmLevelTimeTooShort = 6451;
	RetMusicRhythmNotInLevel = 6452;
	RetMusicRhythmPreDifficultyNotPass = 6453;
	RetMusicRhythmSongLimited = 6454;
	RetMusicRhythmSongLocked = 6455;
	RetMusicRhythmTrackLocked = 6456;
	RetMusicRhythmLevelNotUnlock = 6457;
	RetMusicRhythmSongSfxLocked = 6458;
	RetTrainPartyCoinNotEnough = 6501;
	RetTrainPartyDiyTagNotMatch = 6502;
	RetTrainPartyUseCardMobilityNotEnough = 6503;
	RetTrainPartyAreaUnlockCoinNotEnough = 6504;
	RetTarotBookEnergyNotEnough = 6601;
	RetTarotBookPackNotAvailable = 6602;
	RetTarotBookStoryAlreadyUnlock = 6603;
	RetTarotBookCardNotEnough = 6604;
	RetTarotBookClueNotEnough = 6605;
	RetTarotBookUnlockStoryCardNotSame = 6606;
	RetTarotBookStoryNotUnlock = 6607;
	RetTarotBookStoryAlreadyFinish = 6608;
	RetTarotBookInteractionAlreadyFinish = 6609;
	RetChimeraChimeraNotUnlock = 6621;
	RetChimeraChimeraDuplicated = 6622;
	RetChimeraChimeraTypeError = 6623;
	RetChimeraWorkMismatchRound = 6624;
	RetChimeraWorkRoundOptionNotMeet = 6625;
	RetChimeraEndlessNotUnlock = 6626;
	RetChimeraInEndless = 6627;
	RetChimeraNotInEndless = 6628;
	RetChimeraChimeraFallInEndless = 6629;
	RetPlanetFesAvatarNotExist = 6641;
	RetPlanetFesLandNotExist = 6642;
	RetPlanetFesItemNotEnough = 6643;
	RetPlanetFesLandAlreadyUnlock = 6644;
	RetPlanetFesWorkAvatarRepeat = 6645;
	RetPlanetFesWorkAvatarTypeNotMatch = 6646;
	RetPlanetFesActivityNotOpen = 6647;
	RetPlanetFesSkilltreePhaseNotUnlock = 6648;
	RetPlanetFesSkillNotUnlock = 6649;
	RetPlanetFesConfigError = 6650;
	RetPlanetFesNotInBusinessDay = 6651;
	RetPlanetFesEventLocked = 6652;
	RetPlanetFesEventFinished = 6653;
	RetPlanetFesEventInCd = 6654;
	RetPlanetFesEventAlreadyInState = 6655;
	RetPlanetFesEventNoWorkAvatar = 6656;
	RetPlanetFesEventProcessingCannotDisappear = 6657;
	RetPlanetFesEventOptionPhaseWrong = 6658;
	RetPlanetFesFunctionNotUnlock = 6659;
	RetPlanetFesRewardAlreadyTaken = 6660;
	RetPlanetFesEventGameNotActive = 6661;
	RetPlanetFesRegionProgressNotEnough = 6662;
	RetPlanetFesFriendItemNotEnough = 6663;
	RetPlanetFesPiecePermissionBan = 6664;
	RetPlanetFesPieceOfferNotExist = 6665;
	RetPlanetFesPieceApplyInStackTooMuch = 6666;
	RetPlanetFesPieceApplyNotExist = 6667;
	RetPlanetFesGetFriendRankingListInCd = 6668;
	RetPlanetFesGivePieceOwnedByTarget = 6669;
	RetPlanetFesLevelMax = 6670;
	RetPlanetFesExclusiveEvent = 6671;
	RetMarbleSealAlreadyUnlocked = 6701;
	RetMarbleSealShopItemNotEnough = 6702;
	RetMarbleSealLocked = 6703;
	RetFateStatusNotMatch = 6771;
	RetFateBuffSlotNotEnough = 6772;
	RetFateCoinNotEnough = 6773;
	RetFateReijuRerollCountNotEnough = 6774;
	RetFateBuffLevelMax = 6775;
	RetFateActionQueueNotEmpty = 6776;
	RetParkourActivityNotOpen = 6801;
	RetParkourLevelNotUnlock = 6802;
	RetParkourRailBallNotAllowed = 6803;
	RetParkourNotInLevel = 6804;
	RetParkourLevelNotMatch = 6805;
	RetParkourNotPlayedAllNonStoryLevel = 6806;
	RetFtcLimitNameChange = 6830;
	RetElfRestaurantConfigError = 6841;
	RetElfRestaurantFieldAlreadyBought = 6842;
	RetElfRestaurantFieldNotBought = 6843;
	RetElfRestaurantFieldCellInvalid = 6844;
	RetElfRestaurantFarmTypeInvalid = 6845;
	RetElfRestaurantShopItemNotExist = 6846;
	RetElfRestaurantShopItemCountLimit = 6847;
	RetElfRestaurantTradeOrderNotExist = 6848;
	RetElfRestaurantNoReward = 6849;
	RetElfRestaurantNotInit = 6850;
	RetGridFightConfMiss = 6900;
}

enum CmdActivityType {
	None = 0;
	CmdAvatarDeliverRewardChooseAvatarScRsp = 2617;
	CmdAvatarDeliverRewardTakeRewardScRsp = 2699;
	CmdLeaveTrialActivityCsReq = 2623;
	CmdGetAvatarDeliverRewardActivityDataScRsp = 2649;
	CmdEnterTrialActivityStageCsReq = 2603;
	CmdTakeLoginActivityRewardCsReq = 2698;
	CmdGetTrialActivityDataCsReq = 2658;
	CmdGetLoginActivityCsReq = 2610;
	CmdTakeTrialActivityRewardCsReq = 2604;
	CmdGetAvatarDeliverRewardActivityDataCsReq = 2618;
	CmdTakeTrialActivityRewardScRsp = 2686;
	CmdAvatarDeliverRewardChooseAvatarCsReq = 2696;
	CmdTakeLoginActivityRewardScRsp = 2653;
	CmdAvatarDeliverRewardTakeRewardCsReq = 2622;
	CmdGetLoginActivityScRsp = 2605;
	CmdGetActivityScheduleConfigScRsp = 2602;
	CmdTrialActivityDataChangeScNotify = 2683;
	CmdSubmitMaterialSubmitActivityMaterialScRsp = 2678;
	CmdGetMaterialSubmitActivityDataScRsp = 2694;
	CmdLeaveTrialActivityScRsp = 2614;
	CmdTakeMaterialSubmitActivityRewardScRsp = 2690;
	CmdCurTrialActivityScNotify = 2695;
	CmdSubmitMaterialSubmitActivityMaterialCsReq = 2636;
	CmdEnterTrialActivityStageScRsp = 2657;
	CmdStartTrialActivityCsReq = 2612;
	CmdTakeMaterialSubmitActivityRewardCsReq = 2674;
	CmdStartTrialActivityScRsp = 2664;
	CmdGetActivityScheduleConfigCsReq = 2679;
	CmdGetTrialActivityDataScRsp = 2682;
	CmdGetMaterialSubmitActivityDataCsReq = 2672;
}

enum Pmidehdobhj {
	TrialActivityStatusNone = 0;
	TrialActivityStatusFinish = 1;
}

enum CmdAdventureType {
	None = 0;
	CmdQuickStartCocoonStageCsReq = 1379;
	CmdEnterAdventureCsReq = 1310;
	CmdEnterAdventureScRsp = 1305;
	CmdFarmElementSweepCsReq = 1307;
	CmdQuickStartFarmElementCsReq = 1397;
	CmdGetFarmStageGachaInfoCsReq = 1398;
	CmdQuickStartCocoonStageScRsp = 1302;
	CmdFarmElementSweepScRsp = 1339;
	CmdQuickStartFarmElementScRsp = 1306;
	CmdGetFarmStageGachaInfoScRsp = 1353;
	CmdCocoonSweepCsReq = 1341;
	CmdCocoonSweepScRsp = 1355;
}

enum CmdAetherDivideType {
	None = 0;
	CmdGetAetherDivideInfoCsReq = 4843;
	CmdEquipAetherDividePassiveSkillScRsp = 4805;
	CmdSwitchAetherDivideLineUpSlotScRsp = 4848;
	CmdSetAetherDivideLineUpScRsp = 4832;
	CmdAetherDivideFinishChallengeScNotify = 4815;
	CmdStartAetherDivideStageBattleCsReq = 4820;
	CmdClearAetherDividePassiveSkillScRsp = 4850;
	CmdStartAetherDivideChallengeBattleScRsp = 4827;
	CmdAetherDivideRefreshEndlessScNotify = 4836;
	CmdSetAetherDivideLineUpCsReq = 4813;
	CmdSwitchAetherDivideLineUpSlotCsReq = 4837;
	CmdGetAetherDivideInfoScRsp = 4818;
	CmdAetherDivideLineupScNotify = 4824;
	CmdGetAetherDivideChallengeInfoScRsp = 4803;
	CmdAetherDivideRefreshEndlessCsReq = 4826;
	CmdAetherDivideSpiritInfoScNotify = 4812;
	CmdAetherDivideRefreshEndlessScRsp = 4811;
	CmdLeaveAetherDivideSceneScRsp = 4830;
	CmdEnterAetherDivideSceneScRsp = 4821;
	CmdStartAetherDivideSceneBattleCsReq = 4802;
	CmdClearAetherDividePassiveSkillCsReq = 4806;
	CmdAetherDivideSkillItemScNotify = 4849;
	CmdGetAetherDivideChallengeInfoCsReq = 4808;
	CmdAetherDivideTakeChallengeRewardScRsp = 4838;
	CmdStartAetherDivideChallengeBattleCsReq = 4828;
	CmdAetherDivideTakeChallengeRewardCsReq = 4819;
	CmdStartAetherDivideStageBattleScRsp = 4809;
	CmdAetherDivideSpiritExpUpCsReq = 4840;
	CmdEnterAetherDivideSceneCsReq = 4823;
	CmdAetherDivideTainerInfoScNotify = 4814;
	CmdAetherDivideSpiritExpUpScRsp = 4807;
	CmdEquipAetherDividePassiveSkillCsReq = 4829;
	CmdStartAetherDivideSceneBattleScRsp = 4801;
	CmdLeaveAetherDivideSceneCsReq = 4846;
}

enum CmdAlleyType {
	None = 0;
	CmdRefreshAlleyOrderCsReq = 4772;
	CmdAlleyFundsScNotify = 4754;
	CmdLogisticsGameCsReq = 4798;
	CmdStartAlleyEventScRsp = 4706;
	CmdLogisticsInfoScNotify = 4792;
	CmdLogisticsGameScRsp = 4753;
	CmdActivityRaidPlacingGameScRsp = 4728;
	CmdGetAlleyInfoCsReq = 4710;
	CmdAlleyGuaranteedFundsCsReq = 4751;
	CmdStartAlleyEventCsReq = 4797;
	CmdAlleyEventChangeNotify = 4741;
	CmdAlleyShipUnlockScNotify = 4709;
	CmdLogisticsDetonateStarSkiffScRsp = 4715;
	CmdAlleyTakeEventRewardScRsp = 4737;
	CmdSaveLogisticsScRsp = 4769;
	CmdGetAlleyInfoScRsp = 4705;
	CmdPrestigeLevelUpCsReq = 4774;
	CmdGetSaveLogisticsMapCsReq = 4773;
	CmdGetSaveLogisticsMapScRsp = 4742;
	CmdAlleyShopLevelScNotify = 4762;
	CmdLogisticsScoreRewardSyncInfoScNotify = 4760;
	CmdAlleyShipmentEventEffectsScNotify = 4724;
	CmdAlleyTakeEventRewardCsReq = 4735;
	CmdAlleyGuaranteedFundsScRsp = 4725;
	CmdAlleyPlacingGameCsReq = 4716;
	CmdRefreshAlleyOrderScRsp = 4794;
	CmdActivityRaidPlacingGameCsReq = 4766;
	CmdPrestigeLevelUpScRsp = 4790;
	CmdLogisticsDetonateStarSkiffCsReq = 4788;
	CmdAlleyEventEffectNotify = 4755;
	CmdTakePrestigeRewardScRsp = 4739;
	CmdAlleyPlacingGameScRsp = 4726;
	CmdSaveLogisticsCsReq = 4720;
	CmdAlleyShipUsedCountScNotify = 4701;
	CmdAlleyOrderChangedScNotify = 4736;
	CmdTakePrestigeRewardCsReq = 4707;
}

enum Gbphkkmolmf {
	Left = 0;
	Right = 1;
	Up = 2;
	Down = 3;
	LeftUp = 4;
	LeftDown = 5;
	RightUp = 6;
	RightDown = 7;
}

enum Cfancffhhkb {
	AlleyEventTypeNone = 0;
	AlleyMainEvent = 1;
	AlleyCriticalEvent = 2;
	AlleyDailyEvent = 3;
}

enum Bjlncfjoiaf {
	AlleyStateNone = 0;
	AlleyEventDoing = 1;
	AlleyEventFinish = 2;
	AlleyEventRewarded = 3;
}

enum CmdArchiveType {
	None = 0;
	CmdGetArchiveDataCsReq = 2310;
	CmdGetUpdatedArchiveDataScRsp = 2353;
	CmdGetUpdatedArchiveDataCsReq = 2398;
	CmdGetArchiveDataScRsp = 2305;
}

enum CmdAvatarType {
	None = 0;
	CmdDressAvatarScRsp = 355;
	CmdDressRelicAvatarScRsp = 372;
	CmdGetAvatarDataScRsp = 305;
	CmdTakeOffRelicCsReq = 394;
	CmdGetPreAvatarActivityListCsReq = 360;
	CmdTakePromotionRewardScRsp = 374;
	CmdTakeOffRelicScRsp = 336;
	CmdGetPreAvatarGrowthInfoScRsp = 325;
	CmdSetGrowthTargetAvatarCsReq = 373;
	CmdMarkAvatarCsReq = 369;
	CmdAddAvatarScNotify = 316;
	CmdSetAvatarEnhancedIdScRsp = 315;
	CmdDressRelicAvatarCsReq = 367;
	CmdAddMultiPathAvatarScNotify = 324;
	CmdDressAvatarSkinCsReq = 390;
	CmdGetPreAvatarActivityListScRsp = 366;
	CmdUnlockSkilltreeCsReq = 379;
	CmdGetPreAvatarGrowthInfoCsReq = 351;
	CmdPromoteAvatarCsReq = 397;
	CmdAvatarExpUpCsReq = 398;
	CmdRankUpAvatarCsReq = 326;
	CmdAvatarExpUpScRsp = 353;
	CmdTakeOffAvatarSkinCsReq = 362;
	CmdGetAvatarDataCsReq = 310;
	CmdSetGrowthTargetAvatarScRsp = 342;
	CmdGrowthTargetAvatarChangedScNotify = 301;
	CmdTakePromotionRewardCsReq = 378;
	CmdTakeOffEquipmentCsReq = 307;
	CmdUnlockSkilltreeScRsp = 302;
	CmdDressAvatarSkinScRsp = 354;
	CmdTakeOffAvatarSkinScRsp = 309;
	CmdDressAvatarCsReq = 341;
	CmdMarkAvatarScRsp = 392;
	CmdSetAvatarEnhancedIdCsReq = 388;
	CmdRankUpAvatarScRsp = 363;
	CmdPromoteAvatarScRsp = 306;
	CmdUnlockAvatarSkinScNotify = 320;
	CmdTakeOffEquipmentScRsp = 339;
}

enum Bcmljcfoefm {
	GrowthTargetFunctionTypeIncludeAllSkilltree = 0;
}

enum AddAvatarSrc {
	None = 0;
	Gacha = 1;
	Rogue = 2;
	Delivery = 3;
}

enum Gifjdobiiik {
	GrowthTargetAvatarNone = 0;
	GrowthTargetAvatarPre = 1;
	GrowthTargetAvatarUp = 2;
	GrowthTargetAvatarLock = 3;
	GrowthTargetAvatarUnlock = 4;
	GrowthTargetAvatarLockAndUp = 5;
}

enum CmdBattleType {
	None = 0;
	CmdRebattleByClientCsNotify = 126;
	CmdSyncClientResVersionCsReq = 197;
	CmdServerSimulateBattleFinishScNotify = 139;
	CmdQuitBattleScRsp = 153;
	CmdGetCurBattleInfoCsReq = 179;
	CmdPveBattleResultCsReq = 110;
	CmdBattleLogReportScRsp = 107;
	CmdGetCurBattleInfoScRsp = 102;
	CmdQuitBattleCsReq = 198;
	CmdReBattleAfterBattleLoseCsNotify = 116;
	CmdSyncClientResVersionScRsp = 106;
	CmdPveBattleResultScRsp = 105;
	CmdBattleLogReportCsReq = 155;
	CmdQuitBattleScNotify = 141;
}

enum CmdBattleCollegeType {
	None = 0;
	CmdGetBattleCollegeDataScRsp = 5705;
	CmdStartBattleCollegeCsReq = 5753;
	CmdBattleCollegeDataChangeScNotify = 5798;
	CmdGetBattleCollegeDataCsReq = 5710;
	CmdStartBattleCollegeScRsp = 5779;
}

enum CmdBattlePassType {
	None = 0;
	CmdTakeAllRewardScRsp = 3041;
	CmdBattlePassInfoNotify = 3010;
	CmdTakeBpRewardCsReq = 3053;
	CmdTakeAllRewardCsReq = 3006;
	CmdBuyBpLevelScRsp = 3097;
	CmdTakeBpRewardScRsp = 3079;
	CmdBuyBpLevelCsReq = 3002;
}

enum BpTierType {
	None = 0;
	Free = 1;
	Premium1 = 2;
	Premium2 = 3;
}

enum BpRewardType {
	BpRewaradTypeNone = 0;
	BpRewaradTypeFree = 1;
	BpRewaradTypePremium1 = 2;
	BpRewaradTypePremium2 = 3;
	BpRewaradTypePremiumOptional = 4;
}

enum CmdBenefitActivityType {
	None = 0;
	CmdGetBenefitActivityInfoCsReq = 4873;
	CmdJoinBenefitActivityCsReq = 4852;
	CmdTakeBenefitActivityRewardScRsp = 4880;
	CmdTakeBenefitActivityRewardCsReq = 4896;
	CmdJoinBenefitActivityScRsp = 4851;
	CmdGetBenefitActivityInfoScRsp = 4871;
}

enum CmdBoxingClubType {
	None = 0;
	CmdSetBoxingClubResonanceLineupScRsp = 4226;
	CmdChooseBoxingClubStageOptionalBuffScRsp = 4267;
	CmdGetBoxingClubInfoScRsp = 4205;
	CmdChooseBoxingClubStageOptionalBuffCsReq = 4263;
	CmdStartBoxingClubBattleCsReq = 4279;
	CmdBoxingClubChallengeUpdateScNotify = 4255;
	CmdStartBoxingClubBattleScRsp = 4202;
	CmdGiveUpBoxingClubChallengeScRsp = 4206;
	CmdGiveUpBoxingClubChallengeCsReq = 4297;
	CmdBoxingClubRewardScNotify = 4241;
	CmdMatchBoxingClubOpponentScRsp = 4253;
	CmdMatchBoxingClubOpponentCsReq = 4298;
	CmdGetBoxingClubInfoCsReq = 4210;
	CmdChooseBoxingClubResonanceScRsp = 4239;
	CmdSetBoxingClubResonanceLineupCsReq = 4216;
	CmdChooseBoxingClubResonanceCsReq = 4207;
}

enum CmdChallengeType {
	None = 0;
	CmdGetCurChallengeCsReq = 1755;
	CmdLeaveChallengeCsReq = 1779;
	CmdEnterChallengeNextPhaseCsReq = 1762;
	CmdGetChallengeCsReq = 1710;
	CmdStartChallengeCsReq = 1798;
	CmdTakeChallengeRewardScRsp = 1767;
	CmdStartChallengeScRsp = 1753;
	CmdRestartChallengePhaseScRsp = 1754;
	CmdGetChallengeGroupStatisticsCsReq = 1772;
	CmdChallengeBossPhaseSettleNotify = 1720;
	CmdChallengeLineupNotify = 1739;
	CmdGetChallengeScRsp = 1705;
	CmdStartPartialChallengeCsReq = 1736;
	CmdChallengeSettleNotify = 1797;
	CmdGetChallengeGroupStatisticsScRsp = 1794;
	CmdRestartChallengePhaseCsReq = 1790;
	CmdGetCurChallengeScRsp = 1707;
	CmdStartPartialChallengeScRsp = 1778;
	CmdTakeChallengeRewardCsReq = 1763;
	CmdEnterChallengeNextPhaseScRsp = 1709;
	CmdLeaveChallengeScRsp = 1702;
}

enum ChallengeStatus {
	ChallengeUnknown = 0;
	ChallengeDoing = 1;
	ChallengeFinish = 2;
	ChallengeFailed = 3;
}

enum CmdChatType {
	None = 0;
	CmdSendMsgScRsp = 3905;
	CmdMarkChatEmojiCsReq = 3907;
	CmdGetChatEmojiListCsReq = 3941;
	CmdGetChatFriendHistoryScRsp = 3906;
	CmdBatchMarkChatEmojiScRsp = 3926;
	CmdSendMsgCsReq = 3910;
	CmdGetChatFriendHistoryCsReq = 3997;
	CmdGetLoginChatInfoScRsp = 3967;
	CmdBatchMarkChatEmojiCsReq = 3916;
	CmdGetLoginChatInfoCsReq = 3963;
	CmdPrivateMsgOfflineUsersScNotify = 3953;
	CmdMarkChatEmojiScRsp = 3939;
	CmdGetChatEmojiListScRsp = 3955;
	CmdRevcMsgScNotify = 3998;
	CmdGetPrivateChatHistoryScRsp = 3902;
	CmdGetPrivateChatHistoryCsReq = 3979;
}

enum CmdChessRogueType {
	None = 0;
	CmdGetChessRogueBuffEnhanceInfoCsReq = 5528;
	CmdChessRoguePickAvatarScRsp = 5412;
	CmdChessRogueReRollDiceCsReq = 5550;
	CmdChessRogueEnterCellCsReq = 5471;
	CmdChessRogueRollDiceCsReq = 5445;
	CmdChessRogueGiveUpRollScRsp = 5527;
	CmdGetChessRogueStoryAeonTalkInfoScRsp = 5574;
	CmdFinishChessRogueSubStoryScRsp = 5573;
	CmdChessRogueUpdateBoardScNotify = 5588;
	CmdEnterChessRogueAeonRoomScRsp = 5461;
	CmdChessRogueGiveUpCsReq = 5437;
	CmdChessRogueNousEnableRogueTalentCsReq = 5587;
	CmdChessRogueEnterScRsp = 5598;
	CmdChessRogueLayerAccountInfoNotify = 5556;
	CmdChessRogueRollDiceScRsp = 5555;
	CmdChessRogueGiveUpScRsp = 5594;
	CmdSyncChessRogueNousValueScNotify = 5451;
	CmdChessRogueEnterNextLayerScRsp = 5566;
	CmdGetChessRogueStoryInfoScRsp = 5402;
	CmdChessRogueEnterNextLayerCsReq = 5457;
	CmdChessRoguePickAvatarCsReq = 5434;
	CmdChessRogueStartScRsp = 5521;
	CmdChessRogueUpdateDiceInfoScNotify = 5493;
	CmdChessRogueNousEnableRogueTalentScRsp = 5469;
	CmdChessRogueQuestFinishNotify = 5442;
	CmdChessRogueGiveUpRollCsReq = 5571;
	CmdEnterChessRogueAeonRoomCsReq = 5542;
	CmdChessRogueLeaveCsReq = 5567;
	CmdChessRogueNousEditDiceCsReq = 5488;
	CmdFinishChessRogueSubStoryCsReq = 5401;
	CmdGetChessRogueStoryAeonTalkInfoCsReq = 5467;
	CmdEnhanceChessRogueBuffScRsp = 5543;
	CmdChessRogueNousEditDiceScRsp = 5510;
	CmdGetChessRogueStoryInfoCsReq = 5472;
	CmdGetChessRogueNousStoryInfoCsReq = 5513;
	CmdChessRogueCellUpdateNotify = 5409;
	CmdChessRogueUpdateDicePassiveAccumulateValueScNotify = 5414;
	CmdEnhanceChessRogueBuffCsReq = 5595;
	CmdChessRogueStartCsReq = 5444;
	CmdChessRogueNousDiceSurfaceUnlockNotify = 5430;
	CmdSyncChessRogueMainStoryFinishScNotify = 5572;
	CmdChessRogueEnterCellScRsp = 5418;
	CmdChessRogueQueryAeonDimensionsScRsp = 5460;
	CmdChessRogueCheatRollScRsp = 5534;
	CmdChessRogueReviveAvatarCsReq = 5426;
	CmdGetChessRogueBuffEnhanceInfoScRsp = 5506;
	CmdSelectChessRogueSubStoryScRsp = 5490;
	CmdChessRogueConfirmRollCsReq = 5560;
	CmdChessRogueReRollDiceScRsp = 5435;
	CmdSelectChessRogueSubStoryCsReq = 5529;
	CmdChessRogueSkipTeachingLevelScRsp = 5508;
	CmdChessRogueQueryScRsp = 5564;
	CmdChessRogueQueryCsReq = 5484;
	CmdGetChessRogueNousStoryInfoScRsp = 5551;
	CmdChessRogueNousGetRogueTalentInfoCsReq = 5492;
	CmdChessRogueConfirmRollScRsp = 5575;
	CmdChessRogueLeaveScRsp = 5407;
	CmdChessRogueSelectCellCsReq = 5517;
	CmdChessRogueReviveAvatarScRsp = 5432;
	CmdSyncChessRogueNousSubStoryScNotify = 5511;
	CmdChessRogueChangeyAeonDimensionNotify = 5532;
	CmdChessRogueNousDiceUpdateNotify = 5584;
	CmdChessRogueEnterCsReq = 5403;
	CmdChessRogueUpdateAeonModifierValueScNotify = 5456;
	CmdChessRogueCheatRollCsReq = 5427;
	CmdChessRogueNousGetRogueTalentInfoScRsp = 5455;
	CmdChessRogueUpdateLevelBaseInfoScNotify = 5553;
	CmdChessRogueQuitScRsp = 5546;
	CmdChessRogueUpdateActionPointScNotify = 5422;
	CmdChessRogueSelectCellScRsp = 5569;
	CmdChessRogueUpdateUnlockLevelScNotify = 5489;
	CmdChessRogueSkipTeachingLevelCsReq = 5416;
	CmdChessRogueQueryAeonDimensionsCsReq = 5447;
	CmdChessRogueUpdateMoneyInfoScNotify = 5440;
	CmdSyncChessRogueNousMainStoryScNotify = 5448;
	CmdChessRogueUpdateReviveInfoScNotify = 5454;
	CmdChessRogueUpdateAllowedSelectCellScNotify = 5586;
	CmdChessRogueQuitCsReq = 5449;
}

enum Nlmollcfcgb {
	ChessRogueDiceIdle = 0;
	ChessRogueDiceRolled = 1;
	ChessRogueDiceConfirmed = 2;
	ChessRogueDiceGiveup = 3;
}

enum Aikblmohhjp {
	ChessRogueDiceFixed = 0;
	ChessRogueDiceEditable = 1;
}

enum Eieenafclll {
	Idle = 0;
	Selected = 1;
	Processing = 2;
	Finish = 3;
}

enum Ogjbgonlhih {
	ChessRogueCellSpecialTypeNone = 0;
	ChessRogueCellSpecialTypeLocked = 1;
	ChessRogueCellSpecialTypeReplicate = 2;
	ChessRogueCellSpecialTypeProtected = 3;
	ChessRogueCellSpecialTypeSeed = 4;
	ChessRogueCellSpecialTypeStamp = 5;
}

enum Ibmlfggingp {
	ChessRogueLevelIdle = 0;
	ChessRogueLevelProcessing = 1;
	ChessRogueLevelPending = 2;
	ChessRogueLevelFinish = 3;
	ChessRogueLevelFailed = 4;
	ChessRogueLevelForceFinish = 5;
}

enum Kfhlbkccaco {
	ChessRogueAccountByNone = 0;
	ChessRogueAccountByNormalFinish = 1;
	ChessRogueAccountByNormalQuit = 2;
	ChessRogueAccountByDialog = 3;
	ChessRogueAccountByFailed = 4;
	ChessRogueAccountByCustomOp = 5;
}

enum Obfdebfdgob {
	ChessRogueBuffSourceTypeNone = 0;
	ChessRogueBuffSourceTypeSelect = 1;
	ChessRogueBuffSourceTypeEnhance = 2;
	ChessRogueBuffSourceTypeMiracle = 3;
	ChessRogueBuffSourceTypeDialogue = 4;
	ChessRogueBuffSourceTypeBonus = 5;
	ChessRogueBuffSourceTypeShop = 6;
	ChessRogueBuffSourceTypeDice = 7;
	ChessRogueBuffSourceTypeAeon = 8;
	ChessRogueBuffSourceTypeMazeSkill = 9;
	ChessRogueBuffSourceTypeLevelMechanism = 10;
}

enum Hfenkddaoff {
	ChessRogueMiracleSourceTypeNone = 0;
	ChessRogueMiracleSourceTypeSelect = 1;
	ChessRogueMiracleSourceTypeDialogue = 2;
	ChessRogueMiracleSourceTypeBonus = 3;
	ChessRogueMiracleSourceTypeUse = 4;
	ChessRogueMiracleSourceTypeReset = 5;
	ChessRogueMiracleSourceTypeReplace = 6;
	ChessRogueMiracleSourceTypeTrade = 7;
	ChessRogueMiracleSourceTypeGet = 8;
	ChessRogueMiracleSourceTypeShop = 9;
	ChessRogueMiracleSourceTypeMazeSkill = 10;
	ChessRogueMiracleSourceTypeLevelMechanism = 11;
}

enum Mmkdkdgfblh {
	ChessRogueUpdateLevelStatusByNone = 0;
	ChessRogueUpdateLevelStatusByDialog = 1;
}

enum Aebjegdpong {
	ChessRogueCellUpdateReasonNone = 0;
	ChessRogueCellUpdateReasonModifier = 1;
}

enum Cbncoeiemfi {
	ChessRogueAeonTypeNone = 0;
	ChessRogueAeonTypeKnight = 1;
	ChessRogueAeonTypeMemory = 2;
	ChessRogueAeonTypeWarlock = 3;
	ChessRogueAeonTypePriest = 4;
	ChessRogueAeonTypeRogue = 5;
	ChessRogueAeonTypeWarrior = 6;
	ChessRogueAeonTypeHappy = 7;
	ChessRogueAeonTypeBreed = 8;
}

enum Lmgjdlookoj {
	ChessRogueDiceSourceTypeNone = 0;
	ChessRogueDiceSourceTypeNormal = 1;
	ChessRogueDiceSourceTypeRepeat = 2;
	ChessRogueDiceSourceTypeCheat = 3;
}

enum Cdoegmdjgoc {
	ChessRogueNousMainStoryStatusNone = 0;
	ChessRogueNousMainStoryStatusUnlock = 1;
	ChessRogueNousMainStoryStatusFinish = 2;
	ChessRogueNousMainStoryStatusCanTrigger = 3;
}

enum Faohejiddhj {
	None = 0;
	PhaseOne = 1;
	PhaseTwo = 2;
}

enum CmdChimeraType {
	None = 0;
	CmdChimeraRoundWorkStartScRsp = 8169;
	CmdChimeraFinishEndlessRoundCsReq = 8170;
	CmdChimeraSetLineupScRsp = 8179;
	CmdChimeraFinishEndlessRoundScRsp = 8171;
	CmdChimeraStartEndlessScRsp = 8174;
	CmdChimeraFinishRoundCsReq = 8162;
	CmdChimeraRoundWorkStartCsReq = 8166;
	CmdChimeraSetLineupCsReq = 8177;
	CmdChimeraDoFinalRoundCsReq = 8164;
	CmdChimeraQuitEndlessScRsp = 8163;
	CmdChimeraGetDataScRsp = 8175;
	CmdChimeraStartEndlessCsReq = 8167;
	CmdChimeraDoFinalRoundScRsp = 8165;
	CmdChimeraGetDataCsReq = 8161;
	CmdChimeraQuitEndlessCsReq = 8180;
	CmdChimeraFinishRoundScRsp = 8172;
}

enum Oapdmkkkeol {
	ChimeraLastPhaseFinishNone = 0;
	ChimeraLastPhaseFinishNormal = 1;
	ChimeraLastPhaseFinishSkip = 2;
	ChimeraLastPhaseFinishForce = 3;
}

enum Biakdfeljfm {
	ChimeraRoundWorkEndNone = 0;
	ChimeraRoundWorkEndSucc = 1;
	ChimeraRoundWorkEndFail = 2;
	ChimeraRoundWorkEndLeave = 3;
}

enum CmdClockParkType {
	None = 0;
	CmdClockParkFinishScriptScNotify = 7220;
	CmdClockParkUseBuffCsReq = 7237;
	CmdClockParkBattleEndScNotify = 7206;
	CmdClockParkHandleWaitOperationCsReq = 7243;
	CmdClockParkGetOngoingScriptInfoCsReq = 7242;
	CmdClockParkQuitScriptCsReq = 7213;
	CmdClockParkGetOngoingScriptInfoScRsp = 7204;
	CmdClockParkGetInfoScRsp = 7221;
	CmdClockParkQuitScriptScRsp = 7232;
	CmdClockParkUnlockTalentCsReq = 7202;
	CmdClockParkStartScriptCsReq = 7228;
	CmdClockParkUseBuffScRsp = 7248;
	CmdClockParkUnlockTalentScRsp = 7201;
	CmdClockParkHandleWaitOperationScRsp = 7218;
	CmdClockParkGetInfoCsReq = 7223;
	CmdClockParkStartScriptScRsp = 7227;
}

enum Egblomhgijm {
	ClockParkPlayNone = 0;
	ClockParkPlayNormalDeath = 1;
	ClockParkPlayNormalPass = 2;
	ClockParkPlayFinishScript = 5;
}

enum MissionStatus {
	MissionNone = 0;
	MissionDoing = 1;
	MissionFinish = 2;
	MissionPrepared = 3;
}

enum Liejljnbjnp {
	MessageSectionNone = 0;
	MessageSectionDoing = 1;
	MessageSectionFinish = 2;
	MessageSectionFrozen = 3;
}

enum Llhaabppapd {
	MessageGroupNone = 0;
	MessageGroupDoing = 1;
	MessageGroupFinish = 2;
	MessageGroupFrozen = 3;
}

enum Pcahopmikim {
	BattleRecordNone = 0;
	BattleRecordChallenge = 1;
	BattleRecordRogue = 2;
}

enum Lipekjfjmnm {
	RebattleTypeNone = 0;
	RebattleTypeRebattleMidway = 1;
	RebattleTypeRebattleLose = 2;
	RebattleTypeRebattleMidwayLineup = 3;
	RebattleTypeRebattleLoseLineup = 4;
	RebattleTypeQuitMidway = 5;
	RebattleTypeQuitLose = 6;
}

enum ContentPackageStatus {
	None = 0;
	Init = 1;
	Doing = 2;
	Finished = 3;
	Release = 4;
}

enum CmdContentPackageType {
	None = 0;
	CmdContentPackageSyncDataScNotify = 7546;
	CmdContentPackageUnlockCsReq = 7530;
	CmdContentPackageGetDataScRsp = 7521;
	CmdContentPackageUnlockScRsp = 7502;
	CmdContentPackageGetDataCsReq = 7523;
	CmdContentPackageTransferScNotify = 7501;
}

enum CmdDailyActiveType {
	None = 0;
	CmdDailyActiveInfoNotify = 3379;
	CmdGetDailyActiveInfoCsReq = 3398;
	CmdGetDailyActiveInfoScRsp = 3353;
	CmdTakeApRewardScRsp = 3305;
	CmdTakeAllApRewardCsReq = 3302;
	CmdTakeAllApRewardScRsp = 3397;
	CmdTakeApRewardCsReq = 3310;
}

enum CmdDebugType {
	None = 0;
	CmdUpdateServerLogSettingsCsReq = 2496;
	CmdGetServerGraphDataCsReq = 2451;
	CmdGetServerLogSettingsCsReq = 2473;
	CmdGetServerGraphSimpleDataScRsp = 2492;
	CmdGetServerLogSettingsScRsp = 2471;
	CmdGetServerGraphDataScRsp = 2478;
	CmdUpdateServerLogSettingsScRsp = 2480;
	CmdServerLogScNotify = 2452;
	CmdGetServerGraphSimpleDataCsReq = 2477;
}

enum ServerLogTag {
	Default = 0;
	Rogue = 1;
	Fate = 2;
	Scene = 3;
	Battle = 4;
	CppGamecore = 5;
	LevelGraph = 6;
	PlanetFes = 7;
	ElfRestaurant = 8;
	Avatar = 9;
}

enum ServerLogLevel {
	None = 0;
	Debug = 1;
	Info = 2;
	Warn = 3;
	Error = 4;
}

enum Ojidjndhdga {
	Ready = 0;
	Suspend = 1;
	Succ = 2;
	Fail = 3;
}

enum Jefkijnieia {
	GraphStateUnknown = 0;
	GraphStateInit = 1;
	GraphStateStart = 2;
	GraphStateFinish = 3;
	GraphStateStop = 4;
	GraphStateNotExist = 5;
}

enum CmdDrinkMakerType {
	None = 0;
	CmdDrinkMakerCheersGetDataCsReq = 6984;
	CmdDrinkMakerChallengeCsReq = 6991;
	CmdDrinkMakerCheersGetDataScRsp = 6985;
	CmdMakeDrinkScRsp = 6999;
	CmdGetDrinkMakerDataScRsp = 6995;
	CmdDrinkMakerChallengeScRsp = 7000;
	CmdDrinkMakerCheersEnterNextGroupCsReq = 6988;
	CmdDrinkMakerCheersMakeDrinkScRsp = 6989;
	CmdEndDrinkMakerSequenceScRsp = 6992;
	CmdMakeMissionDrinkCsReq = 6987;
	CmdDrinkMakerUpdateTipsNotify = 6983;
	CmdGetDrinkMakerDataCsReq = 6981;
	CmdDrinkMakerCheersEnterNextGroupScRsp = 6998;
	CmdDrinkMakerCheersMakeDrinkCsReq = 6986;
	CmdMakeMissionDrinkScRsp = 6994;
	CmdEndDrinkMakerSequenceCsReq = 6982;
	CmdMakeDrinkCsReq = 6997;
	CmdDrinkMakerDayEndScNotify = 6990;
}

enum CmdElfRestaurantType {
	None = 0;
	CmdElfRestaurantSetFarmManagerCsReq = 2579;
	CmdSettleElfRestaurantPlayCsReq = 2590;
	CmdElfRestaurantClientStatusScRsp = 2561;
	CmdElfRestaurantTakeVillagerRewardCsReq = 2564;
	CmdElfRestaurantUpgradeFacilityLevelScRsp = 2598;
	CmdElfRestaurantPlantSeedCsReq = 2592;
	CmdElfRestaurantUpgradeEmployeeLevelCsReq = 2556;
	CmdElfRestaurantBuyShopItemScRsp = 2558;
	CmdEnterElfRestaurantNextDayCsReq = 2596;
	CmdElfRestaurantUpgradeRecipeLevelCsReq = 2570;
	CmdElfRestaurantBuyFieldCsReq = 2578;
	CmdElfRestaurantUpgradeRecipeLevelScRsp = 2559;
	CmdElfRestaurantHarvestCropScRsp = 2568;
	CmdSettleElfRestaurantPlayScRsp = 2557;
	CmdElfRestaurantBuyFieldScRsp = 2577;
	CmdSetElfRestaurantPlayRecipeScRsp = 2574;
	CmdElfRestaurantClientStatusCsReq = 2576;
	CmdElfRestaurantBuyShopItemCsReq = 2562;
	CmdElfRestaurantHarvestCropCsReq = 2593;
	CmdElfRestaurantRecycleSeedScRsp = 2582;
	CmdElfRestaurantFinishTradeOrderScRsp = 2565;
	CmdElfRestaurantUpgradeFacilityLevelCsReq = 2587;
	CmdElfRestaurantFinishTradeOrderCsReq = 2553;
	CmdElfRestaurantRecycleSeedCsReq = 2563;
	CmdElfRestaurantUpgradeEmployeeLevelScRsp = 2600;
	CmdSetElfRestaurantPlayRecipeCsReq = 2597;
	CmdEnterElfRestaurantNextDayScRsp = 2580;
	CmdElfRestaurantTakeVillagerRewardScRsp = 2599;
	CmdGetElfRestaurantDataScRsp = 2571;
	CmdElfRestaurantDataChangeNotify = 2551;
	CmdElfRestaurantPlantSeedScRsp = 2554;
	CmdGetElfRestaurantDataCsReq = 2573;
	CmdElfRestaurantSetFarmManagerScRsp = 2555;
}

enum CmdEraFlipperType {
	None = 0;
	CmdGetEraFlipperDataScRsp = 6551;
	CmdEraFlipperDataChangeScNotify = 6560;
	CmdEnterEraFlipperRegionScRsp = 6565;
	CmdEnterEraFlipperRegionCsReq = 6554;
	CmdChangeEraFlipperDataScRsp = 6557;
	CmdResetEraFlipperDataScRsp = 6574;
	CmdResetEraFlipperDataCsReq = 6562;
	CmdGetEraFlipperDataCsReq = 6556;
	CmdChangeEraFlipperDataCsReq = 6552;
}

enum CmdEvolveBuild {
	None = 0;
	ShopAbilityDownScRsp = 7137;
	LeaveCsReq = 7142;
	SkipTeachLevelScRsp = 7103;
	StartStageCsReq = 7102;
	StartLevelCsReq = 7146;
	ShopAbilityResetCsReq = 7109;
	FinishScNotify = 7143;
	ReRandomStageScRsp = 7113;
	GiveupScRsp = 7127;
	GiveupCsReq = 7128;
	QueryInfoScRsp = 7121;
	QueryInfoCsReq = 7123;
	SkipTeachLevelCsReq = 7108;
	StartStageScRsp = 7101;
	ReRandomStageCsReq = 7118;
	ShopAbilityUpCsReq = 7105;
	StartLevelScRsp = 7130;
	ShopAbilityResetScRsp = 7140;
	LeaveScRsp = 7104;
	CoinNotify = 7107;
	ShopAbilityDownCsReq = 7150;
	ShopAbilityUpScRsp = 7106;
}

enum Oijlbloohjg {
	EvolvePeriodNone = 0;
	EvolvePeriodFirst = 1;
	EvolvePeriodSecond = 2;
	EvolvePeriodThird = 3;
	EvolvePeriodExtra = 4;
}

enum Dlhcmcnihii {
	EvolveBattleResultNone = 0;
	EvolveBattleResultWin = 1;
	EvolveBattleResultAllAvatarDead = 2;
	EvolveBattleResultNoDeadLine = 3;
	EvolveBattleResultQuit = 4;
}

enum Klnipnjcnmj {
	EvolveBuildSeasonNone = 0;
	EvolveBuildEarlyAccess = 1;
	EvolveBuildSecondChapter = 2;
}

enum CmdExpeditionType {
	None = 0;
	CmdTakeMultipleActivityExpeditionRewardScRsp = 2520;
	CmdAcceptActivityExpeditionCsReq = 2504;
	CmdAcceptExpeditionScRsp = 2530;
	CmdAcceptMultipleExpeditionCsReq = 2505;
	CmdGetExpeditionDataCsReq = 2523;
	CmdAcceptMultipleExpeditionScRsp = 2506;
	CmdCancelActivityExpeditionScRsp = 2513;
	CmdCancelExpeditionCsReq = 2502;
	CmdCancelExpeditionScRsp = 2501;
	CmdAcceptActivityExpeditionScRsp = 2543;
	CmdTakeExpeditionRewardScRsp = 2527;
	CmdGetExpeditionDataScRsp = 2521;
	CmdTakeMultipleActivityExpeditionRewardCsReq = 2548;
	CmdTakeMultipleExpeditionRewardCsReq = 2550;
	CmdAcceptExpeditionCsReq = 2546;
	CmdTakeExpeditionRewardCsReq = 2528;
	CmdTakeMultipleExpeditionRewardScRsp = 2537;
	CmdCancelActivityExpeditionCsReq = 2518;
	CmdExpeditionDataChangeScNotify = 2542;
	CmdTakeActivityExpeditionRewardCsReq = 2532;
	CmdTakeActivityExpeditionRewardScRsp = 2529;
}

enum CmdFantasticStoryActivityType {
	None = 0;
	CmdFinishChapterScNotify = 4998;
	CmdGetFantasticStoryActivityDataCsReq = 4910;
	CmdEnterFantasticStoryActivityStageCsReq = 4953;
	CmdGetFantasticStoryActivityDataScRsp = 4905;
	CmdFantasticStoryActivityBattleEndScNotify = 4902;
	CmdEnterFantasticStoryActivityStageScRsp = 4979;
}

enum CmdFateType {
	None = 0;
	CmdFateShopLeaveCsReq = 5956;
	CmdFateBattleStartScRsp = 5951;
	CmdFateBattleStartCsReq = 5952;
	CmdFateChangeLineupScRsp = 5977;
	CmdFateShopRefreshGoodsCsReq = 5963;
	CmdFateQueryCsReq = 5973;
	CmdFateShopLockGoodsCsReq = 5979;
	CmdFateSettleScRsp = 5957;
	CmdFateStartCsReq = 5996;
	CmdFateShopSellBuffScRsp = 5968;
	CmdFateShopLockGoodsScRsp = 5955;
	CmdFateShopRefreshGoodsScRsp = 5982;
	CmdFateTakeExpRewardCsReq = 5958;
	CmdFateShopBuyGoodsScRsp = 5954;
	CmdFateShopLeaveScRsp = 6000;
	CmdFateChangeLineupCsReq = 5978;
	CmdFateDebugAutoPlayCsReq = 5965;
	CmdFateSettleCsReq = 5990;
	CmdFateHandlePendingActionCsReq = 5987;
	CmdFateStartScRsp = 5980;
	CmdFateHandlePendingActionScRsp = 5998;
	CmdFateSettleScNotify = 5962;
	CmdFateShopBuyGoodsCsReq = 5992;
	CmdFateQueryScRsp = 5971;
	CmdFateSyncPendingActionScNotify = 5959;
	CmdFateShopSellBuffCsReq = 5993;
	CmdFateTakeExpRewardScRsp = 5953;
	CmdFateSyncActionResultScNotify = 5970;
	CmdFateDebugAutoPlayFinishScNotify = 5999;
	CmdFateDebugAutoPlayScRsp = 5964;
}

enum Ghhdmemlkpo {
	FateLevelStatusTypeNone = 0;
	FateLevelStatusTypeRoundPrepare = 1;
	FateLevelStatusTypeRoundHougu = 2;
	FateLevelStatusTypeRoundReiju = 3;
	FateLevelStatusTypeRoundShop = 4;
	FateLevelStatusTypeServerInternalCoinEffectSettle = 5;
	FateLevelStatusTypeServerInternalNoncoinEffectSettle = 6;
}

enum Mgpocjfmkpm {
	FateMasterStatusTypeNone = 0;
	FateMasterStatusTypeAlive = 1;
	FateMasterStatusTypeDead = 2;
	FateMasterStatusTypeBanned = 3;
}

enum CmdFeverTimeActivityType {
	None = 0;
	CmdFeverTimeActivityBattleEndScNotify = 7151;
	CmdEnterFeverTimeActivityStageCsReq = 7155;
	CmdEnterFeverTimeActivityStageScRsp = 7160;
	CmdGetFeverTimeActivityDataCsReq = 7152;
	CmdGetFeverTimeActivityDataScRsp = 7156;
}

enum Pmnfdjcllgb {
	FeverTimeBattleRankC = 0;
	FeverTimeBattleRankB = 1;
	FeverTimeBattleRankA = 2;
	FeverTimeBattleRankS = 3;
	FeverTimeBattleRankSs = 4;
}

enum CmdFightType {
	None = 0;
	CmdFightEnterScRsp = 30005;
	CmdFightKickOutScNotify = 30053;
	CmdFightGeneralScRsp = 30041;
	CmdFightSessionStopScNotify = 30097;
	CmdFightEnterCsReq = 30010;
	CmdFightHeartBeatCsReq = 30079;
	CmdFightGeneralCsReq = 30006;
	CmdFightLeaveScNotify = 30098;
	CmdFightHeartBeatScRsp = 30002;
	CmdFightGeneralScNotify = 30055;
}

enum CmdFightActivityType {
	None = 0;
	CmdGetFightActivityDataCsReq = 3610;
	CmdEnterFightActivityStageScRsp = 3679;
	CmdTakeFightActivityRewardScRsp = 3697;
	CmdFightActivityDataChangeScNotify = 3698;
	CmdEnterFightActivityStageCsReq = 3653;
	CmdGetFightActivityDataScRsp = 3605;
	CmdTakeFightActivityRewardCsReq = 3602;
}

enum CmdFightFestType {
	None = 0;
	CmdStartFightFestCsReq = 7296;
	CmdGetFightFestDataScRsp = 7271;
	CmdFightFestScoreUpdateNotify = 7252;
	CmdStartFightFestScRsp = 7280;
	CmdFightFestUnlockSkillNotify = 7251;
	CmdFightFestUpdateChallengeRecordNotify = 7278;
	CmdGetFightFestDataCsReq = 7273;
	CmdFightFestUpdateCoinNotify = 7277;
}

enum Hgdapjpkffb {
	FightFestBattleRankC = 0;
	FightFestBattleRankB = 1;
	FightFestBattleRankA = 2;
	FightFestBattleRankS = 3;
	FightFestBattleRankSs = 4;
}

enum Aploagdibki {
	FightFestTypeNone = 0;
	FightFestTypeMain = 1;
	FightFestTypeScore = 2;
	FightFestTypeChallenge = 3;
	FightFestTypeTeach = 4;
}

enum CmdFightMarbleType {
	None = 0;
}

enum Mjbikbcpkai {
	FightMarbleEventTypeNone = 0;
	FightMarbleEventTypePlayerEnd = 1;
	FightMarbleEventTypeGameEnd = 2;
}

enum Jomkpegefmp {
	MarbleTeamTypeNone = 0;
	MarbleTeamTypeTeamA = 1;
	MarbleTeamTypeTeamB = 2;
}

enum Eeibhjpnjcf {
	MarblePlayerStateDefault = 0;
	MarblePlayerStateLeave = 1;
	MarblePlayerStateKickOut = 2;
}

enum Impkpkamiaf {
	MarbleSyncTypeNone = 0;
	MarbleSyncTypeLoading = 1;
	MarbleSyncTypePerformance = 2;
	MarbleSyncTypeRoundStart = 3;
	MarbleSyncTypeRoundEnd = 4;
	MarbleSyncTypeSwitchRound = 6;
	MarbleSyncTypeUseTech = 7;
	MarbleSyncTypeSimulateStart = 8;
	MarbleSyncTypeEmoji = 9;
	MarbleSyncTypeAchievement = 10;
}

enum Pajnhiagodd {
	MarbleFrameTypeNone = 0;
	MarbleFrameTypeActionStart = 1;
	MarbleFrameTypeActionEnd = 2;
	MarbleFrameTypeRoundStart = 3;
	MarbleFrameTypeRoundEnd = 4;
	MarbleFrameTypeRevive = 5;
	MarbleFrameTypeHpChange = 6;
	MarbleFrameTypeLaunch = 7;
	MarbleFrameTypeStop = 8;
	MarbleFrameTypeCollide = 9;
	MarbleFrameTypeEffect = 10;
	MarbleFrameTypeBuffText = 11;
	MarbleFrameTypeSkillUi = 12;
	MarbleFrameTypeAbsorb = 13;
	MarbleFrameTypeOnOffField = 14;
	MarbleFrameTypeDead = 15;
	MarbleFrameTypeUseTech = 16;
	MarbleFrameTypeTechActive = 17;
	MarbleFrameTypeGhostFire = 18;
	MarbleFrameTypeTrigger = 19;
	MarbleFrameTypeSwallow = 20;
	MarbleFrameTypeRadius = 21;
	MarbleFrameTypeHideLine = 22;
	MarbleFrameTypeTeamScore = 23;
	MarbleFrameTypeEmojiPackage = 24;
	MarbleFrameTypeChangeSpeed = 25;
	MarbleFrameTypeAddShield = 26;
}

enum Lkkajcaciji {
	MarbleFactionTypeNone = 0;
	MarbleFactionTypeAll = 1;
	MarbleFactionTypeEnemy = 2;
	MarbleFactionTypeAlly = 3;
	MarbleFactionTypeField = 4;
}

enum Fippklcoegj {
	MarbleHpChangeTypeNone = 0;
	MarbleHpChangeTypeCritical = 1;
	MarbleHpChangeTypeSpine = 2;
}

enum Ppiffkjejja {
	MarbleGamePhaseNone = 0;
	MarbleGamePhaseReady = 1;
	MarbleGamePhaseDelay = 2;
	MarbleGamePhaseLoading = 3;
	MarbleGamePhaseLoadFinish = 4;
	MarbleGamePhasePerformance = 5;
	MarbleGamePhasePerformanceFinish = 6;
	MarbleGamePhaseRoundA = 7;
	MarbleGamePhaseRoundB = 8;
	MarbleGamePhaseSimulate = 9;
	MarbleGamePhaseSimulateFinish = 10;
	MarbleGamePhaseTech = 11;
	MarbleGamePhaseTechUi = 12;
	MarbleGamePhaseTechFinish = 13;
	MarbleGamePhaseFinish = 14;
	MarbleGamePhasePreRound = 15;
}

enum CmdFightMathc3Type {
	None = 0;
	CmdFightMatch3SoloAnimEndScRsp = 30194;
	CmdFightMatch3SoloPreTurnEndCsReq = 30190;
	CmdFightMatch3SwapScRsp = 30197;
	CmdFightMatch3StartCountDownScNotify = 30198;
	CmdFightMatch3UseItemScRsp = 30126;
	CmdFightMatch3ChatScNotify = 30107;
	CmdFightMatch3DataScRsp = 30105;
	CmdFightMatch3SoloPreTurnEndScRsp = 30154;
	CmdFightMatch3SoloDataCsReq = 30163;
	CmdFightMatch3SoloDataScRsp = 30167;
	CmdFightMatch3ChatScRsp = 30155;
	CmdFightMatch3SoloUseItemNotify = 30174;
	CmdFightMatch3SwapCsReq = 30102;
	CmdFightMatch3ChatCsReq = 30141;
	CmdFightMatch3TurnEndScNotify = 30179;
	CmdFightMatch3OpponentDataScNotify = 30106;
	CmdFightMatch3SoloSwapNotify = 30178;
	CmdFightMatch3SoloDataUpdateNotify = 30136;
	CmdFightMatch3DataCsReq = 30110;
	CmdFightMatch3TurnStartScNotify = 30153;
	CmdFightMatch3UseItemCsReq = 30116;
	CmdFightMatch3ForceUpdateNotify = 30139;
	CmdFightMatch3SoloAnimEndCsReq = 30172;
}

enum Dgfcbofaoia {
	Match3StateIdle = 0;
	Match3StateStart = 1;
	Match3StateMatch = 2;
	Match3StateGame = 3;
	Match3StateHalftime = 4;
	Match3StateOver = 5;
}

enum Nppnfppenmc {
	Match3PlayerStateAlive = 0;
	Match3PlayerStateDying = 1;
	Match3PlayerStateDead = 2;
	Match3PlayerStateLeave = 3;
}

enum Bfilliobmfn {
	EventBegin = 0;
	EventBreak = 1;
	EventFall = 2;
	EventRefresh = 3;
	EventBirdSkill = 4;
	EventShuffle = 5;
}

enum Kjjldimbgmm {
	Match3SoloStateIdle = 0;
	Match3SoloStateStart = 1;
	Match3SoloStateGame = 2;
	Match3SoloStateAnim = 3;
	Match3SoloStateOver = 4;
	Match3SoloStateDel = 5;
}

enum Nlaamogoobe {
	Match3BattleOpTypeNone = 0;
	Match3BattleOpTypeSwap = 1;
	Match3BattleOpTypeUseItem = 2;
}

enum Ganmcijcoki {
	Match3BattleBuffTypeNone = 0;
	Match3BattleBuffTypeDetonateBombRecur = 1;
	Match3BattleBuffTypeActivization = 2;
	Match3BattleBuffTypeScoreBonus = 3;
}

enum Abbdjbmiibe {
	Match3SoloUpdateReasonDefault = 0;
	Match3SoloUpdateReasonTurnStart = 1;
	Match3SoloUpdateReasonTurnEnd = 2;
	Match3SoloUpdateReasonGameStart = 3;
	Match3SoloUpdateReasonGameEnd = 4;
	Match3SoloUpdateReasonGm = 5;
}

enum CmdFriendType {
	None = 0;
	CmdSetAssistScRsp = 2901;
	CmdDeleteFriendCsReq = 2916;
	CmdApplyFriendCsReq = 2997;
	CmdSetForbidOtherApplyFriendScRsp = 2985;
	CmdCurAssistChangedNotify = 2966;
	CmdGetFriendApplyListInfoScRsp = 2902;
	CmdGetFriendRecommendLineupCsReq = 2923;
	CmdGetCurAssistScRsp = 2925;
	CmdHandleFriendScRsp = 2907;
	CmdSyncAddBlacklistScNotify = 2994;
	CmdGetAssistListCsReq = 2924;
	CmdGetFriendDevelopmentInfoCsReq = 2912;
	CmdGetFriendChallengeLineupScRsp = 2983;
	CmdTakeAssistRewardScRsp = 2960;
	CmdGetFriendAssistListScRsp = 2958;
	CmdSearchPlayerScRsp = 2992;
	CmdDeleteFriendScRsp = 2926;
	CmdSyncHandleFriendScNotify = 2939;
	CmdGetFriendBattleRecordDetailCsReq = 2904;
	CmdDeleteBlacklistCsReq = 2909;
	CmdSyncDeleteFriendScNotify = 2963;
	CmdAddBlacklistCsReq = 2967;
	CmdGetFriendRecommendLineupDetailCsReq = 2995;
	CmdHandleFriendCsReq = 2955;
	CmdGetFriendBattleRecordDetailScRsp = 2986;
	CmdGetFriendDevelopmentInfoScRsp = 2964;
	CmdGetFriendLoginInfoScRsp = 2913;
	CmdGetFriendRecommendLineupScRsp = 2914;
	CmdGetPlatformPlayerInfoCsReq = 2928;
	CmdGetAssistListScRsp = 2973;
	CmdGetFriendRecommendLineupDetailScRsp = 2918;
	CmdSetFriendMarkCsReq = 2929;
	CmdSetAssistCsReq = 2942;
	CmdGetFriendChallengeDetailCsReq = 2903;
	CmdSearchPlayerCsReq = 2969;
	CmdGetAssistHistoryCsReq = 2935;
	CmdReportPlayerCsReq = 2954;
	CmdGetCurAssistCsReq = 2951;
	CmdGetPlayerDetailInfoScRsp = 2953;
	CmdSetForbidOtherApplyFriendCsReq = 2946;
	CmdTakeAssistRewardCsReq = 2915;
	CmdGetFriendApplyListInfoCsReq = 2979;
	CmdSetFriendRemarkNameCsReq = 2974;
	CmdApplyFriendScRsp = 2906;
	CmdGetFriendChallengeLineupCsReq = 2982;
	CmdGetFriendLoginInfoCsReq = 2908;
	CmdReportPlayerScRsp = 2962;
	CmdGetPlayerDetailInfoCsReq = 2998;
	CmdGetFriendAssistListCsReq = 2945;
	CmdGetFriendChallengeDetailScRsp = 2957;
	CmdGetFriendRecommendListInfoScRsp = 2978;
	CmdSyncApplyFriendScNotify = 2941;
	CmdSetFriendRemarkNameScRsp = 2990;
	CmdGetFriendListInfoScRsp = 2905;
	CmdGetFriendListInfoCsReq = 2910;
	CmdNewAssistHistoryNotify = 2988;
	CmdAddBlacklistScRsp = 2972;
	CmdGetPlatformPlayerInfoScRsp = 2989;
	CmdSetFriendMarkScRsp = 2971;
	CmdGetFriendRecommendListInfoCsReq = 2936;
	CmdDeleteBlacklistScRsp = 2920;
	CmdGetAssistHistoryScRsp = 2937;
}

enum FriendOnlineStatus {
	Offline = 0;
	Online = 1;
}

enum FriendApplySource {
	None = 0;
	Search = 1;
	Recommend = 2;
	Assist = 3;
	RecommendAssist = 4;
	PsnFriend = 5;
	AssistReward = 6;
}

enum CmdGachaType {
	None = 0;
	CmdDoGachaCsReq = 1998;
	CmdGetGachaCeilingCsReq = 1979;
	CmdGetGachaCeilingScRsp = 1902;
	CmdExchangeGachaCeilingScRsp = 1906;
	CmdExchangeGachaCeilingCsReq = 1997;
	CmdSetGachaDecideItemCsReq = 1941;
	CmdGachaDecideItemChangeScNotify = 1907;
	CmdGetGachaInfoScRsp = 1905;
	CmdSetGachaDecideItemScRsp = 1955;
	CmdGetGachaInfoCsReq = 1910;
	CmdDoGachaScRsp = 1953;
}

enum CmdHeartdialType {
	None = 0;
	CmdSubmitEmotionItemScRsp = 6302;
	CmdGetHeartDialInfoCsReq = 6310;
	CmdFinishEmotionDialoguePerformanceScRsp = 6306;
	CmdChangeScriptEmotionCsReq = 6398;
	CmdFinishEmotionDialoguePerformanceCsReq = 6397;
	CmdSubmitEmotionItemCsReq = 6379;
	CmdChangeScriptEmotionScRsp = 6353;
	CmdHeartDialTraceScriptScRsp = 6307;
	CmdHeartDialScriptChangeScNotify = 6341;
	CmdGetHeartDialInfoScRsp = 6305;
	CmdHeartDialTraceScriptCsReq = 6355;
}

enum Bfdflhekfgk {
	HeartDialEmotionTypePeace = 0;
	HeartDialEmotionTypeAnger = 1;
	HeartDialEmotionTypeHappy = 2;
	HeartDialEmotionTypeSad = 3;
}

enum Afefbpablhm {
	HeartDialStepTypeMissing = 0;
	HeartDialStepTypeFull = 1;
	HeartDialStepTypeLock = 2;
	HeartDialStepTypeUnlock = 3;
	HeartDialStepTypeNormal = 4;
	HeartDialStepTypeControl = 5;
}

enum Ooehgmemkoi {
	HeartDialUnlockStatusLock = 0;
	HeartDialUnlockStatusUnlockSingle = 1;
	HeartDialUnlockStatusUnlockAll = 2;
}

enum CmdHeliobusType {
	None = 0;
	CmdHeliobusSnsCommentCsReq = 5841;
	CmdHeliobusSnsReadScRsp = 5853;
	CmdHeliobusSelectSkillScRsp = 5872;
	CmdHeliobusStartRaidScRsp = 5854;
	CmdHeliobusSnsPostCsReq = 5879;
	CmdHeliobusInfoChangedScNotify = 5839;
	CmdHeliobusEnterBattleScRsp = 5874;
	CmdHeliobusEnterBattleCsReq = 5878;
	CmdHeliobusLineupUpdateScNotify = 5809;
	CmdHeliobusSelectSkillCsReq = 5867;
	CmdHeliobusStartRaidCsReq = 5890;
	CmdHeliobusSnsLikeScRsp = 5806;
	CmdHeliobusUpgradeLevelCsReq = 5816;
	CmdHeliobusSnsLikeCsReq = 5897;
	CmdHeliobusChallengeUpdateScNotify = 5862;
	CmdHeliobusUpgradeLevelScRsp = 5826;
	CmdHeliobusSnsUpdateScNotify = 5807;
	CmdHeliobusSnsCommentScRsp = 5855;
	CmdHeliobusActivityDataCsReq = 5810;
	CmdHeliobusSnsPostScRsp = 5802;
	CmdHeliobusSnsReadCsReq = 5898;
	CmdHeliobusActivityDataScRsp = 5805;
	CmdHeliobusUnlockSkillScNotify = 5863;
}

enum CmdItemType {
	None = 0;
	CmdComposeLimitNumUpdateNotify = 573;
	CmdDestroyItemCsReq = 542;
	CmdRelicReforgeScRsp = 514;
	CmdSellItemScRsp = 578;
	CmdPromoteEquipmentCsReq = 598;
	CmdRankUpEquipmentScRsp = 555;
	CmdComposeSelectedRelicCsReq = 562;
	CmdSyncTurnFoodNotify = 515;
	CmdAddRelicFilterPlanCsReq = 558;
	CmdLockRelicCsReq = 572;
	CmdPromoteEquipmentScRsp = 553;
	CmdGetBagCsReq = 510;
	CmdDiscardRelicCsReq = 589;
	CmdLockRelicScRsp = 594;
	CmdRankUpEquipmentCsReq = 541;
	CmdMarkRelicFilterPlanCsReq = 586;
	CmdMarkItemCsReq = 535;
	CmdGetRelicFilterPlanCsReq = 571;
	CmdGeneralVirtualItemDataNotify = 528;
	CmdExpUpRelicScRsp = 567;
	CmdGetRecyleTimeCsReq = 569;
	CmdBatchRankUpEquipmentScRsp = 596;
	CmdComposeItemCsReq = 516;
	CmdSetTurnFoodSwitchCsReq = 560;
	CmdAddEquipmentScNotify = 520;
	CmdGetMarkItemListScRsp = 525;
	CmdExchangeHcoinScRsp = 554;
	CmdUseItemScRsp = 506;
	CmdDiscardRelicScRsp = 508;
	CmdModifyRelicFilterPlanCsReq = 583;
	CmdDeleteRelicFilterPlanScRsp = 504;
	CmdModifyRelicFilterPlanScRsp = 503;
	CmdExpUpEquipmentCsReq = 507;
	CmdBatchRankUpEquipmentCsReq = 549;
	CmdRelicReforgeConfirmCsReq = 595;
	CmdSetTurnFoodSwitchScRsp = 566;
	CmdExchangeHcoinCsReq = 590;
	CmdDeleteRelicFilterPlanCsReq = 557;
	CmdCancelMarkItemNotify = 588;
	CmdComposeItemScRsp = 526;
	CmdRelicReforgeCsReq = 523;
	CmdRelicReforgeConfirmScRsp = 518;
	CmdComposeLimitNumCompleteNotify = 524;
	CmdMarkItemScRsp = 537;
	CmdExpUpEquipmentScRsp = 539;
	CmdGetBagScRsp = 505;
	CmdAddRelicFilterPlanScRsp = 582;
	CmdRelicFilterPlanClearNameScNotify = 564;
	CmdRechargeSuccNotify = 574;
	CmdUseItemCsReq = 597;
	CmdComposeSelectedRelicScRsp = 509;
	CmdLockEquipmentCsReq = 579;
	CmdExpUpRelicCsReq = 563;
	CmdDestroyItemScRsp = 501;
	CmdGetMarkItemListCsReq = 551;
	CmdGetRelicFilterPlanScRsp = 545;
	CmdGetRecyleTimeScRsp = 592;
	CmdLockEquipmentScRsp = 502;
	CmdMarkRelicFilterPlanScRsp = 512;
	CmdSellItemCsReq = 536;
}

enum Icpineholml {
	RelicDiscardTypeSingle = 0;
	RelicDiscardTypeBatch = 1;
	RelicDiscardTypeSmart = 2;
}

enum TurnFoodSwitch {
	None = 0;
	Attack = 1;
	Define = 2;
}

enum CmdJukeboxType {
	None = 0;
	CmdTrialBackGroundMusicScRsp = 3106;
	CmdTrialBackGroundMusicCsReq = 3197;
	CmdUnlockBackGroundMusicCsReq = 3179;
	CmdPlayBackGroundMusicScRsp = 3153;
	CmdPlayBackGroundMusicCsReq = 3198;
	CmdUnlockBackGroundMusicScRsp = 3102;
	CmdGetJukeboxDataCsReq = 3110;
	CmdGetJukeboxDataScRsp = 3105;
}

enum CmdLineupType {
	None = 0;
	CmdGetAllLineupDataCsReq = 778;
	CmdGetStageLineupScRsp = 705;
	CmdChangeLineupLeaderCsReq = 726;
	CmdSwapLineupCsReq = 741;
	CmdSwitchLineupIndexCsReq = 767;
	CmdReplaceLineupCsReq = 754;
	CmdSetLineupNameScRsp = 736;
	CmdQuitLineupCsReq = 797;
	CmdGetLineupAvatarDataCsReq = 739;
	CmdSwapLineupScRsp = 755;
	CmdGetCurLineupDataScRsp = 753;
	CmdSetLineupNameCsReq = 794;
	CmdChangeLineupLeaderScRsp = 763;
	CmdSwitchLineupIndexScRsp = 772;
	CmdVirtualLineupTrialAvatarChangeScNotify = 720;
	CmdGetLineupAvatarDataScRsp = 716;
	CmdJoinLineupCsReq = 779;
	CmdQuitLineupScRsp = 706;
	CmdGetAllLineupDataScRsp = 774;
	CmdExtraLineupDestroyNotify = 709;
	CmdGetStageLineupCsReq = 710;
	CmdSyncLineupNotify = 707;
	CmdJoinLineupScRsp = 702;
	CmdGetCurLineupDataCsReq = 798;
	CmdVirtualLineupDestroyNotify = 790;
	CmdReplaceLineupScRsp = 762;
}

enum Pbpahlpfnda {
	LineupTypeNone = 0;
	LineupTypePreset = 1;
	LineupTypeVirtual = 2;
	LineupTypeExtra = 3;
	LineupTypeStoryLine = 4;
}

enum ExtraLineupType {
	LineupNone = 0;
	LineupChallenge = 1;
	LineupRogue = 2;
	LineupChallenge2 = 3;
	LineupChallenge3 = 4;
	LineupRogueChallenge = 5;
	LineupStageTrial = 6;
	LineupRogueTrial = 7;
	LineupActivity = 8;
	LineupBoxingClub = 9;
	LineupTreasureDungeon = 11;
	LineupChessRogue = 12;
	LineupHeliobus = 13;
	LineupTournRogue = 14;
	LineupRelicRogue = 15;
	LineupArcadeRogue = 16;
	LineupMagicRogue = 17;
	LineupFate = 18;
}

enum SyncReason {
	None = 0;
	MpAdd = 1;
	MpAddPropHit = 2;
	HpAdd = 3;
	HpAddPropHit = 4;
	MpMaxChangedPermanent = 5;
	MpMaxChangedByModifier = 6;
}

enum CmdLobbyType {
	None = 0;
	CmdLobbyInviteScRsp = 7363;
	CmdLobbyStartFightCsReq = 7352;
	CmdLobbyInviteCsReq = 7368;
	CmdLobbyModifyPlayerInfoScRsp = 7377;
	CmdLobbySyncInfoScNotify = 7393;
	CmdLobbyInviteScNotify = 7355;
	CmdLobbyKickOutCsReq = 7392;
	CmdLobbyInteractScRsp = 7398;
	CmdLobbyJoinCsReq = 7396;
	CmdLobbyGetInfoCsReq = 7356;
	CmdLobbyQuitCsReq = 7382;
	CmdLobbyModifyPlayerInfoCsReq = 7378;
	CmdLobbyCreateCsReq = 7373;
	CmdLobbyJoinScRsp = 7380;
	CmdLobbyInteractCsReq = 7387;
	CmdLobbyQuitScRsp = 7379;
	CmdLobbyKickOutScRsp = 7354;
	CmdLobbyGetInfoScRsp = 7400;
	CmdLobbyCreateScRsp = 7371;
	CmdLobbyStartFightScRsp = 7351;
	CmdLobbyInteractScNotify = 7370;
}

enum CmdMailType {
	None = 0;
	CmdGetMailCsReq = 810;
	CmdDelMailCsReq = 879;
	CmdMarkReadMailCsReq = 898;
	CmdTakeMailAttachmentScRsp = 806;
	CmdTakeMailAttachmentCsReq = 897;
	CmdNewMailScNotify = 841;
	CmdMarkReadMailScRsp = 853;
	CmdGetMailScRsp = 805;
	CmdDelMailScRsp = 802;
}

enum MailType {
	Normal = 0;
	Star = 1;
}

enum CmdMapRotationType {
	None = 0;
	CmdLeaveMapRotationRegionScNotify = 6863;
	CmdInteractChargerCsReq = 6898;
	CmdResetMapRotationRegionScRsp = 6826;
	CmdEnterMapRotationRegionScRsp = 6805;
	CmdUpdateRotaterScNotify = 6878;
	CmdRemoveRotaterCsReq = 6894;
	CmdInteractChargerScRsp = 6853;
	CmdGetMapRotationDataCsReq = 6807;
	CmdLeaveMapRotationRegionCsReq = 6841;
	CmdEnterMapRotationRegionCsReq = 6810;
	CmdGetMapRotationDataScRsp = 6839;
	CmdUpdateMapRotationDataScNotify = 6872;
	CmdRotateMapCsReq = 6897;
	CmdUpdateEnergyScNotify = 6867;
	CmdDeployRotaterCsReq = 6879;
	CmdLeaveMapRotationRegionScRsp = 6855;
	CmdDeployRotaterScRsp = 6802;
	CmdResetMapRotationRegionCsReq = 6816;
	CmdRotateMapScRsp = 6806;
	CmdRemoveRotaterScRsp = 6836;
}

enum CmdMarbleType {
	None = 0;
	CmdMarbleGetDataScRsp = 8285;
	CmdMarbleLevelFinishCsReq = 8287;
	CmdMarbleUpdateShownSealCsReq = 8280;
	CmdMarbleUpdateShownSealScRsp = 8281;
	CmdMarbleLevelFinishScRsp = 8289;
	CmdMarbleShopBuyCsReq = 8272;
	CmdMarbleUnlockSealScNotify = 8277;
	CmdMarbleShopBuyScRsp = 8282;
	CmdMarbleGetDataCsReq = 8271;
	CmdMarblePvpDataUpdateScNotify = 8284;
}

enum CmdMarkChestType {
	None = 0;
	CmdGetMarkChestCsReq = 8181;
	CmdMarkChestChangedScNotify = 8182;
	CmdGetMarkChestScRsp = 8195;
	CmdUpdateMarkChestCsReq = 8197;
	CmdUpdateMarkChestScRsp = 8199;
}

enum CmdMatchType {
	None = 0;
	CmdStartMatchScRsp = 7321;
	CmdCancelMatchCsReq = 7346;
	CmdGetCrossInfoScRsp = 7328;
	CmdStartMatchCsReq = 7323;
	CmdMatchResultScNotify = 7302;
	CmdCancelMatchScRsp = 7330;
	CmdGetCrossInfoCsReq = 7301;
}

enum CmdMatchThreeModuleType {
	None = 0;
	CmdMatchThreeV2GetDataCsReq = 7427;
	CmdMatchThreeLevelEndCsReq = 7446;
	CmdMatchThreeGetDataCsReq = 7423;
	CmdMatchThreeV2LevelEndCsReq = 7418;
	CmdMatchThreeSyncDataScNotify = 7402;
	CmdMatchThreeGetDataScRsp = 7421;
	CmdMatchThreeV2BattleItemLevelUpScRsp = 7443;
	CmdMatchThreeV2LevelEndScRsp = 7413;
	CmdMatchThreeV2GetDataScRsp = 7442;
	CmdMatchThreeLevelEndScRsp = 7430;
	CmdMatchThreeV2BattleItemLevelUpCsReq = 7404;
	CmdMatchThreeSetBirdPosScRsp = 7428;
	CmdMatchThreeV2ScNotify = 7405;
	CmdMatchThreeSetBirdPosCsReq = 7401;
	CmdMatchThreeV2PvpFinishScNotify = 7406;
	CmdMatchThreeV2SetBirdPosScRsp = 7429;
	CmdMatchThreeV2SetBirdPosCsReq = 7432;
}

enum Ajddhbhmoof {
	MatchThreeStatisticsNone = 0;
	MatchThreeStatisticsFirst = 1;
	MatchThreeStatisticsSecond = 2;
	MatchThreeStatisticsThird = 3;
	MatchThreeStatisticsFruit = 4;
	MatchThreeStatisticsSkill = 5;
	MatchThreeStatisticsDefeat = 6;
	MatchThreeStatisticsBomb = 7;
	MatchThreeStatisticsDamage = 8;
	MatchThreeStatisticsEnergy = 9;
	MatchThreeStatisticsSwapBomb = 10;
	MatchThreeStatisticsUseItem = 11;
	MatchThreeStatisticsSoloMaxStep = 12;
	MatchThreeStatisticsSoloScore = 13;
}

enum CmdMessageType {
	None = 0;
	CmdFinishSectionIdScRsp = 2706;
	CmdGetNpcStatusScRsp = 2753;
	CmdGetMissionMessageInfoCsReq = 2707;
	CmdGetMissionMessageInfoScRsp = 2739;
	CmdGetNpcMessageGroupScRsp = 2705;
	CmdFinishPerformSectionIdScRsp = 2755;
	CmdGetNpcMessageGroupCsReq = 2710;
	CmdGetNpcStatusCsReq = 2798;
	CmdFinishSectionIdCsReq = 2797;
	CmdFinishItemIdCsReq = 2779;
	CmdFinishItemIdScRsp = 2702;
	CmdFinishPerformSectionIdCsReq = 2741;
}

enum CmdMiscModuleType {
	None = 0;
	CmdSubmitOrigamiItemScRsp = 4167;
	CmdTakePictureCsReq = 4179;
	CmdGetMovieRacingDataScRsp = 4190;
	CmdSubmitOrigamiItemCsReq = 4163;
	CmdUpdateMovieRacingDataScRsp = 4162;
	CmdShareCsReq = 4110;
	CmdUpdateGunPlayDataCsReq = 4169;
	CmdShareScRsp = 4105;
	CmdMazeKillDirectCsReq = 4151;
	CmdCancelCacheNotifyCsReq = 4141;
	CmdDifficultyAdjustmentUpdateDataScRsp = 4101;
	CmdDifficultyAdjustmentGetDataCsReq = 4124;
	CmdGetOrigamiPropInfoCsReq = 4172;
	CmdDirectDeliveryScNotify = 4135;
	CmdSecurityReportScRsp = 4139;
	CmdCancelDirectDeliveryNoticeScRsp = 4188;
	CmdCancelCacheNotifyScRsp = 4155;
	CmdTakePictureScRsp = 4102;
	CmdGetOrigamiPropInfoScRsp = 4194;
	CmdGetGunPlayDataCsReq = 4109;
	CmdGetMovieRacingDataCsReq = 4174;
	CmdDifficultyAdjustmentGetDataScRsp = 4173;
	CmdUpdateGunPlayDataScRsp = 4192;
	CmdMazeKillDirectScRsp = 4125;
	CmdTriggerVoiceScRsp = 4126;
	CmdCancelDirectDeliveryNoticeCsReq = 4137;
	CmdGetShareDataScRsp = 4153;
	CmdGetShareDataCsReq = 4198;
	CmdGetGunPlayDataScRsp = 4120;
	CmdUpdateMovieRacingDataCsReq = 4154;
	CmdSecurityReportCsReq = 4107;
	CmdDifficultyAdjustmentUpdateDataCsReq = 4142;
	CmdTriggerVoiceCsReq = 4116;
}

enum Mgaefjjdmom {
	CacheNotifyTypeNone = 0;
	CacheNotifyTypeRecycle = 1;
	CacheNotifyTypeRecharge = 2;
	CacheNotifyTypeItemAutoTransfer = 3;
}

enum Dcadlnjbkbk {
	MovieRacingOverTake = 0;
	MovieRacingOverTakeEndless = 1;
	MovieRacingShooting = 2;
	MovieRacingShootingEndless = 3;
}

enum Fjhikfikamo {
	DifficultyAjustmentTypeDefault = 0;
	DifficultyAjustmentTypeEasy = 1;
}

enum Giilenmkcah {
	DifficultyAjustmentSourceNone = 0;
	DifficultyAjustmentSourceRaid = 1;
	DifficultyAjustmentSourceEvent = 2;
}

enum Mnijhmepgnn {
	MazeKillSourceNone = 0;
	MazeKillSourceSwitchHand = 1;
	MazeKillSourceTimeLine = 2;
}

enum CmdMissionType {
	None = 0;
	CmdUpdateMainMissionCustomValueCsReq = 1266;
	CmdGetMissionDataCsReq = 1210;
	CmdMissionAcceptScNotify = 1235;
	CmdFinishTalkMissionCsReq = 1298;
	CmdFinishCosumeItemMissionCsReq = 1216;
	CmdAcceptMainMissionCsReq = 1242;
	CmdUpdateTrackMainMissionIdCsReq = 1288;
	CmdSyncTaskScRsp = 1297;
	CmdFinishedMissionScNotify = 1260;
	CmdUpdateTrackMainMissionIdScRsp = 1215;
	CmdMissionGroupWarnScNotify = 1239;
	CmdAcceptMainMissionScRsp = 1201;
	CmdSyncTaskCsReq = 1202;
	CmdStartFinishSubMissionScNotify = 1224;
	CmdGetMissionStatusScRsp = 1274;
	CmdGetMissionDataScRsp = 1205;
	CmdGetMainMissionCustomValueCsReq = 1251;
	CmdFinishTalkMissionScRsp = 1253;
	CmdMissionRewardScNotify = 1279;
	CmdSubMissionRewardScNotify = 1220;
	CmdUpdateMainMissionCustomValueScRsp = 1228;
	CmdStartFinishMainMissionScNotify = 1273;
	CmdFinishCosumeItemMissionScRsp = 1226;
	CmdTeleportToMissionResetPointScRsp = 1292;
	CmdGetMissionStatusCsReq = 1278;
	CmdTeleportToMissionResetPointCsReq = 1269;
	CmdGetMainMissionCustomValueScRsp = 1225;
}

enum Iebnpbjdfgp {
	MissionSyncRecordNone = 0;
	MissionSyncRecordMainMissionAccept = 1;
	MissionSyncRecordMainMissionStart = 2;
	MissionSyncRecordMainMissionFinish = 3;
	MissionSyncRecordMainMissionDelete = 4;
	MissionSyncRecordMissionAccept = 11;
	MissionSyncRecordMissionStart = 12;
	MissionSyncRecordMissionFinish = 13;
	MissionSyncRecordMissionDelete = 14;
	MissionSyncRecordMissionProgress = 15;
}

enum Gjpkmnefcfo {
	MainMissionSyncNone = 0;
	MainMissionSyncMcv = 1;
}

enum Nnfdmniijgo {
	TrackMainMissionUpdateNone = 0;
	TrackMainMissionUpdateAuto = 1;
	TrackMainMissionUpdateManual = 2;
	TrackMainMissionUpdateLoginReport = 3;
}

enum CmdMonopolyType {
	None = 0;
	CmdMonopolyGuessChooseCsReq = 7066;
	CmdMonopolyEventLoadUpdateScNotify = 7076;
	CmdMonopolyConditionUpdateScNotify = 7065;
	CmdMonopolyMoveScRsp = 7041;
	CmdMonopolyConfirmRandomCsReq = 7036;
	CmdMonopolyGameRaiseRatioScRsp = 7042;
	CmdMonopolySelectOptionScRsp = 7007;
	CmdMonopolyCheatDiceScRsp = 7092;
	CmdDailyFirstEnterMonopolyActivityCsReq = 7016;
	CmdMonopolyGetRafflePoolInfoScRsp = 7011;
	CmdMonopolyGuessDrawScNotify = 7013;
	CmdMonopolySttUpdateScNotify = 7075;
	CmdMonopolyAcceptQuizScRsp = 7015;
	CmdMonopolyLikeCsReq = 7003;
	CmdMonopolyGiveUpCurContentCsReq = 7009;
	CmdGetMbtiReportCsReq = 7086;
	CmdGetMbtiReportScRsp = 7012;
	CmdGetMonopolyFriendRankingListScRsp = 7083;
	CmdMonopolyRollRandomScRsp = 7067;
	CmdMonopolyBuyGoodsCsReq = 7074;
	CmdMonopolyGetRafflePoolInfoCsReq = 7030;
	CmdMonopolyGetRegionProgressScRsp = 7080;
	CmdGetMonopolyInfoCsReq = 7010;
	CmdMonopolyAcceptQuizCsReq = 7088;
	CmdDeleteSocialEventServerCacheCsReq = 7049;
	CmdMonopolySocialEventEffectScNotify = 7014;
	CmdMonopolyUpgradeAssetCsReq = 7054;
	CmdMonopolyActionResultScNotify = 7098;
	CmdMonopolyConfirmRandomScRsp = 7078;
	CmdMonopolyRollRandomCsReq = 7063;
	CmdMonopolyGetDailyInitItemCsReq = 7100;
	CmdMonopolyDailySettleScNotify = 7058;
	CmdMonopolyTakePhaseRewardCsReq = 7059;
	CmdMonopolyGameBingoFlipCardScRsp = 7037;
	CmdMonopolySelectOptionCsReq = 7055;
	CmdMonopolyTakeRaffleTicketRewardScRsp = 7048;
	CmdMonopolyRollDiceCsReq = 7002;
	CmdMonopolyRollDiceScRsp = 7097;
	CmdMonopolyGetRaffleTicketScRsp = 7099;
	CmdMonopolyGameSettleScNotify = 7001;
	CmdMonopolyClickCellScRsp = 7087;
	CmdMonopolyCellUpdateNotify = 7053;
	CmdMonopolyEventSelectFriendScRsp = 7023;
	CmdMonopolyGetRaffleTicketCsReq = 7022;
	CmdMonopolyContentUpdateScNotify = 7024;
	CmdMonopolyReRollRandomScRsp = 7094;
	CmdGetMonopolyDailyReportScRsp = 7084;
	CmdMonopolyScrachRaffleTicketScRsp = 7040;
	CmdGetMonopolyMbtiReportRewardCsReq = 7047;
	CmdMonopolyScrachRaffleTicketCsReq = 7093;
	CmdMonopolyClickMbtiReportScRsp = 7032;
	CmdMonopolyGetDailyInitItemScRsp = 7068;
	CmdMonopolyGameCreateScNotify = 7060;
	CmdGetMonopolyInfoScRsp = 7005;
	CmdMonopolyGameBingoFlipCardCsReq = 7035;
	CmdMonopolyClickMbtiReportCsReq = 7019;
	CmdMonopolyUpgradeAssetScRsp = 7062;
	CmdMonopolyGuessBuyInformationScRsp = 7008;
	CmdMonopolyTakeRaffleTicketRewardCsReq = 7044;
	CmdMonopolyQuizDurationChangeScNotify = 7046;
	CmdMonopolyEventSelectFriendCsReq = 7064;
	CmdGetMonopolyMbtiReportRewardScRsp = 7052;
	CmdMonopolyGameGachaScRsp = 7025;
	CmdMonopolyClickCellCsReq = 7038;
	CmdMonopolyGameGachaCsReq = 7051;
	CmdMonopolyBuyGoodsScRsp = 7090;
	CmdGetMonopolyFriendRankingListCsReq = 7082;
	CmdGetSocialEventServerCacheScRsp = 7018;
	CmdMonopolyGetRegionProgressCsReq = 7027;
	CmdMonopolyLikeScNotify = 7004;
	CmdDeleteSocialEventServerCacheScRsp = 7096;
	CmdMonopolyGiveUpCurContentScRsp = 7020;
	CmdMonopolyMoveCsReq = 7006;
	CmdDailyFirstEnterMonopolyActivityScRsp = 7026;
	CmdMonopolyReRollRandomCsReq = 7072;
	CmdMonopolyTakePhaseRewardScRsp = 7056;
	CmdMonopolyGuessChooseScRsp = 7028;
	CmdGetSocialEventServerCacheCsReq = 7095;
	CmdMonopolyCheatDiceCsReq = 7069;
	CmdMonopolyLikeScRsp = 7057;
	CmdMonopolyGuessBuyInformationCsReq = 7089;
	CmdMonopolyGameRaiseRatioCsReq = 7073;
	CmdGetMonopolyDailyReportCsReq = 7021;
}

enum Gojoindbkik {
	MonopolySocialEventStatusNone = 0;
	MonopolySocialEventStatusWaitingSelectFriend = 1;
}

enum Ihgjllngdkl {
	MonopolyCellStateIdle = 0;
	MonopolyCellStateBarrier = 1;
	MonopolyCellStateGround = 2;
	MonopolyCellStateFinish = 3;
}

enum Gkejfkakenm {
	MonopolyActionResultSourceTypeNone = 0;
	MonopolyActionResultSourceTypeEffect = 1;
	MonopolyActionResultSourceTypeAssetBonus = 2;
	MonopolyActionResultSourceTypeAssetTax = 3;
	MonopolyActionResultSourceTypeAssetUpgrade = 4;
	MonopolyActionResultSourceTypeGameSettle = 5;
	MonopolyActionResultSourceTypeBuyGoods = 6;
	MonopolyActionResultSourceTypeClick = 7;
	MonopolyActionResultSourceTypeSocialEvent = 8;
	MonopolyActionResultSourceTypeLike = 9;
	MonopolyActionResultSourceTypeQuizGameSettle = 10;
}

enum CmdMultiplayerType {
	None = 0;
	CmdMultiplayerMatch3FinishScNotify = 1041;
	CmdMultiplayerFightGameStartScNotify = 1097;
	CmdMultiplayerFightGameStateScRsp = 1005;
	CmdMultiplayerFightGameFinishScNotify = 1006;
	CmdMultiplayerGetFightGateCsReq = 1098;
	CmdMultiplayerFightGameStateCsReq = 1010;
	CmdMultiplayerFightGiveUpCsReq = 1079;
	CmdMultiplayerGetFightGateScRsp = 1053;
	CmdMultiplayerFightGiveUpScRsp = 1002;
}

enum CmdMultipleDropType {
	None = 0;
	CmdGetMultipleDropInfoScRsp = 4605;
	CmdGetPlayerReturnMultiDropInfoScRsp = 4679;
	CmdMultipleDropInfoScNotify = 4698;
	CmdGetPlayerReturnMultiDropInfoCsReq = 4653;
	CmdMultipleDropInfoNotify = 4602;
	CmdGetMultipleDropInfoCsReq = 4610;
}

enum CmdMuseumType {
	None = 0;
	CmdGetMuseumInfoScRsp = 4305;
	CmdUpgradeAreaStatScRsp = 4367;
	CmdSetStuffToAreaScRsp = 4302;
	CmdMuseumTargetRewardNotify = 4369;
	CmdMuseumTakeCollectRewardCsReq = 4392;
	CmdUpgradeAreaScRsp = 4326;
	CmdMuseumRandomEventSelectCsReq = 4390;
	CmdGetMuseumInfoCsReq = 4310;
	CmdUpgradeAreaCsReq = 4316;
	CmdUpgradeAreaStatCsReq = 4363;
	CmdBuyNpcStuffScRsp = 4353;
	CmdFinishCurTurnCsReq = 4307;
	CmdGetStuffScNotify = 4341;
	CmdMuseumRandomEventStartScNotify = 4336;
	CmdMuseumFundsChangedScNotify = 4394;
	CmdSetStuffToAreaCsReq = 4379;
	CmdGetExhibitScNotify = 4355;
	CmdMuseumRandomEventSelectScRsp = 4354;
	CmdBuyNpcStuffCsReq = 4398;
	CmdMuseumTargetStartNotify = 4309;
	CmdMuseumInfoChangedScNotify = 4372;
	CmdMuseumTakeCollectRewardScRsp = 4324;
	CmdMuseumRandomEventQueryScRsp = 4374;
	CmdFinishCurTurnScRsp = 4339;
	CmdMuseumDispatchFinishedScNotify = 4362;
	CmdRemoveStuffFromAreaCsReq = 4397;
	CmdRemoveStuffFromAreaScRsp = 4306;
	CmdMuseumTargetMissionFinishNotify = 4320;
	CmdMuseumRandomEventQueryCsReq = 4378;
}

enum Aihadkbhpbm {
	MuseumRandomEventStateNone = 0;
	MuseumRandomEventStateStart = 1;
	MuseumRandomEventStateProcessing = 2;
	MuseumRandomEventStateFinish = 3;
}

enum Kamlglmnjgj {
	WorkPosNone = 0;
	WorkPos1 = 1;
	WorkPos2 = 2;
	WorkPos3 = 3;
}

enum Ibbgdgghejl {
	StatTypeNone = 0;
	StatTypeArt = 1;
	StatTypeCulture = 2;
	StatTypePopular = 3;
}

enum Kgjjjkpdcfg {
	Unknow = 0;
	MissionReward = 1;
	EventBuyStuff = 2;
	MarketBuyStuff = 3;
	QuestReward = 4;
	Initial = 5;
	PhaseFinishReward = 6;
}

enum CmdMusicRhythmType {
	None = 0;
	CmdMusicRhythmDataCsReq = 7600;
	CmdMusicRhythmSaveSongConfigDataScRsp = 7582;
	CmdMusicRhythmMaxDifficultyLevelsUnlockNotify = 7576;
	CmdMusicRhythmUnlockSongNotify = 7599;
	CmdMusicRhythmStartLevelCsReq = 7574;
	CmdMusicRhythmStartLevelScRsp = 7592;
	CmdMusicRhythmSaveSongConfigDataCsReq = 7596;
	CmdMusicRhythmUnlockSongSfxScNotify = 7577;
	CmdMusicRhythmFinishLevelScRsp = 7572;
	CmdMusicRhythmUnlockTrackScNotify = 7571;
	CmdMusicRhythmFinishLevelCsReq = 7598;
	CmdMusicRhythmDataScRsp = 7585;
}

enum Epgdhhhdjdc {
	StatusClose = 0;
	StatusOpen = 1;
}

enum CmdOfferingType {
	None = 0;
	CmdTakeOfferingRewardScRsp = 6932;
	CmdSubmitOfferingItemScRsp = 6939;
	CmdGetOfferingInfoCsReq = 6921;
	CmdOfferingInfoScNotify = 6927;
	CmdGetOfferingInfoScRsp = 6935;
	CmdTakeOfferingRewardCsReq = 6922;
	CmdSubmitOfferingItemCsReq = 6937;
}

enum Fbomlibegoc {
	OfferingStateNone = 0;
	OfferingStateLock = 1;
	OfferingStateOpen = 2;
}

enum CmdPamMissionType {
	None = 0;
	CmdAcceptedPamMissionExpireScRsp = 4005;
	CmdAcceptedPamMissionExpireCsReq = 4010;
	CmdSyncAcceptedPamMissionNotify = 4098;
}

enum CmdPamSkinType {
	None = 0;
	CmdSelectPamSkinCsReq = 8137;
	CmdGetPamSkinDataCsReq = 8121;
	CmdSelectPamSkinScRsp = 8139;
	CmdUnlockPamSkinScNotify = 8122;
	CmdGetPamSkinDataScRsp = 8135;
}

enum CmdParkourType {
	None = 0;
	CmdParkourEndLevelScRsp = 8394;
	CmdParkourGetRankingInfoScRsp = 8399;
	CmdParkourGetDataScRsp = 8395;
	CmdParkourGetDataCsReq = 8381;
	CmdParkourStartLevelScRsp = 8392;
	CmdParkourGetRankingInfoCsReq = 8397;
	CmdParkourStartLevelCsReq = 8382;
	CmdParkourEndLevelCsReq = 8387;
}

enum Poahabdkpkj {
	ParkourEndLevelReasonNone = 0;
	ParkourEndLevelReasonFinish = 1;
	ParkourEndLevelReasonQuit = 2;
}

enum Hcfffeimcmf {
	ParkourLevelSttNone = 0;
	ParkourLevelSttBombedBySparkleFigure = 1;
	ParkourLevelSttDestroySparkleFigure = 2;
}

enum CmdPetType {
	None = 0;
	CmdSummonPetCsReq = 7602;
	CmdRecallPetCsReq = 7612;
	CmdGetPetDataScRsp = 7601;
	CmdRecallPetScRsp = 7624;
	CmdCurPetChangedScNotify = 7604;
	CmdGetPetDataCsReq = 7606;
	CmdSummonPetScRsp = 7607;
}

enum Cdefbkpcppa {
	PetOperationTypeNone = 0;
	PetOperationTypeSummon = 1;
	PetOperationTypeRecall = 2;
}

enum CmdPhoneType {
	None = 0;
	CmdSelectChatBubbleCsReq = 5198;
	CmdSelectPhoneThemeScRsp = 5197;
	CmdSelectChatBubbleScRsp = 5153;
	CmdSelectPhoneCaseCsReq = 5141;
	CmdUnlockPhoneThemeScNotify = 5106;
	CmdUnlockChatBubbleScNotify = 5179;
	CmdGetPhoneDataScRsp = 5105;
	CmdUnlockPhoneCaseScNotify = 5107;
	CmdSelectPhoneThemeCsReq = 5102;
	CmdSelectPhoneCaseScRsp = 5155;
	CmdGetPhoneDataCsReq = 5110;
}

enum CmdPlanetFesType {
	None = 0;
	CmdPlanetFesUseItemCsReq = 8219;
	CmdPlanetFesTakeQuestRewardScRsp = 8237;
	CmdPlanetFesUpgradeFesLevelCsReq = 8235;
	CmdPlanetFesGameBingoFlipScRsp = 8233;
	CmdPlanetFesGetAvatarStatCsReq = 8231;
	CmdPlanetFesDoGachaCsReq = 8232;
	CmdPlanetFesBusinessDayRefreshEventScRsp = 8240;
	CmdPlanetFesCollectAllIncomeCsReq = 8218;
	CmdPlanetFesClientStatusCsReq = 8204;
	CmdPlanetFesSetCustomKeyValueCsReq = 8216;
	CmdPlanetFesDeliverPamCargoScRsp = 8212;
	CmdPlanetFesFriendRankingInfoChangeScNotify = 8217;
	CmdPlanetFesDealAvatarEventOptionItemScRsp = 8214;
	CmdPlanetFesGetBusinessDayInfoScRsp = 8220;
	CmdPlanetFesChooseAvatarEventOptionCsReq = 8208;
	CmdPlanetFesBonusEventInteractCsReq = 8210;
	CmdPlanetFesBonusEventInteractScRsp = 8245;
	CmdPlanetFesStartMiniGameScRsp = 8236;
	CmdPlanetFesUpgradeSkillLevelScRsp = 8247;
	CmdPlanetFesChooseAvatarEventOptionScRsp = 8203;
	CmdPlanetFesUpgradeSkillLevelCsReq = 8249;
	CmdPlanetFesDoGachaScRsp = 8229;
	CmdPlanetFesSetAvatarWorkCsReq = 8201;
	CmdPlanetFesAvatarLevelUpScRsp = 8206;
	CmdPlanetFesGetAvatarStatScRsp = 8241;
	CmdPlanetFesSetCustomKeyValueScRsp = 8239;
	CmdPlanetFesCollectAllIncomeScRsp = 8213;
	CmdPlanetFesCollectIncomeScRsp = 8202;
	CmdPlanetFesSyncChangeScNotify = 8246;
	CmdPlanetFesClientStatusScRsp = 8243;
	CmdGetPlanetFesDataCsReq = 8223;
	CmdPlanetFesTakeRegionPhaseRewardScRsp = 8226;
	CmdPlanetFesBusinessDayRefreshEventCsReq = 8209;
	CmdPlanetFesGameBingoFlipCsReq = 8234;
	CmdPlanetFesSetAvatarWorkScRsp = 8228;
	CmdPlanetFesCollectIncomeCsReq = 8230;
	CmdPlanetFesBuyLandScRsp = 8242;
	CmdPlanetFesGetFriendRankingInfoListScRsp = 8222;
	CmdPlanetFesTakeQuestRewardCsReq = 8250;
	CmdPlanetFesAvatarLevelUpCsReq = 8205;
	CmdPlanetFesDeliverPamCargoCsReq = 8207;
	CmdPlanetFesUpgradeFesLevelScRsp = 8225;
	CmdPlanetFesBuyLandCsReq = 8227;
	CmdGetPlanetFesDataScRsp = 8221;
	CmdPlanetFesUseItemScRsp = 8238;
	CmdPlanetFesGetBusinessDayInfoCsReq = 8248;
	CmdPlanetFesDealAvatarEventOptionItemCsReq = 8215;
	CmdPlanetFesTakeRegionPhaseRewardCsReq = 8224;
	CmdPlanetFesStartMiniGameCsReq = 8211;
	CmdPlanetFesGetFriendRankingInfoListCsReq = 8244;
}

enum Gmfejefibbi {
	PlanetFesQuestNone = 0;
	PlanetFesQuestDoing = 1;
	PlanetFesQuestFinish = 2;
	PlanetFesQuestClose = 3;
}

enum Dfhejcijbej {
	PlanetFesBusinessEventChangeReasonNone = 0;
	PlanetFesBusinessEventAvatarChange = 1;
	PlanetFesBusinessEventFinishGame = 2;
}

enum Iocpjfkgkdg {
	PlanetFesCustomKeyNone = 0;
	PlanetFesCustomKeyUnlockInfiniteBusinessDayPerformance = 1;
	PlanetFesCustomKeyBusinessDayStartPerformanceLastSeenDay = 2;
	PlanetFesCustomKeyBusinessDayUnlockPerformanceLastSeenDay = 3;
	PlanetFesCustomKeySummaryShow = 4;
}

enum CmdPlanetFesExtType {
	None = 0;
	CmdPlanetFesLargeBonusInteractScRsp = 8295;
	CmdPlanetFesHandleCardPieceApplyCsReq = 8332;
	CmdPlanetFesGetFriendCardPieceCsReq = 8336;
	CmdPlanetFesGiveCardPieceCsReq = 8303;
	CmdPlanetFesGiveCardPieceScRsp = 8322;
	CmdPlanetFesChangeCardPieceApplyPermissionCsReq = 8292;
	CmdPlanetFesChangeCardPieceApplyPermissionScRsp = 8291;
	CmdPlanetFesEnterNextBusinessDayCsReq = 8296;
	CmdPlanetFesApplyCardPieceScRsp = 8317;
	CmdPlanetFesLargeBonusInteractCsReq = 8319;
	CmdPlanetFesApplyCardPieceCsReq = 8318;
	CmdPlanetFesEnterNextBusinessDayScRsp = 8340;
	CmdPlanetFesGetExtraCardPieceInfoScRsp = 8311;
	CmdPlanetFesGetOfferedCardPieceScRsp = 8308;
	CmdPlanetFesHandleCardPieceApplyScRsp = 8294;
	CmdPlanetFesGetFriendCardPieceScRsp = 8320;
	CmdPlanetFesGetOfferedCardPieceCsReq = 8333;
	CmdPlanetFesGetExtraCardPieceInfoCsReq = 8313;
}

enum Aopkifdmadi {
	PlanetFesLargeBonusInteractStart = 0;
	PlanetFesLargeBonusInteractReport = 1;
	PlanetFesLargeBonusInteractFinish = 2;
}

enum CmdPlayerType {
	None = 0;
	CmdGetBasicInfoScRsp = 71;
	CmdGetAuthkeyCsReq = 67;
	CmdAntiAddictScNotify = 36;
	CmdSetAvatarPathCsReq = 84;
	CmdPlayerHeartBeatScRsp = 12;
	CmdClientDownloadDataScNotify = 46;
	CmdUpdatePlayerSettingCsReq = 30;
	CmdUpdateFeatureSwitchScNotify = 85;
	CmdStaminaInfoScNotify = 80;
	CmdSetGameplayBirthdayScRsp = 82;
	CmdPlayerLogoutCsReq = 98;
	CmdAceAntiCheaterCsReq = 83;
	CmdGetVideoVersionKeyCsReq = 22;
	CmdClientObjUploadScRsp = 76;
	CmdGetLevelRewardScRsp = 9;
	CmdGateServerScNotify = 64;
	CmdSetMultipleAvatarPathsCsReq = 32;
	CmdGmTalkScRsp = 7;
	CmdPlayerKickOutScNotify = 41;
	CmdGetGameStateServiceConfigScRsp = 33;
	CmdQueryProductInfoScRsp = 13;
	CmdSetNicknameCsReq = 78;
	CmdSetGenderScRsp = 60;
	CmdGetAuthkeyScRsp = 72;
	CmdUpdatePlayerSettingScRsp = 11;
	CmdPlayerLoginScRsp = 5;
	CmdGetSecretKeyInfoScRsp = 49;
	CmdServerAnnounceNotify = 73;
	CmdClientObjDownloadDataScNotify = 59;
	CmdGetBasicInfoCsReq = 29;
	CmdSetNicknameScRsp = 74;
	CmdSetRedPointStatusScNotify = 44;
	CmdRetcodeNotify = 4;
	CmdSetMultipleAvatarPathsScRsp = 34;
	CmdSetLanguageScRsp = 24;
	CmdExchangeStaminaScRsp = 63;
	CmdSetGenderCsReq = 15;
	CmdPlayerGetTokenCsReq = 79;
	CmdGetLevelRewardTakenListCsReq = 90;
	CmdPlayerHeartBeatCsReq = 86;
	CmdMonthCardRewardNotify = 57;
	CmdAceAntiCheaterScRsp = 3;
	CmdGetSecretKeyInfoCsReq = 18;
	CmdDailyRefreshNotify = 45;
	CmdPlayerLoginFinishScRsp = 17;
	CmdGmTalkCsReq = 55;
	CmdSetPlayerInfoScRsp = 28;
	CmdUpdatePsnSettingsInfoScRsp = 47;
	CmdQueryProductInfoCsReq = 8;
	CmdUnlockAvatarPathCsReq = 65;
	CmdPlayerLogoutScRsp = 53;
	CmdUnlockAvatarPathScRsp = 19;
	CmdReserveStaminaExchangeCsReq = 40;
	CmdGetLevelRewardTakenListScRsp = 54;
	CmdPlayerGetTokenScRsp = 2;
	CmdPlayerLoginCsReq = 10;
	CmdGetLevelRewardCsReq = 62;
	CmdGetGameStateServiceConfigCsReq = 43;
	CmdSetGameplayBirthdayCsReq = 58;
	CmdAvatarPathChangedNotify = 68;
	CmdGmTalkScNotify = 6;
	CmdReserveStaminaExchangeScRsp = 27;
	CmdRegionStopScNotify = 94;
	CmdExchangeStaminaCsReq = 26;
	CmdClientObjUploadCsReq = 56;
	CmdSetAvatarPathScRsp = 38;
	CmdPlayerLoginFinishCsReq = 96;
	CmdFeatureSwitchClosedScNotify = 23;
	CmdSetLanguageCsReq = 92;
	CmdUpdatePsnSettingsInfoCsReq = 75;
	CmdGetVideoVersionKeyScRsp = 99;
	CmdSetPlayerInfoCsReq = 66;
}

enum Ilpmnldgeak {
	AuthkeySignTypeNone = 0;
	AuthkeySignTypeDefault = 1;
	AuthkeySignTypeRsa = 2;
}

enum Jidiecghkgk {
	ObjContentJson = 0;
	ObjContentPb = 1;
}

enum CmdPlayerBoardType {
	None = 0;
	CmdSetSignatureScRsp = 2807;
	CmdSetAssistAvatarScRsp = 2816;
	CmdSetAssistAvatarCsReq = 2839;
	CmdSetSignatureCsReq = 2855;
	CmdSetIsDisplayAvatarInfoScRsp = 2806;
	CmdSetHeadIconCsReq = 2898;
	CmdSetPersonalCardCsReq = 2826;
	CmdSetDisplayAvatarCsReq = 2879;
	CmdSetPersonalCardScRsp = 2863;
	CmdSetHeadIconScRsp = 2853;
	CmdSetIsDisplayAvatarInfoCsReq = 2897;
	CmdGetPlayerBoardDataCsReq = 2810;
	CmdSetDisplayAvatarScRsp = 2802;
	CmdGetPlayerBoardDataScRsp = 2805;
	CmdUnlockHeadIconScNotify = 2841;
}

enum CmdPlayerReturnType {
	None = 0;
	CmdPlayerReturnTakeRewardScRsp = 4506;
	CmdPlayerReturnPointChangeScNotify = 4553;
	CmdPlayerReturnSignScRsp = 4598;
	CmdPlayerReturnTakeRelicCsReq = 4539;
	CmdPlayerReturnSignCsReq = 4505;
	CmdPlayerReturnTakeRewardCsReq = 4597;
	CmdPlayerReturnStartScNotify = 4510;
	CmdPlayerReturnInfoQueryScRsp = 4555;
	CmdPlayerReturnTakePointRewardCsReq = 4579;
	CmdPlayerReturnTakeRelicScRsp = 4516;
	CmdPlayerReturnInfoQueryCsReq = 4541;
	CmdPlayerReturnTakePointRewardScRsp = 4502;
	CmdPlayerReturnForceFinishScNotify = 4507;
}

enum Nobpmmnfenj {
	PlayerReturnNone = 0;
	PlayerReturnProcessing = 1;
	PlayerReturnFinish = 2;
}

enum CmdPlotType {
	None = 0;
	CmdFinishPlotCsReq = 1110;
	CmdFinishPlotScRsp = 1105;
}

enum CmdPunkLordType {
	None = 0;
	CmdSharePunkLordMonsterCsReq = 3279;
	CmdPunkLordDataChangeNotify = 3242;
	CmdPunkLordMonsterInfoScNotify = 3263;
	CmdGetPunkLordMonsterDataCsReq = 3210;
	CmdSharePunkLordMonsterScRsp = 3202;
	CmdPunkLordMonsterKilledNotify = 3292;
	CmdTakePunkLordPointRewardScRsp = 3226;
	CmdSummonPunkLordMonsterScRsp = 3206;
	CmdSummonPunkLordMonsterCsReq = 3297;
	CmdGetPunkLordDataScRsp = 3272;
	CmdTakePunkLordPointRewardCsReq = 3216;
	CmdPunkLordBattleResultScNotify = 3254;
	CmdGetPunkLordBattleRecordScRsp = 3251;
	CmdStartPunkLordRaidScRsp = 3253;
	CmdTakeKilledPunkLordMonsterScoreScRsp = 3273;
	CmdPunkLordRaidTimeOutScNotify = 3236;
	CmdTakeKilledPunkLordMonsterScoreCsReq = 3224;
	CmdGetKilledPunkLordMonsterDataScRsp = 3209;
	CmdGetPunkLordMonsterDataScRsp = 3205;
	CmdGetPunkLordBattleRecordCsReq = 3201;
	CmdStartPunkLordRaidCsReq = 3298;
	CmdGetPunkLordDataCsReq = 3267;
	CmdGetKilledPunkLordMonsterDataCsReq = 3262;
}

enum Nlefpbicecn {
	PunkLordOperationNone = 0;
	PunkLordOperationRefresh = 1;
	PunkLordOperationShare = 2;
	PunkLordOperationStartRaid = 3;
	PunkLordOperationGetBattleRecord = 4;
}

enum CmdQuestType {
	None = 0;
	CmdFinishQuestScRsp = 907;
	CmdBatchGetQuestDataScRsp = 967;
	CmdGetQuestRecordScRsp = 906;
	CmdTakeQuestRewardScRsp = 953;
	CmdQuestRecordScNotify = 941;
	CmdBatchGetQuestDataCsReq = 963;
	CmdGetQuestDataScRsp = 905;
	CmdFinishQuestCsReq = 955;
	CmdTakeQuestOptionalRewardScRsp = 916;
	CmdTakeQuestRewardCsReq = 998;
	CmdGetQuestRecordCsReq = 997;
	CmdGetQuestDataCsReq = 910;
	CmdTakeQuestOptionalRewardCsReq = 939;
}

enum QuestStatus {
	QuestNone = 0;
	QuestDoing = 1;
	QuestFinish = 2;
	QuestClose = 3;
	QuestDelete = 4;
}

enum CmdRaidType {
	None = 0;
	CmdStartRaidCsReq = 2210;
	CmdRaidInfoNotify = 2279;
	CmdChallengeRaidNotify = 2255;
	CmdGetRaidInfoCsReq = 2207;
	CmdTakeChallengeRaidRewardCsReq = 2206;
	CmdLeaveRaidCsReq = 2298;
	CmdGetRaidInfoScRsp = 2239;
	CmdGetAllSaveRaidCsReq = 2272;
	CmdDelSaveRaidScNotify = 2236;
	CmdGetChallengeRaidInfoScRsp = 2297;
	CmdGetSaveRaidScRsp = 2267;
	CmdSetClientRaidTargetCountScRsp = 2226;
	CmdGetSaveRaidCsReq = 2263;
	CmdStartRaidScRsp = 2205;
	CmdGetAllSaveRaidScRsp = 2294;
	CmdTakeChallengeRaidRewardScRsp = 2241;
	CmdSetClientRaidTargetCountCsReq = 2216;
	CmdGetChallengeRaidInfoCsReq = 2202;
	CmdRaidKickByServerScNotify = 2278;
	CmdLeaveRaidScRsp = 2253;
}

enum Jldfakdkmjj {
	RaidStatusNone = 0;
	RaidStatusDoing = 1;
	RaidStatusFinish = 2;
	RaidStatusFailed = 3;
}

enum Fochdfjanpc {
	RaidTargetStatusNone = 0;
	RaidTargetStatusDoing = 1;
	RaidTargetStatusFinish = 2;
}

enum Egkfndoopnn {
	RaidKickReasonNone = 0;
	RaidKickReasonActivityScheduleFinish = 1;
}

enum CmdRaidCollectionType {
	None = 0;
	CmdRaidCollectionDataCsReq = 6941;
	CmdRaidCollectionEnterNextRaidCsReq = 6959;
	CmdRaidCollectionDataScNotify = 6957;
	CmdRaidCollectionEnterNextRaidScRsp = 6942;
	CmdRaidCollectionDataScRsp = 6955;
}

enum CmdRechargeGiftType {
	None = 0;
	CmdTakeRechargeBenefitRewardScRsp = 8370;
	CmdGetRechargeBenefitInfoCsReq = 8362;
	CmdGetRechargeGiftInfoCsReq = 8361;
	CmdTakeRechargeBenefitRewardCsReq = 8374;
	CmdGetRechargeBenefitInfoScRsp = 8372;
	CmdSyncRechargeBenefitInfoScNotify = 8367;
	CmdTakeRechargeGiftRewardScRsp = 8379;
	CmdTakeRechargeGiftRewardCsReq = 8377;
	CmdGetRechargeGiftInfoScRsp = 8375;
}

enum CmdRecommendType {
	None = 0;
	CmdGetBigDataRecommendCsReq = 2428;
	CmdGetChallengeRecommendLineupListScRsp = 2401;
	CmdGetBigDataRecommendScRsp = 2427;
	CmdGetBigDataAllRecommendScRsp = 2404;
	CmdGetBigDataAllRecommendCsReq = 2442;
	CmdGetChallengeRecommendLineupListCsReq = 2402;
}

enum BigDataRecommendType {
	None = 0;
	Equipment = 1;
	RelicSuit = 2;
	RelicAvatar = 3;
	AvatarRelic = 4;
	LocalLegend = 5;
}

enum CmdRedDotType {
	None = 0;
	CmdGetSingleRedDotParamGroupCsReq = 5902;
	CmdUpdateRedDotDataScRsp = 5930;
	CmdGetAllRedDotDataScRsp = 5921;
	CmdUpdateRedDotDataCsReq = 5946;
	CmdGetAllRedDotDataCsReq = 5923;
	CmdGetSingleRedDotParamGroupScRsp = 5901;
}

enum Ojljhfnfdkp {
	UpdateReddotNone = 0;
	UpdateReddotAdd = 1;
	UpdateReddotReplace = 2;
}

enum CmdRelicSmartWearType {
	None = 0;
	CmdRelicSmartWearDeletePinRelicScRsp = 8263;
	CmdRelicSmartWearAddPlanCsReq = 8267;
	CmdRelicSmartWearGetPinRelicCsReq = 8270;
	CmdRelicSmartWearUpdatePlanCsReq = 8252;
	CmdRelicSmartWearAddPlanScRsp = 8269;
	CmdRelicSmartWearUpdatePlanScRsp = 8262;
	CmdRelicSmartWearUpdatePinRelicScNotify = 8254;
	CmdRelicSmartWearGetPlanCsReq = 8251;
	CmdRelicSmartWearDeletePlanScRsp = 8264;
	CmdRelicSmartWearDeletePlanCsReq = 8257;
	CmdRelicSmartWearGetPlanScRsp = 8265;
	CmdRelicSmartWearGetPinRelicScRsp = 8253;
	CmdRelicSmartWearDeletePinRelicCsReq = 8268;
	CmdRelicSmartWearUpdatePinRelicCsReq = 8259;
	CmdRelicSmartWearUpdatePinRelicScRsp = 8258;
}

enum Anccglmmdjj {
	RelicSmartWearPlanTypeNone = 0;
	RelicSmartWearPlanTypeBigData = 1;
	RelicSmartWearPlanTypeSystem = 2;
	RelicSmartWearPlanTypeCustom = 3;
}

enum CmdReplayType {
	None = 0;
	CmdGetPlayerReplayInfoCsReq = 3598;
	CmdGetPlayerReplayInfoScRsp = 3553;
	CmdGetReplayTokenScRsp = 3505;
	CmdGetReplayTokenCsReq = 3510;
}

enum CmdRndOptionType {
	None = 0;
	CmdGetRndOptionCsReq = 3410;
	CmdDailyFirstMeetPamCsReq = 3498;
	CmdDailyFirstMeetPamScRsp = 3453;
	CmdGetRndOptionScRsp = 3405;
}

enum CmdRogueType {
	None = 0;
	CmdGetRogueBuffEnhanceInfoCsReq = 1854;
	CmdFinishAeonDialogueGroupCsReq = 1900;
	CmdLeaveRogueCsReq = 1897;
	CmdSyncRogueReviveInfoScNotify = 1842;
	CmdEnterRogueCsReq = 1879;
	CmdFinishAeonDialogueGroupScRsp = 1868;
	CmdTakeRogueAeonLevelRewardScRsp = 1840;
	CmdLeaveRogueScRsp = 1806;
	CmdPickRogueAvatarCsReq = 1867;
	CmdTakeRogueScoreRewardCsReq = 1874;
	CmdTakeRogueAeonLevelRewardCsReq = 1893;
	CmdEnhanceRogueBuffScRsp = 1820;
	CmdGetRogueInitialScoreScRsp = 1889;
	CmdReviveRogueAvatarScRsp = 1878;
	CmdStartRogueScRsp = 1853;
	CmdSyncRogueAeonLevelUpRewardScNotify = 1811;
	CmdQuitRogueScRsp = 1851;
	CmdReviveRogueAvatarCsReq = 1836;
	CmdSyncRogueExploreWinScNotify = 1835;
	CmdGetRogueAeonInfoCsReq = 1838;
	CmdEnableRogueTalentCsReq = 1832;
	CmdEnterRogueMapRoomScRsp = 1866;
	CmdStartRogueCsReq = 1898;
	CmdQuitRogueCsReq = 1801;
	CmdOpenRogueChestScRsp = 1804;
	CmdExchangeRogueRewardKeyCsReq = 1886;
	CmdGetRogueTalentInfoCsReq = 1865;
	CmdSyncRogueRewardInfoScNotify = 1850;
	CmdOpenRogueChestCsReq = 1857;
	CmdEnterRogueScRsp = 1802;
	CmdSyncRogueVirtualItemInfoScNotify = 1877;
	CmdSyncRogueAeonScNotify = 1899;
	CmdGetRogueScoreRewardInfoScRsp = 1856;
	CmdEnterRogueMapRoomCsReq = 1860;
	CmdGetRogueBuffEnhanceInfoScRsp = 1862;
	CmdGetRogueScoreRewardInfoCsReq = 1859;
	CmdSyncRogueFinishScNotify = 1863;
	CmdExchangeRogueRewardKeyScRsp = 1812;
	CmdGetRogueTalentInfoScRsp = 1819;
	CmdSyncRogueAreaUnlockScNotify = 1844;
	CmdEnableRogueTalentScRsp = 1834;
	CmdEnhanceRogueBuffCsReq = 1809;
	CmdGetRogueAeonInfoScRsp = 1887;
	CmdSyncRogueStatusScNotify = 1870;
	CmdTakeRogueScoreRewardScRsp = 1890;
	CmdSyncRoguePickAvatarInfoScNotify = 1861;
	CmdSyncRogueMapRoomScNotify = 1808;
	CmdGetRogueInitialScoreCsReq = 1828;
	CmdSyncRogueSeasonFinishScNotify = 1837;
	CmdPickRogueAvatarScRsp = 1872;
	CmdGetRogueInfoCsReq = 1810;
	CmdGetRogueInfoScRsp = 1805;
	CmdSyncRogueGetItemScNotify = 1848;
}

enum RogueStatus {
	None = 0;
	Doing = 1;
	Pending = 2;
	Endless = 3;
	Finish = 4;
}

enum Ilnpbecoepl {
	RogueRoomStatusNone = 0;
	RogueRoomStatusLock = 1;
	RogueRoomStatusUnlock = 2;
	RogueRoomStatusPlay = 3;
	RogueRoomStatusFinish = 4;
}

enum Jdakamigkhf {
	RogueAreaStatusLock = 0;
	RogueAreaStatusUnlock = 1;
	RogueAreaStatusFirstPass = 2;
	RogueAreaStatusClose = 3;
}

enum Jjeikcobdlp {
	RogueBuffSourceTypeNone = 0;
	RogueBuffSourceTypeSelect = 1;
	RogueBuffSourceTypeEnhance = 2;
	RogueBuffSourceTypeMiracle = 3;
	RogueBuffSourceTypeDialogue = 4;
	RogueBuffSourceTypeBonus = 5;
	RogueBuffSourceTypeMazeSkill = 6;
	RogueBuffSourceTypeShop = 7;
	RogueBuffSourceTypeLevelMechanism = 8;
	RogueBuffSourceTypeEndlessLevelStart = 9;
}

enum Eohhhddahkl {
	RogueMiracleSourceTypeNone = 0;
	RogueMiracleSourceTypeSelect = 1;
	RogueMiracleSourceTypeDialogue = 2;
	RogueMiracleSourceTypeBonus = 3;
	RogueMiracleSourceTypeUse = 4;
	RogueMiracleSourceTypeReset = 5;
	RogueMiracleSourceTypeReplace = 6;
	RogueMiracleSourceTypeTrade = 7;
	RogueMiracleSourceTypeGet = 8;
	RogueMiracleSourceTypeShop = 9;
	RogueMiracleSourceTypeMazeSkill = 10;
	RogueMiracleSourceTypeLevelMechanism = 11;
	RogueMiracleSourceTypeEndlessLevelStart = 12;
}

enum Ffnedmegpjd {
	RogueDialogueResultSucc = 0;
	RogueDialogueResultFail = 1;
}

enum CmdRogueArcadeType {
	None = 0;
	CmdRogueArcadeRestartScRsp = 7651;
	CmdRogueArcadeGetInfoCsReq = 7678;
	CmdRogueArcadeStartScRsp = 7671;
	CmdRogueArcadeLeaveScRsp = 7680;
	CmdRogueArcadeLeaveCsReq = 7696;
	CmdRogueArcadeStartCsReq = 7673;
	CmdRogueArcadeGetInfoScRsp = 7677;
	CmdRogueArcadeRestartCsReq = 7652;
}

enum CmdRogueCommonType {
	None = 0;
	CmdUpdateRogueAdventureRoomScoreScRsp = 5629;
	CmdGetRogueAdventureRoomInfoScRsp = 5663;
	CmdGetRogueExhibitionCsReq = 5630;
	CmdGetRogueCollectionCsReq = 5693;
	CmdGetRogueExhibitionScRsp = 5611;
	CmdBuyRogueShopMiracleCsReq = 5606;
	CmdGetRogueShopMiracleInfoScRsp = 5679;
	CmdRogueShopBeginBattleCsReq = 5631;
	CmdSetRogueCollectionCsReq = 5627;
	CmdGetRogueShopBuffInfoScRsp = 5697;
	CmdSyncRogueCommonVirtualItemInfoScNotify = 5671;
	CmdGetRogueCommonDialogueDataCsReq = 5612;
	CmdSyncRogueAdventureRoomInfoScNotify = 5610;
	CmdSelectRogueCommonDialogueOptionCsReq = 5623;
	CmdGetRogueCollectionScRsp = 5640;
	CmdBuyRogueShopMiracleScRsp = 5641;
	CmdTakeRogueEventHandbookRewardCsReq = 5689;
	CmdTakeRogueEventHandbookRewardScRsp = 5608;
	CmdGetRogueShopFormulaInfoCsReq = 5632;
	CmdGetRogueHandbookDataCsReq = 5688;
	CmdTakeRogueMiracleHandbookRewardCsReq = 5666;
	CmdRogueWorkbenchHandleFuncCsReq = 5644;
	CmdSyncRogueCommonActionResultScNotify = 5613;
	CmdGetRogueShopBuffInfoCsReq = 5602;
	CmdSyncRogueCommonDialogueDataScNotify = 5649;
	CmdSyncRogueCommonPendingActionScNotify = 5646;
	CmdGetRogueShopFormulaInfoScRsp = 5634;
	CmdBuyRogueShopFormulaScRsp = 5633;
	CmdRogueDebugReplaySaveScNotify = 5619;
	CmdRogueWorkbenchGetInfoScRsp = 5699;
	CmdGetRogueAdventureRoomInfoCsReq = 5626;
	CmdEnhanceCommonRogueBuffCsReq = 5654;
	CmdRogueNpcDisappearScRsp = 5616;
	CmdSetRogueCollectionScRsp = 5680;
	CmdGetEnhanceCommonRogueBuffInfoCsReq = 5674;
	CmdBuyRogueShopBuffCsReq = 5655;
	CmdPrepareRogueAdventureRoomCsReq = 5605;
	CmdUpdateRogueAdventureRoomScoreCsReq = 5685;
	CmdHandleRogueCommonPendingActionCsReq = 5683;
	CmdBuyRogueShopBuffScRsp = 5607;
	CmdSyncRogueCommonDialogueOptionFinishScNotify = 5696;
	CmdEnhanceCommonRogueBuffScRsp = 5662;
	CmdRogueWorkbenchHandleFuncScRsp = 5648;
	CmdGetRogueShopMiracleInfoCsReq = 5653;
	CmdHandleRogueCommonPendingActionScRsp = 5603;
	CmdFinishRogueCommonDialogueCsReq = 5695;
	CmdRogueNpcDisappearCsReq = 5639;
	CmdRogueGetGambleInfoScRsp = 5684;
	CmdStopRogueAdventureRoomScRsp = 5620;
	CmdRogueGetGambleInfoCsReq = 5621;
	CmdRogueWorkbenchGetInfoCsReq = 5622;
	CmdTakeRogueMiracleHandbookRewardScRsp = 5628;
	CmdRogueDoGambleCsReq = 5638;
	CmdPrepareRogueAdventureRoomScRsp = 5698;
	CmdFinishRogueCommonDialogueScRsp = 5618;
	CmdRogueDoGambleScRsp = 5687;
	CmdGetEnhanceCommonRogueBuffInfoScRsp = 5690;
	CmdStopRogueAdventureRoomCsReq = 5609;
	CmdBuyRogueShopFormulaCsReq = 5643;
	CmdGetRogueCommonDialogueDataScRsp = 5664;
	CmdCommonRogueUpdateScNotify = 5686;
	CmdSelectRogueCommonDialogueOptionScRsp = 5614;
	CmdSetRogueExhibitionScRsp = 5656;
	CmdSetRogueExhibitionCsReq = 5659;
	CmdSyncRogueHandbookDataUpdateScNotify = 5660;
	CmdCommonRogueQueryScRsp = 5604;
	CmdCommonRogueQueryCsReq = 5657;
	CmdRogueShopBeginBattleScRsp = 5691;
	CmdGetRogueHandbookDataScRsp = 5615;
}

enum Jaocjomenin {
	RogueAdventureRoomStatusNone = 0;
	RogueAdventureRoomStatusPrepare = 1;
	RogueAdventureRoomStatusStarted = 2;
	RogueAdventureRoomStatusStopped = 3;
}

enum Nniohhmjghg {
	RogueCommonBuffSelectSourceTypeNone = 0;
	RogueCommonBuffSelectSourceTypeDiceRoll = 1;
	RogueCommonBuffSelectSourceTypeAeon = 2;
	RogueCommonBuffSelectSourceTypeBoardEvent = 3;
	RogueCommonBuffSelectSourceTypeLevelMechanism = 4;
}

enum Odopdkelaeb {
	RogueUnlockFunctionTypeMiracle = 0;
	RogueUnlockFunctionTypeShowHint = 1;
	RogueUnlockFunctionTypeCosmosBanAeon = 2;
	RogueUnlockFuntionTypeExhibition = 3;
	RogueUnlockFuntionTypeCollection = 4;
	RogueUnlockFuntionTypeTournGodMode = 5;
}

enum Pmpcbalmneo {
	RogueCommonMiracleSelectSourceTypeNone = 0;
	RogueCommonMiracleSelectSourceTypeDiceRoll = 1;
	RogueCommonMiracleSelectSourceTypeAeon = 2;
	RogueCommonMiracleSelectSourceTypeBoardEvent = 3;
	RogueCommonMiracleSelectSourceTypeLevelMechanism = 4;
}

enum Ojeigiekjeh {
	RogueCommonBuffDisplayTypeNone = 0;
	RogueCommonBuffDisplayTypeAdd = 1;
	RogueCommonBuffDisplayTypeRemove = 2;
}

enum Laiapkndbph {
	RogueCommonMiracleDisplayTypeNone = 0;
	RogueCommonMiracleDisplayTypeAdd = 1;
	RogueCommonMiracleDisplayTypeRemove = 2;
	RogueCommonMiracleDisplayTypeRepair = 3;
}

enum Paickpmogdg {
	RogueCommonItemDisplayTypeNone = 0;
	RogueCommonItemDisplayTypeAdd = 1;
	RogueCommonItemDisplayTypeRemove = 2;
}

enum RogueCommonActionResultDisplayType {
	None = 0;
	Single = 1;
	Multi = 2;
}

enum Cfjgpifiool {
	RogueCommonActionResultSourceTypeNone = 0;
	RogueCommonActionResultSourceTypeSelect = 1;
	RogueCommonActionResultSourceTypeEnhance = 2;
	RogueCommonActionResultSourceTypeMiracle = 3;
	RogueCommonActionResultSourceTypeDialogue = 4;
	RogueCommonActionResultSourceTypeBonus = 5;
	RogueCommonActionResultSourceTypeShop = 6;
	RogueCommonActionResultSourceTypeDice = 7;
	RogueCommonActionResultSourceTypeAeon = 8;
	RogueCommonActionResultSourceTypeBoardEvent = 9;
	RogueCommonActionResultSourceTypeMazeSkill = 10;
	RogueCommonActionResultSourceTypeLevelMechanism = 11;
	RogueCommonActionResultSourceTypeBuff = 12;
	RogueCommonActionResultSourceTypeReforge = 13;
	RogueCommonActionResultSourceTypeMagicUnitCompose = 14;
	RogueCommonActionResultSourceTypeMagicUnitReforge = 15;
}

enum Ndkljjiimgm {
	KTitanBlessSelectNone = 0;
	KSelectTitanBlessType = 1;
	KSelectTitanBlessEnhance = 2;
}

enum Kpabffanjbk {
	RogueTalentStatusLock = 0;
	RogueTalentStatusUnlock = 1;
	RogueTalentStatusEnable = 2;
}

enum Mhkmpgabbpl {
	RogueCollectionOperateNone = 0;
	RogueCollectionOperateSet = 1;
	RogueCollectionOperateUnset = 2;
}

enum Hhiclpljnco {
	RogueBoothNone = 0;
	RogueBoothEmpty = 1;
	RogueBoothDisplay = 2;
}

enum Hgpokmdgknn {
	RogueCollectionNone = 0;
	RogueCollectionUnlocked = 1;
	RogueCollectionDisplay = 2;
}

enum Ehcobodeeje {
	RogueExhibitionNone = 0;
	RogueExhibitionUnlocked = 1;
	RogueExhibitionDisplay = 2;
}

enum CmdRogueEndless {
	None = 0;
	CmdTakeRogueEndlessActivityAllBonusRewardCsReq = 6004;
	CmdGetRogueEndlessActivityDataScRsp = 6010;
	CmdGetRogueEndlessActivityDataCsReq = 6005;
	CmdEnterRogueEndlessActivityStageScRsp = 6002;
	CmdTakeRogueEndlessActivityPointRewardCsReq = 6009;
	ActivityBattleEndScNotify = 6006;
	CmdTakeRogueEndlessActivityAllBonusRewardScRsp = 6007;
	CmdEnterRogueEndlessActivityStageCsReq = 6001;
	CmdTakeRogueEndlessActivityPointRewardScRsp = 6003;
}

enum CmdRogueMagic {
	None = 0;
	ReviveAvatarCsReq = 7778;
	GetTalentInfoCsReq = 7751;
	EnableTalentCsReq = 7735;
	EnterRoomCsReq = 7741;
	AutoDressInUnitCsReq = 7728;
	LevelInfoUpdateScNotify = 7716;
	UnitReforgeScRsp = 7701;
	UnitComposeScRsp = 7773;
	GetMiscRealTimeDataScRsp = 7766;
	SettleScRsp = 7706;
	GetMiscRealTimeDataCsReq = 7760;
	StoryInfoUpdateScNotify = 7708;
	ScepterDressInUnitCsReq = 7709;
	StartScRsp = 7705;
	EnterRoomScRsp = 7755;
	ScepterTakeOffUnitCsReq = 7769;
	BattleFailSettleInfoScNotify = 7794;
	EnterLayerScRsp = 7739;
	GetTalentInfoScRsp = 7725;
	LeaveCsReq = 7779;
	EnableTalentScRsp = 7737;
	SetAutoDressInMagicUnitScRsp = 7715;
	SetAutoDressInMagicUnitCsReq = 7788;
	UnitComposeCsReq = 7724;
	ReviveCostUpdateScNotify = 7736;
	ReviveAvatarScRsp = 7774;
	SettleCsReq = 7797;
	AutoDressInUnitScRsp = 7789;
	StartCsReq = 7710;
	LeaveScRsp = 7702;
	QueryCsReq = 7790;
	EnterScRsp = 7753;
	QueryScRsp = 7754;
	EnterCsReq = 7798;
	UnitReforgeCsReq = 7742;
	EnterLayerCsReq = 7707;
	AutoDressInMagicUnitChangeScNotify = 7713;
	ScepterTakeOffUnitScRsp = 7792;
	AreaUpdateScNotify = 7726;
	ScepterDressInUnitScRsp = 7720;
}

enum Behfnmkdomk {
	RogueMagicLevelStatusNone = 0;
	RogueMagicLevelStatusProcessing = 1;
	RogueMagicLevelStatusFinished = 2;
	RogueMagicLevelStatusSettled = 3;
}

enum Jlcbbkkgoej {
	RogueMagicLayerStatusNone = 0;
	RogueMagicLayerStatusProcessing = 1;
	RogueMagicLayerStatusFinish = 2;
}

enum Jiokhlhgeod {
	RogueMagicRoomStatusNone = 0;
	RogueMagicRoomStatusInited = 1;
	RogueMagicRoomStatusProcessing = 2;
	RogueMagicRoomStatusFinish = 3;
}

enum Jmpphgigffi {
	RogueMagicSettleReasonNone = 0;
	RogueMagicSettleReasonWin = 1;
	RogueMagicSettleReasonFail = 2;
	RogueMagicSettleReasonInterrupt = 3;
}

enum CmdRogueModifierType {
	None = 0;
	CmdRogueModifierAddNotify = 5398;
	CmdRogueModifierUpdateNotify = 5306;
	CmdRogueModifierSelectCellScRsp = 5379;
	CmdRogueModifierDelNotify = 5341;
	CmdRogueModifierSelectCellCsReq = 5353;
	CmdRogueModifierStageStartNotify = 5355;
}

enum Lgmdbcffjof {
	RogueModifierSourceNone = 0;
	RogueModifierSourceDiceRoll = 1;
	RogueModifierSourceAeon = 2;
	RogueModifierSourceBoardEvent = 3;
	RogueModifierSourceDialogEvent = 4;
	RogueModifierSourceMiracle = 5;
	RogueModifierSourceCellMark = 6;
	RogueModifierSourceAeonTalent = 7;
	RogueModifierSourceBossDecay = 8;
	RogueModifierSourceDiceBranch = 9;
}

enum Njchljfiodm {
	RogueModifierContentDefinite = 0;
	RogueModifierContentRandom = 1;
}

enum CmdRogueTournType {
	None = 0;
	CmdRogueTournLeaveScRsp = 6096;
	CmdRogueTournEnablePermanentTalentCsReq = 6073;
	CmdRogueTournGetMiscRealTimeDataCsReq = 6022;
	CmdRogueTournHandBookNotify = 6023;
	CmdRogueTournLeaveRogueCocoonSceneScRsp = 6099;
	CmdRogueTournEnterRogueCocoonSceneCsReq = 6027;
	CmdRogueTournRenameBuildRefScRsp = 6040;
	CmdRogueTournDeleteBuildRefCsReq = 6050;
	CmdRogueTournGetSeasonTalentInfoCsReq = 6064;
	CmdRogueTournConfirmSettleScRsp = 6081;
	CmdRogueTournGetArchiveRepositoryCsReq = 6024;
	CmdRogueTournDifficultyCompNotify = 6018;
	CmdRogueTournGetCurRogueCocoonInfoCsReq = 6089;
	CmdRogueTournReEnterRogueCocoonStageCsReq = 6065;
	CmdRogueTournExpNotify = 6039;
	CmdRogueTournEnterCsReq = 6036;
	CmdRogueTournReviveCostUpdateScNotify = 6097;
	CmdRogueTournEnableSeasonTalentCsReq = 6079;
	CmdRogueTournQueryCsReq = 6045;
	CmdRogueTournSettleCsReq = 6076;
	CmdRogueTournStartCsReq = 6056;
	CmdRogueTournEnterRoomCsReq = 6015;
	CmdRogueTournGetPermanentTalentInfoScRsp = 6067;
	CmdRogueTournLeaveCsReq = 6012;
	CmdRogueTournAreaUpdateScNotify = 6077;
	CmdRogueTournRenameBuildRefCsReq = 6082;
	CmdRogueTournSaveBuildRefScRsp = 6094;
	CmdRogueTournEnterRoomScRsp = 6026;
	CmdRogueTournGetCurRogueCocoonInfoScRsp = 6055;
	CmdRogueTournTakeExpRewardScRsp = 6054;
	CmdRogueTournGetAllBuildRefCsReq = 6032;
	CmdRogueTournDeleteArchiveCsReq = 6063;
	CmdRogueTournBattleFailSettleInfoScNotify = 6038;
	CmdRogueTournReviveAvatarScRsp = 6052;
	CmdRogueTournGetSeasonTalentInfoScRsp = 6019;
	CmdRogueTournGetAllArchiveCsReq = 6093;
	CmdRogueTournGetAllArchiveScRsp = 6070;
	CmdRogueTournTakeExpRewardCsReq = 6016;
	CmdRogueTournLevelInfoUpdateScNotify = 6046;
	CmdRogueTournTitanUpdateTitanBlessProgressScNotify = 6095;
	CmdRogueTournStartScRsp = 6020;
	CmdRogueTournSaveBuildRefCsReq = 6049;
	CmdRogueTournReviveAvatarCsReq = 6068;
	CmdRogueTournDeleteArchiveScRsp = 6035;
	CmdRogueTournConfirmSettleCsReq = 6013;
	CmdRogueTournReEnterRogueCocoonStageScRsp = 6090;
	CmdRogueTournGetSettleInfoCsReq = 6084;
	CmdRogueTournEnterScRsp = 6058;
	CmdRogueTournClearArchiveNameScNotify = 6028;
	CmdRogueTournEnterLayerScRsp = 6083;
	CmdRogueTournEnablePermanentTalentScRsp = 6072;
	CmdRogueTournRenameArchiveScRsp = 6074;
	CmdRogueTournQueryScRsp = 6047;
	CmdRogueTournEnterLayerCsReq = 6098;
	CmdRogueTournRenameArchiveCsReq = 6030;
	CmdRogueTournSettleScRsp = 6017;
	CmdRogueTournGetMiscRealTimeDataScRsp = 6033;
	CmdRogueTournEnterRogueCocoonSceneScRsp = 6025;
	CmdRogueTournGetAllBuildRefScRsp = 6034;
	CmdRogueTournResetPermanentTalentScRsp = 6100;
	CmdRogueTournWeekChallengeUpdateScNotify = 6014;
	CmdRogueTournDeleteBuildRefScRsp = 6037;
	CmdRogueTournGetSettleInfoScRsp = 6085;
	CmdRogueTournResetPermanentTalentCsReq = 6011;
	CmdRogueTournLeaveRogueCocoonSceneCsReq = 6061;
	CmdRogueTournEnableSeasonTalentScRsp = 6059;
	CmdRogueTournGetPermanentTalentInfoCsReq = 6051;
	CmdRogueTournGetArchiveRepositoryScRsp = 6092;
}

enum Ogadimmljhn {
	RogueTournLevelStatusNone = 0;
	RogueTournLevelStatusProcessing = 1;
	RogueTournLevelStatusFinished = 2;
	RogueTournLevelStatusSettled = 3;
}

enum Odbnigdlncf {
	RogueTournLayerStatusNone = 0;
	RogueTournLayerStatusProcessing = 1;
	RogueTournLayerStatusFinish = 2;
}

enum Lmiknfdlffo {
	RogueTournRoomStatusNone = 0;
	RogueTournRoomStatusInited = 1;
	RogueTournRoomStatusProcessing = 2;
	RogueTournRoomStatusFinish = 3;
}

enum Akkhkmecafl {
	RogueTournSettleReasonNone = 0;
	RogueTournSettleReasonWin = 1;
	RogueTournSettleReasonFail = 2;
	RogueTournSettleReasonInterrupt = 3;
}

enum Ollchpfkhaa {
	RogueTournHandbookNone = 0;
	RogueTournHandbookSimpleMiracle = 1;
	RogueTournHandbookHexMiracle = 2;
	RogueTournHandbookBuff = 3;
	RogueTournHandbookEvent = 4;
	RogueTournHandbookFormula = 5;
	RogueTournHandbookTitanBless = 6;
}

enum CmdRollShopType {
	None = 0;
	CmdGetRollShopInfoScRsp = 6915;
	CmdDoGachaInRollShopScRsp = 6919;
	CmdGetRollShopInfoCsReq = 6901;
	CmdDoGachaInRollShopCsReq = 6917;
	CmdTakeRollShopRewardCsReq = 6902;
	CmdTakeRollShopRewardScRsp = 6912;
}

enum CmdSceneType {
	None = 0;
	CmdDeleteSummonUnitCsReq = 1434;
	CmdSceneGroupRefreshScNotify = 1475;
	CmdSpringRefreshScRsp = 1436;
	CmdGetCurSceneInfoCsReq = 1497;
	CmdSetClientPausedCsReq = 1466;
	CmdSceneEntityMoveScRsp = 1405;
	CmdGameplayCounterRecoverScRsp = 1452;
	CmdSyncServerSceneChangeNotify = 1440;
	CmdEntityBindPropScRsp = 1460;
	CmdUpdateMechanismBarScNotify = 1486;
	CmdGameplayCounterUpdateScNotify = 1476;
	CmdStartCocoonStageCsReq = 1437;
	CmdSceneCastSkillScRsp = 1402;
	CmdEnterSceneCsReq = 1417;
	CmdLastSpringRefreshTimeNotify = 1478;
	CmdReEnterLastElementStageScRsp = 1418;
	CmdStartCocoonStageScRsp = 1488;
	CmdTrainWorldIdChangeScNotify = 1431;
	CmdEnterSectionScRsp = 1492;
	CmdGroupStateChangeScNotify = 1438;
	CmdInteractPropScRsp = 1453;
	CmdGameplayCounterCountDownScRsp = 1456;
	CmdDeactivateFarmElementScRsp = 1413;
	CmdSetClientPausedScRsp = 1428;
	CmdGameplayCounterRecoverCsReq = 1447;
	CmdRefreshTriggerByClientScNotify = 1432;
	CmdChangePropTimelineInfoCsReq = 1441;
	CmdUpdateGroupPropertyCsReq = 1461;
	CmdSceneReviveAfterRebattleScRsp = 1420;
	CmdGetUnlockTeleportCsReq = 1427;
	CmdRefreshTriggerByClientScRsp = 1419;
	CmdGameplayCounterCountDownCsReq = 1459;
	CmdSceneEnterStageScRsp = 1462;
	CmdUpdateFloorSavedValueNotify = 1411;
	CmdReEnterLastElementStageCsReq = 1495;
	CmdActivateFarmElementScRsp = 1485;
	CmdDeactivateFarmElementCsReq = 1408;
	CmdInteractPropCsReq = 1498;
	CmdSceneCastSkillCostMpScRsp = 1463;
	CmdSceneCastSkillCsReq = 1479;
	CmdGetEnteredSceneScRsp = 1500;
	CmdGetEnteredSceneCsReq = 1487;
	CmdSetGroupCustomSaveDataCsReq = 1412;
	CmdEnterSceneByServerScNotify = 1499;
	CmdActivateFarmElementCsReq = 1446;
	CmdSpringRefreshCsReq = 1494;
	CmdEntityBindPropCsReq = 1415;
	CmdSceneEntityMoveCsReq = 1410;
	CmdSceneReviveAfterRebattleCsReq = 1409;
	CmdSetCurInteractEntityScRsp = 1401;
	CmdUnlockTeleportNotify = 1450;
	CmdSyncEntityBuffChangeListScNotify = 1416;
	CmdGetUnlockTeleportScRsp = 1480;
	CmdEnterSceneScRsp = 1422;
	CmdScenePlaneEventScNotify = 1444;
	CmdGroupStateChangeScRsp = 1484;
	CmdChangePropTimelineInfoScRsp = 1455;
	CmdGetCurSceneInfoScRsp = 1406;
	CmdEnteredSceneChangeScNotify = 1468;
	CmdSetCurInteractEntityCsReq = 1442;
	CmdSceneCastSkillMpUpdateScNotify = 1467;
	CmdReturnLastTownScRsp = 1490;
	CmdSceneUpdatePositionVersionNotify = 1439;
	CmdSavePointsInfoNotify = 1435;
	CmdSceneEntityMoveScNotify = 1407;
	CmdRefreshTriggerByClientCsReq = 1465;
	CmdOpenChestScNotify = 1430;
	CmdDeleteSummonUnitScRsp = 1443;
	CmdSceneEnterStageCsReq = 1454;
	CmdUnlockedAreaMapScNotify = 1433;
	CmdEnterSectionCsReq = 1469;
	CmdRecoverAllLineupScRsp = 1425;
	CmdUpdateGroupPropertyScRsp = 1481;
	CmdSceneEntityTeleportCsReq = 1449;
	CmdSetGroupCustomSaveDataScRsp = 1464;
	CmdSceneCastSkillCostMpCsReq = 1426;
	CmdReturnLastTownCsReq = 1474;
	CmdGetSceneMapInfoCsReq = 1448;
	CmdSceneEntityTeleportScRsp = 1496;
	CmdGroupStateChangeCsReq = 1421;
	CmdRecoverAllLineupCsReq = 1451;
	CmdGetSceneMapInfoScRsp = 1493;
}

enum SceneCastSkillType {
	SceneCastSkillNone = 0;
	SceneCastSkillProjectileHit = 1;
	SceneCastSkillProjectileLifetimeFinish = 2;
}

enum MonsterBattleType {
	None = 0;
	TriggerBattle = 1;
	DirectDieSimulateBattle = 2;
	DirectDieSkipBattle = 3;
	NoBattle = 4;
}

enum EntityBuffChangeType {
	SceneEntityBuffChangeTypeDefault = 0;
	SceneEntityBuffChangeTypeAddMazebuff = 1;
	SceneEntityBuffChangeTypeAddAdvModifier = 2;
}

enum EnterSceneReason {
	None = 0;
	ChallengeTimeout = 1;
	RogueTimeout = 2;
	ChangeStoryline = 3;
	DimensionMerge = 4;
}

enum MapInfoChestType {
	None = 0;
	Normal = 101;
	Challenge = 102;
	Puzzle = 104;
}

enum Cnppaammffd {
	GameplayCounterUpdateReasonNone = 0;
	GameplayCounterUpdateReasonActivate = 1;
	GameplayCounterUpdateReasonDeactivate = 2;
	GameplayCounterUpdateReasonChange = 3;
}

enum SceneGroupRefreshType {
	None = 0;
	Loaded = 1;
	Unload = 2;
}

enum CmdServerPrefsType {
	None = 0;
	CmdGetServerPrefsDataCsReq = 6198;
	CmdUpdateServerPrefsDataCsReq = 6179;
	CmdGetAllServerPrefsDataCsReq = 6110;
	CmdGetServerPrefsDataScRsp = 6153;
	CmdGetAllServerPrefsDataScRsp = 6105;
	CmdUpdateServerPrefsDataScRsp = 6102;
}

enum CmdShopType {
	None = 0;
	CmdCityShopInfoScNotify = 1597;
	CmdBuyGoodsCsReq = 1598;
	CmdBuyGoodsScRsp = 1553;
	CmdGetShopListScRsp = 1505;
	CmdGetShopListCsReq = 1510;
	CmdTakeCityShopRewardScRsp = 1502;
	CmdTakeCityShopRewardCsReq = 1579;
}

enum CmdSpaceZooType {
	None = 0;
	CmdSpaceZooCatUpdateNotify = 6707;
	CmdSpaceZooMutateCsReq = 6779;
	CmdSpaceZooDeleteCatScRsp = 6755;
	CmdSpaceZooExchangeItemScRsp = 6716;
	CmdSpaceZooTakeScRsp = 6763;
	CmdSpaceZooDataScRsp = 6705;
	CmdSpaceZooBornCsReq = 6798;
	CmdSpaceZooBornScRsp = 6753;
	CmdSpaceZooOpCatteryScRsp = 6706;
	CmdSpaceZooExchangeItemCsReq = 6739;
	CmdSpaceZooMutateScRsp = 6702;
	CmdSpaceZooTakeCsReq = 6726;
	CmdSpaceZooOpCatteryCsReq = 6797;
	CmdSpaceZooDeleteCatCsReq = 6741;
	CmdSpaceZooDataCsReq = 6710;
}

enum CmdStarFightType {
	None = 0;
	CmdStartStarFightLevelCsReq = 7161;
	CmdStartStarFightLevelScRsp = 7162;
	CmdGetStarFightDataScRsp = 7170;
	CmdGetStarFightDataCsReq = 7165;
	CmdStarFightDataChangeNotify = 7166;
}

enum CmdStoryLineType {
	None = 0;
	CmdGetStoryLineInfoCsReq = 6210;
	CmdChangeStoryLineFinishScNotify = 6202;
	CmdStoryLineTrialAvatarChangeScNotify = 6297;
	CmdGetStoryLineInfoScRsp = 6205;
	CmdStoryLineInfoScNotify = 6298;
}

enum Amjocdiaphf {
	ChangeStoryLineActionNone = 0;
	ChangeStoryLineActionFinishAction = 1;
	ChangeStoryLineActionClient = 2;
	ChangeStoryLineActionCustomOp = 3;
	ChangeStoryLineActionRaid = 4;
}

enum CmdStrongChallengeActivityType {
	None = 0;
	CmdEnterStrongChallengeActivityStageCsReq = 6698;
	CmdStrongChallengeActivityBattleEndScNotify = 6679;
	CmdEnterStrongChallengeActivityStageScRsp = 6653;
	CmdGetStrongChallengeActivityDataCsReq = 6610;
	CmdGetStrongChallengeActivityDataScRsp = 6605;
}

enum CmdSummonActivityType {
	None = 0;
	CmdGetSummonActivityDataCsReq = 7565;
	CmdGetSummonActivityDataScRsp = 7570;
	CmdSummonActivityBattleEndScNotify = 7566;
	CmdEnterSummonActivityStageScRsp = 7562;
	CmdEnterSummonActivityStageCsReq = 7561;
}

enum CmdSwitchHandType {
	None = 0;
	CmdSwitchHandResetHandPosCsReq = 8120;
	CmdSwitchHandResetGameCsReq = 8104;
	CmdSwitchHandResetGameScRsp = 8105;
	CmdSwitchHandStartScRsp = 8119;
	CmdSwitchHandUpdateCsReq = 8107;
	CmdSwitchHandDataCsReq = 8101;
	CmdSwitchHandFinishCsReq = 8102;
	CmdSwitchHandCoinUpdateScRsp = 8111;
	CmdSwitchHandResetHandPosScRsp = 8103;
	CmdSwitchHandCoinUpdateCsReq = 8110;
	CmdSwitchHandFinishScRsp = 8112;
	CmdSwitchHandStartCsReq = 8117;
	CmdSwitchHandDataScRsp = 8115;
	CmdSwitchHandUpdateScRsp = 8114;
}

enum Leglgdjopkc {
	SwitchHandOpPropTypeNone = 0;
	SwitchHandOpPropTypeCatch = 1;
	SwitchHandOpPropTypeLift = 2;
}

enum CmdSwordTrainingType {
	None = 0;
	CmdSwordTrainingLearnSkillScRsp = 7456;
	CmdSwordTrainingGiveUpGameCsReq = 7459;
	CmdSwordTrainingExamResultConfirmCsReq = 7469;
	CmdSwordTrainingActionTurnSettleScNotify = 7486;
	CmdSwordTrainingDailyPhaseConfirmCsReq = 7451;
	CmdSwordTrainingResumeGameScRsp = 7472;
	CmdGetSwordTrainingDataScRsp = 7496;
	CmdSwordTrainingGameSyncChangeScNotify = 7473;
	CmdSwordTrainingSetSkillTraceScRsp = 7485;
	CmdSwordTrainingSelectEndingCsReq = 7464;
	CmdSwordTrainingStoryBattleCsReq = 7460;
	CmdSwordTrainingStoryBattleScRsp = 7495;
	CmdSwordTrainingTurnActionScRsp = 7452;
	CmdSwordTrainingMarkEndingViewedScRsp = 7481;
	CmdSwordTrainingDialogueSelectOptionScRsp = 7492;
	CmdSwordTrainingExamResultConfirmScRsp = 7488;
	CmdGetSwordTrainingDataCsReq = 7471;
	CmdSwordTrainingRestoreGameCsReq = 7476;
	CmdEnterSwordTrainingExamScRsp = 7479;
	CmdSwordTrainingLearnSkillCsReq = 7455;
	CmdSwordTrainingStartGameCsReq = 7500;
	CmdSwordTrainingStartGameScRsp = 7487;
	CmdSwordTrainingStoryConfirmScRsp = 7470;
	CmdSwordTrainingRestoreGameScRsp = 7461;
	CmdSwordTrainingGiveUpGameScRsp = 7490;
	CmdSwordTrainingDialogueSelectOptionCsReq = 7477;
	CmdSwordTrainingDailyPhaseConfirmScRsp = 7478;
	CmdSwordTrainingSetSkillTraceCsReq = 7489;
	CmdSwordTrainingSelectEndingScRsp = 7499;
	CmdEnterSwordTrainingExamCsReq = 7482;
	CmdSwordTrainingTurnActionCsReq = 7480;
	CmdSwordTrainingResumeGameCsReq = 7494;
	CmdSwordTrainingMarkEndingViewedCsReq = 7475;
	CmdSwordTrainingGameSettleScNotify = 7462;
	CmdSwordTrainingUnlockSyncScNotify = 7458;
	CmdSwordTrainingStoryConfirmCsReq = 7498;
}

enum Pkhjbpmibba {
	SwordTrainGameSourceTypeNone = 0;
	SwordTrainGameSourceTypeTurnSettle = 1;
	SwordTrainGameSourceTypeStatusUpgrade = 2;
	SwordTrainGameSourceTypeAction = 3;
	SwordTrainGameSourceTypeActionHint = 4;
	SwordTrainGameSourceTypeStory = 5;
	SwordTrainGameSourceTypeExamBonus = 6;
	SwordTrainGameSourceTypeDialogue = 7;
}

enum Bjncdefeeji {
	SwordTrainingDailyPhaseTypeNone = 0;
	SwordTrainingDailyPhaseTypeMorning = 1;
	SwordTrainingDailyPhaseTypeNoon = 2;
	SwordTrainingDailyPhaseTypeAfternoon = 3;
	SwordTrainingDailyPhaseTypeEvening = 4;
}

enum Hdijjmdpile {
	SwordTrainingStatusTypeNone = 0;
	SwordTrainingStatusTypePower = 1;
	SwordTrainingStatusTypeAgility = 2;
	SwordTrainingStatusTypeToughness = 3;
	SwordTrainingStatusTypePerception = 4;
	SwordTrainingStatusTypeMax = 5;
}

enum Hdmkphalalg {
	SwordTrainingGameSettleNone = 0;
	SwordTrainingGameSettleFinish = 1;
	SwordTrainingGameSettleGiveUp = 2;
	SwordTrainingGameSettleBattleFailed = 3;
	SwordTrainingGameSettleForce = 4;
	SwordTrainingGameSettleByRestore = 5;
}

enum CmdPlayerSync {
	None = 0;
	ScNotify = 610;
}

enum CmdTalkRewardType {
	None = 0;
	CmdGetFirstTalkNpcScRsp = 2102;
	CmdGetFirstTalkNpcCsReq = 2179;
	CmdSelectInclinationTextCsReq = 2141;
	CmdFinishFirstTalkNpcScRsp = 2106;
	CmdGetNpcTakenRewardScRsp = 2105;
	CmdTakeTalkRewardScRsp = 2153;
	CmdFinishFirstTalkByPerformanceNpcScRsp = 2126;
	CmdTakeTalkRewardCsReq = 2198;
	CmdSelectInclinationTextScRsp = 2155;
	CmdFinishFirstTalkNpcCsReq = 2197;
	CmdGetFirstTalkByPerformanceNpcScRsp = 2139;
	CmdFinishFirstTalkByPerformanceNpcCsReq = 2116;
	CmdGetFirstTalkByPerformanceNpcCsReq = 2107;
	CmdGetNpcTakenRewardCsReq = 2110;
}

enum CmdTarotBookType {
	None = 0;
	CmdTarotBookFinishInteractionScRsp = 8160;
	CmdTarotBookMultiOpenPackAndUnlockStoryScRsp = 8149;
	CmdTarotBookUnlockInteractionScRsp = 8144;
	CmdTarotBookUnlockStoryCsReq = 8142;
	CmdTarotBookGetDataCsReq = 8141;
	CmdTarotBookGetDataScRsp = 8155;
	CmdTarotBookFinishInteractionCsReq = 8151;
	CmdTarotBookOpenPackScRsp = 8159;
	CmdTarotBookFinishStoryCsReq = 8147;
	CmdTarotBookUnlockInteractionCsReq = 8143;
	CmdTarotBookFinishStoryScRsp = 8154;
	CmdTarotBookMultiOpenPackAndUnlockStoryCsReq = 8146;
	CmdTarotBookSyncDataScNotify = 8145;
	CmdTarotBookUnlockStoryScRsp = 8152;
	CmdTarotBookOpenPackCsReq = 8157;
	CmdTarotBookModifyEnergyScNotify = 8150;
}

enum CmdTelevisionActivityType {
	None = 0;
	CmdGetTelevisionActivityDataCsReq = 6961;
	CmdEnterTelevisionActivityStageScRsp = 6962;
	CmdEnterTelevisionActivityStageCsReq = 6979;
	CmdTelevisionActivityDataChangeScNotify = 6977;
	CmdGetTelevisionActivityDataScRsp = 6975;
	CmdTelevisionActivityBattleEndScNotify = 6972;
}

enum CmdTextJoinType {
	None = 0;
	CmdTextJoinSaveCsReq = 3810;
	CmdTextJoinQueryScRsp = 3853;
	CmdTextJoinSaveScRsp = 3805;
	CmdTextJoinBatchSaveCsReq = 3879;
	CmdTextJoinBatchSaveScRsp = 3802;
	CmdTextJoinQueryCsReq = 3898;
}

enum CmdTrackPhotoActivityType {
	None = 0;
	CmdSettleTrackPhotoStageScRsp = 7552;
	CmdStartTrackPhotoStageScRsp = 7559;
	CmdQuitTrackPhotoStageScRsp = 7554;
	CmdGetTrackPhotoActivityDataScRsp = 7560;
	CmdStartTrackPhotoStageCsReq = 7556;
	CmdQuitTrackPhotoStageCsReq = 7553;
	CmdSettleTrackPhotoStageCsReq = 7551;
	CmdGetTrackPhotoActivityDataCsReq = 7555;
}

enum CmdTrainPartyType {
	None = 0;
	CmdTrainPartyGamePlayStartScRsp = 8092;
	CmdTrainPartyLeaveCsReq = 8074;
	CmdTrainPartySettleNotify = 8097;
	CmdTrainPartyUpdatePosEnvScRsp = 8001;
	CmdTrainPartyBuildStartStepScRsp = 8026;
	CmdTrainPartyEnterCsReq = 8036;
	CmdTrainPartyBuildStartStepCsReq = 8016;
	CmdTrainPartyBuildDiyCsReq = 8063;
	CmdTrainPartyUpdatePosEnvCsReq = 8042;
	CmdTrainPartyUseCardCsReq = 8098;
	CmdTrainPartySyncUpdateScNotify = 8041;
	CmdTrainPartyGetDataCsReq = 8010;
	CmdTrainPartyHandlePendingActionCsReq = 8007;
	CmdTrainPartyEnterScRsp = 8078;
	CmdTrainPartyGetDataScRsp = 8005;
	CmdTrainPartyLeaveScRsp = 8090;
	CmdTrainPartyUseCardScRsp = 8053;
	CmdTrainPartyBuildingUpdateNotify = 8072;
	CmdTrainPartyTakeBuildLevelAwardCsReq = 8051;
	CmdTrainPartyHandlePendingActionScRsp = 8039;
	CmdTrainPartyBuildDiyScRsp = 8067;
	CmdTrainPartyGamePlayStartCsReq = 8069;
	CmdTrainPartyAddBuildDynamicBuffCsReq = 8035;
	CmdTrainPartyTakeBuildLevelAwardScRsp = 8025;
	CmdTrainPartyMoveScNotify = 8079;
	CmdTrainPartyAddBuildDynamicBuffScRsp = 8037;
	CmdTrainPartyGamePlaySettleNotify = 8024;
}

enum TrainPartyBuildStatus {
	BuildGoalStepNone = 0;
	BuildGoalStepIdle = 1;
	BuildGoalStepStart = 2;
	BuildGoalStepFinish = 3;
}

enum TrainPartyUpdateSrc {
	KTrainPartySrcNone = 0;
	KTrainPartySrcCard = 1;
	KTrainPartySrcGrid = 2;
	KTrainPartySrcPam = 3;
	KTrainPartySrcPassenger = 4;
	KTrainPartySrcBuilding = 5;
}

enum Ijdnojemian {
	KDialogueEventNone = 0;
	KGamePlayStartDialogueEvent = 1;
	KGridDialogueEvent = 2;
	KAfterMeetingDialogueEvent = 3;
}

enum Lcdemgacekd {
	KMtSkillNone = 0;
	KMtSkillModifyBase = 1;
	KMtSkillModifyRatio = 2;
	KMtSkillMultiplyRatio = 3;
	KMtSkillSelfDestroy = 4;
}

enum TrainPartyMtSkillType {
	TrainPartyMtCategoryNone = 0;
	TrainPartyMtCategoryS = 1;
	TrainPartyMtCategoryA = 2;
	TrainPartyMtCategoryB = 3;
	TrainPartyMtCategoryC = 4;
	TrainPartyMtCategoryD = 5;
	TrainPartyMtCategoryE = 6;
	TrainPartyMtCategoryF = 7;
	TrainPartyMtCategoryG = 8;
}

enum CmdTrainVisitorType {
	None = 0;
	CmdTrainVisitorBehaviorFinishCsReq = 3710;
	CmdTrainVisitorBehaviorFinishScRsp = 3705;
	CmdTrainRefreshTimeNotify = 3779;
	CmdShowNewSupplementVisitorScRsp = 3739;
	CmdGetTrainVisitorRegisterCsReq = 3797;
	CmdShowNewSupplementVisitorCsReq = 3707;
	CmdGetTrainVisitorBehaviorScRsp = 3753;
	CmdGetTrainVisitorRegisterScRsp = 3706;
	CmdTrainVisitorRewardSendNotify = 3702;
	CmdGetTrainVisitorBehaviorCsReq = 3798;
	CmdTakeTrainVisitorUntakenBehaviorRewardCsReq = 3741;
	CmdTakeTrainVisitorUntakenBehaviorRewardScRsp = 3755;
}

enum Iippjkhmpch {
	TrainVisitorRewardSendNone = 0;
	TrainVisitorRewardSendRegister = 1;
	TrainVisitorRewardSendMission = 2;
}

enum Llmibdpfjnd {
	TrainVisitorStatusNone = 0;
	TrainVisitorStatusInit = 1;
	TrainVisitorStatusGetOn = 2;
	TrainVisitorStatusGetOff = 3;
	TrainVisitorStatusBeTrainMember = 4;
}

enum Jfjjfgaeoab {
	TrainVisitorRegisterGetTypeNone = 0;
	TrainVisitorRegisterGetTypeAuto = 1;
	TrainVisitorRegisterGetTypeManual = 2;
}

enum CmdTravelBrochure {
	None = 0;
	ApplyPasterListScRsp = 6490;
	UpdatePasterPosCsReq = 6407;
	GetDataCsReq = 6410;
	SetCustomValueCsReq = 6463;
	SelectMessageCsReq = 6479;
	SetCustomValueScRsp = 6467;
	UpdatePasterPosScRsp = 6439;
	RemovePasterCsReq = 6441;
	SelectMessageScRsp = 6402;
	ApplyPasterCsReq = 6497;
	RemovePasterScRsp = 6455;
	PageUnlockScNotify = 6498;
	SetPageDescStatusCsReq = 6472;
	ApplyPasterScRsp = 6406;
	PageResetCsReq = 6436;
	PageResetScRsp = 6478;
	SetPageDescStatusScRsp = 6494;
	GetPasterScNotify = 6416;
	ApplyPasterListCsReq = 6474;
	GetDataScRsp = 6405;
}

enum Hgkkppljboi {
	PageNone = 0;
	PageUnlocked = 1;
	PageInteracted = 2;
}

enum Dcjaopdinoi {
	PageDescNone = 0;
	PageDescShowDetail = 1;
	PageDescCollapse = 2;
}

enum CmdTreasureDungeonType {
	None = 0;
	CmdOpenTreasureDungeonGridCsReq = 4463;
	CmdFightTreasureDungeonMonsterScRsp = 4494;
	CmdOpenTreasureDungeonGridScRsp = 4467;
	CmdInteractTreasureDungeonGridScRsp = 4478;
	CmdTreasureDungeonFinishScNotify = 4405;
	CmdFightTreasureDungeonMonsterCsReq = 4472;
	CmdUseTreasureDungeonItemScRsp = 4490;
	CmdQuitTreasureDungeonScRsp = 4462;
	CmdGetTreasureDungeonActivityDataCsReq = 4407;
	CmdInteractTreasureDungeonGridCsReq = 4436;
	CmdEnterTreasureDungeonCsReq = 4416;
	CmdTreasureDungeonDataScNotify = 4410;
	CmdGetTreasureDungeonActivityDataScRsp = 4439;
	CmdQuitTreasureDungeonCsReq = 4454;
	CmdEnterTreasureDungeonScRsp = 4426;
	CmdUseTreasureDungeonItemCsReq = 4474;
}

enum Imknbjcoiop {
	TreasureDungeonRecordNone = 0;
	TreasureDungeonRecordAddHp = 1;
	TreasureDungeonRecordSubHp = 2;
	TreasureDungeonRecordSubHpNoExplore = 3;
	TreasureDungeonRecordAddAttack = 5;
	TreasureDungeonRecordAddDefence = 6;
	TreasureDungeonRecordAddExplore = 9;
	TreasureDungeonRecordSubExplore = 10;
	TreasureDungeonRecordAddExploreOverflow = 11;
	TreasureDungeonRecordSummon = 15;
	TreasureDungeonRecordKill = 16;
	TreasureDungeonRecordAddTrialAvatar = 20;
	TreasureDungeonRecordAddBuff = 24;
	TreasureDungeonRecordUnlockDoor = 25;
	TreasureDungeonRecordEnemyEnhance = 27;
	TreasureDungeonRecordEnemyWeaken = 28;
	TreasureDungeonRecordEnemyAuraRemove = 29;
	TreasureDungeonRecordSpecialMonsterRun = 30;
	TreasureDungeonRecordSpecialMonsterKill = 31;
	TreasureDungeonRecordBattleBuffTriggerSuccess = 33;
	TreasureDungeonRecordBattleBuffTriggerFail = 34;
	TreasureDungeonRecordBattleBuffAddExplore = 35;
	TreasureDungeonRecordBattleBuffOpenGrid = 36;
	TreasureDungeonRecordBattleBuffAddItem = 37;
	TreasureDungeonRecordAvatarDead = 40;
	TreasureDungeonRecordTrialAvatarDead = 41;
	TreasureDungeonRecordAllAvatarDead = 42;
	TreasureDungeonRecordOpenItemChest = 43;
}

enum CmdTutorialType {
	None = 0;
	CmdUnlockTutorialCsReq = 1679;
	CmdFinishTutorialGuideCsReq = 1607;
	CmdGetTutorialGuideCsReq = 1698;
	CmdGetTutorialScRsp = 1605;
	CmdUnlockTutorialGuideScRsp = 1606;
	CmdFinishTutorialScRsp = 1655;
	CmdGetTutorialCsReq = 1610;
	CmdGetTutorialGuideScRsp = 1653;
	CmdFinishTutorialCsReq = 1641;
	CmdUnlockTutorialGuideCsReq = 1697;
	CmdFinishTutorialGuideScRsp = 1639;
	CmdUnlockTutorialScRsp = 1602;
}

enum TutorialStatus {
	TutorialNone = 0;
	TutorialUnlock = 1;
	TutorialFinish = 2;
}

enum Mpjppghfheh {
	TutorialFinishTypeNone = 0;
	TutorialFinishTypeManual = 1;
	TutorialFinishTypeAutomatic = 2;
}

enum CmdWaypointType {
	None = 0;
	CmdGetWaypointScRsp = 405;
	CmdWaypointShowNewCsNotify = 497;
	CmdGetChapterCsReq = 479;
	CmdGetChapterScRsp = 402;
	CmdGetWaypointCsReq = 410;
	CmdTakeChapterRewardScRsp = 441;
	CmdSetCurWaypointScRsp = 453;
	CmdTakeChapterRewardCsReq = 406;
	CmdSetCurWaypointCsReq = 498;
}

enum Mhhljfejgnm {
	WaypointTypeNone = 0;
	WaypointTypeStage = 1;
	WaypointTypePlot = 2;
}

enum Obfaicfogmp {
	WaypointUnlockNone = 0;
	WaypointUnlockPre = 1;
	WaypointUnlockLevel = 2;
}

enum CmdWolfBroType {
	None = 0;
	CmdQuitWolfBroGameCsReq = 6528;
	CmdWolfBroGameExplodeMonsterCsReq = 6550;
	CmdWolfBroGameUseBulletCsReq = 6518;
	CmdWolfBroGameUseBulletScRsp = 6513;
	CmdWolfBroGameActivateBulletScRsp = 6506;
	CmdQuitWolfBroGameScRsp = 6527;
	CmdRestoreWolfBroGameArchiveCsReq = 6502;
	CmdRestoreWolfBroGameArchiveScRsp = 6501;
	CmdArchiveWolfBroGameScRsp = 6530;
	CmdArchiveWolfBroGameCsReq = 6546;
	CmdStartWolfBroGameScRsp = 6521;
	CmdWolfBroGameDataChangeScNotify = 6543;
	CmdGetWolfBroGameDataCsReq = 6542;
	CmdWolfBroGameExplodeMonsterScRsp = 6537;
	CmdGetWolfBroGameDataScRsp = 6504;
	CmdWolfBroGamePickupBulletCsReq = 6532;
	CmdWolfBroGameActivateBulletCsReq = 6505;
	CmdWolfBroGamePickupBulletScRsp = 6529;
	CmdStartWolfBroGameCsReq = 6523;
}

enum CmdWorldUnlockType {
	None = 0;
	CmdWorldUnlockScRsp = 7627;
	CmdWorldUnlockCsReq = 7626;
}

enum Djebimhnpbm {
	DispatchTypeNone = 0;
	DispatchTypeByAddr = 1;
	DispatchTypeByMod = 2;
	DispatchTypeByRand = 3;
	DispatchTypeByChash = 4;
	DispatchTypeByStickySession = 5;
	DispatchTypeByObject = 6;
}
