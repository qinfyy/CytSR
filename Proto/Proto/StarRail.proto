syntax = "proto3";

option csharp_namespace = "Proto";

enum PlayerActionType {
    PLAYER_ACTION_NONE = 0;
    PLAYER_ACTION_REGISTER = 1;
    PLAYER_ACTION_LOGIN = 2;
    PLAYER_ACTION_LOGOUT = 3;
    PLAYER_ACTION_ADD_EXP = 4;
    PLAYER_ACTION_LEVEL_UP = 5;
    PLAYER_ACTION_ADD_MATERIAL = 6;
    PLAYER_ACTION_SAVE_STAT = 7;
    PLAYER_ACTION_TRAVEL_BROCHURE_INTERACT = 8;
    PLAYER_ACTION_RECHARGE = 101;
    PLAYER_ACTION_BUY_GOODS = 102;
    PLAYER_ACTION_ADD_COIN = 103;
    PLAYER_ACTION_MONTH_CARD_DAILY_HCOIN = 104;
    PLAYER_ACTION_MONTH_CARD_BUY_MCOIN = 105;
    PLAYER_ACTION_RECHARGE_FREE_COIN = 106;
    PLAYER_ACTION_ADD_MONTH_CARD = 107;
    PLAYER_ACTION_RECHARGE_GIFT_PAY = 108;
    PLAYER_ACTION_RECHARGE_GIFT_FREE = 109;
    PLAYER_ACTION_RECHARGE_BENEFIT = 110;
    PLAYER_ACTION_RECHARGE_GIFT_TAKE_REWARD = 111;
    PLAYER_ACTION_RECHARGE_GIFT_REACH = 112;
    PLAYER_ACTION_RECHARGE_BENEFIT_REACH = 113;
    PLAYER_ACTION_MISSION_ACCEPT = 201;
    PLAYER_ACTION_MISSION_FINISH = 202;
    PLAYER_ACTION_MISSION_FAIL = 203;
    PLAYER_ACTION_MAIN_MISSION_ACCEPT = 204;
    PLAYER_ACTION_SUB_MISSION_ACCEPT = 205;
    PLAYER_ACTION_MAIN_MISSION_FINISH = 206;
    PLAYER_ACTION_SUB_MISSION_FINISH = 207;
    PLAYER_ACTION_DAILY_TASK_FINISH = 208;
    PLAYER_ACTION_DAILY_TASK_TAKE_REWARD = 209;
    PLAYER_ACTION_NPC_TALK_REWARD = 210;
    PLAYER_ACTION_MAIN_MISSION_RECOVER = 211;
    PLAYER_ACTION_MAIN_MISSION_DISABLE = 212;
    PLAYER_ACTION_CONSUME_ITEM_SUB_MISSION_FINISH = 213;
    PLAYER_ACTION_GM = 1001;
    PLAYER_ACTION_CUSTOM_OP = 1002;
    PLAYER_ACTION_CHECK_SUM = 1003;
    PLAYER_ACTION_PLAYER_LOCATION = 1004;
    PLAYER_ACTION_CHANGE_LANGUAGE = 1005;
    PLAYER_ACTION_CLIENT_REPORT = 1006;
    PLAYER_ACTION_ACE_REPORT = 1007;
    PLAYER_ACTION_PLAYER_POWER_INFO = 1008;
    PLAYER_ACTION_DAILY_REFRESH = 1009;
    PLAYER_ACTION_AVATAR_VALUE_INFO = 1010;
    PLAYER_ACTION_MOVE_CHECK_FAILED_REPORT = 1011;
    PLAYER_ACTION_BATTLE_FAILED_REPORT = 1012;
    PLAYER_ACTION_SECURITY_REPORT = 1013;
    PLAYER_ACTION_AVATAR_PROMOTION = 1101;
    PLAYER_ACTION_AVATAR_ADD = 1103;
    PLAYER_ACTION_AVATAR_USE_EXP_ITEM = 1104;
    PLAYER_ACTION_AVATAR_LEVEL_UP = 1105;
    PLAYER_ACTION_SKILL_TREE_UP = 1106;
    PLAYER_ACTION_AVATAR_HP_CHANGE = 1107;
    PLAYER_ACTION_AVATAR_MP_CHANGE = 1108;
    PLAYER_ACTION_AVATAR_ADD_EXP = 1109;
    PLAYER_ACTION_AVATAR_RANK_UP = 1110;
    PLAYER_ACTION_AVATAR_REPEATED = 1111;
    PLAYER_ACTION_MP_MAX_CHANGE = 1112;
    PLAYER_ACTION_AVATAR_TAKE_PROMOTION_REWARD = 1113;
    PLAYER_ACTION_AVATAR_RELIC_AFFIX_INFO = 1114;
    PLAYER_ACTION_AVATAR_MARK = 1115;
    PLAYER_ACTION_AVATAR_SYSTEM_POWER_RESET = 1116;
    PLAYER_ACTION_AVATAR_CHANGE_PATH = 1119;
    PLAYER_ACTION_SET_GROWTH_TARGET_AVATAR = 1120;
    PLAYER_ACTION_DEL_AVATAR = 1121;
    PLAYER_ACTION_AVATAR_SKIN_CHANGE = 1122;
    PLAYER_ACTION_SET_GROWTH_TARGET_FUNCTION_CONFIG = 1123;
    PLAYER_ACTION_AVATAR_SKIN_ACTIVITY_REISSUE = 1124;
    PLAYER_ACTION_STAGE_BEGIN = 1202;
    PLAYER_ACTION_STAGE_END = 1203;
    PLAYER_ACTION_COCOON_STAGE_BEGIN = 1205;
    PLAYER_ACTION_COCOON_STAGE_END = 1206;
    PLAYER_ACTION_FARM_ELEMENT_END = 1207;
    PLAYER_ACTION_ELEMENT_STAGE_END = 1208;
    PLAYER_ACTION_COCOON_SWEEP = 1209;
    PLAYER_ACTION_FARM_ELEMENT_SWEEP = 1210;
    PLAYER_ACTION_RECOVER_STAMINA = 1301;
    PLAYER_ACTION_EXCHANGE_STAMINA = 1302;
    PLAYER_ACTION_LOGIN_REWARD = 1303;
    PLAYER_ACTION_MODIFY_NICKNAME = 1304;
    PLAYER_ACTION_GET_LEVEL_REWARD = 1305;
    PLAYER_ACTION_WORLD_LEVEL_UP = 1306;
    PLAYER_ACTION_ADD_STAMINA = 1307;
    PLAYER_ACTION_GAMEPLAY_BIRTHDAY_REWARD_MAIL = 1308;
    PLAYER_ACTION_RECHARGE_REBATE_REWARD = 1309;
    PLAYER_ACTION_GAMEPLAY_BIRTHDAY_SET = 1310;
    PLAYER_ACTION_RESERVE_STAMINA_EXCHANGE = 1311;
    PLAYER_ACTION_RESERVE_STAMINA_ADD = 1312;
    PLAYER_ACTION_RESERVE_STAMINA_CHANGE = 1313;
    PLAYER_ACTION_NOW_STAMINA = 1314;
    PLAYER_ACTION_MAIL = 1401;
    PLAYER_ACTION_MAIL_OP_BY_USER = 1402;
    PLAYER_ACTION_MAIL_OP_BY_MUIP = 1403;
    PLAYER_ACTION_MAIL_OP_BY_GM = 1404;
    PLAYER_ACTION_MAIL_OP_BY_FULL = 1405;
    PLAYER_ACTION_MAIL_OP_BY_EXPIRE = 1406;
    PLAYER_ACTION_MAIL_OP_BY_INTERNAL = 1407;
    PLAYER_ACTION_ADD_MAIL = 1408;
    PLAYER_ACTION_DEL_MAIL = 1409;
    PLAYER_ACTION_TAKE_ATTACHMENT = 1410;
    PLAYER_ACTION_READ_MAIL = 1411;
    PLAYER_ACTION_BATTLE_AVATAR = 1501;
    PLAYER_ACTION_BATTLE_MONSTER = 1502;
    PLAYER_ACTION_BATTLE_END = 1504;
    PLAYER_ACTION_BATTLE_REPLAY = 1505;
    PLAYER_ACTION_BATTLE_AVATAR_DEATH = 1506;
    PLAYER_ACTION_BATTLE_SWITCH_PHASE = 1507;
    PLAYER_ACTION_BATTLE_MONSTER_SKILL = 1508;
    PLAYER_ACTION_BATTLE_REBATTLE = 1509;
    PLAYER_ACTION_BATTLE_AVATAR_SERVANT = 1510;
    PLAYER_ACTION_MISSION_REWARD = 1602;
    PLAYER_ACTION_QUEST_ACCEPT = 1603;
    PLAYER_ACTION_QUEST_FINISH = 1604;
    PLAYER_ACTION_QUEST_REMOVE = 1605;
    PLAYER_ACTION_QUEST_REWARD = 1606;
    PLAYER_ACTION_QUEST_AUTO_CLOSE = 1607;
    PLAYER_ACTION_QUEST_EXPIRED = 1608;
    PLAYER_ACTION_MISSION_REQUIRED = 1609;
    PLAYER_ACTION_SUBMISSION_REWARD = 1610;
    PLAYER_ACTION_ACHIEVEMENT_LEVEL_REWARD = 1611;
    PLAYER_ACTION_QUEST_DELETE = 1612;
    PLAYER_ACTION_SUB_MISSION_REWARD = 1613;
    PLAYER_ACTION_MISSION_COMPENSATE = 1614;
    PLAYER_ACTION_MISSION_RECYCLE = 1615;
    PLAYER_ACTION_QUEST_RESET = 1616;
    PLAYER_ACTION_QUEST_OPTIONAL_REWARD = 1617;
    PLAYER_ACTION_MCV_CHANGE = 1618;
    PLAYER_ACTION_PROP_INTERACT = 1704;
    PLAYER_ACTION_AVATAR_MAZE_SKILL = 1705;
    PLAYER_ACTION_ENTER_MAZE = 1706;
    PLAYER_ACTION_ORDINARY_INTERACT = 1707;
    PLAYER_ACTION_CHEST_INTERACT = 1708;
    PLAYER_ACTION_CHECK_POINT_UNLOCK = 1709;
    PLAYER_ACTION_CHECK_POINT_INTERACT = 1710;
    PLAYER_ACTION_CHECK_POINT_REVIVE = 1711;
    PLAYER_ACTION_CHECK_POINT_TRANSFER = 1712;
    PLAYER_ACTION_MONSTER_INTERACT = 1714;
    PLAYER_ACTION_NPC_INTERACT = 1716;
    PLAYER_ACTION_PROP_HIT = 1717;
    PLAYER_ACTION_PRELOGUE_REVIVE = 1718;
    PLAYER_ACTION_PROP_STATE = 1719;
    PLAYER_ACTION_CHECK_POINT_RECOVER = 1720;
    PLAYER_ACTION_MECHANISM_BAR = 1722;
    PLAYER_ACTION_SUBMIT_ORIGAMI_ITEM = 1723;
    PLAYER_ACTION_MAZE_BUFF_DROP_ITEM = 1724;
    PLAYER_ACTION_FSV_CHANGE = 1725;
    PLAYER_ACTION_TIMELINE_PROP_STATE = 1726;
    PLAYER_ACTION_GROUP_PROPERTY_CHANGE = 1727;
    PLAYER_ACTION_EQUIPMENT_PROMOTION = 1901;
    PLAYER_ACTION_ADD_ITEM = 1902;
    PLAYER_ACTION_USE_ITEM = 1904;
    PLAYER_ACTION_EQUIPMENT_RANK_UP = 1905;
    PLAYER_ACTION_EQUIPMENT_LEVEL_UP = 1906;
    PLAYER_ACTION_EXP_UP_EQUIPMENT_RETURN = 1907;
    PLAYER_ACTION_BAG_FULL_REWARD_MAIL = 1908;
    PLAYER_ACTION_EQUIPMENT_ADD = 1909;
    PLAYER_ACTION_EQUIPMENT_WEAR = 1910;
    PLAYER_ACTION_ITEM_COMPOSE = 1911;
    PLAYER_ACTION_RELIC_LEVEL_UP = 1912;
    PLAYER_ACTION_EXP_UP_RELIC_RETURN = 1913;
    PLAYER_ACTION_RELIC_NUM_CHANGED = 1914;
    PLAYER_ACTION_RELIC_WEAR = 1915;
    PLAYER_ACTION_RELIC_COMPOSE = 1916;
    PLAYER_ACTION_SELL_ITEM = 1917;
    PLAYER_ACTION_UNLOCK_MUSIC = 1918;
    PLAYER_ACTION_EXCHANGE_HCOIN_WITH_PAY_MCOIN = 1919;
    PLAYER_ACTION_GET_REWARD = 1920;
    PLAYER_ACTION_EXCHANGE_HCOIN_WITH_FREE_MCOIN = 1921;
    PLAYER_ACTION_ITEM_COMPOSE_FORMULA_UNLOCK = 1922;
    PLAYER_ACTION_EXCHANGE_HCOIN = 1923;
    PLAYER_ACTION_CITY_SHOP_LEVEL_REWARD = 1924;
    PLAYER_ACTION_ITEM_RECYCLE = 1925;
    PLAYER_ACTION_MUSEUM_FUNDS_CONSUME = 1926;
    PLAYER_ACTION_MUSEUM_EVENT_BUY_STUFF = 1927;
    PLAYER_ACTION_MUSEUM_MARKET_BUY_STUFF = 1928;
    PLAYER_ACTION_MUSEUM_RANDOM_EVENT = 1929;
    PLAYER_ACTION_MUSEUM_INITIAL_ITEM = 1930;
    PLAYER_ACTION_OPTIONAL_BOX_REWARD = 1931;
    PLAYER_ACTION_DESTROY_ITEM = 1932;
    PLAYER_ACTION_TRANSFER_EXP = 1933;
    PLAYER_ACTION_ONDUTY_USE = 1934;
    PLAYER_ACTION_ITEM_MARK = 1935;
    PLAYER_ACTION_RELIC_DISCARD = 1936;
    PLAYER_ACTION_GENERAL_VIRTUAL_ITEM_CHANGE = 1937;
    PLAYER_ACTION_RELIC_LOCK = 1938;
    PLAYER_ACTION_RELIC_FILTER_PLAN_SAVE = 1939;
    PLAYER_ACTION_RELIC_FILTER_PLAN_DELETE = 1940;
    PLAYER_ACTION_RELIC_FILTER_PLAN_MARK = 1941;
    PLAYER_ACTION_RELIC_SELL = 1942;
    PLAYER_ACTION_RELIC_REFORGE = 1943;
    PLAYER_ACTION_RELIC_SMART_WEAR_CUSTOM_PLAN = 1944;
    PLAYER_ACTION_RECOVER_RELIC = 1945;
    PLAYER_ACTION_RECOVER_EQUIPMENT = 1946;
    PLAYER_ACTION_EQUIPMENT_SELL = 1947;
    PLAYER_ACTION_RELIC_SMART_WEAR_PIN_RELIC = 1948;
    PLAYER_ACTION_RELIC_COCOON_SETTING = 1949;
    PLAYER_ACTION_PERSONAL_CARD_CHANGE = 1950;
    PLAYER_ACTION_PHONE_CASE_CHANGE = 1951;
    PLAYER_ACTION_TUTORIAL_GUIDE_FINISH = 2001;
    PLAYER_ACTION_TUTORIAL = 2002;
    PLAYER_ACTION_TUTORIAL_GUIDE = 2003;
    PLAYER_ACTION_MONSTER_DROP = 2101;
    PLAYER_ACTION_FINISH_CHALLENGE = 2201;
    PLAYER_ACTION_CHALLENGE_STARS = 2202;
    PLAYER_ACTION_CHALLENGE_START = 2203;
    PLAYER_ACTION_CHALLENGE_END = 2204;
    PLAYER_ACTION_CHALLENGE_WIN = 2205;
    PLAYER_ACTION_CHALLENGE_FAIL = 2206;
    PLAYER_ACTION_CHALLENGE_LEAVE = 2207;
    PLAYER_ACTION_CHALLENGE_SWITCH = 2208;
    PLAYER_ACTION_CHALLENGE_BONUS_REWARD = 2210;
    PLAYER_ACTION_CHALLENGE_STARS_REWARD = 2211;
    PLAYER_ACTION_CHALLENGE_RESTART = 2212;
    PLAYER_ACTION_CHALLENGE_STORY_START = 2213;
    PLAYER_ACTION_CHALLENGE_STORY_END = 2214;
    PLAYER_ACTION_CHALLENGE_FAST_PASS = 2215;
    PLAYER_ACTION_CHALLENGE_STORY_FAST_PASS = 2216;
    PLAYER_ACTION_CHALLENGE_MEMORY_FAST_PASS = 2217;
    PLAYER_ACTION_CHALLENGE_BATTLE_TARGET = 2218;
    PLAYER_ACTION_CHALLENGE_BOSS_END = 2219;
    PLAYER_ACTION_CHALLENGE_BOSS_FAST_PASS = 2220;
    PLAYER_ACTION_CHALLENGE_START_PARTIAL = 2221;
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_START = 2222;
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END = 2223;
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END_BEFORE_BATTLE = 2224;
    PLAYER_ACTION_CHALLENGE_RECOMMEND_LINEUP = 2225;
    PLAYER_ACTION_CHALLENGE_STORY_FEVER_BATTLE_END = 2226;
    PLAYER_ACTION_TEAM_INFO_CHANGE = 2301;
    PLAYER_ACTION_CHANGE_CURRENT_AVATAR = 2302;
    PLAYER_ACTION_CREATE_VIRTUAL_TEAM = 2303;
    PLAYER_ACTION_TEAM_NAME_EDIT = 2304;
    PLAYER_ACTION_AVATAR_BUFF_CHANGE = 2401;
    PLAYER_ACTION_ENV_BUFF_CHANGE = 2402;
    PLAYER_ACTION_GAME_CORE = 2403;
    PLAYER_ACTION_AVATAR_GLOBAL_BUFF = 2404;
    PLAYER_ACTION_ROGUE_EXPLORE_START = 2501;
    PLAYER_ACTION_ROGUE_ENTER_ROOM = 2502;
    PLAYER_ACTION_ROGUE_LEAVE_ROOM = 2503;
    PLAYER_ACTION_ROGUE_EXPLORE_FINISH = 2504;
    PLAYER_ACTION_ROGUE_SELECT_BUFF = 2505;
    PLAYER_ACTION_ROGUE_ROLL_BUFF = 2506;
    PLAYER_ACTION_ROGUE_REVIVE = 2507;
    PLAYER_ACTION_ROGUE_CHALLENGE_START = 2512;
    PLAYER_ACTION_ROGUE_MIRACLE = 2514;
    PLAYER_ACTION_ROGUE_ADD_BUFF = 2515;
    PLAYER_ACTION_ROGUE_PICK_AVATAR = 2516;
    PLAYER_ACTION_ROGUE_SEASON_CHANGED = 2522;
    PLAYER_ACTION_ROGUE_AEON_LEVEL_UP = 2524;
    PLAYER_ACTION_ROGUE_OPEN_DOOR = 2525;
    PLAYER_ACTION_ROGUE_SCORE_REWARD = 2526;
    PLAYER_ACTION_ROGUE_ENHANCE_BUFF = 2527;
    PLAYER_ACTION_ROGUE_SELECT_BONUS = 2528;
    PLAYER_ACTION_ROGUE_AREA_FIRST_REWARD = 2529;
    PLAYER_ACTION_ROGUE_ENABLE_TALENT = 2530;
    PLAYER_ACTION_ROGUE_AEON_UNLOCK = 2531;
    PLAYER_ACTION_ROGUE_AEON_ADD_EXP = 2532;
    PLAYER_ACTION_ROGUE_IMMERSE_LEVEL_UP = 2533;
    PLAYER_ACTION_ROGUE_SELECT_MIRACLE = 2534;
    PLAYER_ACTION_ROGUE_UNLOCK_AREA = 2535;
    PLAYER_ACTION_ROGUE_EXPLORE_SCORE_CHANGE = 2536;
    PLAYER_ACTION_ROGUE_UPDATE_REWARD_POOL = 2537;
    PLAYER_ACTION_ROGUE_SWAP_BUFF = 2539;
    PLAYER_ACTION_ROGUE_WEEKLY_REFRESH = 2540;
    PLAYER_ACTION_ROGUE_EXCHANGE_KEY = 2541;
    PLAYER_ACTION_ROGUE_GET_OBJECT_REWARD = 2542;
    PLAYER_ACTION_ROGUE_AREA_MONSTER_DROP = 2543;
    PLAYER_ACTION_ROGUE_ADD_MIRACLE = 2544;
    PLAYER_ACTION_ROGUE_SWAP_MIRACLE = 2545;
    PLAYER_ACTION_ROGUE_OPEN_OBJECT_REWARD = 2546;
    PLAYER_ACTION_ROGUE_AEON_EFFECT = 2547;
    PLAYER_ACTION_ROGUE_REFORGE_BUFF = 2548;
    PLAYER_ACTION_ROGUE_TRADE_MIRACLE = 2549;
    PLAYER_ACTION_ROGUE_REMOVE_AVATAR = 2550;
    PLAYER_ACTION_ROGUE_DIALOGUE_SELECT = 2551;
    PLAYER_ACTION_ROGUE_SELECT_AEON = 2552;
    PLAYER_ACTION_ROGUE_DIALOGUE_FINISH = 2553;
    PLAYER_ACTION_ROGUE_HANDBOOK_REWARD = 2554;
    PLAYER_ACTION_ROGUE_ADVENTURE_ROOM_REWARD = 2555;
    PLAYER_ACTION_ROGUE_SHOP_BUY = 2556;
    PLAYER_ACTION_ROGUE_REPAIR_MIRACLE = 2557;
    PLAYER_ACTION_ROGUE_REPLACE_ALL_MIRACLE = 2558;
    PLAYER_ACTION_ROGUE_MIRACLE_BROKEN = 2559;
    PLAYER_ACTION_ROGUE_SHOP_REFRESH = 2560;
    PLAYER_ACTION_ROGUE_LEVEL_MECHANISM = 2561;
    PLAYER_ACTION_ROGUE_REMOVE_MIRACLE = 2562;
    PLAYER_ACTION_ROGUE_DROP_BUFF = 2563;
    PLAYER_ACTION_ROGUE_DESTROY_MIRACLE = 2564;
    PLAYER_ACTION_ROGUE_ACTIVATE_FORMULA = 2565;
    PLAYER_ACTION_ROGUE_DEACTIVATE_FORMULA = 2566;
    PLAYER_ACTION_ROGUE_REMOVE_BUFF = 2567;
    PLAYER_ACTION_ROGUE_SELECT_FORMULA = 2568;
    PLAYER_ACTION_ROGUE_DROP_FORMULA = 2569;
    PLAYER_ACTION_ROGUE_ROLL_FORMULA = 2570;
    PLAYER_ACTION_ROGUE_REFORGE_FORMULA = 2571;
    PLAYER_ACTION_ROGUE_COMPOSE_MIRACLE = 2572;
    PLAYER_ACTION_ROGUE_REFORGE_MIRACLE = 2573;
    PLAYER_ACTION_ROGUE_DO_GAMBLE = 2574;
    PLAYER_ACTION_ROGUE_KEYWORD_ACTIVATE = 2575;
    PLAYER_ACTION_ROGUE_KEYWORD_DEACTIVATE = 2576;
    PLAYER_ACTION_ROGUE_SOURCE_DEFAULT = 2577;
    PLAYER_ACTION_ROGUE_PLAYER_SELECT = 2578;
    PLAYER_ACTION_ROGUE_LAYER_SETTLEMENT = 2579;
    PLAYER_ACTION_ROGUE_FORMULA = 2580;
    PLAYER_ACTION_ROGUE_WORKBENCH = 2581;
    PLAYER_ACTION_ROGUE_MODIFIER = 2582;
    PLAYER_ACTION_ROGUE_REFORGE = 2583;
    PLAYER_ACTION_ROGUE_TALENT = 2584;
    PLAYER_ACTION_ROGUE_REROLL = 2585;
    PLAYER_ACTION_ROGUE_COIN_CHANGE = 2586;
    PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_SHOP = 2587;
    PLAYER_ACTION_ROGUE_MAGIC_UNIT_SHOP = 2588;
    PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_LEVEL_UP = 2589;
    PLAYER_ACTION_GACHA = 2601;
    PLAYER_ACTION_ADD_GACHA_TICKET = 2602;
    PLAYER_ACTION_GACHA_EXCHANGE = 2603;
    PLAYER_ACTION_SET_GACHA_DECIDE_ITEM = 2604;
    PLAYER_ACTION_EVENT_MISSION_ACCEPT = 2801;
    PLAYER_ACTION_EVENT_MISSION_FINISH = 2802;
    PLAYER_ACTION_EVENT_MISSION_REWARD = 2803;
    PLAYER_ACTION_RAID_FINISH = 2901;
    PLAYER_ACTION_RAID_BEGIN = 2902;
    PLAYER_ACTION_CHALLENGE_RAID_REWARD = 2903;
    PLAYER_ACTION_START_RAID = 2904;
    PLAYER_ACTION_END_RAID = 2905;
    PLAYER_ACTION_RAID_TARGET_FINISH = 2906;
    PLAYER_ACTION_ARCHIVE_RAID = 2907;
    PLAYER_ACTION_HERO_BASE_TYPE_CHANGE = 3051;
    PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_MISSION = 3052;
    PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_REQ = 3053;
    PLAYER_ACTION_HERO_BASE_TYPE_ADD = 3054;
    PLAYER_ACTION_DIALOGUE_SELECT = 3101;
    PLAYER_ACTION_EXPEDITION_START = 3151;
    PLAYER_ACTION_EXPEDITION_FINISH = 3152;
    PLAYER_ACTION_EXPEDITION_REWARD = 3153;
    PLAYER_ACTION_ACTIVITY_EXPEDITION_START = 3154;
    PLAYER_ACTION_ACTIVITY_EXPEDITION_FINISH = 3155;
    PLAYER_ACTION_ACTIVITY_EXPEDITION_REWARD = 3156;
    PLAYER_ACTION_ACTIVITY_EXPEDITION_BEGIN = 3157;
    PLAYER_ACTION_ACTIVITY_EXPEDITION_END = 3158;
    PLAYER_ACTION_ACTIVITY_LOGIN_REWARD = 3201;
    PLAYER_ACTION_FRIEND_REPORT = 3301;
    PLAYER_ACTION_ASSIST_REWARD = 3302;
    PLAYER_ACTION_ASSIST_AVATAR_REFRESH = 3303;
    PLAYER_ACTION_ASSIST_AVATAR_BATTLE_START = 3304;
    PLAYER_ACTION_ASSIST_AVATAR_BATTLE_END = 3305;
    PLAYER_ACTION_FRIEND_APPLY = 3306;
    PLAYER_ACTION_FRIEND_MANAGE = 3307;
    PLAYER_ACTION_FRIEND_BLACKLIST = 3308;
    PLAYER_ACTION_FRIEND_MODIFY_REMARK_NAME = 3309;
    PLAYER_ACTION_FRIEND_MARK = 3310;
    PLAYER_ACTION_FRIEND_ASSIST_LIST = 3311;
    PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD = 3202;
    PLAYER_ACTION_BATTLE_PASS_128TIER_REWARD = 3203;
    PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD_AUTO_MAIL = 3204;
    PLAYER_ACTION_BUY_BATTLE_PASS = 3205;
    PLAYER_ACTION_ADD_BATTLE_PASS_EXP = 3206;
    PLAYER_ACTION_BATTLE_PASS_LEVEL_UP = 3207;
    PLAYER_ACTION_BUY_BATTLE_PASS_LEVEL = 3208;
    PLAYER_ACTION_BATTLE_PASS_END_MAIL = 3209;
    PLAYER_ACTION_BATTLE_PASS_68TIER_REWARD = 3210;
    PLAYER_ACTION_MODIFY_SIGN = 3401;
    PLAYER_ACTION_DISPLAY_AVATAR_SET = 3402;
    PLAYER_ACTION_ASSIST_AVATAR_SET = 3403;
    PLAYER_ACTION_ACHIEVEMENT_FINISH = 3501;
    PLAYER_ACTION_ACHIEVEMENT_REWARD = 3502;
    PLAYER_ACTION_ACHIEVEMENT_ADD_EXP = 3503;
    PLAYER_ACTION_ACHIEVEMENT_LEVEL_UP = 3504;
    PLAYER_ACTION_PUNK_LORD_REWARD = 3601;
    PLAYER_ACTION_PUNK_LORD_BOSS_SEARCH = 3604;
    PLAYER_ACTION_PUNK_LORD_BOSS_SHARE = 3605;
    PLAYER_ACTION_START_PUNK_LORD_RAID = 3606;
    PLAYER_ACTION_PUNK_LORD_SUPPORT_TIMES = 3608;
    PLAYER_ACTION_PUNK_LORD_SCORE_REWARD = 3609;
    PLAYER_ACTION_PUNK_LORD_LIST_REFRESH = 3610;
    PLAYER_ACTION_PUNK_LORD_POWER_ATTACK = 3611;
    PLAYER_ACTION_PUNK_LORD_BATTLE_END = 3612;
    PLAYER_ACTION_PUNK_LORD_BOSS_DEATH = 3613;
    PLAYER_ACTION_PUNK_LORD_BOSS_SCORE = 3614;
    PLAYER_ACTION_DAILY_ACTIVE_LEVEL_REWARD = 3701;
    PLAYER_ACTION_DAILY_ACTIVE_ADD_POINT = 3702;
    PLAYER_ACTION_DAILY_ACTIVE_DELETE_OLD_QUEST = 3703;
    PLAYER_ACTION_FIGHT_ACTIVITY_BEGIN = 3791;
    PLAYER_ACTION_FIGHT_ACTIVITY_END = 3792;
    PLAYER_ACTION_FIGHT_ACTIVITY_REWARD = 3801;
    PLAYER_ACTION_ACTIVITY_END_MAIL = 3802;
    PLAYER_ACTION_APPOINTMENT_MAIL = 3803;
    PLAYER_ACTION_SHARE_REWARD = 3804;
    PLAYER_ACTION_ACTIVITY_TRIAL_REWARD = 3805;
    PLAYER_ACTION_ACTIVITY_TRIAL_START = 3806;
    PLAYER_ACTION_PS_PRE_ORDER_MAIL1 = 3811;
    PLAYER_ACTION_PS_PRE_ORDER_MAIL2 = 3812;
    PLAYER_ACTION_PS_LOGIN_MAIL = 3813;
    PLAYER_ACTION_LOGIN_MAIL = 3814;
    PLAYER_ACTION_GOOGLE_POINTS_100_MAIL = 3821;
    PLAYER_ACTION_GOOGLE_POINTS_150_MAIL = 3822;
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_FINISH = 3901;
    PLAYER_ACTION_ENTER_VIEW_TRAIN = 3902;
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND = 3903;
    PLAYER_ACTION_TRAIN_VISITOR_REGISTER_OPEN = 3904;
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND_BY_REGISTER = 3905;
    PLAYER_ACTION_TRAIN_VISITOR_CLEAR_LAST_TRAIN_VISITOR = 3906;
    PLAYER_ACTION_TRAIN_VISITOR_REFRESH_TRAIN_VISITOR = 3907;
    PLAYER_ACTION_TRAIN_VISITOR_REFRESH_NPC = 3908;
    PLAYER_ACTION_MESSAGE_GROUP_ACCEPT = 3951;
    PLAYER_ACTION_MESSAGE_SECTION_ACCEPT = 3952;
    PLAYER_ACTION_MESSAGE_SECTION_FINISH = 3953;
    PLAYER_ACTION_MESSAGE_ITEM_FINISH = 3954;
    PLAYER_ACTION_FINISH_MESSAGE_GROUP_REWARD = 3955;
    PLAYER_ACTION_SUBSTITUTE_MESSAGE_GROUP_REWARD = 3956;
    PLAYER_ACTION_DELETE_MESSAGE_GROUP = 3957;
    PLAYER_ACTION_DELETE_MESSAGE_SECTION = 3958;
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_CONFIG = 3959;
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_ACTIVITY = 3960;
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_MISSION = 3961;
    PLAYER_ACTION_TEXT_JOIN_SAVE = 4001;
    PLAYER_ACTION_BOXING_CLUB_START = 4051;
    PLAYER_ACTION_BOXING_CLUB_FINISH = 4052;
    PLAYER_ACTION_BOXING_CLUB_PAUSE = 4053;
    PLAYER_ACTION_BOXING_CLUB_STAGE_START = 4054;
    PLAYER_ACTION_TALK_SEND = 4101;
    PLAYER_ACTION_SELECT_INCLINATION_TEXT = 4102;
    PLAYER_ACTION_MUSEUM_SETTLE_TURN_OPEN = 4201;
    PLAYER_ACTION_MUSEUM_UPGRADE_AREA = 4202;
    PLAYER_ACTION_MUSEUM_UPGRADE_AREA_STAT = 4203;
    PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_REGULAR = 4204;
    PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_DIRECTIONAL = 4205;
    PLAYER_ACTION_MUSEUM_PHASE_TARGET_FINISHED = 4206;
    PLAYER_ACTION_MUSEUM_GET_STUFF = 4207;
    PLAYER_ACTION_MUSEUM_GET_EXHIBIT = 4208;
    PLAYER_ACTION_MUSEUM_TAKE_COLLECT_MISSION = 4209;
    PLAYER_ACTION_MUSEUM_AREA_UNLOCK = 4210;
    PLAYER_ACTION_MUSEUM_AREA_UPGRADE = 4211;
    PLAYER_ACTION_MUSEUM_AREA_STAT_UPGRADE = 4212;
    PLAYER_ACTION_MUSEUM_ENTER_NEXT_ROUND = 4213;
    PLAYER_ACTION_MUSEUM_START_DISPATCH = 4214;
    PLAYER_ACTION_MUSEUM_SETTLE_DISPATCH = 4215;
    PLAYER_ACTION_MUSEUM_RENEW_POINT_CHANGED = 4216;
    PLAYER_ACTION_MUSEUM_TARGET_REWARD = 4217;
    PLAYER_ACTION_MUSEUM_PHASE_UPGRADE = 4218;
    PLAYER_ACTION_MUSEUM_COLLECT_REWARD = 4219;
    PLAYER_ACTION_MUSEUM_TARGET_START = 4220;
    PLAYER_ACTION_MUSEUM_TARGET_FINISH = 4221;
    PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_CONSUME_MATERIAL = 4301;
    PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_TAKE_REWARD = 4302;
    PLAYER_ACTION_PLAYER_RETURN_START = 4401;
    PLAYER_ACTION_PLAYER_RETURN_SIGN = 4402;
    PLAYER_ACTION_PLAYER_RETURN_POINT = 4403;
    PLAYER_ACTION_PLAYER_RETURN_COUNTDOWN = 4404;
    PLAYER_ACTION_PLAYER_RETURN_FINISH = 4405;
    PLAYER_ACTION_PLAYER_RETURN_COMPENSATE = 4406;
    PLAYER_ACTION_PLAYER_RETURN_GET_RELIC = 4407;
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_START = 4411;
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_FINISH = 4412;
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_SAVE = 4413;
    PLAYER_ACTION_AETHER_DIVIDE_USE_PASSIVE_SKILL_ITEM = 4450;
    PLAYER_ACTION_AETHER_DIVIDE_CLEAR_PASSIVE_SKILL = 4451;
    PLAYER_ACTION_AETHER_DIVIDE_FINISH_CHALLENGE = 4452;
    PLAYER_ACTION_AETHER_DIVIDE_OVERFLOW_CHUNK_REWARD = 4453;
    PLAYER_ACTION_AETHER_DIVIDE_LEVEL_UP = 4454;
    PLAYER_ACTION_AETHER_DIVIDE_NEW_REWARD = 4455;
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_ADD = 4456;
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_LEVEL = 4457;
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_SKILL_WEAR = 4458;
    PLAYER_ACTION_AETHER_DIVIDE_TEAM_CHANGE = 4459;
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_BEGIN = 4460;
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_END = 4461;
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_ROLL = 4462;
    PLAYER_ACTION_ALLEY_EVENT_FINISH = 4501;
    PLAYER_ACTION_ALLEY_TAKE_REWARD = 4502;
    PLAYER_ACTION_ALLEY_PRESTIGE_LEVEL_UP = 4503;
    PLAYER_ACTION_ALLEY_LOGISTICS_FINISH = 4504;
    PLAYER_ACTION_ALLEY_PLACING_GAME_FINISH = 4505;
    PLAYER_ACTION_ALLEY_GUARANTEED_FUNDS = 4506;
    PLAYER_ACTION_ALLEY_TAKE_EVENT_REWARD = 4507;
    PLAYER_ACTION_ALLEY_SPECIAL_ORDER_FINISH = 4508;
    PLAYER_ACTION_SENSITIVE_WORD_SHIELD = 4601;
    PLAYER_ACTION_SENSITIVE_WORD_SERVER_INTERNAL_ERROR = 4602;
    PLAYER_ACTION_SENSITIVE_WORD_PLATFORM_ERROR = 4603;
    PLAYER_ACTION_TREASURE_DUNGEON_START = 4701;
    PLAYER_ACTION_TREASURE_DUNGEON_FINISH = 4702;
    PLAYER_ACTION_TREASURE_DUNGEON_ENTER_FLOOR = 4703;
    PLAYER_ACTION_TREASURE_DUNGEON_LEAVE_FLOOR = 4704;
    PLAYER_ACTION_TREASURE_DUNGEON_USE_ITEM = 4705;
    PLAYER_ACTION_TREASURE_DUNGEON_AVATAR_CHANGE = 4706;
    PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_START = 4707;
    PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_END = 4708;
    PLAYER_ACTION_TREASURE_DUNGEON_PICKUP_BUFF = 4709;
    PLAYER_ACTION_CHESS_ROGUE_FIRST_FINISH = 4801;
    PLAYER_ACTION_CHESS_ROGUE_GIVEUP_DICE = 4802;
    PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_SELECT = 4803;
    PLAYER_ACTION_CHESS_ROGUE_ACTION_POINT = 4804;
    PLAYER_ACTION_CHESS_ROGUE_REVIVE_BY_PROP = 4805;
    PLAYER_ACTION_CHESS_ROGUE_START_LEVEL = 4806;
    PLAYER_ACTION_CHESS_ROGUE_DICE_EFFECT = 4807;
    PLAYER_ACTION_CHESS_ROGUE_MAIN_STORY_FINISH = 4808;
    PLAYER_ACTION_CHESS_ROGUE_AEON_TALENT_EFFECT = 4809;
    PLAYER_ACTION_CHESS_ROGUE_MODIFIER_OTHERS_EFFECT = 4810;
    PLAYER_ACTION_CHESS_ROGUE_ADD_BUFF = 4811;
    PLAYER_ACTION_CHESS_ROGUE_REFORGE_BUFF = 4812;
    PLAYER_ACTION_CHESS_ROGUE_BUFF_LEVEL_UP = 4813;
    PLAYER_ACTION_CHESS_ROGUE_ENHANCE_BUFF = 4814;
    PLAYER_ACTION_CHESS_ROGUE_ADD_MIRACLE = 4815;
    PLAYER_ACTION_CHESS_ROGUE_SWAP_MIRACLE = 4816;
    PLAYER_ACTION_CHESS_ROGUE_SELECT_BONUS = 4817;
    PLAYER_ACTION_CHESS_ROGUE_DIALOGUE_FINISH = 4818;
    PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_FINISH = 4819;
    PLAYER_ACTION_CHESS_ROGUE_ADVENTURE_ROOM_FINISH = 4820;
    PLAYER_ACTION_CHESS_ROGUE_FINISH_LEVEL = 4821;
    PLAYER_ACTION_CHESS_ROGUE_START_LAYER = 4822;
    PLAYER_ACTION_CHESS_ROGUE_FINISH_LAYER = 4823;
    PLAYER_ACTION_CHESS_ROGUE_ENTER_ROOM = 4824;
    PLAYER_ACTION_CHESS_ROGUE_LEAVE_ROOM = 4825;
    PLAYER_ACTION_CHESS_ROGUE_ROLL_DICE = 4826;
    PLAYER_ACTION_CHESS_ROGUE_SELECT_DICE = 4827;
    PLAYER_ACTION_CHESS_ROGUE_UNLOCK_DICE = 4828;
    PLAYER_ACTION_CHESS_ROGUE_BOARD_EVENT = 4829;
    PLAYER_ACTION_CHESS_ROGUE_DIMENSION_POINT = 4830;
    PLAYER_ACTION_CHESS_ROGUE_PICK_AVATAR = 4831;
    PLAYER_ACTION_CHESS_ROGUE_REVIVE_AVATAR = 4832;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_SELECT = 4833;
    PLAYER_ACTION_CHESS_ROGUE_LEVEL_MECHANISM = 4844;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LEVEL = 4845;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LEVEL = 4846;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LAYER = 4847;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LAYER = 4848;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_ENTER_ROOM = 4849;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_LEAVE_ROOM = 4850;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SELECT_DICE = 4851;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_BRANCH = 4852;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_SURFACE = 4853;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_EDIT_DICE = 4854;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_VALUE_CHANGE = 4855;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_TRIGGER = 4856;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_FINISH = 4857;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_TRIGGER = 4858;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_FINISH = 4859;
    PLAYER_ACTION_CHESS_ROGUE_NOUS_ENABLE_TALENT = 4860;
    PLAYER_ACTION_CHESS_ROGUE_SELECT_BUFF = 4861;
    PLAYER_ACTION_CHESS_ROGUE_SELECT_MIRACLE = 4862;
    PLAYER_ACTION_CHESS_ROGUE_REMOVE_MIRACLE = 4863;
    PLAYER_ACTION_CHESS_ROGUE_BOARD_CELL = 4864;
    PLAYER_ACTION_FANTASTIC_STORY_BATTLE_BEGIN = 4901;
    PLAYER_ACTION_FANTASTIC_STORY_BATTLE_END = 4902;
    PLAYER_ACTION_ROGUE_ENDLESS_REWARD = 4950;
    PLAYER_ACTION_ROGUE_ENDLESS_LEVEL_START = 4951;
    PLAYER_ACTION_ROGUE_ENDLESS_STAGE_BEGIN = 4952;
    PLAYER_ACTION_ROGUE_ENDLESS_STAGE_END = 4953;
    PLAYER_ACTION_BATTLE_COLLEGE_REWARD = 5001;
    PLAYER_ACTION_COMMON_ROGUE_MIRACLE_FOR_BUFF_SHOP = 5051;
    PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_FINISH = 5052;
    PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP = 5053;
    PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP_REFRESH = 5054;
    PLAYER_ACTION_COMMON_ROGUE_COLLECTION_UNLOCK = 5055;
    PLAYER_ACTION_COMMON_ROGUE_COLLECTION_SET = 5056;
    PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_UNLOCK = 5057;
    PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_SET = 5058;
    PLAYER_ACTION_COMMON_ROGUE_CHEST_INTERACT = 5059;
    PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_WOLFGUN_FINISH = 5060;
    PLAYER_ACTION_HELIOBUS_POST_INCOME_REWARD = 5101;
    PLAYER_ACTION_HELIOBUS_POST_FANS_REWARD = 5102;
    PLAYER_ACTION_HELIOBUS_LEVEL_UPGRADE = 5103;
    PLAYER_ACTION_HELIOBUS_POST_REPLY_REWARD = 5104;
    PLAYER_ACTION_HELIOBUS_COMMENT_REPLY_REWARD = 5105;
    PLAYER_ACTION_HELIOBUS_CHALLENGE_FIRST_REWARD = 5106;
    PLAYER_ACTION_HELIOBUS_FANS_ADD = 5107;
    PLAYER_ACTION_HELIOBUS_ACTION_DAY_SETTLE = 5108;
    PLAYER_ACTION_HELIOBUS_SKILL_UNLOCK = 5109;
    PLAYER_ACTION_HELIOBUS_STAGE_BEGIN = 5110;
    PLAYER_ACTION_HELIOBUS_STAGE_END = 5111;
    PLAYER_ACTION_HELIOBUS_SNS_READ = 5112;
    PLAYER_ACTION_HELIOBUS_SNS_POST_UNLOCK = 5113;
    PLAYER_ACTION_HELIOBUS_SNS_COMMENT_UNLOCK = 5114;
    PLAYER_ACTION_HELIOBUS_SNS_COMMENT = 5115;
    PLAYER_ACTION_HELIOBUS_SNS_POST = 5116;
    PLAYER_ACTION_HELIOBUS_SNS_LIKE = 5117;
    PLAYER_ACTION_HELIOBUS_PHASE_UPGRADE = 5118;
    PLAYER_ACTION_PS_POINT_CARD_30_REWARD = 5201;
    PLAYER_ACTION_PS_POINT_CARD_50_REWARD = 5202;
    PLAYER_ACTION_PS_POINT_CARD_100_REWARD = 5203;
    PLAYER_ACTION_PSN_PLUS_GIFT_REWARD = 5204;
    PLAYER_ACTION_APPLE_GIFT_CARD_REWARD = 5205;
    PLAYER_ACTION_HEART_DIAL_SUBMIT_ITEM = 5301;
    PLAYER_ACTION_HEART_DIAL_DIALOGUE_PERFORM = 5302;
    PLAYER_ACTION_HEART_DIAL_TRACE_CONSUME = 5303;
    PLAYER_ACTION_HEART_DIAL_CHANGE_EMOTION = 5304;
    PLAYER_ACTION_TRAVEL_BROCHURE_ADD_DEFAULT_PASTER = 5401;
    PLAYER_ACTION_SPACE_ZOO_BORN = 5501;
    PLAYER_ACTION_SPACE_ZOO_MUTATE = 5502;
    PLAYER_ACTION_SPACE_ZOO_DELETE = 5503;
    PLAYER_ACTION_SPACE_ZOO_EXCHANGE_ITEM = 5504;
    PLAYER_ACTION_SPACE_ZOO_EXP_POINT = 5505;
    PLAYER_ACTION_SPACE_ZOO_TAKE_REWARD = 5506;
    PLAYER_ACTION_SPACE_ZOO_COLLECTION = 5507;
    PLAYER_ACTION_SPACE_ZOO_SHOW = 5508;
    PLAYER_ACTION_SPACE_ZOO_SPECIAL_DATA = 5509;
    PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_BEGIN = 5701;
    PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_END = 5702;
    PLAYER_ACTION_ROLL_SHOP_DO_GACHA = 5751;
    PLAYER_ACTION_ROLL_SHOP_TAKE_REWARD = 5752;
    PLAYER_ACTION_OFFERING_SUBMIT_ITEM = 5801;
    PLAYER_ACTION_OFFERING_TAKE_REWARD = 5802;
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_UNLOCK = 5851;
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_INTERACT_AWARD = 5852;
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_UNLOCK = 5853;
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_APPLY = 5854;
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_REMOVE = 5855;
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_RESET = 5856;
    PLAYER_ACTION_TRACK_MAIN_MISSION_ID = 5901;
    PLAYER_ACTION_WOLF_BRO_BEGIN = 5911;
    PLAYER_ACTION_WOLF_BRO_GROUP_STATE_CHANGE = 5912;
    PLAYER_ACTION_WOLF_BRO_END = 5913;
    PLAYER_ACTION_WOLF_BRO_BULLET_ZERO = 5914;
    PLAYER_ACTION_WOLF_BRO_ACTIVATE_BULLET = 5915;
    PLAYER_ACTION_WOLF_BRO_BULLET_NUM_CHANGE = 5916;
    PLAYER_ACTION_WOLF_BRO_USE_BULLET_NULL = 5917;
    PLAYER_ACTION_WOLF_BRO_USE_BULLET_HIT_MONSTER = 5918;
    PLAYER_ACTION_WOLF_BRO_PICK_UP_BULLET = 5919;
    PLAYER_ACTION_WOLF_BRO_RESTORE_ARCHIVE = 5920;
    PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_BEGIN = 5921;
    PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_END = 5922;
    PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_BEGIN = 5923;
    PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_END = 5924;
    PLAYER_ACTION_GUN_PLAY_END = 5925;
    PLAYER_ACTION_ACTIVITY_STAR_FIGHT_BEGIN = 5926;
    PLAYER_ACTION_ACTIVITY_STAR_FIGHT_END = 5927;
    PLAYER_ACTION_MAP_ROTATION_ENTER_REGION = 5931;
    PLAYER_ACTION_MAP_ROTATION_LEAVE_REGION = 5932;
    PLAYER_ACTION_MAP_ROTATION_INTERACT_CHARGER = 5933;
    PLAYER_ACTION_MAP_ROTATION_DEPLOY_ROTATER = 5934;
    PLAYER_ACTION_MAP_ROTATION_ROTATE_MAP = 5935;
    PLAYER_ACTION_MAP_ROTATION_ADD_ENERGY = 5936;
    PLAYER_ACTION_MAP_ROTATION_SET_MAX_ENERGY = 5937;
    PLAYER_ACTION_MAP_ROTATION_REMOVE_ROTATER = 5938;
    PLAYER_ACTION_MAP_ROTATION_AUTO_DEPLOY_ROTATER = 5939;
    PLAYER_ACTION_MAP_ROTATION_AUTO_REMOVE_ROTATER = 5940;
    PLAYER_ACTION_DRINK_MAKER_ADD_TIPS = 5951;
    PLAYER_ACTION_DRINK_MAKER_FINISH_CHALLENGE = 5952;
    PLAYER_ACTION_DRINK_MAKER_GUEST_MAX_FAITH_REWARD = 5953;
    PLAYER_ACTION_DRINK_MAKER_MAKE_DRINK = 5954;
    PLAYER_ACTION_DRINK_MAKER_SAVE_CUSTOM_DRINK = 5955;
    PLAYER_ACTION_DRINK_MAKER_END_SEQUENCE = 5956;
    PLAYER_ACTION_CHANGE_STORY_LINE = 6001;
    PLAYER_ACTION_CONTENT_PACKAGE_STATUS_CHANGE = 6011;
    PLAYER_ACTION_CONTENT_PACKAGE_TRACK_CHANGE = 6012;
    PLAYER_ACTION_CONTENT_PACKAGE_ACCEPT_MAIN_MISSION = 6013;
    PLAYER_ACTION_WORLD_DIRECT_UNLOCK = 6041;
    PLAYER_ACTION_MONOPOLY_TURN_FINISH = 6051;
    PLAYER_ACTION_MONOPOLY_ASSET_TURNTAX = 6052;
    PLAYER_ACTION_MONOPOLY_ASSET_BONUS = 6053;
    PLAYER_ACTION_MONOPOLY_EVENT_EFFECT = 6054;
    PLAYER_ACTION_MONOPOLY_MINI_GAME_SETTLE = 6055;
    PLAYER_ACTION_MONOPOLY_GAME_RAISE_RATIO = 6056;
    PLAYER_ACTION_MONOPOLY_MOVE_ROLL_DICE = 6057;
    PLAYER_ACTION_MONOPOLY_MOVE = 6059;
    PLAYER_ACTION_MONOPOLY_BUY_GOODS = 6060;
    PLAYER_ACTION_MONOPOLY_UPGRADE_ASSET = 6061;
    PLAYER_ACTION_MONOPOLY_EVENT_REROLL_RANDOM = 6062;
    PLAYER_ACTION_MONOPOLY_DAILY_REFRESH = 6063;
    PLAYER_ACTION_MONOPOLY_GAME_GUESS_BUY_INFORMATION = 6064;
    PLAYER_ACTION_MONOPOLY_DAILY_FIRST_ENTER_ACTIVITY = 6065;
    PLAYER_ACTION_MONOPOLY_SOCIAL_EVENT = 6066;
    PLAYER_ACTION_MONOPOLY_RAFFLE_TICKET_REWARD = 6067;
    PLAYER_ACTION_MONOPOLY_LIKE = 6068;
    PLAYER_ACTION_MONOPOLY_PHASE_REWARD = 6069;
    PLAYER_ACTION_MONOPOLY_MBTI_REPORT_REWARD = 6070;
    PLAYER_ACTION_MONOPOLY_DAILY_SETTLE = 6071;
    PLAYER_ACTION_MONOPOLY_START = 6072;
    PLAYER_ACTION_MONOPOLY_GET_BUFF = 6073;
    PLAYER_ACTION_MONOPOLY_ASSET_FUNDS_CHANGE = 6074;
    PLAYER_ACTION_MONOPOLY_ASSET_UPGRADE = 6075;
    PLAYER_ACTION_MONOPOLY_DIRECT_COIN_GAME_SETTLE = 6076;
    PLAYER_ACTION_MONOPOLY_EXTRACT_RAFFLE_TICKET = 6077;
    PLAYER_ACTION_MONOPOLY_MBTI_PROGRESS_CHANGE = 6078;
    PLAYER_ACTION_MONOPOLY_QUIZ_GAME_SETTLE = 6079;
    PLAYER_ACTION_MONOPOLY_EVENT_SETTLE = 6080;
    PLAYER_ACTION_MONOPOLY_ITEM_CHANGE = 6081;
    PLAYER_ACTION_MONOPOLY_CELL_TRIGGER = 6082;
    PLAYER_ACTION_MONOPOLY_EVENT_TRIGGER = 6083;
    PLAYER_ACTION_MONOPOLY_CLICK_EFFECT = 6084;
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_FINISH = 6101;
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_UP = 6102;
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_DOWN = 6103;
    PLAYER_ACTION_EVOLVE_BUILD_TAKE_EXP_REWARD = 6104;
    PLAYER_ACTION_EVOLVE_BUILD_BATTLE_END_ADD_COIN = 6105;
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_RESET = 6106;
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_START = 6107;
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_END = 6108;
    PLAYER_ACTION_EVOLVE_BUILD_STAGE_START = 6109;
    PLAYER_ACTION_EVOLVE_BUILD_STAGE_END = 6110;
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_LEAVE = 6111;
    PLAYER_ACTION_CLOCK_PARK_UNLOCK_SCRIPT = 6151;
    PLAYER_ACTION_CLOCK_PARK_UNLOCK_TALENT = 6152;
    PLAYER_ACTION_CLOCK_PARK_FINISH_SCRIPT = 6153;
    PLAYER_ACTION_CLOCK_PARK_ROUND_UPDATE = 6154;
    PLAYER_ACTION_CLOCK_PARK_SCRIPT_BEGIN = 6155;
    PLAYER_ACTION_ROGUE_TOURN_START_LEVEL = 6200;
    PLAYER_ACTION_ROGUE_TOURN_FINISH_LEVEL = 6201;
    PLAYER_ACTION_ROGUE_TOURN_EXP_REWARD = 6202;
    PLAYER_ACTION_ROGUE_TOURN_FINISH_WEEK_CHALLENGE = 6203;
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_TALENT_EFFECT = 6204;
    PLAYER_ACTION_ROGUE_TOURN_FINISH_FORMULA_STORY = 6205;
    PLAYER_ACTION_ROGUE_TOURN_REVIVE = 6206;
    PLAYER_ACTION_ROGUE_TOURN_STAGE_BEGIN = 6207;
    PLAYER_ACTION_ROGUE_TOURN_STAGE_END = 6208;
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_ENABLE_TALENT = 6209;
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_RESET_TALENT = 6210;
    PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_BEGIN = 6211;
    PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_END = 6212;
    PLAYER_ACTION_ROGUE_TOURN_EXP_UPDATE = 6213;
    PLAYER_ACTION_ROGUE_TOURN_ENTER_ROOM = 6214;
    PLAYER_ACTION_ROGUE_TOURN_LEAVE_ROOM = 6215;
    PLAYER_ACTION_ROGUE_TOURN_ARCHIVE_SAVE = 6216;
    PLAYER_ACTION_ROGUE_TOURN_SELECT_BONUS = 6217;
    PLAYER_ACTION_ROGUE_TOURN_DIALOGUE_FINISH = 6218;
    PLAYER_ACTION_ROGUE_TOURN_DO_GAMBLE = 6219;
    PLAYER_ACTION_ROGUE_TOURN_ROOM_CONTENT_GENERATE = 6220;
    PLAYER_ACTION_ROGUE_TOURN_ADD_MIRACLE = 6221;
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_MIRACLE = 6222;
    PLAYER_ACTION_ROGUE_TOURN_SELECT_MIRACLE = 6223;
    PLAYER_ACTION_ROGUE_TOURN_DROP_MIRACLE = 6224;
    PLAYER_ACTION_ROGUE_TOURN_ADD_BUFF = 6225;
    PLAYER_ACTION_ROGUE_TOURN_SELECT_BUFF = 6226;
    PLAYER_ACTION_ROGUE_TOURN_BUFF_LEVEL_UP = 6227;
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_BUFF = 6228;
    PLAYER_ACTION_ROGUE_TOURN_ADD_FORMULA = 6229;
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_FORMULA = 6230;
    PLAYER_ACTION_ROGUE_TOURN_SELECT_FORMULA = 6231;
    PLAYER_ACTION_ROGUE_TOURN_ACTIVATE_FORMULA = 6232;
    PLAYER_ACTION_ROGUE_TOURN_ADVENTURE_ROOM_FINISH = 6233;
    PLAYER_ACTION_ROGUE_TOURN_ALTER_LINEUP = 6234;
    PLAYER_ACTION_ROGUE_TOURN_SEASON_ENABLE_TALENT = 6235;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_START_LEVEL = 6236;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_FINISH_LEVEL = 6237;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ENTER_ROOM = 6238;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_LEAVE_ROOM = 6239;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_BEGIN = 6240;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_END = 6241;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ARCHIVE_SAVE = 6243;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ADD_TITAN_BLESS = 6244;
    PLAYER_ACTION_ROGUE_TOURN_TITAN_SELECT_TITAN_BLESS = 6245;
    PLAYER_ACTION_ROGUE_TOURN_DIVISION_CHANGE = 6246;
    PLAYER_ACTION_ROGUE_TOURN_SELECT_RE_ROLL_MIRACLE = 6247;
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_FORMULA = 6281;
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_MIRACLE = 6282;
    PLAYER_ACTION_ROGUE_WORKBENCH_COMPOSE_MIRACLE = 6283;
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_BUFF = 6284;
    PLAYER_ACTION_ROGUE_WORKBENCH_ENHANCE_BUFF = 6285;
    PLAYER_ACTION_MATCH_THREE_PVE_SETTLE = 6301;
    PLAYER_ACTION_MATCH_THREE_SETTLE = 6302;
    PLAYER_ACTION_FIGHT_MATCH3_GAME_START = 6303;
    PLAYER_ACTION_FIGHT_MATCH3_GAME_END = 6304;
    PLAYER_ACTION_FIGHT_MATCH3_TURN_END = 6305;
    PLAYER_ACTION_MATCH_THREE_BIRD_POS = 6306;
    PLAYER_ACTION_MULTIPLE_PLAY_INVITE = 6307;
    PLAYER_ACTION_MULTIPLE_PLAY_INVITE_RESPOND = 6308;
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_ENTER = 6309;
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_QUIT = 6310;
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_KICK = 6311;
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_MATCH = 6312;
    PLAYER_ACTION_MARBLE_SETTLE = 6313;
    PLAYER_ACTION_SWORD_TRAINING_LEARN_SKILL = 6351;
    PLAYER_ACTION_SWORD_TRAINING_NORMAL_ACTION = 6352;
    PLAYER_ACTION_SWORD_TRAINING_STORY_EFFECT = 6353;
    PLAYER_ACTION_SWORD_TRAINING_ENDING_HINT = 6354;
    PLAYER_ACTION_SWORD_TRAINING_ACTION_HINT = 6355;
    PLAYER_ACTION_SWORD_TRAINING_RESTORE_GAME_BY_EXAM = 6356;
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_FIRST_CLEAR = 6357;
    PLAYER_ACTION_SWORD_TRAINING_TAKE_ENDING_REWARD = 6358;
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_BEGIN = 6359;
    PLAYER_ACTION_SWORD_TRAINING_ENTER_TURN = 6360;
    PLAYER_ACTION_SWORD_TRAINING_PLAN_ACTION = 6361;
    PLAYER_ACTION_SWORD_TRAINING_ACTION_PHASE_END = 6362;
    PLAYER_ACTION_SWORD_TRAINING_STORY = 6363;
    PLAYER_ACTION_SWORD_TRAINING_STATUS_CHANGE = 6364;
    PLAYER_ACTION_SWORD_TRAINING_MOOD_CHANGE = 6365;
    PLAYER_ACTION_SWORD_TRAINING_BATTLE_BEGIN = 6366;
    PLAYER_ACTION_SWORD_TRAINING_BATTLE_END = 6367;
    PLAYER_ACTION_SWORD_TRAINING_COMBAT_RANK_CHANGE = 6368;
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_END = 6369;
    PLAYER_ACTION_SWORD_TRAINING_RESUME_STORY_LINE = 6370;
    PLAYER_ACTION_SWORD_TRAINING_GAME_SUCCESS = 6371;
    PLAYER_ACTION_SWORD_TRAINING_GAME_GIVE_UP = 6372;
    PLAYER_ACTION_SWORD_TRAINING_EXAM = 6374;
    PLAYER_ACTION_SWORD_TRAINING_DIALOGUE = 6375;
    PLAYER_ACTION_SWORD_TRAINING_SET_SKILL_TRACE = 6376;
    PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_MISSION = 6401;
    PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_PHASE = 6402;
    PLAYER_ACTION_FIGHT_FEST_RACE_START = 6403;
    PLAYER_ACTION_FIGHT_FEST_RACE_END = 6404;
    PLAYER_ACTION_FIGHT_FEST_CHALLENGE_START = 6405;
    PLAYER_ACTION_FIGHT_FEST_CHALLENGE_END = 6406;
    PLAYER_ACTION_FIGHT_FEST_GET_COACH_ITEM = 6407;
    PLAYER_ACTION_FIGHT_FEST_ACCEPT_SCORE_RACE_MISSION = 6408;
    PLAYER_ACTION_PET_USE = 6451;
    PLAYER_ACTION_MUSIC_RHYTHM_PASS_LEVEL_STAR = 6501;
    PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_BEGIN = 6502;
    PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_END = 6503;
    PLAYER_ACTION_TRACK_PHOTO_STAGE_BEGIN = 6551;
    PLAYER_ACTION_TRACK_PHOTO_STAGE_END = 6552;
    PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_BEGIN = 6561;
    PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_END = 6562;
    PLAYER_ACTION_RAID_COLLECTION_ENTER_NEXT_RAID = 6571;
    PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_SET = 6572;
    PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_UNSET = 6573;
    PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_START = 6580;
    PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_FINISH = 6581;
    PLAYER_ACTION_ROGUE_MAGIC_START_LEVEL = 6601;
    PLAYER_ACTION_ROGUE_MAGIC_FINISH_LEVEL = 6602;
    PLAYER_ACTION_ROGUE_MAGIC_REVIVE = 6603;
    PLAYER_ACTION_ROGUE_MAGIC_ENTER_ROOM = 6604;
    PLAYER_ACTION_ROGUE_MAGIC_LEAVE_ROOM = 6605;
    PLAYER_ACTION_ROGUE_MAGIC_ADD_MIRACLE = 6606;
    PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MIRACLE = 6607;
    PLAYER_ACTION_ROGUE_MAGIC_STAGE_BEGIN = 6608;
    PLAYER_ACTION_ROGUE_MAGIC_STAGE_END = 6609;
    PLAYER_ACTION_ROGUE_MAGIC_ENABLE_TALENT = 6610;
    PLAYER_ACTION_ROGUE_MAGIC_FINISH_STORY = 6611;
    PLAYER_ACTION_ROGUE_MAGIC_ADD_SCEPTER = 6612;
    PLAYER_ACTION_ROGUE_MAGIC_SELECT_SCEPTER = 6613;
    PLAYER_ACTION_ROGUE_MAGIC_MOUNT_UNIT = 6614;
    PLAYER_ACTION_ROGUE_MAGIC_AUTO_MOUNT_UNIT = 6615;
    PLAYER_ACTION_ROGUE_MAGIC_ADD_MAGIC_UNIT = 6616;
    PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MAGIC_UNIT = 6617;
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_COMPOSE_MAGIC_UNIT = 6618;
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_REFORGE_MAGIC_UNIT = 6619;
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_LEVEL_UP_SCEPTER = 6620;
    PLAYER_ACTION_TRAIN_PARTY_GAME_PLAY_START = 6701;
    PLAYER_ACTION_TRAIN_PARTY_PHASE_BEGIN = 6702;
    PLAYER_ACTION_TRAIN_PARTY_PHASE_END = 6703;
    PLAYER_ACTION_TRAIN_PARTY_ROUND = 6704;
    PLAYER_ACTION_TRAIN_PARTY_MEETING_BEGIN = 6705;
    PLAYER_ACTION_TRAIN_PARTY_MEETING_END = 6706;
    PLAYER_ACTION_TRAIN_PARTY_MEETING_PLAY_CARD = 6707;
    PLAYER_ACTION_TRAIN_PARTY_MEETING_RE_ROLL = 6708;
    PLAYER_ACTION_TRAIN_PARTY_BUILD_AREA_UNLOCK = 6709;
    PLAYER_ACTION_TRAIN_PARTY_BUILD_STEP = 6710;
    PLAYER_ACTION_TRAIN_PARTY_BUILD_LEVEL_AWARD = 6711;
    PLAYER_ACTION_TRAIN_PARTY_BUILDING_DYNAMIC_BUFF = 6712;
    PLAYER_ACTION_TRAIN_PARTY_BUILD_DIY = 6713;
    PLAYER_ACTION_SWITCH_HAND_OP_PROP_STATE = 6801;
    PLAYER_ACTION_ERA_FLIPPER_CHANGE_REGION_STATE = 6811;
    PLAYER_ACTION_ERA_FLIPPER_CHANGE_PROP_STATE = 6812;
    PLAYER_ACTION_ACTIVITY_BENEFIT_REWARD = 6820;
    PLAYER_ACTION_ACTIVITY_BENEFIT_JOIN = 6821;
    PLAYER_ACTION_ACTIVITY_BENEFIT_INITIAL_REWARD = 6822;
    PLAYER_ACTION_PAM_SKIN_CHANGE_SKIN = 6851;
    PLAYER_ACTION_CHEST_FIND = 6861;
    PLAYER_ACTION_REISSUE_MARK_CHEST_ITEM_MAIL = 6862;
    PLAYER_ACTION_MARBLE_PASS_MATCH = 6871;
    PLAYER_ACTION_MARBLE_BUY_SEAL = 6872;
    PLAYER_ACTION_MARBLE_FIGHT_GAME_BEGIN = 6873;
    PLAYER_ACTION_MARBLE_FIGHT_GAME_END = 6874;
    PLAYER_ACTION_MARBLE_FIGHT_GAME_ROUND = 6875;
    PLAYER_ACTION_MARBLE_FIGHT_GAME_TURN = 6876;
    PLAYER_ACTION_PLANET_FES_LEVEL_UP = 6901;
    PLAYER_ACTION_PLANET_FES_ACTIVITY_INIT = 6902;
    PLAYER_ACTION_PLANET_FES_AVATAR_LEVEL_UP = 6903;
    PLAYER_ACTION_PLANET_FES_TAKE_REGION_PHASE_REWARD = 6904;
    PLAYER_ACTION_PLANET_FES_ADD_ITEM = 6905;
    PLAYER_ACTION_PLANET_FES_QUEST = 6906;
    PLAYER_ACTION_PLANET_FES_BUSINESS_DAY_FINISH = 6907;
    PLAYER_ACTION_PLANET_FES_AVATAR_STAR_UP = 6908;
    PLAYER_ACTION_PLANET_FES_UNLOCK_LAND = 6909;
    PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_FINISH = 6910;
    PLAYER_ACTION_PLANET_FES_ACTIVATE_CARD = 6911;
    PLAYER_ACTION_PLANET_FES_SKILL_LEVEL_UP = 6912;
    PLAYER_ACTION_PLANET_FES_GACHA = 6913;
    PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_HANDLE = 6914;
    PLAYER_ACTION_PLANET_FES_CARD_APPLY_PERMISSION = 6915;
    PLAYER_ACTION_PLANET_FES_CARD_INTERACT = 6916;
    PLAYER_ACTION_PLANET_FES_TO_SNS = 6917;
    PLAYER_ACTION_PLANET_FES_SET_WORK_AVATAR = 6918;
    PLAYER_ACTION_PLANET_FES_SUMMARY = 6919;
    PLAYER_ACTION_TAROT_BOOK_CHARACTER_LEVEL_UP = 6951;
    PLAYER_ACTION_TAROT_BOOK_OPEN_PACK = 6952;
    PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY = 6953;
    PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY_SINGLE = 6954;
    PLAYER_ACTION_TAROT_BOOK_FINISH_STORY = 6955;
    PLAYER_ACTION_TAROT_BOOK_FINISH_INTERACTION = 6956;
    PLAYER_ACTION_TAROT_BOOK_CHANGE_ENERGY = 6957;
    PLAYER_ACTION_CHIMERA_ROUND_START = 6971;
    PLAYER_ACTION_CHIMERA_ROUND_WORK_START = 6972;
    PLAYER_ACTION_CHIMERA_ROUND_WORK_END = 6973;
    PLAYER_ACTION_CHIMERA_ENDLESS_START = 6974;
    PLAYER_ACTION_CHIMERA_ENDLESS_END = 6975;
    PLAYER_ACTION_CHIMERA_ENDLESS_WORK_START = 6976;
    PLAYER_ACTION_CHIMERA_ENDLESS_WORK_END = 6977;
    PLAYER_ACTION_CHIMERA_RANK_CHANGE = 6978;
    PLAYER_ACTION_CHIMERA_GET = 6979;
    PLAYER_ACTION_STORY_TOKEN_TAKE_ACTIVITY_REWARD = 6991;
    PLAYER_ACTION_REISSUE_AVATAR_TOKEN_ITEM = 6992;
    PLAYER_ACTION_AVATAR_DELIVER_REWARD_ACTIVITY_TAKE_REWARD = 7001;
    PLAYER_ACTION_LOCAL_LEGEND_REWARD = 7031;
    PLAYER_ACTION_PARKOUR_START_LEVEL = 7061;
    PLAYER_ACTION_PARKOUR_END_LEVEL = 7062;
    PLAYER_ACTION_BASIN_CHEST_INTERACT_RESULT = 7091;
    PLAYER_ACTION_ROGUE_MIRACLE_SWAP = 7092;
}

enum AvatarSlot {
    AVATAR_SLOT_1 = 0;
    AVATAR_SLOT_2 = 1;
    AVATAR_SLOT_3 = 2;
}

enum ItemType {
    ITEM_TYPE_NONE = 0;
    ITEM_AVATAR_CARD = 1;
    ITEM_EQUIPMENT = 2;
    ITEM_MATERIAL = 3;
    ITEM_AVATAR_EXP = 4;
    ITEM_RELIC = 5;
}

enum VirtualItemType {
    VIRTUAL_ITEM_NONE = 0;
    VIRTUAL_ITEM_HCOIN = 1;
    VIRTUAL_ITEM_SCOIN = 2;
    VIRTUAL_ITEM_MCOIN = 3;
    VIRTUAL_ITEM_STAMINA = 11;
    VIRTUAL_ITEM_RESERVE_STAMINA = 12;
    VIRTUAL_ITEM_AVATAR_EXP = 21;
    VIRTUAL_ITEM_EXP = 22;
    VIRTUAL_ITEM_DAILY_ACTIVE_POINT = 23;
    VIRTUAL_ITEM_MP_MAX = 24;
    VIRTUAL_ITEM_PLAYER_RETURN_POINT = 25;
    VIRTUAL_ITEM_BATTLE_COLLEGE_POINT = 26;
    VIRTUAL_ITEM_ROGUE_COIN = 31;
    VIRTUAL_ITEM_ROGUE_TALENT_COIN = 32;
    VIRTUAL_ITEM_ROGUE_REWARD_KEY = 33;
    VIRTUAL_ITEM_ACHIEVEMENT_EXP = 41;
    VIRTUAL_ITEM_BP_EXP = 51;
    VIRTUAL_ITEM_BP_REAL_EXP = 52;
    VIRTUAL_ITEM_MUSEUM_FUNDS = 53;
    VIRTUAL_TRAINPARTY_BUILDING_FUNDS = 54;
    VIRTUAL_TRAINPARTY_AREA_UNLOCK_COIN = 55;
    VIRTUAL_TRAINPARTY_MOBILITY = 56;
    VIRTUAL_ITEM_WARRIOR_EXP = 190;
    VIRTUAL_ITEM_ROGUE_EXP = 191;
    VIRTUAL_ITEM_MAGE_EXP = 192;
    VIRTUAL_ITEM_SHAMAN_EXP = 193;
    VIRTUAL_ITEM_WARLOCK_EXP = 194;
    VIRTUAL_ITEM_KNIGHT_EXP = 195;
    VIRTUAL_ITEM_PRIEST_EXP = 196;
    VIRTUAL_ITEM_PUNK_LORD_POINT = 100000;
    VIRTUAL_ITEM_GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
    VIRTUAL_ITEM_GAMEPLAY_COUNTER_WOLF_BRO_BULLET = 280002;
    VIRTUAL_ITEM_ALLEY_FUNDS = 281001;
    VIRTUAL_ITEM_ROGUE_PUMAN_COUPON = 281012;
    VIRTUAL_ITEM_MONTH_CARD = 300101;
    VIRTUAL_ITEM_BP_NORMAL = 300102;
    VIRTUAL_ITEM_BP_DELUXE = 300103;
    VIRTUAL_ITEM_BP_UPGRADE = 300104;
    VIRTUAL_ITEM_HELIOBUS_FANS = 281002;
    VIRTUAL_ITEM_SPACE_ZOO_HYBRID_ITEM = 281003;
    VIRTUAL_ITEM_SPACE_ZOO_EXP_POINT = 281004;
    VIRTUAL_ITEM_ROGUE_NOUS_TALENT_COIN = 281013;
    VIRTUAL_ITEM_EVOLVE_BUILD_COIN = 281019;
    VIRTUAL_ITEM_DRINK_MAKER_TIP = 281005;
    VIRTUAL_ITEM_MONOPOLY_DICE = 281014;
    VIRTUAL_ITEM_MONOPOLY_COIN = 281015;
    VIRTUAL_ITEM_MONOPOLY_CHEATDICE = 281016;
    VIRTUAL_ITEM_MONOPOLY_REROLL = 281017;
    VIRTUAL_ITEM_ROGUE_TOURN_PERMANENT_TALENT_COIN = 281018;
    VIRTUAL_ITEM_ROGUE_TOURN_SEASON_TALENT_COIN = 281020;
    VIRTUAL_ITEM_ROGUE_TOURN_EXP = 281022;
    VIRTUAL_ITEM_MATCHTHREE_COIN = 281024;
    VIRTUAL_ITEM_SWORD_TRAINING_SKILL_POINT = 281023;
    VIRTUAL_ITEM_FIGHT_FEST_COIN = 281025;
    VIRTUAL_ITEM_ROGUE_MAGIC_TALENT_COIN = 281026;
    VIRTUAL_ITEM_EVOLVE_BUILD_SC_COIN = 281027;
    VIRTUAL_ITEM_EVOLVE_BUILD_REWARD_EXP = 281028;
}

enum GameplayCounterType {
    GAMEPLAY_COUNTER_NONE = 0;
    GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
}

enum BlackLimitLevel {
    BLACK_LIMIT_LEVEL_ALL = 0;
}

enum AreaType {
    AREA_NONE = 0;
    AREA_CN = 1;
    AREA_JP = 2;
    AREA_ASIA = 3;
    AREA_WEST = 4;
    AREA_KR = 5;
    AREA_OVERSEAS = 6;
}

enum EntityType {
    ENTITY_NONE = 0;
    ENTITY_AVATAR = 1;
    ENTITY_MONSTER = 2;
    ENTITY_NPC = 3;
    ENTITY_PROP = 4;
    ENTITY_TRIGGER = 5;
    ENTITY_ENV = 6;
    ENTITY_SUMMON_UNIT = 7;
}

enum LanguageType {
    LANGUAGE_NONE = 0;
    LANGUAGE_SC = 1;
    LANGUAGE_TC = 2;
    LANGUAGE_EN = 3;
    LANGUAGE_KR = 4;
    LANGUAGE_JP = 5;
    LANGUAGE_FR = 6;
    LANGUAGE_DE = 7;
    LANGUAGE_ES = 8;
    LANGUAGE_PT = 9;
    LANGUAGE_RU = 10;
    LANGUAGE_TH = 11;
    LANGUAGE_VI = 12;
    LANGUAGE_ID = 13;
}

enum PlatformType {
    EDITOR = 0;
    IOS = 1;
    ANDROID = 2;
    PC = 3;
    WEB = 4;
    WAP = 5;
    PS4 = 6;
    NINTENDO = 7;
    CLOUD_ANDROID = 8;
    CLOUD_PC = 9;
    CLOUD_IOS = 10;
    PS5 = 11;
    MAC = 12;
    CLOUD_MAC = 13;
    CLOUD_WEB_ANDROID = 20;
    CLOUD_WEB_IOS = 21;
    CLOUD_WEB_PC = 22;
    CLOUD_WEB_MAC = 23;
    CLOUD_WEB_TOUCH = 24;
    CLOUD_WEB_KEYBOARD = 25;
    CLOUD_DOUYIN_IOS = 27;
    CLOUD_DOUYIN_ANDROID = 28;
}

enum ReloginType {
    NO_KICK = 0;
    FORCE_KICK = 1;
    IDLE_KICK = 2;
    SILENCE = 3;
}

enum AvatarType {
    AVATAR_TYPE_NONE = 0;
    AVATAR_TRIAL_TYPE = 1;
    AVATAR_LIMIT_TYPE = 2;
    AVATAR_FORMAL_TYPE = 3;
    AVATAR_ASSIST_TYPE = 4;
    AVATAR_AETHER_DIVIDE_TYPE = 5;
    AVATAR_UPGRADE_AVAILABLE_TYPE = 6;
}

enum MultiPathAvatarType {
    MultiPathAvatarTypeNone = 0;
    Mar_7thKnightType = 1001;
    Mar_7thRogueType = 1224;
    BoyWarriorType = 8001;
    GirlWarriorType = 8002;
    BoyKnightType = 8003;
    GirlKnightType = 8004;
    BoyShamanType = 8005;
    GirlShamanType = 8006;
    BoyMemoryType = 8007;
    GirlMemoryType = 8008;
}

enum Gender {
    GenderNone = 0;
    GenderMan = 1;
    GenderWoman = 2;
}

enum ProductType {
    PRODUCT_NONE = 0;
    PRODUCT_NORMAL = 1;
    PRODUCT_LIMIT = 2;
    PRODUCT_LIMIT_NO_PAY = 3;
    PRODUCT_NO_PROCESS_ORDER = 4;
}

enum ProductGiftType {
    PRODUCT_GIFT_NONE = 0;
    PRODUCT_GIFT_COIN = 1;
    PRODUCT_GIFT_MONTH_CARD = 2;
    PRODUCT_GIFT_BP_68 = 3;
    PRODUCT_GIFT_BP_128 = 4;
    PRODUCT_GIFT_BP68_UPGRADE_128 = 5;
    PRODUCT_GIFT_POINT_CARD = 6;
    PRODUCT_GIFT_PS_PRE_ORDER_1 = 7;
    PRODUCT_GIFT_PS_PRE_ORDER_2 = 8;
    PRODUCT_GIFT_GOOGLE_POINTS_100 = 9;
    PRODUCT_GIFT_GOOGLE_POINTS_150 = 10;
    PRODUCT_GIFT_PS_POINT_CARD_030 = 11;
    PRODUCT_GIFT_PS_POINT_CARD_050 = 12;
    PRODUCT_GIFT_PS_POINT_CARD_100 = 13;
    PRODUCT_GIFT_PSN_PLUS = 14;
    PRODUCT_GIFT_SINGLE_6 = 15;
    PRODUCT_GIFT_DAILY_LOGIN_30 = 16;
    PRODUCT_GIFT_APPLE_GIFT_CARD = 17;
    PRODUCT_GIFT_FTC_UP_GACHA_TICKET_1 = 18;
    PRODUCT_GIFT_FTC_UP_GACHA_TICKET_10 = 19;
    PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_1 = 20;
    PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_10 = 21;
}

enum FeatureSwitchType {
    FEATURE_SWITCH_NONE = 0;
    FEATURE_SWITCH_SHOP = 1;
    FEATURE_SWITCH_LINEUP_NAME = 2;
    FEATURE_SWITCH_RECHARGE_SHOP = 3;
    FEATURE_SWITCH_NICKNAME = 4;
    FEATURE_SWITCH_SIGNATURE = 5;
    FEATURE_SWITCH_BATTLEPASS = 6;
    FEATURE_SWITCH_PUNK_LORD = 7;
    FEATURE_SWITCH_MONTHCARD_DAILY = 8;
    FEATURE_SWITCH_PICTURE_SHARE = 9;
    FEATURE_SWITCH_ROGUE = 10;
    FEATURE_SWITCH_CHALLENGE = 11;
    FEATURE_SWITCH_COCOON = 12;
    FEATURE_SWITCH_RAID = 13;
    FEATURE_SWITCH_MAZE_PLANE_EVENT = 14;
    FEATURE_SWITCH_ACTIVITY_PANEL = 15;
    FEATURE_SWITCH_MAILBOX = 16;
    FEATURE_SWITCH_QUEST = 17;
    FEATURE_SWITCH_GACHA = 18;
    FEATURE_SWITCH_CHAT = 19;
    FEATURE_SWITCH_MODIFY_FRIEND_ALIAS = 20;
    FEATURE_SWITCH_USE_ITEM = 21;
    FEATURE_SWITCH_ACTIVITY_SCHEDULE = 22;
    FEATURE_SWITCH_FARM_ELEMENT = 23;
    FEATURE_SWITCH_ACHIEVEMENT_LEVEL = 24;
    FEATURE_SWITCH_DAILY_ACTIVE_LEVEL = 25;
    FEATURE_SWITCH_PLAYER_RETURN = 26;
    FEATURE_SWITCH_FIRST_SET_NICKNAME = 27;
    FEATURE_SWITCH_MAIN_MISSION_REWARD = 28;
    FEATURE_SWITCH_SUB_MISSION_REWARD = 29;
    FEATURE_SWITCH_PAM_MISSION = 30;
    FEATURE_SWITCH_DESTROY_ITEM = 32;
    FEATURE_SWITCH_CONSUME_ITEM_TURN = 33;
    FEATURE_SWITCH_ROGUE_MODIFIER = 34;
    FEATURE_SWITCH_CHESS_ROGUE = 35;
    FEATURE_SWITCH_CHESS_ROGUE_BOARD = 36;
    FEATURE_SWITCH_ROLL_SHOP = 37;
    FEATURE_SWITCH_H5_RETURN = 38;
    FEATURE_SWITCH_OFFERING = 39;
    FEATURE_SWITCH_SERVER_RED_POINT = 40;
    FEATURE_SWITCH_MONOPOLY_OPTION_RATIO = 41;
    FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET = 42;
    FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD = 43;
    FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP = 44;
    FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK = 45;
    FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT = 46;
    FEATURE_SWITCH_PVP = 47;
    FEATURE_SWITCH_ROGUE_MODE = 48;
    FEATURE_SWITCH_ROGUE_TOURN_UGC = 49;
    FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME = 50;
    FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP = 51;
    FEATURE_SWITCH_RED_DOT = 52;
    FEATURE_SWITCH_GAME_STATE_SERVICE = 53;
    FEATURE_SWITCH_BENEFIT_INDEX = 54;
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF = 55;
    FEATURE_SWITCH_PRE_AVATAR_SET_GROWTH_TARGET = 56;
    FEATURE_SWITCH_IMPORT_RELIC_FILTER_PLAN = 58;
    FEATURE_SWITCH_GACHA_DECIDE_ITEM = 59;
    FEATURE_SWITCH_ITEM_SYNC = 60;
    FEATURE_SWITCH_RECHARGE_BENEFIT = 61;
    FEATURE_SWITCH_RECHARGE_GIFT = 62;
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE = 63;
    FEATURE_SWITCH_GACHA_AVATAR_TOAST = 64;
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE_RENAME = 65;
    FEATURE_SWITCH_RELIC_SMART_DISCARD = 66;
    FEATURE_SWITCH_PLANETFES_SOCIAL = 67;
}

enum SecretKeyType {
    SECRET_KEY_NONE = 0;
    SECRET_KEY_SERVER_CHECK = 1;
    SECRET_KEY_VIDEO = 2;
    SECRET_KEY_BATTLE_TIME = 3;
}

enum ReplayType {
    REPLAY_TYPE_NONE = 0;
    REPLAY_TYPE_PUNK_LORD = 1;
}

enum PunkLordShareType {
    PUNK_LORD_SHARE_TYPE_NONE = 0;
    PUNK_LORD_SHARE_TYPE_FRIEND = 1;
    PUNK_LORD_SHARE_TYPE_ALL = 2;
}

enum PunkLordAttackerStatus {
    PUNK_LORD_ATTACKER_STATUS_NONE = 0;
    PUNK_LORD_ATTACKER_STATUS_ATTACKED = 1;
    PUNK_LORD_ATTACKER_STATUS_ATTACKING = 2;
    PUNK_LORD_ATTACKER_STATUS_ATTACKED_AND_ATTACKING = 3;
}

enum PunkLordMonsterInfoNotifyReason {
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_NONE = 0;
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_ENTER_RAID = 1;
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_BATTLE_END = 2;
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_LEAVE_RAID = 3;
}

enum ChatType {
    CHAT_TYPE_NONE = 0;
    CHAT_TYPE_PRIVATE = 1;
    CHAT_TYPE_GROUP = 2;
}

enum MsgType {
    MSG_TYPE_NONE = 0;
    MSG_TYPE_CUSTOM_TEXT = 1;
    MSG_TYPE_EMOJI = 2;
    MSG_TYPE_INVITE = 3;
    MSG_TYPE_PLANET_FES = 4;
}

enum PlanetFesType {
    PLANET_FES_MSG_CONTENT_NONE = 0;
    PLANET_FES_MSG_CONTENT_APPLY_REQ = 1;
    PLANET_FES_MSG_CONTENT_PIECE_OFFERED = 2;
}

enum ShieldType {
    SHIELD_TYPE_NONE = 0;
    SHIELD_TYPE_REPLACE = 1;
    SHIELD_TYPE_SHIED = 2;
}

enum FuncUnlockIdType {
    FUNC_UNLOCK_ID_NONE = 0;
    FUNC_UNLOCK_ID_RELIC = 403;
    FUNC_UNLOCK_ID_RELIC_NUM = 404;
    FUNC_UNLOCK_ID_EQUIPMENT = 401;
    FUNC_UNLOCK_ID_SKILLTREE = 402;
    FUNC_UNLOCK_ID_GACHA = 2300;
    FUNC_UNLOCK_ID_EXPEDITION = 3100;
    FUNC_UNLOCK_ID_COMPOSE = 4100;
    FUNC_UNLOCK_ID_FIGHTACTIVITY = 3700;
}

enum AssistAvatarType {
    ASSIST_AVATAR_UNKNOW = 0;
    ASSIST_AVATAR_LEVEL = 1;
    ASSIST_AVATAR_RANK = 2;
}

enum DevelopmentType {
    DEVELOPMENT_NONE = 0;
    DEVELOPMENT_ROGUE_COSMOS = 1;
    DEVELOPMENT_ROGUE_CHESS = 2;
    DEVELOPMENT_ROGUE_CHESS_NOUS = 3;
    DEVELOPMENT_MEMORY_CHALLENGE = 4;
    DEVELOPMENT_STORY_CHALLENGE = 5;
    DEVELOPMENT_UNLOCK_AVATAR = 6;
    DEVELOPMENT_UNLOCK_EQUIPMENT = 7;
    DEVELOPMENT_ACTIVITY_START = 8;
    DEVELOPMENT_ACTIVITY_END = 9;
    DEVELOPMENT_BOSS_CHALLENGE = 10;
    DEVELOPMENT_ROGUE_TOURN = 11;
    DEVELOPMENT_ROGUE_TOURN_WEEK = 12;
    DEVELOPMENT_ROGUE_MAGIC = 13;
}

enum PlayingState {
    PLAYING_STATE_NONE = 0;
    PLAYING_ROGUE_COSMOS = 1;
    PLAYING_ROGUE_CHESS = 2;
    PLAYING_ROGUE_CHESS_NOUS = 3;
    PLAYING_CHALLENGE_MEMORY = 4;
    PLAYING_CHALLENGE_STORY = 5;
    PLAYING_CHALLENGE_BOSS = 6;
    PLAYING_ROGUE_TOURN = 7;
    PLAYING_ROGUE_MAGIC = 8;
}

enum MatchRoomCharacterType {
    MatchRoomCharacter_None = 0;
    MatchRoomCharacter_Leader = 1;
    MatchRoomCharacter_Member = 2;
    MatchRoomCharacter_Watcher = 3;
}

enum MatchRoomCharacterStatus {
    MatchRoomCharacterStatus_None = 0;
    MatchRoomCharacterStatus_Idle = 1;
    MatchRoomCharacterStatus_Operating = 2;
    MatchRoomCharacterStatus_Ready = 3;
    MatchRoomCharacterStatus_Fighting = 4;
    MatchRoomCharacterStatus_Watching = 5;
}

enum MGECFLOEOEG {
    PLANET_FES_CARD_PIECE_APPLY_PERMISSION_REVIEW = 0;
    PLANET_FES_CARD_PIECE_APPLY_PERMISSION_FREE = 1;
    PLANET_FES_CARD_PIECE_PERMISSION_BAN = 2;
}

enum GHANGCBOEMC {
    PLANET_FES_CARD_PIECE_INTERACT_APPLYING = 0;
    PLANET_FES_CARD_PIECE_INTERACT_OFFERED = 1;
    PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN = 2;
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD = 3;
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED = 4;
}

enum IJHBCBEOPFE {
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_REVIEW_APPLY = 0;
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_FREE_APPLY = 1;
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_GIVE = 2;
}

enum DLLLEANDAIH {
    FRIEND_RECOMMEND_LINEUP_TYPE_NONE = 0;
    FRIEND_RECOMMEND_LINEUP_TYPE_CHALLENGE = 1;
    FRIEND_RECOMMEND_LINEUP_TYPE_LOCAL_LEGEND = 2;
}

enum BattleCheckStrategyType {
    BATTLE_CHECK_STRATEGY_IDENTICAL = 0;
    BATTLE_CHECK_STRATEGY_SERVER = 1;
    BATTLE_CHECK_STRATEGY_CLIENT = 2;
}

enum BattleCheckResultType {
    BATTLE_CHECK_RESULT_SUCC = 0;
    BATTLE_CHECK_RESULT_FAIL = 1;
    BATTLE_CHECK_RESULT_PASS = 2;
}

enum BattleModuleType {
    BATTLE_MODULE_MAZE = 0;
    BATTLE_MODULE_CHALLENGE = 1;
    BATTLE_MODULE_COCOON = 2;
    BATTLE_MODULE_ROGUE = 3;
    BATTLE_MODULE_CHALLENGE_ACTIVITY = 4;
    BATTLE_MODULE_TRIAL_LEVEL = 5;
    BATTLE_MODULE_AETHER_DIVIDE = 6;
}

enum AetherdivideSpiritLineupType {
    AETHERDIVIDE_SPIRIT_LINEUP_NONE = 0;
    AETHERDIVIDE_SPIRIT_LINEUP_NORMAL = 1;
    AETHERDIVIDE_SPIRIT_LINEUP_TRIAL = 2;
}

enum BattleTargetType {
    BATTLE_TARGET_TYPE_NONE = 0;
    BATTLE_TARGET_TYPE_SCORE = 1;
    BATTLE_TARGET_TYPE_ACHIEVEMENT = 2;
    BATTLE_TARGET_TYPE_RAID = 3;
    BATTLE_TARGET_TYPE_CHALLENGE_SCORE = 4;
    BATTLE_TARGET_TYPE_COMMON = 5;
    BATTLE_TARGET_TYPE_CLIENT_ACHIEVEMENT = 6;
}

enum DeathSource {
    UNKNOWN = 0;
    KILLED_BY_OTHERS = 1;
    KILLED_BY_SELF = 2;
    ESCAPE = 3;
}

enum BattleTag {
    TAG_NONE = 0;
    TAG_HIDE_NPC_MONSTER = 1;
}

enum HEMBNDJAFDA {
    NORMAL_CREATE = 0;
    FORM_CHANGE = 1;
}

enum BattleEndReason {
    BATTLE_END_REASON_NONE = 0;
    BATTLE_END_REASON_ALL_DIE = 1;
    BATTLE_END_REASON_TURN_LIMIT = 2;
}

enum BattleStaticticEventType {
    BATTLE_STATICTIC_EVENT_NONE = 0;
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_ADD_EXPLORE = 1;
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_OPEN_GRID = 2;
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_PICKUP_ITEM = 3;
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_USE_BUFF = 4;
    BATTLE_STATICTIC_EVENT_TELEVISION_ACTIVITY_UPDATE_MAZE_BUFF_LAYER = 5;
    BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN = 6;
    BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN_TIMES = 7;
}

enum BOJGAKMDPDL {
    EVOLVE_BUILD_FUNC_NONE = 0;
    EVOLVE_BUILD_FUNC_GEAR_RESET = 1;
    EVOLVE_BUILD_FUNC_GEAR_REMOVE = 2;
    EVOLVE_BUILD_FUNC_GEAR_SKIP = 3;
    EVOLVE_BUILD_FUNC_CARD_RESET = 4;
}

enum JEGLEIKMNCL {
    kNone = 0;
    kkillEliteMonsterNum = 1;
    kkillMonsterNum = 2;
}

enum BattleEndStatus {
    BATTLE_END_NONE = 0;
    BATTLE_END_WIN = 1;
    BATTLE_END_LOSE = 2;
    BATTLE_END_QUIT = 3;
}

enum FightGameMode {
    FIGHT_GAME_MODE_NONE = 0;
    FIGHT_GAME_MODE_MATCH3 = 1;
    FIGHT_GAME_MODE_MARBLE = 2;
}

enum FightKickoutType {
    FIGHT_KICKOUT_UNKNOWN = 0;
    FIGHT_KICKOUT_BLACK = 1;
    FIGHT_KICKOUT_BY_GM = 2;
    FIGHT_KICKOUT_TIMEOUT = 3;
    FIGHT_KICKOUT_SESSION_RESET = 4;
}

enum LobbyCharacterType {
    LobbyCharacter_None = 0;
    LobbyCharacter_Leader = 1;
    LobbyCharacter_Member = 2;
    LobbyCharacter_Watcher = 3;
}

enum LobbyCharacterStatus {
    LobbyCharacterStatus_None = 0;
    LobbyCharacterStatus_Idle = 1;
    LobbyCharacterStatus_Operating = 2;
    LobbyCharacterStatus_Ready = 3;
    LobbyCharacterStatus_Fighting = 4;
    LobbyCharacterStatus_Watching = 5;
    LobbyCharacterStatus_Matching = 6;
    LobbyCharacterStatus_LobbyStartFight = 7;
}

enum LobbyModifyType {
    LobbyModifyType_None = 0;
    LobbyModifyType_Idle = 1;
    LobbyModifyType_Ready = 2;
    LobbyModifyType_Operating = 3;
    LobbyModifyType_CancelMatch = 4;
    LobbyModifyType_Match = 5;
    LobbyModifyType_QuitLobby = 6;
    LobbyModifyType_KickOut = 7;
    LobbyModifyType_TimeOut = 8;
    LobbyModifyType_JoinLobby = 9;
    LobbyModifyType_LobbyDismiss = 10;
    LobbyModifyType_MatchTimeOut = 11;
    LobbyModifyType_FightStart = 12;
    LobbyModifyType_Logout = 13;
    LobbyModifyType_FightEnd = 14;
    LobbyModifyType_FightRoomDestroyInInit = 15;
    LobbyModifyType_LobbyStartFight = 16;
    LobbyModifyType_LobbyStartFightTimeout = 17;
}

enum FightRoomDestroyReason {
    FIGHT_ROOM_DESTROY_REASON_NONE = 0;
    FIGHT_ROOM_DESTROY_REASON_SVR_STOP = 1;
    FIGHT_ROOM_DESTROY_REASON_GAME_END = 2;
}

enum Match3FinishReason {
    MATCH3_FINISH_REASON_DEFAULT = 0;
    MATCH3_FINISH_REASON_LEAVE = 1;
    MATCH3_FINISH_REASON_DIE = 2;
    MATCH3_FINISH_REASON_GAMEEND = 3;
    MATCH3_FINISH_REASON_KICKOUT = 4;
}

enum MatchUnitType {
    MATCH_UNIT_TYPE_NONE = 0;
    MATCH_UNIT_TYPE_NORMAL = 1;
    MATCH_UNIT_TYPE_ROBOT = 2;
    MATCH_UNIT_TYPE_GM = 3;
}

enum FFJPPNGGLFF {
    FIGHT_PLAYER_RESULT_NONE = 0;
    FIGHT_PLAYER_RESULT_WIN = 1;
    FIGHT_PLAYER_RESULT_FAIL = 2;
    FIGHT_PLAYER_RESULT_DRAW = 3;
}

enum IMAONMHILNE {
    LOBBY_INTERACT_TYPE_NONE = 0;
    LOBBY_INTERACT_TYPE_REMIND_PREPARE = 1;
}

enum retcode {
    RET_SUCC = 0;
    RET_FAIL = 1;
    RET_SERVER_INTERNAL_ERROR = 2;
    RET_TIMEOUT = 3;
    RET_REPEATED_REQ = 4;
    RET_REQ_PARA_INVALID = 5;
    RET_PLAYER_DATA_ERROR = 6;
    RET_PLAYER_CLIENT_PAUSED = 7;
    RET_FUNC_CHECK_FAILED = 8;
    RET_FEATURE_SWITCH_CLOSED = 9;
    RET_FREQ_OVER_LIMIT = 10;
    RET_SYSTEM_BUSY = 11;
    RET_PLAYER_NOT_ONLINE = 12;
    RET_OPERATION_IN_CD = 13;
    RET_REPEATE_LOGIN = 1000;
    RET_RETRY_LOGIN = 1001;
    RET_WAIT_LOGIN = 1002;
    RET_NOT_IN_WHITE_LIST = 1003;
    RET_IN_BLACK_LIST = 1004;
    RET_ACCOUNT_VERIFY_ERROR = 1005;
    RET_ACCOUNT_PARA_ERROR = 1006;
    RET_ANTI_ADDICT_LOGIN = 1007;
    RET_CHECK_SUM_ERROR = 1008;
    RET_REACH_MAX_PLAYER_NUM = 1009;
    RET_ALREADY_REGISTERED = 1010;
    RET_GENDER_ERROR = 1011;
    SET_NICKNAME_RET_CALLBACK_PROCESSING = 1012;
    RET_IN_GM_BIND_ACCESS = 1013;
    RET_QUEST_REWARD_ALREADY_TAKEN = 1100;
    RET_QUEST_NOT_ACCEPT = 1101;
    RET_QUEST_NOT_FINISH = 1102;
    RET_QUEST_STATUS_ERROR = 1103;
    RET_ACHIEVEMENT_LEVEL_NOT_REACH = 1104;
    RET_ACHIEVEMENT_LEVEL_ALREADY_TAKEN = 1105;
    RET_AVATAR_NOT_EXIST = 1200;
    RET_AVATAR_RES_EXP_NOT_ENOUGH = 1201;
    RET_AVATAR_EXP_REACH_PROMOTION_LIMIT = 1202;
    RET_AVATAR_REACH_MAX_PROMOTION = 1203;
    RET_SKILLTREE_CONFIG_NOT_EXIST = 1204;
    RET_SKILLTREE_ALREADY_UNLOCK = 1205;
    RET_SKILLTREE_PRE_LOCKED = 1206;
    RET_SKILLTREE_LEVEL_NOT_MEET = 1207;
    RET_SKILLTREE_RANK_NOT_MEET = 1208;
    RET_AVATAR_DRESS_NO_EQUIPMENT = 1209;
    RET_AVATAR_EXP_ITEM_NOT_EXIST = 1210;
    RET_SKILLTREE_POINT_LOCKED = 1211;
    RET_SKILLTREE_POINT_LEVEL_UPGRADE_NOT_MATCH = 1212;
    RET_SKILLTREE_POINT_LEVEL_REACH_MAX = 1213;
    RET_WORLD_LEVEL_NOT_MEET = 1214;
    RET_PLAYER_LEVEL_NOT_MEET = 1215;
    RET_AVATAR_RANK_NOT_MATCH = 1216;
    RET_AVATAR_RANK_REACH_MAX = 1217;
    RET_HERO_BASIC_TYPE_NOT_MATCH = 1218;
    RET_AVATAR_PROMOTION_NOT_MEET = 1219;
    RET_PROMOTION_REWARD_CONFIG_NOT_EXIST = 1220;
    RET_PROMOTION_REWARD_ALREADY_TAKEN = 1221;
    RET_AVATAR_SKIN_ITEM_NOT_EXIST = 1222;
    RET_AVATAR_SKIN_ALREADY_DRESSED = 1223;
    RET_AVATAR_NOT_DRESS_SKIN = 1224;
    RET_AVATAR_SKIN_NOT_MATCH_AVATAR = 1225;
    RET_AVATAR_PATH_NOT_MATCH = 1226;
    RET_ITEM_NOT_EXIST = 1300;
    RET_ITEM_COST_NOT_ENOUGH = 1301;
    RET_ITEM_COST_TOO_MUCH = 1302;
    RET_ITEM_NO_COST = 1303;
    RET_ITEM_NOT_ENOUGH = 1304;
    RET_ITEM_INVALID = 1305;
    RET_ITEM_CONFIG_NOT_EXIST = 1306;
    RET_SCOIN_NOT_ENOUGH = 1307;
    RET_ITEM_REWARD_EXCEED_LIMIT = 1308;
    RET_ITEM_INVALID_USE = 1309;
    RET_ITEM_USE_CONFIG_NOT_EXIST = 1310;
    RET_REWARD_CONFIG_NOT_EXIST = 1311;
    RET_ITEM_EXCEED_LIMIT = 1312;
    RET_ITEM_COUNT_INVALID = 1313;
    RET_ITEM_USE_TARGET_TYPE_INVALID = 1314;
    RET_ITEM_USE_SATIETY_FULL = 1315;
    RET_ITEM_COMPOSE_NOT_EXIST = 1316;
    RET_RELIC_COMPOSE_NOT_EXIST = 1317;
    RET_ITEM_CAN_NOT_SELL = 1318;
    RET_ITEM_SELL_EXCEDD_LIMIT = 1319;
    RET_ITEM_NOT_IN_COST_LIST = 1320;
    RET_ITEM_SPECIAL_COST_NOT_ENOUGH = 1321;
    RET_ITEM_SPECIAL_COST_TOO_MUCH = 1322;
    RET_ITEM_FORMULA_NOT_EXIST = 1323;
    RET_ITEM_AUTO_GIFT_OPTIONAL_NOT_EXIST = 1324;
    RET_RELIC_COMPOSE_RELIC_INVALID = 1325;
    RET_RELIC_COMPOSE_MAIN_AFFIX_ID_INVALID = 1326;
    RET_RELIC_COMPOSE_WRONG_FORMULA_TYPE = 1327;
    RET_RELIC_COMPOSE_RELIC_NOT_EXIST = 1328;
    RET_RELIC_COMPOSE_BLACK_GOLD_COUNT_INVALID = 1329;
    RET_RELIC_COMPOSE_BLACK_GOLD_NOT_NEED = 1330;
    RET_MONTH_CARD_CANNOT_USE = 1331;
    RET_ITEM_REWARD_EXCEED_DISAPPEAR = 1332;
    RET_ITEM_NEED_RECYCLE = 1333;
    RET_ITEM_COMPOSE_EXCEED_LIMIT = 1334;
    RET_ITEM_CAN_NOT_DESTROY = 1335;
    RET_ITEM_ALREADY_MARK = 1336;
    RET_ITEM_MARK_EXCEED_LIMIT = 1337;
    RET_ITEM_NOT_MARK = 1338;
    RET_ITEN_TURN_FOOD_NOT_SET = 1339;
    RET_ITEM_TURN_FOOD_ALREADY_SET = 1340;
    RET_ITEM_TURN_FOOD_CONSUME_TYPE_ERROR = 1341;
    RET_ITEM_TURN_FOOD_SWITCH_ALREADY_OPEN = 1342;
    RET_ITEM_TURN_FOOD_SWITCH_ALREADY_CLOSE = 1343;
    RET_HCOIN_EXCHANGE_TOO_MUCH = 1344;
    RET_ITEM_TURN_FOOD_SCENE_TYPE_ERROR = 1345;
    RET_EQUIPMENT_ALREADY_DRESSED = 1350;
    RET_EQUIPMENT_NOT_EXIST = 1351;
    RET_EQUIPMENT_REACH_LEVEL_LIMIT = 1352;
    RET_EQUIPMENT_CONSUME_SELF = 1353;
    RET_EQUIPMENT_ALREADY_LOCKED = 1354;
    RET_EQUIPMENT_ALREADY_UNLOCKED = 1355;
    RET_EQUIPMENT_LOCKED = 1356;
    RET_EQUIPMENT_SELECT_NUM_OVER_LIMIT = 1357;
    RET_EQUIPMENT_RANK_UP_MUST_CONSUME_SAME_TID = 1358;
    RET_EQUIPMENT_PROMOTION_REACH_MAX = 1359;
    RET_EQUIPMENT_RANK_UP_REACH_MAX = 1360;
    RET_EQUIPMENT_LEVEL_REACH_MAX = 1361;
    RET_EQUIPMENT_EXCEED_LIMIT = 1362;
    RET_RELIC_NOT_EXIST = 1363;
    RET_RELIC_REACH_LEVEL_LIMIT = 1364;
    RET_RELIC_CONSUME_SELF = 1365;
    RET_RELIC_ALREADY_DRESSED = 1366;
    RET_RELIC_LOCKED = 1367;
    RET_RELIC_ALREADY_LOCKED = 1368;
    RET_RELIC_ALREADY_UNLOCKED = 1369;
    RET_RELIC_LEVEL_IS_NOT_ZERO = 1370;
    RET_UNIQUE_ID_REPEATED = 1371;
    RET_EQUIPMENT_LEVEL_NOT_MEET = 1372;
    RET_EQUIPMENT_ITEM_NOT_IN_COST_LIST = 1373;
    RET_EQUIPMENT_LEVEL_GREATER_THAN_ONE = 1374;
    RET_EQUIPMENT_ALREADY_RANKED = 1375;
    RET_RELIC_EXCEED_LIMIT = 1376;
    RET_RELIC_ALREADY_DISCARDED = 1377;
    RET_RELIC_ALREADY_UNDISCARDED = 1378;
    RET_EQUIPMENT_BATCH_LOCK_TOO_FAST = 1379;
    RET_RELIC_FILTER_PLAN_SLOT_EMPTY = 1380;
    RET_RELIC_FILTER_PLAN_NUM_EXCEED_LIMIT = 1381;
    RET_RELIC_FILTER_PLAN_NAME_UTF8_ERROR = 1382;
    RET_RELIC_FILTER_PLAN_NAME_FORMAT_ERROR = 1383;
    RET_RELIC_FILTER_PLAN_NO_CHANGE = 1384;
    RET_RELIC_REFORGE_NOT_CONFIRMED = 1385;
    RET_EQUIPMENT_ALREADY_LEVELUP = 1386;
    RET_EQUIPMENT_RARITY_ERROR = 1387;
    RET_LINEUP_INVALID_INDEX = 1400;
    RET_LINEUP_INVALID_MEMBER_POS = 1401;
    RET_LINEUP_SWAP_NOT_EXIST = 1402;
    RET_LINEUP_AVATAR_ALREADY_IN = 1403;
    RET_LINEUP_CREATE_AVATAR_ERROR = 1404;
    RET_LINEUP_AVATAR_INIT_ERROR = 1405;
    RET_LINEUP_NOT_EXIST = 1406;
    RET_LINEUP_ONLY_ONE_MEMBER = 1407;
    RET_LINEUP_SAME_LEADER_SLOT = 1408;
    RET_LINEUP_NO_LEADER_SELECT = 1409;
    RET_LINEUP_SWAP_SAME_SLOT = 1410;
    RET_LINEUP_AVATAR_NOT_EXIST = 1411;
    RET_LINEUP_TRIAL_AVATAR_CAN_NOT_QUIT = 1412;
    RET_LINEUP_VIRTUAL_LINEUP_PLANE_NOT_MATCH = 1413;
    RET_LINEUP_NOT_VALID_LEADER = 1414;
    RET_LINEUP_SAME_INDEX = 1415;
    RET_LINEUP_IS_EMPTY = 1416;
    RET_LINEUP_NAME_FORMAT_ERROR = 1417;
    RET_LINEUP_TYPE_NOT_MATCH = 1418;
    RET_LINEUP_REPLACE_ALL_FAILED = 1419;
    RET_LINEUP_NOT_ALLOW_EDIT = 1420;
    RET_LINEUP_AVATAR_IS_ALIVE = 1421;
    RET_LINEUP_ASSIST_HAS_ONLY_MEMBER = 1422;
    RET_LINEUP_ASSIST_CANNOT_SWITCH = 1423;
    RET_LINEUP_AVATAR_TYPE_INVALID = 1424;
    RET_LINEUP_NAME_UTF8_ERROR = 1425;
    RET_LINEUP_LEADER_LOCK = 1426;
    RET_LINEUP_STORY_LINE_NOT_MATCH = 1427;
    RET_LINEUP_AVATAR_LOCK = 1428;
    RET_LINEUP_AVATAR_INVALID = 1429;
    RET_LINEUP_AVATAR_ALREADY_INIT = 1430;
    RET_LINEUP_LIMITED = 1431;
    RET_MAIL_NOT_EXIST = 1700;
    RET_MAIL_RANGE_INVALID = 1701;
    RET_MAIL_MAIL_ID_INVALID = 1702;
    RET_MAIL_NO_MAIL_TAKE_ATTACHMENT = 1703;
    RET_MAIL_NO_MAIL_TO_DEL = 1704;
    RET_MAIL_TYPE_INVALID = 1705;
    RET_MAIL_PARA_INVALID = 1706;
    RET_MAIL_ATTACHEMENT_INVALID = 1707;
    RET_MAIL_TICKET_INVALID = 1708;
    RET_MAIL_TICKET_REPEATED = 1709;
    RET_STAGE_SETTLE_ERROR = 1800;
    RET_STAGE_CONFIG_NOT_EXIST = 1801;
    RET_STAGE_NOT_FOUND = 1802;
    RET_STAGE_COCOON_PROP_NOT_VALID = 1804;
    RET_STAGE_COCOON_WAVE_NOT_VALID = 1805;
    RET_STAGE_PROP_ID_NOT_EQUAL = 1806;
    RET_STAGE_COCOON_WAVE_OVER = 1807;
    RET_STAGE_WEEK_COCOON_OVER_CNT = 1808;
    RET_STAGE_COCOON_NOT_OPEN = 1809;
    RET_STAGE_TRIAL_NOT_OPEN = 1810;
    RET_STAGE_FARM_NOT_OPEN = 1811;
    RET_STAGE_FARM_TYPE_ERROR = 1812;
    RET_STAGE_FARM_SWEEP_CD = 1813;
    RET_CHAPTER_LOCK = 1900;
    RET_CHAPTER_CHALLENGE_NUM_NOT_ENOUGH = 1901;
    RET_CHAPTER_REWARD_ID_NOT_EXIST = 1902;
    RET_CHAPTER_REWARD_ALREADY_TAKEN = 1903;
    RET_BATTLE_STAGE_NOT_MATCH = 2000;
    RET_IN_BATTLE_NOW = 2001;
    RET_BATTLE_CHEAT = 2002;
    RET_BATTLE_FAIL = 2003;
    RET_BATTLE_NO_LINEUP = 2004;
    RET_BATTLE_LINEUP_EMPTY = 2005;
    RET_BATTLE_VERSION_NOT_MATCH = 2006;
    RET_BATTLE_QUIT_BY_SERVER = 2007;
    RET_IN_BATTLE_CHECK = 2008;
    RET_BATTLE_CHECK_NEED_RETRY = 2009;
    RET_BATTLE_COST_TIME_CHECK_FAIL = 2010;
    RET_LACK_EXCHANGE_STAMINA_TIMES = 2100;
    RET_LACK_STAMINA = 2101;
    RET_STAMINA_FULL = 2102;
    RET_AUTHKEY_SIGN_TYPE_ERROR = 2103;
    RET_AUTHKEY_SIGN_VER_ERROR = 2104;
    RET_NICKNAME_FORMAT_ERROR = 2105;
    RET_SENSITIVE_WORDS = 2106;
    RET_LEVEL_REWARD_HAS_TAKEN = 2107;
    RET_LEVEL_REWARD_LEVEL_ERROR = 2108;
    RET_LANGUAGE_INVALID = 2109;
    RET_NICKNAME_IN_CD = 2110;
    RET_GAMEPLAY_BIRTHDAY_INVALID = 2111;
    RET_GAMEPLAY_BIRTHDAY_ALREADY_SET = 2112;
    RET_NICKNAME_UTF8_ERROR = 2113;
    RET_NICKNAME_DIGIT_LIMIT_ERROR = 2114;
    RET_SENSITIVE_WORDS_PLATFORM_ERROR = 2115;
    RET_PLAYER_SETTING_TYPE_INVALID = 2116;
    RET_MAZE_LACK_TICKET = 2201;
    RET_MAZE_NOT_UNLOCK = 2202;
    RET_MAZE_NO_ABILITY = 2204;
    RET_MAZE_NO_PLANE = 2205;
    RET_MAZE_MAP_NOT_EXIST = 2207;
    RET_MAZE_MP_NOT_ENOUGH = 2213;
    RET_SPRING_NOT_ENABLE = 2214;
    RET_SPRING_TOO_FAR = 2216;
    RET_NOT_IN_MAZE = 2218;
    RET_MAZE_TIME_OF_DAY_TYPE_ERROR = 2223;
    RET_SCENE_TRANSFER_LOCKED_BY_TASK = 2224;
    RET_PLOT_NOT_UNLOCK = 2300;
    RET_MISSION_NOT_EXIST = 2400;
    RET_MISSION_ALREADY_DONE = 2401;
    RET_DAILY_TASK_NOT_FINISH = 2402;
    RET_DAILY_TASK_REWARD_HAS_TAKEN = 2403;
    RET_MISSION_NOT_FINISH = 2404;
    RET_MISSION_NOT_DOING = 2405;
    RET_MISSION_FINISH_WAY_NOT_MATCH = 2406;
    RET_MISSION_SCENE_NOT_MATCH = 2407;
    RET_MISSION_CUSTOM_VALUE_NOT_VALID = 2408;
    RET_MISSION_SUB_MISSION_NOT_MATCH = 2409;
    RET_ADVENTURE_MAP_NOT_EXIST = 2500;
    RET_SCENE_ENTITY_NOT_EXIST = 2600;
    RET_NOT_IN_SCENE = 2601;
    RET_SCENE_MONSTER_NOT_EXIST = 2602;
    RET_INTERACT_CONFIG_NOT_EXIST = 2603;
    RET_UNSUPPORTED_PROP_STATE = 2604;
    RET_SCENE_ENTRY_ID_NOT_MATCH = 2605;
    RET_SCENE_ENTITY_MOVE_CHECK_FAILED = 2606;
    RET_ASSIST_MONSTER_COUNT_LIMIT = 2607;
    RET_SCENE_USE_SKILL_FAIL = 2608;
    RET_PROP_IS_HIDDEN = 2609;
    RET_LOADING_SUCC_ALREADY = 2610;
    RET_SCENE_ENTITY_TYPE_INVALID = 2611;
    RET_INTERACT_TYPE_INVALID = 2612;
    RET_INTERACT_NOT_IN_REGION = 2613;
    RET_INTERACT_SUB_TYPE_INVALID = 2614;
    RET_NOT_LEADER_ENTITY = 2615;
    RET_MONSTER_IS_NOT_FARM_ELEMENT = 2616;
    RET_MONSTER_CONFIG_NOT_EXIST = 2617;
    RET_AVATAR_HP_ALREADY_FULL = 2618;
    RET_CUR_INTERACT_ENTITY_NOT_MATCH = 2619;
    RET_PLANE_TYPE_NOT_ALLOW = 2620;
    RET_GROUP_NOT_EXIST = 2621;
    RET_GROUP_SAVE_DATA_IN_CD = 2622;
    RET_GROUP_SAVE_LENGH_REACH_MAX = 2623;
    RET_RECENT_ELEMENT_NOT_EXIST = 2624;
    RET_RECENT_ELEMENT_STAGE_NOT_MATCH = 2625;
    RET_SCENE_POSITION_VERSION_NOT_MATCH = 2626;
    RET_GAMEPLAY_COUNTER_NOT_EXIST = 2627;
    RET_GAMEPLAY_COUNTER_NOT_ENOUGH = 2628;
    RET_GROUP_STATE_NOT_MATCH = 2629;
    RET_SCENE_ENTITY_POS_NOT_MATCH = 2630;
    RET_GROUP_STATE_CUSTOM_SAVE_DATA_OFF = 2631;
    RET_SCENE_NOT_MATCH = 2632;
    RET_PROP_TYPE_INVALID = 2633;
    RET_BUY_TIMES_LIMIT = 2700;
    RET_BUY_LIMIT_TYPE = 2701;
    RET_SHOP_NOT_OPEN = 2702;
    RET_GOODS_NOT_OPEN = 2703;
    RET_CITY_LEVEL_REWARD_TAKEN = 2704;
    RET_CITY_LEVEL_NOT_MEET = 2705;
    RET_SINGLE_BUY_LIMIT = 2706;
    RET_TUTORIAL_NOT_UNLOCK = 2751;
    RET_TUTORIAL_UNLOCK_ALREADY = 2752;
    RET_TUTORIAL_FINISH_ALREADY = 2753;
    RET_TUTORIAL_PRE_NOT_UNLOCK = 2754;
    RET_TUTORIAL_PLAYER_LEVEL_NOT_MATCH = 2755;
    RET_TUTORIAL_TUTORIAL_NOT_FOUND = 2756;
    RET_CHALLENGE_NOT_EXIST = 2801;
    RET_CHALLENGE_NOT_UNLOCK = 2802;
    RET_CHALLENGE_ALREADY = 2803;
    RET_CHALLENGE_LINEUP_EDIT_FORBIDDEN = 2804;
    RET_CHALLENGE_LINEUP_EMPTY = 2805;
    RET_CHALLENGE_NOT_DOING = 2806;
    RET_CHALLENGE_NOT_FINISH = 2807;
    RET_CHALLENGE_TARGET_NOT_FINISH = 2808;
    RET_CHALLENGE_TARGET_REWARD_TAKEN = 2809;
    RET_CHALLENGE_TIME_NOT_VALID = 2810;
    RET_CHALLENGE_STARS_COUNT_NOT_MEET = 2811;
    RET_CHALLENGE_STARS_REWARD_TAKEN = 2812;
    RET_CHALLENGE_STARS_NOT_EXIST = 2813;
    RET_CHALLENGE_CUR_SCENE_NOT_ENTRY_FLOOR = 2814;
    RET_CHALLENGE_NO_TEAM_ARCHIVE = 2815;
    RET_CHALLENGE_LINEUP_AVATAR_TYPE_INVALID = 2816;
    RET_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 2817;
    RET_BASIC_TYPE_ALREADY = 2850;
    RET_NO_BASIC_TYPE = 2851;
    RET_NOT_CHOOSE_BASIC_TYPE = 2852;
    RET_NOT_FUNC_CLOSE = 2853;
    RET_NOT_CHOOSE_GENDER = 2854;
    RET_NOT_REQ_UNLOCK_BASIC_TYPE = 2855;
    RET_AVATAR_PATH_LOCKED = 2856;
    RET_ROGUE_STATUS_NOT_MATCH = 2901;
    RET_ROGUE_SELECT_BUFF_NOT_EXIST = 2902;
    RET_ROGUE_COIN_NOT_ENOUGH = 2903;
    RET_ROGUE_STAMINA_NOT_ENOUGH = 2904;
    RET_ROGUE_APPRAISAL_COUNT_NOT_ENOUGH = 2905;
    RET_ROGUE_PROP_ALREADY_USED = 2906;
    RET_ROGUE_RECORD_ALREADY_SAVED = 2907;
    RET_ROGUE_ROLL_BUFF_MAX_COUNT = 2908;
    RET_ROGUE_PICK_AVATAR_INVALID = 2909;
    RET_ROGUE_QUEST_EXPIRE = 2910;
    RET_ROGUE_QUEST_REWARD_ALREADY = 2911;
    RET_ROGUE_REVIVE_COUNT_NOT_ENOUGH = 2912;
    RET_ROGUE_AREA_INVALID = 2913;
    RET_ROGUE_SCORE_REWARD_POOL_INVALID = 2914;
    RET_ROGUE_SCORE_REWARD_ROW_INVALID = 2915;
    RET_ROGUE_AEON_LEVEL_NOT_MEET = 2916;
    RET_ROGUE_AEON_LEVEL_REWARD_ALREADY_TAKEN = 2917;
    RET_ROGUE_AEON_CONFIG_NOT_EXIST = 2918;
    RET_ROGUE_TRIAL_AVATAR_INVALID = 2919;
    RET_ROGUE_HANDBOOK_REWARD_ALREADY_TAKEN = 2920;
    RET_ROGUE_ROOM_TYPE_NOT_MATCH = 2921;
    RET_ROGUE_SHOP_GOOD_NOT_FOUND = 2922;
    RET_ROGUE_SHOP_GOOD_ALREADY_BOUGHT = 2923;
    RET_ROGUE_SHOP_GOOD_ALREADY_OWN = 2924;
    RET_ROGUE_SHOP_MIRACLE_NOT_EXIST = 2925;
    RET_ROGUE_SHOP_NOT_EXIST = 2926;
    RET_ROGUE_SHOP_CANNOT_REFRESH = 2927;
    RET_ROGUE_SELECT_BUFF_CERTAIN_MISMATCH = 2928;
    RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_BATTLE = 2929;
    RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_OTHERS = 2930;
    RET_MISSION_EVENT_CONFIG_NOT_EXIST = 2951;
    RET_MISSION_EVENT_NOT_CLIENT = 2952;
    RET_MISSION_EVENT_FINISHED = 2953;
    RET_MISSION_EVENT_DOING = 2954;
    RET_HAS_CHALLENGE_MISSION_EVENT = 2955;
    RET_NOT_CHALLENGE_MISSION_EVENT = 2956;
    RET_GACHA_ID_NOT_EXIST = 3001;
    RET_GACHA_NUM_INVALID = 3002;
    RET_GACHA_FIRST_GACHA_MUST_ONE = 3003;
    RET_GACHA_REQ_DUPLICATED = 3004;
    RET_GACHA_NOT_IN_SCHEDULE = 3005;
    RET_GACHA_NEWBIE_CLOSE = 3006;
    RET_GACHA_TODAY_LIMITED = 3007;
    RET_GACHA_NOT_SUPPORT = 3008;
    RET_GACHA_CEILING_NOT_ENOUGH = 3009;
    RET_GACHA_CEILING_CLOSE = 3010;
    RET_GACHA_LOCKED = 3011;
    RET_GACHA_DECIDE_ITEM_TYPE_INVALID = 3012;
    RET_GACHA_DECIDE_ITEM_ID_INVALID = 3013;
    RET_NOT_IN_RAID = 3101;
    RET_RAID_DOING = 3102;
    RET_NOT_PROP = 3103;
    RET_RAID_ID_NOT_MATCH = 3104;
    RET_RAID_RESTART_NOT_MATCH = 3105;
    RET_RAID_LIMIT = 3106;
    RET_RAID_AVATAR_LIST_EMPTY = 3107;
    RET_RAID_AVATAR_NOT_EXIST = 3108;
    RET_CHALLENGE_RAID_REWARD_ALREADY = 3109;
    RET_CHALLENGE_RAID_SCORE_NOT_REACH = 3110;
    RET_CHALLENGE_RAID_NOT_OPEN = 3111;
    RET_RAID_FINISHED = 3112;
    RET_RAID_WORLD_LEVEL_NOT_LOCK = 3113;
    RET_RAID_CANNOT_USE_ASSIST = 3114;
    RET_RAID_AVATAR_NOT_MATCH = 3115;
    RET_RAID_CAN_NOT_SAVE = 3116;
    RET_RAID_NO_SAVE = 3117;
    RET_ACTIVITY_RAID_NOT_OPEN = 3118;
    RET_RAID_AVATAR_CAPTAIN_NOT_EXIST = 3119;
    RET_RAID_STORY_LINE_NOT_MATCH = 3120;
    RET_TALK_EVENT_ALREADY_TAKEN = 3151;
    RET_NPC_ALREADY_MEET = 3152;
    RET_NPC_NOT_IN_CONFIG = 3153;
    RET_DIALOGUE_GROUP_DISMATCH = 3154;
    RET_DIALOGUE_EVENT_INVALID = 3155;
    RET_TALK_EVENT_TAKE_PROTO_NOT_MATCH = 3156;
    RET_TALK_EVENT_NOT_VALID = 3157;
    RET_EXPEDITION_CONFIG_NOT_EXIST = 3201;
    RET_EXPEDITION_REWARD_CONFIG_NOT_EXIST = 3202;
    RET_EXPEDITION_NOT_UNLOCKED = 3203;
    RET_EXPEDITION_ALREADY_ACCEPTED = 3204;
    RET_EXPEDITION_REPEATED_AVATAR = 3205;
    RET_AVATAR_ALREADY_DISPATCHED = 3206;
    RET_EXPEDITION_NOT_ACCEPTED = 3207;
    RET_EXPEDITION_NOT_FINISH = 3208;
    RET_EXPEDITION_ALREADY_FINISH = 3209;
    RET_EXPEDITION_TEAM_COUNT_LIMIT = 3210;
    RET_EXPEDITION_AVATAR_NUM_NOT_MATCH = 3211;
    RET_EXPEDITION_NOT_OPEN = 3212;
    RET_EXPEDITION_FRIEND_AVATAR_NOT_VALID = 3213;
    RET_EXPEDITION_NOT_PUBLISHED = 3214;
    RET_LOGIN_ACTIVITY_HAS_TAKEN = 3301;
    RET_LOGIN_ACTIVITY_DAYS_LACK = 3302;
    RET_TRIAL_ACTIVITY_REWARD_ALREADY_TAKE = 3303;
    RET_TRIAL_ACTIVITY_STAGE_NOT_FINISH = 3304;
    RET_MATERIAL_SUBMIT_ACTIVITY_HAS_TAKEN = 3305;
    RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_NOT_SUBMITTED = 3306;
    RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_ALREADY_SUBMITTED = 3307;
    RET_FANTASTIC_STORY_ACTIVITY_STORY_ERROR = 3308;
    RET_FANTASTIC_STORY_ACTIVITY_STORY_NOT_OPEN = 3309;
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_ERROR = 3310;
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_NOT_OPEN = 3311;
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_AVATAR_ERROR = 3312;
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_BUFF_ERROR = 3313;
    RET_FANTASTIC_STORY_ACTIVITY_PRE_BATTLE_SCORE_NOT_ENOUGH = 3314;
    RET_TRIAL_ACTIVITY_ALREADY_IN_TRIAL_ACTIVITY = 3315;
    RET_COMMON_ACTIVITY_NOT_OPEN = 3316;
    RET_BENEFIT_NOT_READY = 3317;
    RET_COMMON_ACTIVITY_BUSY = 3318;
    RET_AVATAR_DELIVER_REWARD_PHASE_ERROR = 3319;
    RET_MESSAGE_CONFIG_NOT_EXIST = 3501;
    RET_MESSAGE_SECTION_NOT_TAKE = 3502;
    RET_MESSAGE_GROUP_NOT_TAKE = 3503;
    RET_MESSAGE_SECTION_ID_NOT_MATCH = 3504;
    RET_MESSAGE_SECTION_CAN_NOT_FINISH = 3505;
    RET_MESSAGE_ITEM_CAN_NOT_FINISH = 3506;
    RET_MESSAGE_ITEM_RAID_CAN_NOT_FINISH = 3507;
    RET_FRIEND_ALREADY_IS_FRIEND = 3601;
    RET_FRIEND_IS_NOT_FRIEND = 3602;
    RET_FRIEND_APPLY_EXPIRE = 3603;
    RET_FRIEND_IN_BLACKLIST = 3604;
    RET_FRIEND_NOT_IN_BLACKLIST = 3605;
    RET_FRIEND_NUMBER_LIMIT = 3606;
    RET_FRIEND_BLACKLIST_NUMBER_LIMIT = 3607;
    RET_FRIEND_DAILY_APPLY_LIMIT = 3608;
    RET_FRIEND_IN_HANDLE_LIMIT = 3609;
    RET_FRIEND_APPLY_IN_CD = 3610;
    RET_FRIEND_REMARK_NAME_FORMAT_ERROR = 3611;
    RET_FRIEND_PLAYER_NOT_FOUND = 3612;
    RET_FRIEND_IN_TARGET_BLACKLIST = 3613;
    RET_FRIEND_TARGET_NUMBER_LIMIT = 3614;
    RET_ASSIST_QUERY_TOO_FAST = 3615;
    RET_ASSIST_NOT_EXIST = 3616;
    RET_ASSIST_USED_ALREADY = 3617;
    RET_FRIEND_REPORT_REASON_FORMAT_ERROR = 3618;
    RET_FRIEND_REPORT_SENSITIVE_WORDS = 3619;
    RET_ASSIST_USED_TIMES_OVER = 3620;
    RET_ASSIST_QUIT_ALREADY = 3621;
    RET_ASSIST_AVATAR_IN_LINEUP = 3622;
    RET_ASSIST_NO_REWARD = 3623;
    RET_FRIEND_SEARCH_NUM_LIMIT = 3624;
    RET_FRIEND_SEARCH_IN_CD = 3625;
    RET_FRIEND_REMARK_NAME_UTF8_ERROR = 3626;
    RET_FRIEND_REPORT_REASON_UTF8_ERROR = 3627;
    RET_ASSIST_SET_ALREADY = 3628;
    RET_FRIEND_TARGET_FORBID_OTHER_APPLY = 3629;
    RET_FRIEND_MARKED_CNT_MAX = 3630;
    RET_FRIEND_MARKED_ALREADY = 3631;
    RET_FRIEND_NOT_MARKED = 3632;
    RET_FRIEND_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 3633;
    RET_VIEW_PLAYER_CARD_IN_CD = 3634;
    RET_VIEW_PLAYER_BATTLE_RECORD_IN_CD = 3635;
    RET_PLAYER_BOARD_HEAD_ICON_NOT_EXIST = 3701;
    RET_PLAYER_BOARD_HEAD_ICON_LOCKED = 3702;
    RET_PLAYER_BOARD_HEAD_ICON_ALREADY_UNLOCKED = 3703;
    RET_PLAYER_BOARD_DISPLAY_AVATAR_NOT_EXIST = 3704;
    RET_PLAYER_BOARD_DISPLAY_AVATAR_EXCEED_LIMIT = 3705;
    RET_PLAYER_BOARD_DISPLAY_REPEATED_AVATAR = 3706;
    RET_PLAYER_BOARD_DISPLAY_AVATAR_SAME_POS = 3707;
    RET_PLAYER_BOARD_DISPLAY_AVATAR_LOCKED = 3708;
    RET_SIGNATURE_LENGTH_EXCEED_LIMIT = 3709;
    RET_SIGNATURE_SENSITIVE_WORDS = 3710;
    RET_PLAYER_BOARD_ASSIST_AVATAR_NOT_EXIST = 3712;
    RET_PLAYER_BOARD_ASSIST_AVATAR_LOCKED = 3713;
    RET_SIGNATURE_UTF8_ERROR = 3714;
    RET_PLAYER_BOARD_ASSIST_AVATAR_CNT_ERROR = 3715;
    RET_PLAYER_BOARD_PERSONAL_CARD_NOT_EXIST = 3716;
    RET_PLAYER_BOARD_PERSONAL_CARD_LOCKED = 3717;
    RET_PLAYER_BOARD_PERSONAL_NO_CHANGE = 3718;
    RET_BATTLE_PASS_TIER_NOT_VALID = 3801;
    RET_BATTLE_PASS_LEVEL_NOT_MEET = 3802;
    RET_BATTLE_PASS_REWARD_TAKE_ALREADY = 3803;
    RET_BATTLE_PASS_NOT_PREMIUM = 3804;
    RET_BATTLE_PASS_NOT_DOING = 3805;
    RET_BATTLE_PASS_LEVEL_INVALID = 3806;
    RET_BATTLE_PASS_NOT_UNLOCK = 3807;
    RET_BATTLE_PASS_NO_REWARD = 3808;
    RET_BATTLE_PASS_QUEST_NOT_VALID = 3809;
    RET_BATTLE_PASS_NOT_CHOOSE_OPTIONAL = 3810;
    RET_BATTLE_PASS_NOT_TAKE_REWARD = 3811;
    RET_BATTLE_PASS_OPTIONAL_NOT_VALID = 3812;
    RET_BATTLE_PASS_BUY_ALREADY = 3813;
    RET_BATTLE_PASS_NEAR_END = 3814;
    RET_MUSIC_LOCKED = 3901;
    RET_MUSIC_NOT_EXIST = 3902;
    RET_MUSIC_UNLOCK_FAILED = 3903;
    RET_PUNK_LORD_LACK_SUMMON_TIMES = 4001;
    RET_PUNK_LORD_ATTACKING_MONSTER_LIMIT = 4002;
    RET_PUNK_LORD_MONSTER_NOT_EXIST = 4003;
    RET_PUNK_LORD_MONSTER_ALREADY_SHARED = 4004;
    RET_PUNK_LORD_MONSTER_EXPIRED = 4005;
    RET_PUNK_LORD_SELF_MONSTER_ATTACK_LIMIT = 4006;
    RET_PUNK_LORD_LACK_SUPPORT_TIMES = 4007;
    RET_PUNK_LORD_MONSTER_ALREADY_KILLED = 4008;
    RET_PUNK_LORD_MONSTER_ATTACKER_LIMIT = 4009;
    RET_PUNK_LORD_WORLD_LEVLE_NOT_VALID = 4010;
    RET_PUNK_LORD_REWARD_LEVLE_NOT_EXIST = 4011;
    RET_PUNK_LORD_POINT_NOT_MEET = 4012;
    RET_PUNK_LORD_IN_ATTACKING = 4013;
    RET_PUNK_LORD_OPERATION_IN_CD = 4014;
    RET_PUNK_LORD_REWARD_ALREADY_TAKEN = 4015;
    RET_PUNK_LORD_OVER_BONUS_REWARD_LIMIT = 4016;
    RET_PUNK_LORD_NOT_IN_SCHEDULE = 4017;
    RET_PUNK_LORD_MONSTER_NOT_ATTACKED = 4018;
    RET_PUNK_LORD_MONSTER_NOT_KILLED = 4019;
    RET_PUNK_LORD_MONSTER_KILLED_SCORE_ALREADY_TAKE = 4020;
    RET_PUNK_LORD_REWARD_LEVLE_ALREADY_TAKE = 4021;
    RET_DAILY_ACTIVE_LEVEL_INVALID = 4101;
    RET_DAILY_ACTIVE_LEVEL_REWARD_ALREADY_TAKEN = 4102;
    RET_DAILY_ACTIVE_LEVEL_AP_NOT_ENOUGH = 4103;
    RET_DAILY_MEET_PAM = 4201;
    RET_REPLAY_ID_NOT_MATCH = 4251;
    RET_REPLAY_REQ_NOT_VALID = 4252;
    RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_NOT_PASSED = 4301;
    RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_REWARD_ALREADY_TAKE = 4302;
    RET_FIGHT_ACTIVITY_STAGE_NOT_OPEN = 4303;
    RET_FIGHT_ACTIVITY_LEVEL_NOT_UNLOCK = 4304;
    RET_TRAIN_VISITOR_VISITOR_NOT_EXIST = 4351;
    RET_TRAIN_VISITOR_BEHAVIOR_NOT_EXIST = 4352;
    RET_TRAIN_VISITOR_BEHAVIOR_FINISHED = 4353;
    RET_TRAIN_VISITOR_ALL_BEHAVIOR_REWARD_TAKEN = 4354;
    RET_TRAIN_VISITOR_GET_ON_MISSION_NOT_FINISH = 4355;
    RET_TRAIN_VISITOR_NOT_GET_OFF_OR_BE_TRAIN_MEMBER = 4356;
    RET_TEXT_JOIN_UNKNOW_IS_OVERRIDE = 4401;
    RET_TEXT_JOIN_ID_NOT_EXIST = 4402;
    RET_TEXT_JOIN_CAN_NOT_OVERRIDE = 4403;
    RET_TEXT_JOIN_ITEM_ID_ERROR = 4404;
    RET_TEXT_JOIN_SENSITIVE_CHECK_ERROR = 4405;
    RET_TEXT_JOIN_MUST_OVERRIDE = 4406;
    RET_TEXT_JOIN_TEXT_EMPTY = 4407;
    RET_TEXT_JOIN_TEXT_FORMAT_ERROR = 4408;
    RET_TEXT_JOIN_TEXT_UTF8_ERROR = 4409;
    RET_TEXT_JOIN_BATCH_REQ_ID_REPEAT = 4410;
    RET_TEXT_JOIN_TYPE_NOT_SUPPORT_BATCH_REQ = 4411;
    RET_TEXT_JOIN_AVATAR_ID_NOT_EXIST = 4412;
    RET_TEXT_JOIN_UNKNOW_TYPE = 4413;
    RET_PAM_MISSION_MISSION_ID_ERROR = 4451;
    RET_PAM_MISSION_MISSION_EXPIRE = 4452;
    RET_CHAT_TYPE_NOT_EXIST = 4501;
    RET_MSG_TYPE_NOT_EXIST = 4502;
    RET_CHAT_NO_TARGET_UID = 4503;
    RET_CHAT_MSG_EMPTY = 4504;
    RET_CHAT_MSG_EXCEED_LIMIT = 4505;
    RET_CHAT_MSG_SENSITIVE_CHECK_ERROR = 4506;
    RET_CHAT_MSG_UTF8_ERROR = 4507;
    RET_CHAT_FORBID_SWITCH_OPEN = 4508;
    RET_CHAT_FORBID = 4509;
    RET_CHAT_MSG_INCLUDE_SPECIAL_STR = 4510;
    RET_CHAT_MSG_EMOJI_NOT_EXIST = 4511;
    RET_CHAT_MSG_EMOJI_GENDER_NOT_MATCH = 4512;
    RET_CHAT_MSG_EMOJI_NOT_MARKED = 4513;
    RET_CHAT_MSG_EMOJI_ALREADY_MARKED = 4514;
    RET_CHAT_MSG_EMOJI_MARKED_MAX_LIMIT = 4515;
    RET_BOXING_CLUB_CHALLENGE_NOT_OPEN = 4601;
    RET_MUSEUM_NOT_OPEN = 4651;
    RET_MUSEUM_TURN_CNT_NOT_MATCH = 4652;
    RET_MUSEUM_PHASE_NOT_REACH = 4653;
    RET_MUSEUM_UNKNOW_STUFF = 4654;
    RET_MUSEUM_UNKNOW_AREA = 4655;
    RET_MUSEUM_UNKNOW_POS = 4656;
    RET_MUSEUM_STUFF_ALREADY_IN_AREA = 4657;
    RET_MUSEUM_STUFF_NOT_IN_AREA = 4658;
    RET_MUSEUM_GET_NPC_REPEAT = 4659;
    RET_MUSEUM_GET_NPC_UNLOCK = 4660;
    RET_MUSEUM_GET_NPC_NOT_ENOUGH = 4661;
    RET_MUSEUM_CHANGE_STUFF_AREA_ERROR = 4662;
    RET_MUSEUM_NOT_INIT = 4663;
    RET_MUSEUM_EVENT_ERROR = 4664;
    RET_MUSEUM_UNKNOW_CHOOSE_EVENT_ID = 4665;
    RET_MUSEUM_EVENT_ORDER_NOT_MATCH = 4666;
    RET_MUSEUM_EVENT_PHASE_NOT_UNLOCK = 4667;
    RET_MUSEUM_EVENT_MISSION_NOT_FOUND = 4668;
    RET_MUSEUM_AREA_LEVEL_UP_ALREADY = 4669;
    RET_MUSEUM_STUFF_ALREADY_USED = 4670;
    RET_MUSEUM_EVENT_ROUND_NOT_UNLOCK = 4671;
    RET_MUSEUM_STUFF_IN_AREA = 4672;
    RET_MUSEUM_STUFF_DISPATCH = 4673;
    RET_MUSEUM_IS_END = 4674;
    RET_MUSEUM_STUFF_LEAVING = 4675;
    RET_MUSEUM_EVENT_MISSION_NOT_FINISH = 4678;
    RET_MUSEUM_COLLECT_REWARD_NOT_EXIST = 4679;
    RET_MUSEUM_COLLECT_REWARD_ALREADY_TAKEN = 4680;
    RET_MUSEUM_ACCEPT_MISSION_MAX_LIMIT = 4681;
    RET_ROGUE_CHALLENGE_NOT_OPEN = 4701;
    RET_ROGUE_CHALLENGE_ASSIS_REFRESH_LIMIT = 4702;
    RET_ALLEY_NOT_INIT = 4721;
    RET_ALLEY_NOT_OPEN = 4722;
    RET_ALLEY_MAP_NOT_EXIST = 4724;
    RET_ALLEY_EMPTY_POS_LIST = 4725;
    RET_ALLEY_LINE_POS_INVALID = 4726;
    RET_ALLEY_SHOP_NOT_UNLOCK = 4727;
    RET_ALLEY_DEPOT_FULL = 4728;
    RET_ALLEY_SHOP_NOT_INCLUDE = 4729;
    RET_ALLEY_EVENT_NOT_UNLOCK = 4730;
    RET_ALLEY_EVENT_NOT_REFRESH = 4731;
    RET_ALLEY_EVENT_STATE_DOING = 4732;
    RET_ALLEY_EVENT_STATE_FINISH = 4733;
    RET_ALLEY_EVENT_ERROR = 4734;
    RET_ALLEY_REWARD_LEVEL_ERROR = 4735;
    RET_ALLEY_REWARD_PRESTIGE_NOT_ENOUGH = 4736;
    RET_ALLEY_SHIP_EMPTY = 4737;
    RET_ALLEY_SHIP_ID_DISMATCH = 4738;
    RET_ALLEY_SHIP_NOT_EXIST = 4739;
    RET_ALLEY_SHIP_NOT_UNLOCK = 4740;
    RET_ALLEY_GOODS_NOT_EXIST = 4741;
    RET_ALLEY_GOODS_NOT_UNLOCK = 4742;
    RET_ALLEY_PROFIT_NOT_POSITIVE = 4743;
    RET_ALLEY_SPECIAL_ORDER_DISMATCH = 4744;
    RET_ALLEY_ORDER_GOODS_OVER_LIMIT = 4745;
    RET_ALLEY_SPECIAL_ORDER_CONDITION_NOT_MEET = 4746;
    RET_ALLEY_DEPOT_SIZE_OVER_LIMIT = 4747;
    RET_ALLEY_GOODS_NOT_ENOUGH = 4748;
    RET_ALLEY_ORDER_INDEX_INVALID = 4749;
    RET_ALLEY_REWARD_ALREADY_TAKE = 4750;
    RET_ALLEY_REWARD_NOT_EXIST = 4751;
    RET_ALLEY_MAIN_MISSION_NOT_DOING = 4752;
    RET_ALLEY_CRITICAL_EVENT_NOT_FINISH = 4753;
    RET_ALLEY_SHOP_GOODS_NOT_VALID = 4754;
    RET_ALLEY_SLASH_NOT_OPEN = 4755;
    RET_ALLEY_PLACING_ANCHOR_INVALID = 4756;
    RET_ALLEY_PLACING_GOODS_INDEX_INVALID = 4757;
    RET_ALLEY_SAVE_MAP_TOO_QUICK = 4758;
    RET_ALLEY_MAP_NOT_LINK = 4759;
    RET_ALLEY_FUNDS_NOT_LOWER_BASE = 4760;
    RET_ALLEY_EVENT_NOT_FINISH = 4761;
    RET_ALLEY_NORMAL_ORDER_NOT_MEET = 4762;
    RET_PLAYER_RETURN_NOT_OPEN = 4801;
    RET_PLAYER_RETURN_IS_SIGNED = 4802;
    RET_PLAYER_RETURN_POINT_NOT_ENOUGH = 4803;
    RET_PLAYER_RETURN_CONDITION_INVALID = 4804;
    RET_PLAYER_RETURN_HAS_SIGNED = 4805;
    RET_PLAYER_RETURN_REWARD_TAKEN = 4806;
    RET_PLAYER_RETURN_RELIC_TAKEN = 4807;
    RET_AETHER_DIVIDE_NO_LINEUP = 4851;
    RET_AETHER_DIVIDE_LINEUP_INVALID = 4852;
    RET_CHAT_BUBBLE_ID_ERROR = 4901;
    RET_CHAT_BUBBLE_ID_NOT_UNLOCK = 4902;
    RET_PHONE_THEME_ID_ERROR = 4903;
    RET_PHONE_THEME_ID_NOT_UNLOCK = 4904;
    RET_CHAT_BUBBLE_SELECT_IS_CURRENT = 4905;
    RET_PHONE_THEME_SELECT_IS_CURRENT = 4906;
    RET_PHONE_CASE_ID_ERROR = 4907;
    RET_PHONE_CASE_ID_NOT_UNLOCK = 4908;
    RET_PHONE_CASE_SELECT_IS_CURRENT = 4909;
    RET_CHESS_ROGUE_CONFIG_NOT_FOUND = 4951;
    RET_CHESS_ROGUE_CONFIG_INVALID = 4952;
    RET_CHESS_ROGUE_NO_VALID_ROOM = 4963;
    RET_CHESS_ROGUE_NO_CELL_INFO = 4964;
    RET_CHESS_ROGUE_CELL_NOT_FINISH = 4965;
    RET_CHESS_ROGUE_CELL_IS_LOCKED = 4966;
    RET_CHESS_ROGUE_SCHEDULE_NOT_MATCH = 4967;
    RET_CHESS_ROGUE_STATUS_FAIL = 4968;
    RET_CHESS_ROGUE_AREA_NOT_EXIST = 4969;
    RET_CHESS_ROGUE_LINEUP_FAIL = 4970;
    RET_CHESS_ROGUE_AEON_FAIL = 4980;
    RET_CHESS_ROGUE_ENTER_CELL_FAIL = 4981;
    RET_CHESS_ROGUE_ROLL_DICE_FAIL = 4982;
    RET_CHESS_ROGUE_DICE_STATUS_FAIL = 4983;
    RET_CHESS_ROGUE_DICE_CNT_NOT_FULL = 4984;
    RET_CHESS_ROGUE_UNLOCK = 4985;
    RET_CHESS_ROGUE_PICK_AVATAR_FAIL = 4986;
    RET_CHESS_ROGUE_AVATAR_INVALID = 4987;
    RET_CHESS_ROGUE_CELL_CAN_NOT_SELECT = 4988;
    RET_CHESS_ROGUE_DICE_CONFIRMED = 4989;
    RET_CHESS_ROGUE_NOUS_DICE_NOT_MATCH = 4990;
    RET_CHESS_ROGUE_NOUS_DICE_RARITY_FAIL = 4991;
    RET_CHESS_ROGUE_NOUS_DICE_SURFACE_DUPLICATE = 4992;
    RET_CHESS_ROGUE_NOT_IN_ROGUE = 4993;
    RET_CHESS_ROGUE_NOUS_DICE_BRANCH_LIMIT = 4994;
    RET_HELIOBUS_NOT_OPEN = 5101;
    RET_HELIOBUS_SNS_POST_NOT_UNLOCK = 5102;
    RET_HELIOBUS_SNS_ALREADY_READ = 5103;
    RET_HELIOBUS_SNS_ALREADY_LIKED = 5104;
    RET_HELIOBUS_SNS_ALREADY_COMMENTED = 5105;
    RET_HELIOBUS_SNS_IN_MISSION = 5106;
    RET_HELIOBUS_SNS_ALREADY_POSTED = 5107;
    RET_HELIOBUS_SNS_NOT_DOING_MISSION = 5108;
    RET_HELIOBUS_REWARD_LEVEL_MAX = 5109;
    RET_HELIOBUS_INCOME_NOT_ENOUGH = 5110;
    RET_HELIOBUS_SNS_COMMENT_NOT_UNLOCK = 5111;
    RET_HELIOBUS_CHALLENGE_NOT_UNLOCK = 5112;
    RET_HELIOBUS_CHALLENGE_ID_ERROR = 5113;
    RET_HELIOBUS_SKILL_NOT_UNLOCK = 5114;
    RET_HELIOBUS_ACCEPT_POST_MISSION_FAIL = 5115;
    RET_HELIOBUS_SKILL_NOT_SELECTED = 5116;
    RET_HELIOBUS_PLANE_TYPE_INVALID = 5117;
    RET_REDDOT_PARAM_INVALID = 5151;
    RET_REDDOT_ACTIVITY_NOT_OPEN = 5152;
    RET_ROGUE_ENDLESS_ACTIVITY_CONFIG_ERROR = 5201;
    RET_ROGUE_ENDLESS_ACTIVITY_NOT_OPEN = 5202;
    RET_ROGUE_ENDLESS_ACTIVITY_OVER_BONUS_REWARD_LIMIT = 5203;
    RET_ROGUE_ENDLESS_ACTIVITY_SCORE_NOT_MEET = 5204;
    RET_ROGUE_ENDLESS_ACTIVITY_REWARD_LEVLE_ALREADY_TAKE = 5205;
    RET_HEART_DIAL_SCRIPT_NOT_FOUND = 5251;
    RET_HEART_DIAL_SCRIPT_EMOTION_THE_SAME = 5252;
    RET_HEART_DIAL_SCRIPT_STEP_NOT_NORMAL = 5253;
    RET_HEART_DIAL_SCRIPT_CONDITION_NOT_MATCH = 5254;
    RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_NUM_NOT_MATCH = 5255;
    RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_ID_NOT_MATCH = 5256;
    RET_HEART_DIAL_DIALOGUE_NOT_FOUND = 5257;
    RET_HEART_DIAL_DIALOGUE_ALREADY_PERFORMED = 5258;
    RET_HEART_DIAL_NPC_NOT_FOUND = 5259;
    RET_HEART_DIAL_TRACE_CONFIG_NOT_FOUND = 5260;
    RET_HEART_DIAL_FLOOR_TRACE_EXIST = 5261;
    RET_HEART_DIAL_TRACE_FLOOR_NOT_MATCH = 5262;
    RET_TRAVEL_BROCHURE_CONFIG_ERROR = 5301;
    RET_TRAVEL_BROCHURE_PARAM_INVALID = 5302;
    RET_TRAVEL_BROCHURE_LOCKED = 5303;
    RET_TRAVEL_BROCHURE_CANNOT_OPERATE = 5304;
    RET_TRAVEL_BROCHURE_WORLD_ID_NOT_MATCH = 5305;
    RET_TRAVEL_BROCHURE_HAS_NO_WORLD_BOOK = 5306;
    RET_TRAVEL_BROCHURE_PAGE_FULL = 5307;
    RET_MAP_ROTATION_NOT_IN_REGION = 5351;
    RET_MAP_ROTATION_ROTATER_ALREADY_DEPLOYED = 5352;
    RET_MAP_ROTATION_ENERGY_NOT_ENOUGH = 5353;
    RET_MAP_ROTATION_ENTITY_NOT_ON_CUR_POSE = 5354;
    RET_MAP_ROTATION_ROTATER_NOT_DEPLOYED = 5355;
    RET_MAP_ROTATION_POSE_ROTATER_MISMATCH = 5356;
    RET_MAP_ROTATION_ROTATER_NOT_REMOVABLE = 5357;
    RET_MAP_ROTATION_ROTATER_DISPOSABLE = 5358;
    RET_SPACE_ZOO_ACTIVITY_CAT_NOT_FOUND = 5401;
    RET_SPACE_ZOO_ACTIVITY_CAT_PARAM_INVALID = 5402;
    RET_SPACE_ZOO_ACTIVITY_CAT_ITEM_NOT_ENOUGH = 5403;
    RET_SPACE_ZOO_ACTIVITY_CAT_BAG_FULL = 5404;
    RET_SPACE_ZOO_ACTIVITY_CAT_NOT_TO_MUTATE = 5405;
    RET_SPACE_ZOO_ACTIVITY_CAT_STATE_ERROR = 5406;
    RET_SPACE_ZOO_ACTIVITY_CAT_CATTERY_LOCKED = 5407;
    RET_SPACE_ZOO_ACTIVITY_CAT_OUT_NOW = 5408;
    RET_SPACE_ZOO_ACTIVITY_CAT_CONFIG_NOT_FOUND = 5409;
    RET_SPACE_ZOO_ACTIVITY_CAT_FEATURE_NOT_FOUND = 5410;
    RET_SPACE_ZOO_ACTIVITY_CAT_ADD_CAT_ERROR = 5411;
    RET_SPACE_ZOO_ACTIVITY_CAT_MONEY_NOT_ENOUGH = 5412;
    RET_SPACE_ZOO_ACTIVITY_CAT_COND_NOT_MATCH = 5413;
    RET_STRONG_CHALLENGE_ACTIVITY_STAGE_CFG_MISS = 5501;
    RET_STRONG_CHALLENGE_ACTIVITY_STAGE_NOT_OPEN = 5502;
    RET_STRONG_CHALLENGE_ACTIVITY_BUFF_ERROR = 5503;
    RET_ROLL_SHOP_NOT_FOUND = 5551;
    RET_ROLL_SHOP_GROUP_EMPTY = 5552;
    RET_ROLL_SHOP_EMPTY = 5553;
    RET_ROLL_SHOP_GACHA_REQ_DUPLICATED = 5554;
    RET_ROLL_SHOP_RANDOM_ERROR = 5555;
    RET_ROLL_SHOP_GROUP_TYPE_NOT_FOUND = 5556;
    RET_ROLL_SHOP_HAS_STORED_REWARD_ALREADY = 5557;
    RET_ROLL_SHOP_NO_STORED_REWARD = 5558;
    RET_ROLL_SHOP_NOT_IN_VALID_SCENE = 5559;
    RET_ROLL_SHOP_INVALID_ROLL_SHOP_TYPE = 5560;
    RET_ACTIVITY_RAID_COLLECTION_PREV_NOT_FINISH = 5601;
    RET_ACTIVITY_RAID_COLLECTION_GROUP_ENTER_NEXT_UNAVAILABLE = 5602;
    RET_ACTIVITY_RAID_COLLECTION_IS_LAST = 5603;
    RET_ACTIVITY_RAID_COLLECTION_IS_NOT_NEXT = 5604;
    RET_OFFERING_NOT_UNLOCK = 5651;
    RET_OFFERING_LEVEL_NOT_UNLOCK = 5652;
    RET_OFFERING_REACH_MAX_LEVEL = 5653;
    RET_OFFERING_ITEM_NOT_ENOUGH = 5654;
    RET_OFFERING_LONGTAIL_NOT_OPEN = 5655;
    RET_OFFERING_REWARD_CONDITION = 5656;
    RET_DRINK_MAKER_CHAT_INVALID = 5701;
    RET_DRINK_MAKER_PARAM_INVALID = 5702;
    RET_DRINK_MAKER_PARAM_NOT_UNLOCK = 5703;
    RET_DRINK_MAKER_CONFIG_NOT_FOUND = 5704;
    RET_DRINK_MAKER_NOT_LAST_CHAT = 5705;
    RET_DRINK_MAKER_DAY_AND_FREE_PHASE_NOT_OPEN = 5706;
    RET_MONOPOLY_NOT_OPEN = 5751;
    RET_MONOPOLY_CONFIG_ERROR = 5752;
    RET_MONOPOLY_DICE_NOT_ENOUGH = 5753;
    RET_MONOPOLY_CUR_CELL_NOT_FINISH = 5754;
    RET_MONOPOLY_COIN_NOT_ENOUGH = 5755;
    RET_MONOPOLY_CELL_WAIT_PENDING = 5756;
    RET_MONOPOLY_CELL_STATE_ERROR = 5757;
    RET_MONOPOLY_CELL_CONTENT_ERROR = 5758;
    RET_MONOPOLY_ITEM_NOT_ENOUGH = 5759;
    RET_MONOPOLY_CELL_CONTENT_CANNOT_GIVEUP = 5760;
    RET_MONOPOLY_ASSET_LEVEL_INVALID = 5761;
    RET_MONOPOLY_TURN_NOT_FINISH = 5762;
    RET_MONOPOLY_GUIDE_NOT_FINISH = 5763;
    RET_MONOPOLY_RAFFLE_REWARD_REISSUED = 5764;
    RET_MONOPOLY_NO_GAME_ACTIVE = 5771;
    RET_MONOPOLY_GAME_RATIO_NOT_INCREASABLE = 5772;
    RET_MONOPOLY_GAME_RATIO_MAX = 5773;
    RET_MONOPOLY_GAME_TARGET_RATIO_INVALID = 5774;
    RET_MONOPOLY_GAME_BINGO_FLIP_POS_INVALID = 5775;
    RET_MONOPOLY_GAME_GUESS_ALREADY_CHOOSE = 5776;
    RET_MONOPOLY_GAME_GUESS_CHOOSE_INVALID = 5777;
    RET_MONOPOLY_GAME_GUESS_INFORMATION_ALREADY_BOUGHT = 5778;
    RET_MONOPOLY_GAME_RAISE_RATIO_NOT_UNLOCK = 5779;
    RET_MONOPOLY_FRIEND_NOT_SYNCED = 5785;
    RET_MONOPOLY_GET_FRIEND_RANKING_LIST_IN_CD = 5786;
    RET_MONOPOLY_LIKE_TARGET_NOT_FRIEND = 5787;
    RET_MONOPOLY_DAILY_ALREADY_LIKED = 5788;
    RET_MONOPOLY_SOCIAL_EVENT_STATUS_NOT_MATCH = 5789;
    RET_MONOPOLY_SOCIAL_EVENT_SERVER_CACHE_NOT_EXIST = 5790;
    RET_MONOPOLY_ACTIVITY_ID_NOT_MATCH = 5791;
    RET_MONOPOLY_RAFFLE_POOL_NOT_EXIST = 5792;
    RET_MONOPOLY_RAFFLE_POOL_TIME_NOT_MATCH = 5793;
    RET_MONOPOLY_RAFFLE_POOL_PHASE_NOT_MEET = 5794;
    RET_MONOPOLY_RAFFLE_POOL_SHOW_TIME_NOT_MEET = 5795;
    RET_MONOPOLY_RAFFLE_TICKET_NOT_FOUND = 5796;
    RET_MONOPOLY_RAFFLE_TICKET_TIME_NOT_MEET = 5797;
    RET_MONOPOLY_RAFFLE_TICKET_REWARD_ALREADY_TAKEN = 5798;
    RET_MONOPOLY_RAFFLE_POOL_NOT_IN_RAFFLE_TIME = 5799;
    RET_MONOPOLY_MBTI_REPORT_REWARD_ALREADY_TAKEN = 5800;
    RET_EVOLVE_BUILD_LEVEL_GAMING = 5801;
    RET_EVEOLVE_BUILD_LEVEL_BAN_RANDOM = 5802;
    RET_EVOLVE_BUILD_FIRST_REWARD_ALREADY_TAKEN = 5803;
    RET_EVOLVE_BUILD_LEVEL_UNFINISH = 5804;
    RET_EVOLVE_BUILD_SHOP_ABILITY_MAX_LEVEL = 5805;
    RET_EVOLVE_BUILD_SHOP_ABILITY_MIN_LEVEL = 5806;
    RET_EVOLVE_BUILD_SHOP_ABILITY_NOT_GET = 5807;
    RET_EVOLVE_BUILD_LEVEL_LOCK = 5808;
    RET_EVOLVE_BUILD_EXP_NOT_ENOUGH = 5809;
    RET_EVOLVE_BUILD_SHOP_ABILITY_LEVEL_ERROR = 5810;
    RET_EVOLVE_BUILD_ACTIVITY_NOT_OPEN = 5811;
    RET_EVOLVE_BUILD_SHOP_ABILITY_EMPTY = 5812;
    RET_EVOLVE_BUILD_LEVEL_NOT_START = 5813;
    RET_EVOLVE_BUILD_SHOP_LOCK = 5814;
    RET_EVOLVE_BUILD_REWARD_LOCK = 5815;
    RET_EVOLVE_BUILD_REWARD_LEVEL_MAX = 5816;
    RET_EVOLVE_BUILD_REWARD_ALREADY_ALL_TAKEN = 5717;
    RET_EVOLVE_BUILD_SEASON_ERROR = 5718;
    RET_EVOLVE_BUILD_TEACH_SKIP_QUEST_NOT_FINISH = 5719;
    RET_CLOCK_PARK_CONFIG_ERROR = 5851;
    RET_CLOCK_PARK_EFFECT_ERROR = 5852;
    RET_CLOCK_PARK_SCRIPT_ALREADY_UNLOCK = 5853;
    RET_CLOCK_PARK_SCRIPT_UNLOCK_CONDITION_NOT_MEET = 5854;
    RET_CLOCK_PARK_TALENT_ALREADY_UNLOCK = 5855;
    RET_CLOCK_PARK_SCRIPT_LOCKED = 5856;
    RET_CLOCK_PARK_HAS_ONGOING_SCRIPT = 5857;
    RET_CLOCK_PARK_NO_ONGOING_SCRIPT = 5858;
    RET_CLOCK_PARK_DICE_PLACEMENT_ERROR = 5859;
    RET_CLOCK_PARK_MISMATCH_STATUS = 5860;
    RET_CLOCK_PARK_NO_BUFF = 5861;
    RET_CLOCK_PARK_SLOT_MACHINE_GACHA_REQ_DUPLICATED = 5862;
    RET_CLOCK_PARK_SLOT_MACHINE_COST_NOT_ENOUGH = 5863;
    RET_CLOCK_PARK_SLOT_MACHINE_GACHA_CNT_EXCEED_LIMIT = 5864;
    RET_CLOCK_PARK_NOT_OPEN = 5865;
    RET_TOURN_ROGUE_STATUS_MISMATCH = 5901;
    RET_MAGIC_ROGUE_STATUS_MISMATCH = 5902;
    RET_AUTO_MOUNT_MAGIC_UNIT_NO_MATCHED_MAGIC_SCEPTER = 5903;
    RET_MAGIC_UNIT_WORKBENCH_REFORGE_GEN_FAIL = 5904;
    RET_MATCH_ALREADY_IN_MATCH = 6201;
    RET_MATCH_NOT_IN_MATCH = 6202;
    RET_MATCH_PLAY_NOT_OPEN = 6203;
    RET_CROSS_STATE_ERROR = 6204;
    RET_MATCH_VERSION_NOT_EQUAL = 6205;
    RET_MATCH_PLAYER_NOT_IN_LOBBY_ROOM = 6206;
    RET_LOBBY_STATE_NOT_MATCH = 6207;
    RET_LOBBY_ROOM_NOT_EXIST = 6208;
    RET_LOBBY_ROOM_PALYER_FULL = 6209;
    RET_LOBBY_ROOM_PALYER_NOT_READY = 6210;
    RET_LOBBY_ROOM_PALYER_FIGHTING = 6211;
    RET_FIGHT_ROOM_NOT_EXIST = 6250;
    RET_FIGHT_MATCH3_PLAYER_STATE_ERR = 6251;
    RET_FIGHT_MATCH3_ROOM_STATE_ERR = 6252;
    RET_CROSS_STATE_TIME_OUT = 6253;
    RET_LOBBY_START_FIGHT_DISABLE = 6254;
    RET_LOBBY_START_FIGHT_PLAYER_LACK = 6255;
    RET_MATCH_CLIENT_DATA_VERSION_LOW = 6256;
    RET_LOBBY_START_MATCH_DISABLE = 6257;
    RET_LOBBY_INTERACT_IN_CD = 6258;
    RET_LOBBY_OWNER_STATE_ERR = 6259;
    RET_LOBBY_OP_TOO_FAST = 6260;
    RET_SWORD_TRAINING_NO_ACTIVE_GAME = 6301;
    RET_SWORD_TRAINING_NO_PENDING_ACTION_MATCH = 6302;
    RET_SWORD_TRAINING_PARTNER_ABILITY_INVALID = 6303;
    RET_SWORD_TRAINING_SKILL_ALREADY_LEARNED = 6304;
    RET_SWORD_TRAINING_CONDITION_NOT_MEET = 6305;
    RET_SWORD_TRAINING_PARENT_SKILL_NOT_LEARNED = 6306;
    RET_SWORD_TRAINING_SKILL_TYPE_NOT_UNLOCK = 6307;
    RET_SWORD_TRAINING_GAME_ALREADY_EXIST = 6308;
    RET_SWORD_TRAINING_ENDING_HINT_NOT_MATCH = 6309;
    RET_SWORD_TRAINING_STORYLINE_CONFIG_NOT_FOUND = 6310;
    RET_SWORD_TRAINING_STORY_CONFIG_NOT_FOUND = 6311;
    RET_SWORD_TRAINING_UNLOCK_NOT_FINISH = 6312;
    RET_SWORD_TRAINING_OPTION_MISMATCH = 6313;
    RET_SWORD_TRAINING_RESTORE_WITHOUT_EXAM_FAILED = 6314;
    RET_SWORD_TRAINING_NO_RESTORE_GAME_AVAILABLE = 6315;
    RET_SWORD_TRAINING_ENDING_STORY_NOT_MATCH = 6316;
    RET_SWORD_TRAINING_ENDING_NOT_FINISH = 6317;
    RET_SWORD_TRAINING_ENDING_REWARD_TAKEN = 6318;
    RET_SWORD_TRAINING_COMBAT_RANK_NOT_CHANGE = 6319;
    RET_SWORD_TRAINING_DIRECT_BATTLE_DISABLE = 6320;
    RET_FIGHT_FEST_PHASE_NOT_MATCH = 6351;
    RET_FIGHT_FEST_SCORE_RACE_ALREADY_FINISH = 6352;
    RET_FIGHT_FEST_CHALLENGE_LOCKED = 6353;
    RET_FIGHT_FEST_COACH_SKILL_LOCKED = 6354;
    RET_FIGHT_FEST_COACH_SKILL_EQUIP_TYPE_EXISTED = 6355;
    RET_FIGHT_FEST_SCORE_RACE_MISSION_DOIND = 6356;
    RET_FIGHT_FEST_COACH_SKILL_NO_EQUIP = 6357;
    RET_PET_NOT_EXIST = 6401;
    RET_PET_ALREADY_SUMMONED = 6402;
    RET_PET_NOT_SUMMONED = 6403;
    RET_MUSIC_RHYTHM_LEVEL_TIME_TOO_SHORT = 6451;
    RET_MUSIC_RHYTHM_NOT_IN_LEVEL = 6452;
    RET_MUSIC_RHYTHM_PRE_DIFFICULTY_NOT_PASS = 6453;
    RET_MUSIC_RHYTHM_SONG_LIMITED = 6454;
    RET_MUSIC_RHYTHM_SONG_LOCKED = 6455;
    RET_MUSIC_RHYTHM_TRACK_LOCKED = 6456;
    RET_MUSIC_RHYTHM_LEVEL_NOT_UNLOCK = 6457;
    RET_MUSIC_RHYTHM_SONG_SFX_LOCKED = 6458;
    RET_TRAIN_PARTY_COIN_NOT_ENOUGH = 6501;
    RET_TRAIN_PARTY_DIY_TAG_NOT_MATCH = 6502;
    RET_TRAIN_PARTY_USE_CARD_MOBILITY_NOT_ENOUGH = 6503;
    RET_TRAIN_PARTY_AREA_UNLOCK_COIN_NOT_ENOUGH = 6504;
    RET_TAROT_BOOK_ENERGY_NOT_ENOUGH = 6601;
    RET_TAROT_BOOK_PACK_NOT_AVAILABLE = 6602;
    RET_TAROT_BOOK_STORY_ALREADY_UNLOCK = 6603;
    RET_TAROT_BOOK_CARD_NOT_ENOUGH = 6604;
    RET_TAROT_BOOK_CLUE_NOT_ENOUGH = 6605;
    RET_TAROT_BOOK_UNLOCK_STORY_CARD_NOT_SAME = 6606;
    RET_TAROT_BOOK_STORY_NOT_UNLOCK = 6607;
    RET_TAROT_BOOK_STORY_ALREADY_FINISH = 6608;
    RET_TAROT_BOOK_INTERACTION_ALREADY_FINISH = 6609;
    RET_CHIMERA_CHIMERA_NOT_UNLOCK = 6621;
    RET_CHIMERA_CHIMERA_DUPLICATED = 6622;
    RET_CHIMERA_CHIMERA_TYPE_ERROR = 6623;
    RET_CHIMERA_WORK_MISMATCH_ROUND = 6624;
    RET_CHIMERA_WORK_ROUND_OPTION_NOT_MEET = 6625;
    RET_CHIMERA_ENDLESS_NOT_UNLOCK = 6626;
    RET_CHIMERA_IN_ENDLESS = 6627;
    RET_CHIMERA_NOT_IN_ENDLESS = 6628;
    RET_CHIMERA_CHIMERA_FALL_IN_ENDLESS = 6629;
    RET_PLANET_FES_AVATAR_NOT_EXIST = 6641;
    RET_PLANET_FES_LAND_NOT_EXIST = 6642;
    RET_PLANET_FES_ITEM_NOT_ENOUGH = 6643;
    RET_PLANET_FES_LAND_ALREADY_UNLOCK = 6644;
    RET_PLANET_FES_WORK_AVATAR_REPEAT = 6645;
    RET_PLANET_FES_WORK_AVATAR_TYPE_NOT_MATCH = 6646;
    RET_PLANET_FES_ACTIVITY_NOT_OPEN = 6647;
    RET_PLANET_FES_SKILLTREE_PHASE_NOT_UNLOCK = 6648;
    RET_PLANET_FES_SKILL_NOT_UNLOCK = 6649;
    RET_PLANET_FES_CONFIG_ERROR = 6650;
    RET_PLANET_FES_NOT_IN_BUSINESS_DAY = 6651;
    RET_PLANET_FES_EVENT_LOCKED = 6652;
    RET_PLANET_FES_EVENT_FINISHED = 6653;
    RET_PLANET_FES_EVENT_IN_CD = 6654;
    RET_PLANET_FES_EVENT_ALREADY_IN_STATE = 6655;
    RET_PLANET_FES_EVENT_NO_WORK_AVATAR = 6656;
    RET_PLANET_FES_EVENT_PROCESSING_CANNOT_DISAPPEAR = 6657;
    RET_PLANET_FES_EVENT_OPTION_PHASE_WRONG = 6658;
    RET_PLANET_FES_FUNCTION_NOT_UNLOCK = 6659;
    RET_PLANET_FES_REWARD_ALREADY_TAKEN = 6660;
    RET_PLANET_FES_EVENT_GAME_NOT_ACTIVE = 6661;
    RET_PLANET_FES_REGION_PROGRESS_NOT_ENOUGH = 6662;
    RET_PLANET_FES_FRIEND_ITEM_NOT_ENOUGH = 6663;
    RET_PLANET_FES_PIECE_PERMISSION_BAN = 6664;
    RET_PLANET_FES_PIECE_OFFER_NOT_EXIST = 6665;
    RET_PLANET_FES_PIECE_APPLY_IN_STACK_TOO_MUCH = 6666;
    RET_PLANET_FES_PIECE_APPLY_NOT_EXIST = 6667;
    RET_PLANET_FES_GET_FRIEND_RANKING_LIST_IN_CD = 6668;
    RET_PLANET_FES_GIVE_PIECE_OWNED_BY_TARGET = 6669;
    RET_PLANET_FES_LEVEL_MAX = 6670;
    RET_PLANET_FES_EXCLUSIVE_EVENT = 6671;
    RET_MARBLE_SEAL_ALREADY_UNLOCKED = 6701;
    RET_MARBLE_SEAL_SHOP_ITEM_NOT_ENOUGH = 6702;
    RET_MARBLE_SEAL_LOCKED = 6703;
    RET_PARKOUR_ACTIVITY_NOT_OPEN = 6801;
    RET_PARKOUR_LEVEL_NOT_UNLOCK = 6802;
    RET_PARKOUR_RAIL_BALL_NOT_ALLOWED = 6803;
    RET_PARKOUR_NOT_IN_LEVEL = 6804;
    RET_PARKOUR_LEVEL_NOT_MATCH = 6805;
    RET_PARKOUR_NOT_PLAYED_ALL_NON_STORY_LEVEL = 6806;
    RET_FTC_LIMIT_NAME_CHANGE = 6830;
    RET_GRID_FIGHT_CONF_MISS = 6900;
}

enum CmdActivityType {
    CmdActivityTypeNone = 0;
    CmdTakeTrialActivityRewardCsReq = 2634;
    CmdAvatarDeliverRewardChooseAvatarCsReq = 2617;
    CmdGetActivityScheduleConfigScRsp = 2648;
    CmdStartTrialActivityCsReq = 2601;
    CmdGetTrialActivityDataCsReq = 2654;
    CmdEnterTrialActivityStageScRsp = 2635;
    CmdGetActivityScheduleConfigCsReq = 2676;
    CmdLeaveTrialActivityCsReq = 2636;
    CmdTakeMaterialSubmitActivityRewardCsReq = 2642;
    CmdGetAvatarDeliverRewardActivityDataScRsp = 2690;
    CmdSubmitMaterialSubmitActivityMaterialScRsp = 2633;
    CmdTakeLoginActivityRewardCsReq = 2631;
    CmdTakeMaterialSubmitActivityRewardScRsp = 2677;
    CmdGetTrialActivityDataScRsp = 2699;
    CmdAvatarDeliverRewardTakeRewardCsReq = 2649;
    CmdSubmitMaterialSubmitActivityMaterialCsReq = 2643;
    CmdGetMaterialSubmitActivityDataScRsp = 2639;
    CmdStartTrialActivityScRsp = 2653;
    CmdTakeLoginActivityRewardScRsp = 2640;
    CmdAvatarDeliverRewardTakeRewardScRsp = 2603;
    CmdLeaveTrialActivityScRsp = 2694;
    CmdAvatarDeliverRewardChooseAvatarScRsp = 2669;
    CmdGetLoginActivityScRsp = 2632;
    CmdTrialActivityDataChangeScNotify = 2687;
    CmdTakeTrialActivityRewardScRsp = 2668;
    CmdGetAvatarDeliverRewardActivityDataCsReq = 2674;
    CmdGetMaterialSubmitActivityDataCsReq = 2602;
    CmdEnterTrialActivityStageCsReq = 2608;
    CmdGetLoginActivityCsReq = 2695;
    CmdCurTrialActivityScNotify = 2627;
}

enum PMIDEHDOBHJ {
    TRIAL_ACTIVITY_STATUS_NONE = 0;
    TRIAL_ACTIVITY_STATUS_FINISH = 1;
}

enum CmdAdventureType {
    CmdAdventureTypeNone = 0;
    CmdQuickStartFarmElementCsReq = 1371;
    CmdQuickStartFarmElementScRsp = 1352;
    CmdFarmElementSweepCsReq = 1372;
    CmdCocoonSweepCsReq = 1322;
    CmdEnterAdventureScRsp = 1332;
    CmdEnterAdventureCsReq = 1395;
    CmdCocoonSweepScRsp = 1356;
    CmdQuickStartCocoonStageCsReq = 1376;
    CmdFarmElementSweepScRsp = 1385;
    CmdGetFarmStageGachaInfoCsReq = 1331;
    CmdGetFarmStageGachaInfoScRsp = 1340;
    CmdQuickStartCocoonStageScRsp = 1348;
}

enum CmdAetherDivideType {
    CmdAetherDivideTypeNone = 0;
    CmdAetherDivideTakeChallengeRewardScRsp = 4808;
    CmdAetherDivideSpiritInfoScNotify = 4818;
    CmdClearAetherDividePassiveSkillScRsp = 4823;
    CmdAetherDivideSkillItemScNotify = 4811;
    CmdAetherDivideTakeChallengeRewardCsReq = 4814;
    CmdGetAetherDivideInfoScRsp = 4807;
    CmdStartAetherDivideStageBattleScRsp = 4842;
    CmdAetherDivideLineupScNotify = 4813;
    CmdEquipAetherDividePassiveSkillCsReq = 4820;
    CmdLeaveAetherDivideSceneCsReq = 4802;
    CmdSwitchAetherDivideLineUpSlotScRsp = 4822;
    CmdAetherDivideRefreshEndlessScNotify = 4849;
    CmdStartAetherDivideChallengeBattleScRsp = 4815;
    CmdSetAetherDivideLineUpCsReq = 4850;
    CmdGetAetherDivideChallengeInfoScRsp = 4805;
    CmdAetherDivideTainerInfoScNotify = 4839;
    CmdLeaveAetherDivideSceneScRsp = 4837;
    CmdEnterAetherDivideSceneCsReq = 4804;
    CmdEnterAetherDivideSceneScRsp = 4846;
    CmdGetAetherDivideChallengeInfoCsReq = 4801;
    CmdStartAetherDivideChallengeBattleCsReq = 4827;
    CmdAetherDivideSpiritExpUpCsReq = 4829;
    CmdAetherDivideRefreshEndlessScRsp = 4821;
    CmdSetAetherDivideLineUpScRsp = 4840;
    CmdAetherDivideFinishChallengeScNotify = 4835;
    CmdEquipAetherDividePassiveSkillScRsp = 4844;
    CmdStartAetherDivideSceneBattleScRsp = 4817;
    CmdClearAetherDividePassiveSkillCsReq = 4832;
    CmdAetherDivideSpiritExpUpScRsp = 4834;
    CmdSwitchAetherDivideLineUpSlotCsReq = 4826;
    CmdGetAetherDivideInfoCsReq = 4845;
    CmdStartAetherDivideSceneBattleCsReq = 4836;
    CmdAetherDivideRefreshEndlessCsReq = 4806;
    CmdStartAetherDivideStageBattleCsReq = 4816;
}

enum CmdAlleyType {
    CmdAlleyTypeNone = 0;
    CmdAlleyShipUsedCountScNotify = 4737;
    CmdAlleyTakeEventRewardCsReq = 4751;
    CmdLogisticsGameScRsp = 4740;
    CmdLogisticsDetonateStarSkiffCsReq = 4724;
    CmdAlleyPlacingGameCsReq = 4716;
    CmdAlleyTakeEventRewardScRsp = 4791;
    CmdTakePrestigeRewardCsReq = 4772;
    CmdGetSaveLogisticsMapCsReq = 4714;
    CmdLogisticsGameCsReq = 4731;
    CmdSaveLogisticsCsReq = 4763;
    CmdPrestigeLevelUpScRsp = 4777;
    CmdAlleyShipmentEventEffectsScNotify = 4725;
    CmdPrestigeLevelUpCsReq = 4742;
    CmdRefreshAlleyOrderScRsp = 4739;
    CmdAlleyGuaranteedFundsScRsp = 4775;
    CmdActivityRaidPlacingGameCsReq = 4798;
    CmdRefreshAlleyOrderCsReq = 4702;
    CmdLogisticsScoreRewardSyncInfoScNotify = 4707;
    CmdLogisticsDetonateStarSkiffScRsp = 4757;
    CmdGetAlleyInfoScRsp = 4732;
    CmdAlleyPlacingGameScRsp = 4746;
    CmdGetAlleyInfoCsReq = 4795;
    CmdStartAlleyEventScRsp = 4752;
    CmdTakePrestigeRewardScRsp = 4785;
    CmdAlleyEventEffectNotify = 4756;
    CmdAlleyShopLevelScNotify = 4721;
    CmdAlleyOrderChangedScNotify = 4743;
    CmdSaveLogisticsScRsp = 4711;
    CmdAlleyShipUnlockScNotify = 4729;
    CmdAlleyFundsScNotify = 4758;
    CmdStartAlleyEventCsReq = 4771;
    CmdLogisticsInfoScNotify = 4793;
    CmdGetSaveLogisticsMapScRsp = 4784;
    CmdAlleyEventChangeNotify = 4722;
    CmdActivityRaidPlacingGameScRsp = 4764;
    CmdAlleyGuaranteedFundsCsReq = 4730;
}

enum GBPHKKMOLMF {
    LEFT = 0;
    RIGHT = 1;
    UP = 2;
    DOWN = 3;
    LEFT_UP = 4;
    LEFT_DOWN = 5;
    RIGHT_UP = 6;
    RIGHT_DOWN = 7;
}

enum AlleyEventType {
    ALLEY_EVENT_TYPE_NONE = 0;
    ALLEY_MAIN_EVENT = 1;
    ALLEY_CRITICAL_EVENT = 2;
    ALLEY_DAILY_EVENT = 3;
}

enum AlleyEventState {
    ALLEY_STATE_NONE = 0;
    ALLEY_EVENT_DOING = 1;
    ALLEY_EVENT_FINISH = 2;
    ALLEY_EVENT_REWARDED = 3;
}

enum CmdArchiveType {
    CmdArchiveTypeNone = 0;
    CmdGetArchiveDataCsReq = 2395;
    CmdGetUpdatedArchiveDataScRsp = 2340;
    CmdGetArchiveDataScRsp = 2332;
    CmdGetUpdatedArchiveDataCsReq = 2331;
}

enum CmdAvatarType {
    CmdAvatarTypeNone = 0;
    CmdAvatarExpUpScRsp = 340;
    CmdTakeOffAvatarSkinCsReq = 321;
    CmdTakeOffEquipmentScRsp = 385;
    CmdDressAvatarSkinScRsp = 358;
    CmdTakePromotionRewardCsReq = 333;
    CmdAddAvatarScNotify = 316;
    CmdMarkAvatarCsReq = 311;
    CmdUnlockSkilltreeCsReq = 376;
    CmdPromoteAvatarCsReq = 371;
    CmdGetPreAvatarGrowthInfoScRsp = 375;
    CmdDressAvatarSkinCsReq = 377;
    CmdDressRelicAvatarScRsp = 302;
    CmdRankUpAvatarCsReq = 346;
    CmdTakeOffEquipmentCsReq = 372;
    CmdGetAvatarDataScRsp = 332;
    CmdDressAvatarScRsp = 356;
    CmdDressRelicAvatarCsReq = 360;
    CmdUnlockAvatarSkinScNotify = 363;
    CmdPromoteAvatarScRsp = 352;
    CmdSetGrowthTargetAvatarScRsp = 384;
    CmdAvatarExpUpCsReq = 331;
    CmdAddMultiPathAvatarScNotify = 325;
    CmdRankUpAvatarScRsp = 383;
    CmdSetGrowthTargetAvatarCsReq = 314;
    CmdTakeOffRelicCsReq = 339;
    CmdDressAvatarCsReq = 322;
    CmdTakePromotionRewardScRsp = 342;
    CmdTakeOffRelicScRsp = 343;
    CmdGrowthTargetAvatarChangedScNotify = 337;
    CmdGetAvatarDataCsReq = 395;
    CmdGetPreAvatarGrowthInfoCsReq = 330;
    CmdTakeOffAvatarSkinScRsp = 329;
    CmdMarkAvatarScRsp = 393;
    CmdGetPreAvatarListCsReq = 351;
    CmdUnlockSkilltreeScRsp = 348;
    CmdGetPreAvatarListScRsp = 391;
}

enum GrowthTartgetFuncType {
    GROWTH_TARGET_FUNCTION_TYPE_INCLUDE_ALL_SKILLTREE = 0;
}

enum AddAvatarSrcState {
    ADD_AVATAR_SRC_NONE = 0;
    ADD_AVATAR_SRC_GACHA = 1;
    ADD_AVATAR_SRC_ROGUE = 2;
}

enum GrowthTargetState {
    GROWTH_TARGET_AVATAR_NONE = 0;
    GROWTH_TARGET_AVATAR_PRE = 1;
    GROWTH_TARGET_AVATAR_UP = 2;
    GROWTH_TARGET_AVATAR_LOCK = 3;
    GROWTH_TARGET_AVATAR_UNLOCK = 4;
    GROWTH_TARGET_AVATAR_LOCK_AND_UP = 5;
}

enum CmdBattleType {
    CmdBattleTypeNone = 0;
    CmdPVEBattleResultCsReq = 195;
    CmdPVEBattleResultScRsp = 132;
    CmdSyncClientResVersionCsReq = 171;
    CmdBattleLogReportScRsp = 172;
    CmdQuitBattleScRsp = 140;
    CmdBattleLogReportCsReq = 156;
    CmdQuitBattleScNotify = 122;
    CmdGetCurBattleInfoScRsp = 148;
    CmdGetCurBattleInfoCsReq = 176;
    CmdReBattleAfterBattleLoseCsNotify = 116;
    CmdQuitBattleCsReq = 131;
    CmdServerSimulateBattleFinishScNotify = 185;
    CmdRebattleByClientCsNotify = 146;
    CmdSyncClientResVersionScRsp = 152;
}

enum CmdBattleCollegeType {
    CmdBattleCollegeTypeNone = 0;
    CmdGetBattleCollegeDataCsReq = 5795;
    CmdStartBattleCollegeCsReq = 5740;
    CmdBattleCollegeDataChangeScNotify = 5731;
    CmdGetBattleCollegeDataScRsp = 5732;
    CmdStartBattleCollegeScRsp = 5776;
}

enum CmdBattlePassType {
    CmdBattlePassTypeNone = 0;
    CmdTakeBpRewardCsReq = 3040;
    CmdTakeAllRewardScRsp = 3022;
    CmdTakeBpRewardScRsp = 3076;
    CmdBattlePassInfoNotify = 3095;
    CmdBuyBpLevelScRsp = 3071;
    CmdBuyBpLevelCsReq = 3048;
    CmdTakeAllRewardCsReq = 3052;
}

enum BpTierType {
    BP_TIER_TYPE_NONE = 0;
    BP_TIER_TYPE_FREE = 1;
    BP_TIER_TYPE_PREMIUM_1 = 2;
    BP_TIER_TYPE_PREMIUM_2 = 3;
}

enum BpRewardType {
    BP_REWARAD_TYPE_NONE = 0;
    BP_REWARAD_TYPE_FREE = 1;
    BP_REWARAD_TYPE_PREMIUM_1 = 2;
    BP_REWARAD_TYPE_PREMIUM_2 = 3;
    BP_REWARAD_TYPE_PREMIUM_OPTIONAL = 4;
}

enum CmdBenefitActivityType {
    CmdBenefitActivityTypeNone = 0;
    CmdTakeBenefitActivityRewardCsReq = 4852;
    CmdGetBenefitActivityInfoScRsp = 4896;
    CmdJoinBenefitActivityScRsp = 4867;
    CmdJoinBenefitActivityCsReq = 4886;
    CmdGetBenefitActivityInfoCsReq = 4854;
    CmdTakeBenefitActivityRewardScRsp = 4887;
}

enum CmdBoxingClubType {
    CmdBoxingClubTypeNone = 0;
    CmdStartBoxingClubBattleScRsp = 4248;
    CmdSetBoxingClubResonanceLineupScRsp = 4246;
    CmdSetBoxingClubResonanceLineupCsReq = 4216;
    CmdBoxingClubChallengeUpdateScNotify = 4256;
    CmdGiveUpBoxingClubChallengeScRsp = 4252;
    CmdGiveUpBoxingClubChallengeCsReq = 4271;
    CmdChooseBoxingClubResonanceCsReq = 4272;
    CmdChooseBoxingClubResonanceScRsp = 4285;
    CmdBoxingClubRewardScNotify = 4222;
    CmdGetBoxingClubInfoCsReq = 4295;
    CmdStartBoxingClubBattleCsReq = 4276;
    CmdMatchBoxingClubOpponentCsReq = 4231;
    CmdChooseBoxingClubStageOptionalBuffCsReq = 4283;
    CmdGetBoxingClubInfoScRsp = 4232;
    CmdChooseBoxingClubStageOptionalBuffScRsp = 4260;
    CmdMatchBoxingClubOpponentScRsp = 4240;
}

enum CmdChallengeType {
    CmdChallengeTypeNone = 0;
    CmdLeaveChallengeCsReq = 1776;
    CmdTakeChallengeRewardScRsp = 1760;
    CmdRestartChallengePhaseScRsp = 1758;
    CmdStartPartialChallengeScRsp = 1733;
    CmdStartChallengeScRsp = 1740;
    CmdGetChallengeGroupStatisticsScRsp = 1739;
    CmdTakeChallengeRewardCsReq = 1783;
    CmdEnterChallengeNextPhaseCsReq = 1721;
    CmdGetChallengeScRsp = 1732;
    CmdChallengeLineupNotify = 1785;
    CmdLeaveChallengeScRsp = 1748;
    CmdGetCurChallengeCsReq = 1756;
    CmdStartChallengeCsReq = 1731;
    CmdGetChallengeCsReq = 1795;
    CmdEnterChallengeNextPhaseScRsp = 1729;
    CmdChallengeBossPhaseSettleNotify = 1763;
    CmdRestartChallengePhaseCsReq = 1777;
    CmdStartPartialChallengeCsReq = 1743;
    CmdGetChallengeGroupStatisticsCsReq = 1702;
    CmdGetCurChallengeScRsp = 1772;
    CmdChallengeSettleNotify = 1771;
}

enum ChallengeStatus {
    CHALLENGE_UNKNOWN = 0;
    CHALLENGE_DOING = 1;
    CHALLENGE_FINISH = 2;
    CHALLENGE_FAILED = 3;
}

enum CmdChatType {
    CmdChatTypeNone = 0;
    CmdSendMsgScRsp = 3932;
    CmdGetLoginChatInfoScRsp = 3960;
    CmdGetPrivateChatHistoryCsReq = 3976;
    CmdBatchMarkChatEmojiCsReq = 3916;
    CmdRevcMsgScNotify = 3931;
    CmdMarkChatEmojiCsReq = 3972;
    CmdGetLoginChatInfoCsReq = 3983;
    CmdBatchMarkChatEmojiScRsp = 3946;
    CmdSendMsgCsReq = 3995;
    CmdGetChatEmojiListScRsp = 3956;
    CmdPrivateMsgOfflineUsersScNotify = 3940;
    CmdGetChatFriendHistoryCsReq = 3971;
    CmdMarkChatEmojiScRsp = 3985;
    CmdGetChatEmojiListCsReq = 3922;
    CmdGetPrivateChatHistoryScRsp = 3948;
    CmdGetChatFriendHistoryScRsp = 3952;
}

enum CmdChessRogueType {
    CmdChessRogueTypeNone = 0;
    CmdChessRogueUpdateDiceInfoScNotify = 5514;
    CmdChessRoguePickAvatarScRsp = 5568;
    CmdChessRogueQueryAeonDimensionsCsReq = 5578;
    CmdSelectChessRogueSubStoryScRsp = 5496;
    CmdChessRogueCheatRollScRsp = 5473;
    CmdChessRogueSelectCellScRsp = 5422;
    CmdSyncChessRogueNousValueScNotify = 5506;
    CmdChessRogueNousEnableRogueTalentScRsp = 5523;
    CmdChessRogueRollDiceScRsp = 5426;
    CmdGetChessRogueNousStoryInfoScRsp = 5594;
    CmdFinishChessRogueSubStoryScRsp = 5504;
    CmdChessRogueNousEditDiceCsReq = 5571;
    CmdChessRogueUpdateReviveInfoScNotify = 5598;
    CmdChessRogueNousGetRogueTalentInfoCsReq = 5505;
    CmdEnhanceChessRogueBuffScRsp = 5419;
    CmdChessRogueRollDiceCsReq = 5533;
    CmdSyncChessRogueMainStoryFinishScNotify = 5477;
    CmdChessRogueEnterNextLayerScRsp = 5501;
    CmdEnhanceChessRogueBuffCsReq = 5551;
    CmdFinishChessRogueSubStoryCsReq = 5520;
    CmdChessRogueChangeyAeonDimensionNotify = 5486;
    CmdChessRogueLeaveCsReq = 5573;
    CmdSyncChessRogueNousSubStoryScNotify = 5497;
    CmdChessRogueQueryScRsp = 5447;
    CmdSelectChessRogueSubStoryCsReq = 5535;
    CmdGetChessRogueStoryInfoScRsp = 5481;
    CmdChessRogueUpdateBoardScNotify = 5580;
    CmdChessRogueNousGetRogueTalentInfoScRsp = 5552;
    CmdChessRogueLayerAccountInfoNotify = 5555;
    CmdChessRogueStartCsReq = 5471;
    CmdChessRogueNousEnableRogueTalentCsReq = 5433;
    CmdEnterChessRogueAeonRoomCsReq = 5585;
    CmdChessRogueNousDiceUpdateNotify = 5597;
    CmdChessRogueUpdateAeonModifierValueScNotify = 5574;
    CmdChessRogueQuestFinishNotify = 5526;
    CmdGetChessRogueStoryInfoCsReq = 5570;
    CmdChessRogueReRollDiceScRsp = 5445;
    CmdChessRogueEnterCellScRsp = 5518;
    CmdChessRogueQueryAeonDimensionsScRsp = 5413;
    CmdChessRogueReRollDiceCsReq = 5587;
    CmdChessRogueUpdateDicePassiveAccumulateValueScNotify = 5415;
    CmdChessRogueUpdateActionPointScNotify = 5468;
    CmdGetChessRogueBuffEnhanceInfoScRsp = 5586;
    CmdChessRogueNousDiceSurfaceUnlockNotify = 5538;
    CmdChessRoguePickAvatarCsReq = 5590;
    CmdChessRogueStartScRsp = 5441;
    CmdGetChessRogueStoryAeonTalkInfoCsReq = 5588;
    CmdChessRogueGiveUpRollCsReq = 5547;
    CmdChessRogueConfirmRollCsReq = 5448;
    CmdChessRogueReviveAvatarScRsp = 5516;
    CmdChessRogueEnterNextLayerCsReq = 5460;
    CmdChessRogueUpdateLevelBaseInfoScNotify = 5461;
    CmdChessRogueReviveAvatarCsReq = 5465;
    CmdGetChessRogueNousStoryInfoCsReq = 5474;
    CmdChessRogueSkipTeachingLevelCsReq = 5418;
    CmdChessRogueUpdateUnlockLevelScNotify = 5527;
    CmdChessRogueQuitCsReq = 5492;
    CmdChessRogueQueryCsReq = 5595;
    CmdChessRogueQuitScRsp = 5521;
    CmdChessRogueGiveUpCsReq = 5529;
    CmdChessRogueGiveUpScRsp = 5436;
    CmdChessRogueCellUpdateNotify = 5490;
    CmdEnterChessRogueAeonRoomScRsp = 5417;
    CmdChessRogueEnterScRsp = 5457;
    CmdChessRogueUpdateMoneyInfoScNotify = 5484;
    CmdGetChessRogueBuffEnhanceInfoCsReq = 5525;
    CmdChessRogueSelectCellCsReq = 5528;
    CmdSyncChessRogueNousMainStoryScNotify = 5510;
    CmdChessRogueConfirmRollScRsp = 5542;
    CmdChessRogueEnterCsReq = 5414;
    CmdChessRogueSkipTeachingLevelScRsp = 5600;
    CmdGetChessRogueStoryAeonTalkInfoScRsp = 5449;
    CmdChessRogueUpdateAllowedSelectCellScNotify = 5495;
    CmdChessRogueLeaveScRsp = 5531;
    CmdChessRogueGiveUpRollScRsp = 5408;
    CmdChessRogueCheatRollCsReq = 5512;
    CmdChessRogueEnterCellCsReq = 5472;
    CmdChessRogueNousEditDiceScRsp = 5557;
}

enum ChessRogueDiceStatus {
    CHESS_ROGUE_DICE_IDLE = 0;
    CHESS_ROGUE_DICE_ROLLED = 1;
    CHESS_ROGUE_DICE_CONFIRMED = 2;
    CHESS_ROGUE_DICE_GIVEUP = 3;
}

enum ChessRogueDiceType {
    CHESS_ROGUE_DICE_FIXED = 0;
    CHESS_ROGUE_DICE_EDITABLE = 1;
}

enum ChessRogueBoardCellStatus {
    IDLE = 0;
    SELECTED = 1;
    PROCESSING = 2;
    FINISH = 3;
}

enum ChessRogueCellSpecialType {
    CHESS_ROGUE_CELL_SPECIAL_TYPE_NONE = 0;
    CHESS_ROGUE_CELL_SPECIAL_TYPE_LOCKED = 1;
    CHESS_ROGUE_CELL_SPECIAL_TYPE_REPLICATE = 2;
    CHESS_ROGUE_CELL_SPECIAL_TYPE_PROTECTED = 3;
    CHESS_ROGUE_CELL_SPECIAL_TYPE_SEED = 4;
    CHESS_ROGUE_CELL_SPECIAL_TYPE_STAMP = 5;
}

enum ChessRogueLevelStatus {
    CHESS_ROGUE_LEVEL_IDLE = 0;
    CHESS_ROGUE_LEVEL_PROCESSING = 1;
    CHESS_ROGUE_LEVEL_PENDING = 2;
    CHESS_ROGUE_LEVEL_FINISH = 3;
    CHESS_ROGUE_LEVEL_FAILED = 4;
    CHESS_ROGUE_LEVEL_FORCE_FINISH = 5;
}

enum ChessRogueQuitReason {
    CHESS_ROGUE_ACCOUNT_BY_NONE = 0;
    CHESS_ROGUE_ACCOUNT_BY_NORMAL_FINISH = 1;
    CHESS_ROGUE_ACCOUNT_BY_NORMAL_QUIT = 2;
    CHESS_ROGUE_ACCOUNT_BY_DIALOG = 3;
    CHESS_ROGUE_ACCOUNT_BY_FAILED = 4;
    CHESS_ROGUE_ACCOUNT_BY_CUSTOM_OP = 5;
}

enum ChessRogueBuffSourceType {
    CHESS_ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_SHOP = 6;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_DICE = 7;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_AEON = 8;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 9;
    CHESS_ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 10;
}

enum ChessRogueMiracleSourceType {
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
}

enum ChessRogueUpdateLevelStatus {
    CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_NONE = 0;
    CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_DIALOG = 1;
}

enum ChessRogueCellUpdateReason {
    CHESS_ROGUE_CELL_UPDATE_REASON_NONE = 0;
    CHESS_ROGUE_CELL_UPDATE_REASON_MODIFIER = 1;
}

enum ChessRogueAeonType {
    CHESS_ROGUE_AEON_TYPE_NONE = 0;
    CHESS_ROGUE_AEON_TYPE_KNIGHT = 1;
    CHESS_ROGUE_AEON_TYPE_MEMORY = 2;
    CHESS_ROGUE_AEON_TYPE_WARLOCK = 3;
    CHESS_ROGUE_AEON_TYPE_PRIEST = 4;
    CHESS_ROGUE_AEON_TYPE_ROGUE = 5;
    CHESS_ROGUE_AEON_TYPE_WARRIOR = 6;
    CHESS_ROGUE_AEON_TYPE_HAPPY = 7;
    CHESS_ROGUE_AEON_TYPE_BREED = 8;
}

enum ChessRogueDiceSourceType {
    CHESS_ROGUE_DICE_SOURCE_TYPE_NONE = 0;
    CHESS_ROGUE_DICE_SOURCE_TYPE_NORMAL = 1;
    CHESS_ROGUE_DICE_SOURCE_TYPE_REPEAT = 2;
    CHESS_ROGUE_DICE_SOURCE_TYPE_CHEAT = 3;
}

enum ChessRogueNousMainStoryStatus {
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_NONE = 0;
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_UNLOCK = 1;
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_FINISH = 2;
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_CAN_TRIGGER = 3;
}

enum ChessRogueNousDicePhase {
    NONE = 0;
    PHASE_ONE = 1;
    PHASE_TWO = 2;
}

enum CmdChimeraType {
    CmdChimeraTypeNone = 0;
    CmdChimeraQuitEndlessCsReq = 8165;
    CmdChimeraRoundWorkStartScRsp = 8166;
    CmdChimeraDoFinalRoundCsReq = 8171;
    CmdChimeraSetLineupScRsp = 8170;
    CmdChimeraFinishEndlessRoundScRsp = 8163;
    CmdChimeraFinishRoundScRsp = 8162;
    CmdChimeraFinishEndlessRoundCsReq = 8167;
    CmdChimeraStartEndlessScRsp = 8169;
    CmdChimeraRoundWorkStartCsReq = 8172;
    CmdChimeraGetDataCsReq = 8174;
    CmdChimeraQuitEndlessScRsp = 8161;
    CmdChimeraDoFinalRoundScRsp = 8179;
    CmdChimeraGetDataScRsp = 8173;
    CmdChimeraFinishRoundCsReq = 8164;
    CmdChimeraSetLineupCsReq = 8168;
    CmdChimeraStartEndlessCsReq = 8180;
}

enum OAPDMKKKEOL {
    CHIMERA_LAST_PHASE_FINISH_NONE = 0;
    CHIMERA_LAST_PHASE_FINISH_NORMAL = 1;
    CHIMERA_LAST_PHASE_FINISH_SKIP = 2;
    CHIMERA_LAST_PHASE_FINISH_FORCE = 3;
}

enum BIAKDFELJFM {
    CHIMERA_ROUND_WORK_END_NONE = 0;
    CHIMERA_ROUND_WORK_END_SUCC = 1;
    CHIMERA_ROUND_WORK_END_FAIL = 2;
    CHIMERA_ROUND_WORK_END_LEAVE = 3;
}

enum CmdClockParkType {
    CmdClockParkTypeNone = 0;
    CmdClockParkHandleWaitOperationScRsp = 7207;
    CmdClockParkUnlockTalentScRsp = 7217;
    CmdClockParkGetOngoingScriptInfoScRsp = 7209;
    CmdClockParkStartScriptScRsp = 7215;
    CmdClockParkGetInfoCsReq = 7204;
    CmdClockParkFinishScriptScNotify = 7216;
    CmdClockParkGetInfoScRsp = 7246;
    CmdClockParkBattleEndScNotify = 7232;
    CmdClockParkUnlockTalentCsReq = 7236;
    CmdClockParkUseBuffScRsp = 7222;
    CmdClockParkStartScriptCsReq = 7227;
    CmdClockParkGetOngoingScriptInfoCsReq = 7243;
    CmdClockParkUseBuffCsReq = 7226;
    CmdClockParkQuitScriptScRsp = 7240;
    CmdClockParkHandleWaitOperationCsReq = 7245;
    CmdClockParkQuitScriptCsReq = 7250;
}

enum ClockParkPlayStatus {
    CLOCK_PARK_PLAY_NONE = 0;
    CLOCK_PARK_PLAY_NORMAL_DEATH = 1;
    CLOCK_PARK_PLAY_NORMAL_PASS = 2;
    CLOCK_PARK_PLAY_FINISH_SCRIPT = 5;
}

enum MissionStatus {
    MISSION_NONE = 0;
    MISSION_DOING = 1;
    MISSION_FINISH = 2;
    MISSION_PREPARED = 3;
}

enum MessageSectionStatus {
    MESSAGE_SECTION_NONE = 0;
    MESSAGE_SECTION_DOING = 1;
    MESSAGE_SECTION_FINISH = 2;
    MESSAGE_SECTION_FROZEN = 3;
}

enum MessageGroupStatus {
    MESSAGE_GROUP_NONE = 0;
    MESSAGE_GROUP_DOING = 1;
    MESSAGE_GROUP_FINISH = 2;
    MESSAGE_GROUP_FROZEN = 3;
}

enum BattleRecordType {
    BATTLE_RECORD_NONE = 0;
    BATTLE_RECORD_CHALLENGE = 1;
    BATTLE_RECORD_ROGUE = 2;
}

enum RebattleType {
    REBATTLE_TYPE_NONE = 0;
    REBATTLE_TYPE_REBATTLE_MIDWAY = 1;
    REBATTLE_TYPE_REBATTLE_LOSE = 2;
    REBATTLE_TYPE_REBATTLE_MIDWAY_LINEUP = 3;
    REBATTLE_TYPE_REBATTLE_LOSE_LINEUP = 4;
    REBATTLE_TYPE_QUIT_MIDWAY = 5;
    REBATTLE_TYPE_QUIT_LOSE = 6;
}

enum ContentPackageStatus {
    ContentPackageStatus_None = 0;
    ContentPackageStatus_Init = 1;
    ContentPackageStatus_Doing = 2;
    ContentPackageStatus_Finished = 3;
    ContentPackageStatus_Release = 4;
}

enum CmdContentPackageType {
    CmdContentPackageTypeNone = 0;
    CmdContentPackageUnlockCsReq = 7537;
    CmdContentPackageTransferScNotify = 7517;
    CmdContentPackageSyncDataScNotify = 7502;
    CmdContentPackageUnlockScRsp = 7536;
    CmdContentPackageGetDataScRsp = 7546;
    CmdContentPackageGetDataCsReq = 7504;
}

enum CmdDailyActiveType {
    CmdDailyActiveTypeNone = 0;
    CmdTakeAllApRewardCsReq = 3348;
    CmdTakeAllApRewardScRsp = 3371;
    CmdGetDailyActiveInfoScRsp = 3340;
    CmdTakeApRewardCsReq = 3395;
    CmdDailyActiveInfoNotify = 3376;
    CmdTakeApRewardScRsp = 3332;
    CmdGetDailyActiveInfoCsReq = 3331;
}

enum CmdDebugType {
    CmdDebugTypeNone = 0;
    CmdServerLogScNotify = 2486;
    CmdGetServerLogSettingsCsReq = 2454;
    CmdGetServerGraphDataCsReq = 2467;
    CmdUpdateServerLogSettingsCsReq = 2452;
    CmdUpdateServerLogSettingsScRsp = 2487;
    CmdGetServerLogSettingsScRsp = 2496;
    CmdGetServerGraphDataScRsp = 2477;
}

enum ServerLogTag {
    SERVER_LOG_TAG_DEFAULT = 0;
    SERVER_LOG_TAG_ROGUE = 1;
    SERVER_LOG_TAG_SCENE = 3;
    SERVER_LOG_TAG_BATTLE = 4;
    SERVER_LOG_TAG_CPP_GAMECORE = 5;
    SERVER_LOG_TAG_LEVEL_GRAPH = 6;
    SERVER_LOG_TAG_PLANET_FES = 7;
}

enum ServerLogLevel {
    SERVER_LOG_LEVEL_NONE = 0;
    SERVER_LOG_LEVEL_DEBUG = 1;
    SERVER_LOG_LEVEL_INFO = 2;
    SERVER_LOG_LEVEL_WARN = 3;
    SERVER_LOG_LEVEL_ERROR = 4;
}

enum OJIDJNDHDGA {
    READY = 0;
    SUSPEND = 1;
    SUCC = 2;
    FAIL = 3;
}

enum CmdDrinkMakerType {
    CmdDrinkMakerTypeNone = 0;
    CmdEndDrinkMakerSequenceCsReq = 6984;
    CmdDrinkMakerDayEndScNotify = 6987;
    CmdMakeMissionDrinkScRsp = 6989;
    CmdMakeDrinkScRsp = 6990;
    CmdDrinkMakerUpdateTipsNotify = 6981;
    CmdDrinkMakerChallengeCsReq = 6983;
    CmdMakeDrinkCsReq = 6988;
    CmdGetDrinkMakerDataCsReq = 6994;
    CmdEndDrinkMakerSequenceScRsp = 6982;
    CmdGetDrinkMakerDataScRsp = 6993;
    CmdMakeMissionDrinkCsReq = 7000;
    CmdDrinkMakerChallengeScRsp = 6985;
}

enum CmdEraFlipperType {
    CmdEraFlipperTypeNone = 0;
    CmdResetEraFlipperDataScRsp = 6551;
    CmdEraFlipperDataChangeScNotify = 6554;
    CmdEnterEraFlipperRegionScRsp = 6558;
    CmdChangeEraFlipperDataScRsp = 6569;
    CmdResetEraFlipperDataCsReq = 6574;
    CmdGetEraFlipperDataCsReq = 6561;
    CmdEnterEraFlipperRegionCsReq = 6553;
    CmdChangeEraFlipperDataCsReq = 6559;
    CmdGetEraFlipperDataScRsp = 6570;
}

enum CmdEvolveBuild {
    CmdEvolveBuildNone = 0;
    CmdEvolveBuildCoinNotify = 7134;
    CmdEvolveBuildTakeExpRewardScRsp = 7116;
    CmdEvolveBuildSkipTeachLevelCsReq = 7101;
    CmdEvolveBuildReRandomStageScRsp = 7150;
    CmdEvolveBuildShopAbilityResetScRsp = 7129;
    CmdEvolveBuildLeaveCsReq = 7143;
    CmdEvolveBuildQueryInfoScRsp = 7146;
    CmdEvolveBuildFinishScNotify = 7145;
    CmdEvolveBuildTakeExpRewardCsReq = 7122;
    CmdEvolveBuildStartLevelScRsp = 7137;
    CmdEvolveBuildStartStageCsReq = 7136;
    CmdEvolveBuildGiveupScRsp = 7115;
    CmdEvolveBuildShopAbilityDownScRsp = 7126;
    CmdEvolveBuildSkipTeachLevelScRsp = 7105;
    CmdEvolveBuildReRandomStageCsReq = 7107;
    CmdEvolveBuildStartLevelCsReq = 7102;
    CmdEvolveBuildStartStageScRsp = 7117;
    CmdEvolveBuildLeaveScRsp = 7109;
    CmdEvolveBuildQueryInfoCsReq = 7104;
    CmdEvolveBuildShopAbilityResetCsReq = 7142;
    CmdEvolveBuildShopAbilityUpScRsp = 7132;
    CmdEvolveBuildShopAbilityUpCsReq = 7144;
    CmdEvolveBuildGiveupCsReq = 7127;
    CmdEvolveBuildShopAbilityDownCsReq = 7123;
}

enum OIJLBLOOHJG {
    EVOLVE_PERIOD_NONE = 0;
    EVOLVE_PERIOD_FIRST = 1;
    EVOLVE_PERIOD_SECOND = 2;
    EVOLVE_PERIOD_THIRD = 3;
    EVOLVE_PERIOD_EXTRA = 4;
}

enum DLHCMCNIHII {
    EVOLVE_BATTLE_RESULT_NONE = 0;
    EVOLVE_BATTLE_RESULT_WIN = 1;
    EVOLVE_BATTLE_RESULT_ALL_AVATAR_DEAD = 2;
    EVOLVE_BATTLE_RESULT_NO_DEAD_LINE = 3;
    EVOLVE_BATTLE_RESULT_QUIT = 4;
}

enum KLNIPNJCNMJ {
    EVOLVE_BUILD_SEASON_NONE = 0;
    EVOLVE_BUILD_EARLY_ACCESS = 1;
    EVOLVE_BUILD_SECOND_CHAPTER = 2;
}

enum CmdExpeditionType {
    CmdExpeditionTypeNone = 0;
    CmdTakeExpeditionRewardCsReq = 2571;
    CmdTakeMultipleActivityExpeditionRewardCsReq = 2533;
    CmdGetExpeditionDataCsReq = 2595;
    CmdTakeMultipleExpeditionRewardCsReq = 2539;
    CmdAcceptMultipleExpeditionScRsp = 2502;
    CmdAcceptExpeditionScRsp = 2540;
    CmdAcceptActivityExpeditionScRsp = 2572;
    CmdCancelExpeditionScRsp = 2548;
    CmdAcceptActivityExpeditionCsReq = 2556;
    CmdTakeExpeditionRewardScRsp = 2552;
    CmdCancelExpeditionCsReq = 2576;
    CmdTakeActivityExpeditionRewardScRsp = 2583;
    CmdCancelActivityExpeditionScRsp = 2516;
    CmdAcceptExpeditionCsReq = 2531;
    CmdExpeditionDataChangeScNotify = 2522;
    CmdCancelActivityExpeditionCsReq = 2585;
    CmdAcceptMultipleExpeditionCsReq = 2560;
    CmdTakeMultipleExpeditionRewardScRsp = 2543;
    CmdTakeMultipleActivityExpeditionRewardScRsp = 2542;
    CmdGetExpeditionDataScRsp = 2532;
    CmdTakeActivityExpeditionRewardCsReq = 2546;
}

enum CmdFantasticStoryActivityType {
    CmdFantasticStoryActivityTypeNone = 0;
    CmdFinishChapterScNotify = 4931;
    CmdGetFantasticStoryActivityDataScRsp = 4932;
    CmdGetFantasticStoryActivityDataCsReq = 4995;
    CmdEnterFantasticStoryActivityStageScRsp = 4976;
    CmdEnterFantasticStoryActivityStageCsReq = 4940;
    CmdFantasticStoryActivityBattleEndScNotify = 4948;
}

enum CmdFeverTimeActivityType {
    CmdFeverTimeActivityTypeNone = 0;
    CmdGetFeverTimeActivityDataScRsp = 7151;
    CmdEnterFeverTimeActivityStageScRsp = 7155;
    CmdEnterFeverTimeActivityStageCsReq = 7152;
    CmdGetFeverTimeActivityDataCsReq = 7157;
    CmdFeverTimeActivityBattleEndScNotify = 7154;
}

enum FeverTimeBattleRank {
    FEVER_TIME_BATTLE_RANK_C = 0;
    FEVER_TIME_BATTLE_RANK_B = 1;
    FEVER_TIME_BATTLE_RANK_A = 2;
    FEVER_TIME_BATTLE_RANK_S = 3;
    FEVER_TIME_BATTLE_RANK_SS = 4;
}

enum CmdFightType {
    CmdFightTypeNone = 0;
    CmdFightEnterCsReq = 30095;
    CmdFightKickOutScNotify = 30040;
    CmdFightHeartBeatScRsp = 30048;
    CmdFightSessionStopScNotify = 30071;
    CmdFightEnterScRsp = 30032;
    CmdFightLeaveScNotify = 30031;
    CmdFightHeartBeatCsReq = 30076;
    CmdFightGeneralScRsp = 30022;
    CmdFightGeneralScNotify = 30056;
    CmdFightGeneralCsReq = 30052;
}

enum CmdFightActivityType {
    CmdFightActivityTypeNone = 0;
    CmdEnterFightActivityStageScRsp = 3676;
    CmdFightActivityDataChangeScNotify = 3631;
    CmdGetFightActivityDataCsReq = 3695;
    CmdTakeFightActivityRewardScRsp = 3671;
    CmdGetFightActivityDataScRsp = 3632;
    CmdEnterFightActivityStageCsReq = 3640;
    CmdTakeFightActivityRewardCsReq = 3648;
}

enum CmdFightFestType {
    CmdFightFestTypeNone = 0;
    CmdStartFightFestScRsp = 7287;
    CmdStartFightFestCsReq = 7252;
    CmdFightFestUpdateCoinNotify = 7265;
    CmdGetFightFestDataScRsp = 7296;
    CmdFightFestScoreUpdateNotify = 7286;
    CmdFightFestUnlockSkillNotify = 7267;
    CmdFightFestUpdateChallengeRecordNotify = 7277;
    CmdGetFightFestDataCsReq = 7254;
}

enum HGDAPJPKFFB {
    FIGHT_FEST_BATTLE_RANK_C = 0;
    FIGHT_FEST_BATTLE_RANK_B = 1;
    FIGHT_FEST_BATTLE_RANK_A = 2;
    FIGHT_FEST_BATTLE_RANK_S = 3;
    FIGHT_FEST_BATTLE_RANK_SS = 4;
}

enum APLOAGDIBKI {
    FIGHT_FEST_TYPE_NONE = 0;
    FIGHT_FEST_TYPE_MAIN = 1;
    FIGHT_FEST_TYPE_SCORE = 2;
    FIGHT_FEST_TYPE_CHALLENGE = 3;
    FIGHT_FEST_TYPE_TEACH = 4;
}

enum CmdFightMarbleType {
    CmdFightMarbleTypeNone = 0;
}

enum MJBIKBCPKAI {
    FightMarbleEventTypeNone = 0;
    FightMarbleEventTypePlayerEnd = 1;
    FightMarbleEventTypeGameEnd = 2;
}

enum JOMKPEGEFMP {
    MARBLE_TEAM_TYPE_NONE = 0;
    MARBLE_TEAM_TYPE_TEAM_A = 1;
    MARBLE_TEAM_TYPE_TEAM_B = 2;
}

enum EEIBHJPNJCF {
    MARBLE_PLAYER_STATE_Default = 0;
    MARBLE_PLAYER_STATE_Leave = 1;
    MARBLE_PLAYER_STATE_KickOut = 2;
}

enum IMPKPKAMIAF {
    MARBLE_SYNC_TYPE_NONE = 0;
    MARBLE_SYNC_TYPE_LOADING = 1;
    MARBLE_SYNC_TYPE_PERFORMANCE = 2;
    MARBLE_SYNC_TYPE_ROUND_START = 3;
    MARBLE_SYNC_TYPE_ROUND_END = 4;
    MARBLE_SYNC_TYPE_SWITCH_ROUND = 6;
    MARBLE_SYNC_TYPE_USE_TECH = 7;
    MARBLE_SYNC_TYPE_SIMULATE_START = 8;
    MARBLE_SYNC_TYPE_EMOJI = 9;
    MARBLE_SYNC_TYPE_ACHIEVEMENT = 10;
}

enum PAJNHIAGODD {
    MARBLE_FRAME_TYPE_NONE = 0;
    MARBLE_FRAME_TYPE_ACTION_START = 1;
    MARBLE_FRAME_TYPE_ACTION_END = 2;
    MARBLE_FRAME_TYPE_ROUND_START = 3;
    MARBLE_FRAME_TYPE_ROUND_END = 4;
    MARBLE_FRAME_TYPE_REVIVE = 5;
    MARBLE_FRAME_TYPE_HP_CHANGE = 6;
    MARBLE_FRAME_TYPE_LAUNCH = 7;
    MARBLE_FRAME_TYPE_STOP = 8;
    MARBLE_FRAME_TYPE_COLLIDE = 9;
    MARBLE_FRAME_TYPE_EFFECT = 10;
    MARBLE_FRAME_TYPE_BUFF_TEXT = 11;
    MARBLE_FRAME_TYPE_SKILL_UI = 12;
    MARBLE_FRAME_TYPE_ABSORB = 13;
    MARBLE_FRAME_TYPE_ON_OFF_FIELD = 14;
    MARBLE_FRAME_TYPE_DEAD = 15;
    MARBLE_FRAME_TYPE_USE_TECH = 16;
    MARBLE_FRAME_TYPE_TECH_ACTIVE = 17;
    MARBLE_FRAME_TYPE_GHOST_FIRE = 18;
    MARBLE_FRAME_TYPE_TRIGGER = 19;
    MARBLE_FRAME_TYPE_SWALLOW = 20;
    MARBLE_FRAME_TYPE_RADIUS = 21;
    MARBLE_FRAME_TYPE_HIDE_LINE = 22;
    MARBLE_FRAME_TYPE_TEAM_SCORE = 23;
    MARBLE_FRAME_TYPE_EMOJI_PACKAGE = 24;
    MARBLE_FRAME_TYPE_CHANGE_SPEED = 25;
    MARBLE_FRAME_TYPE_ADD_SHIELD = 26;
}

enum LKKAJCACIJI {
    MARBLE_FACTION_TYPE_NONE = 0;
    MARBLE_FACTION_TYPE_ALL = 1;
    MARBLE_FACTION_TYPE_ENEMY = 2;
    MARBLE_FACTION_TYPE_ALLY = 3;
    MARBLE_FACTION_TYPE_FIELD = 4;
}

enum FIPPKLCOEGJ {
    MARBLE_HP_CHANGE_TYPE_NONE = 0;
    MARBLE_HP_CHANGE_TYPE_CRITICAL = 1;
    MARBLE_HP_CHANGE_TYPE_SPINE = 2;
}

enum PPIFFKJEJJA {
    Marble_Game_Phase_None = 0;
    Marble_Game_Phase_Ready = 1;
    Marble_Game_Phase_Delay = 2;
    Marble_Game_Phase_Loading = 3;
    Marble_Game_Phase_LoadFinish = 4;
    Marble_Game_Phase_Performance = 5;
    Marble_Game_Phase_PerformanceFinish = 6;
    Marble_Game_Phase_RoundA = 7;
    Marble_Game_Phase_RoundB = 8;
    Marble_Game_Phase_Simulate = 9;
    Marble_Game_Phase_SimulateFinish = 10;
    Marble_Game_Phase_Tech = 11;
    Marble_Game_Phase_TechUI = 12;
    Marble_Game_Phase_TechFinish = 13;
    Marble_Game_Phase_Finish = 14;
    Marble_Game_Phase_PreRound = 15;
}

enum CmdFightMathc3Type {
    CmdFightMathc3TypeNone = 0;
    CmdFightMatch3SwapScRsp = 30171;
    CmdFightMatch3TurnStartScNotify = 30140;
    CmdFightMatch3DataScRsp = 30132;
    CmdFightMatch3DataCsReq = 30195;
    CmdFightMatch3ChatScNotify = 30172;
    CmdFightMatch3ChatScRsp = 30156;
    CmdFightMatch3ChatCsReq = 30122;
    CmdFightMatch3TurnEndScNotify = 30176;
    CmdFightMatch3ForceUpdateNotify = 30185;
    CmdFightMatch3SwapCsReq = 30148;
    CmdFightMatch3OpponentDataScNotify = 30152;
    CmdFightMatch3StartCountDownScNotify = 30131;
}

enum DGFCBOFAOIA {
    MATCH3_STATE_IDLE = 0;
    MATCH3_STATE_START = 1;
    MATCH3_STATE_MATCH = 2;
    MATCH3_STATE_GAME = 3;
    MATCH3_STATE_HALFTIME = 4;
    MATCH3_STATE_OVER = 5;
}

enum NPPNFPPENMC {
    MATCH3_PLAYER_STATE_ALIVE = 0;
    MATCH3_PLAYER_STATE_DYING = 1;
    MATCH3_PLAYER_STATE_DEAD = 2;
    MATCH3_PLAYER_STATE_LEAVE = 3;
}

enum BFILLIOBMFN {
    EVENT_BEGIN = 0;
    EVENT_BREAK = 1;
    EVENT_FALL = 2;
    EVENT_REFRESH = 3;
    EVENT_BIRD_SKILL = 4;
    EVENT_ENV = 5;
    EVENT_SHUFFLE = 6;
    EVENT_SETTLE_TAG = 7;
}

enum CmdFriendType {
    CmdFriendTypeNone = 0;
    CmdGetPlayerDetailInfoCsReq = 2931;
    CmdDeleteBlacklistScRsp = 2963;
    CmdGetFriendRecommendLineupCsReq = 2936;
    CmdGetAssistHistoryCsReq = 2951;
    CmdGetCurAssistScRsp = 2975;
    CmdGetFriendBattleRecordDetailCsReq = 2934;
    CmdNewAssistHistoryNotify = 2924;
    CmdGetFriendRecommendLineupDetailScRsp = 2974;
    CmdSearchPlayerCsReq = 2911;
    CmdSetFriendRemarkNameScRsp = 2977;
    CmdSyncDeleteFriendScNotify = 2983;
    CmdSetAssistCsReq = 2984;
    CmdSearchPlayerScRsp = 2993;
    CmdGetFriendDevelopmentInfoScRsp = 2953;
    CmdCurAssistChangedNotify = 2998;
    CmdSetFriendRemarkNameCsReq = 2942;
    CmdGetFriendAssistListScRsp = 2954;
    CmdSetAssistScRsp = 2937;
    CmdGetAssistListCsReq = 2925;
    CmdDeleteBlacklistCsReq = 2929;
    CmdGetFriendChallengeDetailCsReq = 2908;
    CmdGetFriendChallengeDetailScRsp = 2935;
    CmdHandleFriendCsReq = 2956;
    CmdGetFriendRecommendLineupDetailCsReq = 2927;
    CmdGetFriendLoginInfoScRsp = 2913;
    CmdGetPlayerDetailInfoScRsp = 2940;
    CmdGetFriendChallengeLineupCsReq = 2999;
    CmdSyncAddBlacklistScNotify = 2939;
    CmdGetFriendListInfoCsReq = 2995;
    CmdAddBlacklistScRsp = 2902;
    CmdGetFriendListInfoScRsp = 2932;
    CmdTakeAssistRewardCsReq = 2957;
    CmdGetFriendAssistListCsReq = 2909;
    CmdApplyFriendScRsp = 2952;
    CmdGetFriendRecommendListInfoCsReq = 2943;
    CmdGetCurAssistCsReq = 2930;
    CmdGetFriendApplyListInfoCsReq = 2976;
    CmdSetFriendMarkCsReq = 2986;
    CmdGetFriendRecommendListInfoScRsp = 2933;
    CmdGetAssistHistoryScRsp = 2991;
    CmdSyncApplyFriendScNotify = 2922;
    CmdSetForbidOtherApplyFriendCsReq = 2978;
    CmdGetFriendApplyListInfoScRsp = 2948;
    CmdGetFriendDevelopmentInfoCsReq = 2901;
    CmdGetFriendChallengeLineupScRsp = 2987;
    CmdGetFriendBattleRecordDetailScRsp = 2968;
    CmdHandleFriendScRsp = 2972;
    CmdReportPlayerScRsp = 2921;
    CmdSyncHandleFriendScNotify = 2985;
    CmdDeleteFriendScRsp = 2946;
    CmdAddBlacklistCsReq = 2960;
    CmdApplyFriendCsReq = 2971;
    CmdTakeAssistRewardScRsp = 2907;
    CmdSetFriendMarkScRsp = 3000;
    CmdGetFriendRecommendLineupScRsp = 2994;
    CmdGetPlatformPlayerInfoCsReq = 2964;
    CmdDeleteFriendCsReq = 2916;
    CmdGetAssistListScRsp = 2914;
    CmdReportPlayerCsReq = 2958;
    CmdGetFriendLoginInfoCsReq = 2945;
    CmdSetForbidOtherApplyFriendScRsp = 2920;
    CmdGetPlatformPlayerInfoScRsp = 2906;
}

enum FriendOnlineStatus {
    FRIEND_ONLINE_STATUS_OFFLINE = 0;
    FRIEND_ONLINE_STATUS_ONLINE = 1;
}

enum FriendApplySource {
    FRIEND_APPLY_SOURCE_NONE = 0;
    FRIEND_APPLY_SOURCE_SEARCH = 1;
    FRIEND_APPLY_SOURCE_RECOMMEND = 2;
    FRIEND_APPLY_SOURCE_ASSIST = 3;
    FRIEND_APPLY_SOURCE_RECOMMEND_ASSIST = 4;
    FRIEND_APPLY_SOURCE_PSN_FRIEND = 5;
    FRIEND_APPLY_SOURCE_ASSIST_REWARD = 6;
}

enum CmdGachaType {
    CmdGachaTypeNone = 0;
    CmdDoGachaCsReq = 1931;
    CmdGetGachaCeilingScRsp = 1948;
    CmdGetGachaInfoScRsp = 1932;
    CmdGachaDecideItemChangeScNotify = 1972;
    CmdDoGachaScRsp = 1940;
    CmdExchangeGachaCeilingCsReq = 1971;
    CmdGetGachaInfoCsReq = 1995;
    CmdExchangeGachaCeilingScRsp = 1952;
    CmdSetGachaDecideItemCsReq = 1922;
    CmdGetGachaCeilingCsReq = 1976;
    CmdSetGachaDecideItemScRsp = 1956;
}

enum CmdHeartdialType {
    CmdHeartdialTypeNone = 0;
    CmdChangeScriptEmotionCsReq = 6331;
    CmdFinishEmotionDialoguePerformanceCsReq = 6371;
    CmdHeartDialTraceScriptCsReq = 6356;
    CmdGetHeartDialInfoCsReq = 6395;
    CmdFinishEmotionDialoguePerformanceScRsp = 6352;
    CmdHeartDialScriptChangeScNotify = 6322;
    CmdGetHeartDialInfoScRsp = 6332;
    CmdSubmitEmotionItemCsReq = 6376;
    CmdSubmitEmotionItemScRsp = 6348;
    CmdHeartDialTraceScriptScRsp = 6372;
    CmdChangeScriptEmotionScRsp = 6340;
}

enum HeartDialEmotionType {
    HEART_DIAL_EMOTION_TYPE_PEACE = 0;
    HEART_DIAL_EMOTION_TYPE_ANGER = 1;
    HEART_DIAL_EMOTION_TYPE_HAPPY = 2;
    HEART_DIAL_EMOTION_TYPE_SAD = 3;
}

enum HeartDialStepType {
    HEART_DIAL_STEP_TYPE_MISSING = 0;
    HEART_DIAL_STEP_TYPE_FULL = 1;
    HEART_DIAL_STEP_TYPE_LOCK = 2;
    HEART_DIAL_STEP_TYPE_UNLOCK = 3;
    HEART_DIAL_STEP_TYPE_NORMAL = 4;
    HEART_DIAL_STEP_TYPE_CONTROL = 5;
}

enum HeartDialUnlockStatus {
    HEART_DIAL_UNLOCK_STATUS_LOCK = 0;
    HEART_DIAL_UNLOCK_STATUS_UNLOCK_SINGLE = 1;
    HEART_DIAL_UNLOCK_STATUS_UNLOCK_ALL = 2;
}

enum CmdHeliobusType {
    CmdHeliobusTypeNone = 0;
    CmdHeliobusSelectSkillCsReq = 5860;
    CmdHeliobusChallengeUpdateScNotify = 5821;
    CmdHeliobusSnsUpdateScNotify = 5872;
    CmdHeliobusSnsLikeCsReq = 5871;
    CmdHeliobusUnlockSkillScNotify = 5883;
    CmdHeliobusSnsCommentScRsp = 5856;
    CmdHeliobusEnterBattleCsReq = 5833;
    CmdHeliobusActivityDataScRsp = 5832;
    CmdHeliobusStartRaidCsReq = 5877;
    CmdHeliobusStartRaidScRsp = 5858;
    CmdHeliobusLineupUpdateScNotify = 5829;
    CmdHeliobusUpgradeLevelScRsp = 5846;
    CmdHeliobusSnsReadScRsp = 5840;
    CmdHeliobusSnsPostScRsp = 5848;
    CmdHeliobusSnsPostCsReq = 5876;
    CmdHeliobusSnsLikeScRsp = 5852;
    CmdHeliobusSnsCommentCsReq = 5822;
    CmdHeliobusSnsReadCsReq = 5831;
    CmdHeliobusInfoChangedScNotify = 5885;
    CmdHeliobusSelectSkillScRsp = 5802;
    CmdHeliobusUpgradeLevelCsReq = 5816;
    CmdHeliobusActivityDataCsReq = 5895;
    CmdHeliobusEnterBattleScRsp = 5842;
}

enum CmdItemType {
    CmdItemTypeNone = 0;
    CmdComposeSelectedRelicScRsp = 529;
    CmdSellItemScRsp = 533;
    CmdGetMarkItemListScRsp = 575;
    CmdDeleteRelicFilterPlanCsReq = 535;
    CmdBatchRankUpEquipmentScRsp = 517;
    CmdGetRelicFilterPlanCsReq = 600;
    CmdRelicReforgeConfirmCsReq = 527;
    CmdComposeLimitNumCompleteNotify = 525;
    CmdRelicFilterPlanClearNameScNotify = 553;
    CmdComposeSelectedRelicCsReq = 521;
    CmdDestroyItemScRsp = 537;
    CmdGetBagScRsp = 532;
    CmdAddRelicFilterPlanScRsp = 599;
    CmdComposeLimitNumUpdateNotify = 514;
    CmdCancelMarkItemNotify = 524;
    CmdGetRecyleTimeCsReq = 511;
    CmdBatchRankUpEquipmentCsReq = 590;
    CmdRechargeSuccNotify = 542;
    CmdModifyRelicFilterPlanCsReq = 587;
    CmdDestroyItemCsReq = 584;
    CmdLockEquipmentCsReq = 576;
    CmdExpUpRelicScRsp = 560;
    CmdGetRecyleTimeScRsp = 593;
    CmdGetRelicFilterPlanScRsp = 509;
    CmdUseItemCsReq = 571;
    CmdMarkItemScRsp = 591;
    CmdExchangeHcoinCsReq = 577;
    CmdRelicReforgeCsReq = 536;
    CmdLockRelicScRsp = 539;
    CmdRankUpEquipmentScRsp = 556;
    CmdUseItemScRsp = 552;
    CmdLockRelicCsReq = 502;
    CmdGetBagCsReq = 595;
    CmdSellItemCsReq = 543;
    CmdExpUpEquipmentCsReq = 572;
    CmdSetTurnFoodSwitchScRsp = 598;
    CmdSyncTurnFoodNotify = 557;
    CmdModifyRelicFilterPlanScRsp = 508;
    CmdMarkRelicFilterPlanScRsp = 501;
    CmdAddEquipmentScNotify = 563;
    CmdExpUpEquipmentScRsp = 585;
    CmdExchangeHcoinScRsp = 558;
    CmdDiscardRelicScRsp = 545;
    CmdGeneralVirtualItemDataNotify = 564;
    CmdSetTurnFoodSwitchCsReq = 507;
    CmdLockEquipmentScRsp = 548;
    CmdRelicReforgeScRsp = 594;
    CmdMarkItemCsReq = 551;
    CmdComposeItemCsReq = 516;
    CmdExpUpRelicCsReq = 583;
    CmdRankUpEquipmentCsReq = 522;
    CmdComposeItemScRsp = 546;
    CmdPromoteEquipmentScRsp = 540;
    CmdPromoteEquipmentCsReq = 531;
    CmdRelicReforgeConfirmScRsp = 574;
    CmdMarkRelicFilterPlanCsReq = 568;
    CmdDiscardRelicCsReq = 506;
    CmdDeleteRelicFilterPlanScRsp = 534;
    CmdAddRelicFilterPlanCsReq = 554;
    CmdGetMarkItemListCsReq = 530;
}

enum ICPINEHOLML {
    RELIC_DISCARD_TYPE_SINGLE = 0;
    RELIC_DISCARD_TYPE_BATCH = 1;
    RELIC_DISCARD_TYPE_SMART = 2;
}

enum TurnFoodSwitch {
    TURN_FOOD_SWITCH_NONE = 0;
    TURN_FOOD_SWITCH_ATTACK = 1;
    TURN_FOOD_SWITCH_DEFINE = 2;
}

enum CmdJukeboxType {
    CmdJukeboxTypeNone = 0;
    CmdPlayBackGroundMusicCsReq = 3131;
    CmdGetJukeboxDataScRsp = 3132;
    CmdPlayBackGroundMusicScRsp = 3140;
    CmdUnlockBackGroundMusicCsReq = 3176;
    CmdTrialBackGroundMusicScRsp = 3152;
    CmdGetJukeboxDataCsReq = 3195;
    CmdUnlockBackGroundMusicScRsp = 3148;
    CmdTrialBackGroundMusicCsReq = 3171;
}

enum CmdLineupType {
    CmdLineupTypeNone = 0;
    CmdSwapLineupScRsp = 756;
    CmdJoinLineupScRsp = 748;
    CmdQuitLineupCsReq = 771;
    CmdGetStageLineupScRsp = 732;
    CmdGetCurLineupDataScRsp = 740;
    CmdExtraLineupDestroyNotify = 729;
    CmdGetLineupAvatarDataScRsp = 716;
    CmdSwitchLineupIndexScRsp = 702;
    CmdGetLineupAvatarDataCsReq = 785;
    CmdSwitchLineupIndexCsReq = 760;
    CmdGetStageLineupCsReq = 795;
    CmdVirtualLineupDestroyNotify = 777;
    CmdReplaceLineupScRsp = 721;
    CmdChangeLineupLeaderScRsp = 783;
    CmdSwapLineupCsReq = 722;
    CmdGetAllLineupDataCsReq = 733;
    CmdSyncLineupNotify = 772;
    CmdVirtualLineupTrialAvatarChangeScNotify = 763;
    CmdSetLineupNameScRsp = 743;
    CmdReplaceLineupCsReq = 758;
    CmdQuitLineupScRsp = 752;
    CmdSetLineupNameCsReq = 739;
    CmdJoinLineupCsReq = 776;
    CmdGetCurLineupDataCsReq = 731;
    CmdGetAllLineupDataScRsp = 742;
    CmdChangeLineupLeaderCsReq = 746;
}

enum PBPAHLPFNDA {
    LINEUP_TYPE_NONE = 0;
    LINEUP_TYPE_PRESET = 1;
    LINEUP_TYPE_VIRTUAL = 2;
    LINEUP_TYPE_EXTRA = 3;
    LINEUP_TYPE_STORY_LINE = 4;
}

enum ExtraLineupType {
    LINEUP_NONE = 0;
    LINEUP_CHALLENGE = 1;
    LINEUP_ROGUE = 2;
    LINEUP_CHALLENGE_2 = 3;
    LINEUP_CHALLENGE_3 = 4;
    LINEUP_ROGUE_CHALLENGE = 5;
    LINEUP_STAGE_TRIAL = 6;
    LINEUP_ROGUE_TRIAL = 7;
    LINEUP_ACTIVITY = 8;
    LINEUP_BOXING_CLUB = 9;
    LINEUP_TREASURE_DUNGEON = 11;
    LINEUP_CHESS_ROGUE = 12;
    LINEUP_HELIOBUS = 13;
    LINEUP_TOURN_ROGUE = 14;
    LINEUP_RELIC_ROGUE = 15;
    LINEUP_ARCADE_ROGUE = 16;
    LINEUP_MAGIC_ROGUE = 17;
}

enum SyncLineupReason {
    SYNC_REASON_NONE = 0;
    SYNC_REASON_MP_ADD = 1;
    SYNC_REASON_MP_ADD_PROP_HIT = 2;
    SYNC_REASON_HP_ADD = 3;
    SYNC_REASON_HP_ADD_PROP_HIT = 4;
}

enum CmdLobbyType {
    CmdLobbyTypeNone = 0;
    CmdLobbyInviteCsReq = 7357;
    CmdLobbySyncInfoScNotify = 7395;
    CmdLobbyJoinCsReq = 7352;
    CmdLobbyStartFightCsReq = 7386;
    CmdLobbyInteractCsReq = 7376;
    CmdLobbyKickOutCsReq = 7393;
    CmdLobbyStartFightScRsp = 7367;
    CmdLobbyJoinScRsp = 7387;
    CmdLobbyGetInfoCsReq = 7382;
    CmdLobbyGetInfoScRsp = 7373;
    CmdLobbyKickOutScRsp = 7359;
    CmdLobbyQuitCsReq = 7390;
    CmdLobbyCreateCsReq = 7354;
    CmdLobbyModifyPlayerInfoCsReq = 7377;
    CmdLobbyInteractScRsp = 7372;
    CmdLobbyInviteScRsp = 7400;
    CmdLobbyInviteScNotify = 7394;
    CmdLobbyQuitScRsp = 7370;
    CmdLobbyCreateScRsp = 7396;
    CmdLobbyModifyPlayerInfoScRsp = 7365;
    CmdLobbyInteractScNotify = 7366;
}

enum CmdMailType {
    CmdMailTypeNone = 0;
    CmdMarkReadMailCsReq = 831;
    CmdMarkReadMailScRsp = 840;
    CmdDelMailScRsp = 848;
    CmdTakeMailAttachmentScRsp = 852;
    CmdNewMailScNotify = 822;
    CmdGetMailScRsp = 832;
    CmdGetMailCsReq = 895;
    CmdDelMailCsReq = 876;
    CmdTakeMailAttachmentCsReq = 871;
}

enum MailType {
    MAIL_TYPE_NORMAL = 0;
    MAIL_TYPE_STAR = 1;
}

enum CmdMapRotationType {
    CmdMapRotationTypeNone = 0;
    CmdGetMapRotationDataCsReq = 6872;
    CmdDeployRotaterScRsp = 6848;
    CmdLeaveMapRotationRegionScNotify = 6883;
    CmdEnterMapRotationRegionCsReq = 6895;
    CmdResetMapRotationRegionCsReq = 6816;
    CmdGetMapRotationDataScRsp = 6885;
    CmdRotateMapScRsp = 6852;
    CmdEnterMapRotationRegionScRsp = 6832;
    CmdLeaveMapRotationRegionCsReq = 6822;
    CmdLeaveMapRotationRegionScRsp = 6856;
    CmdUpdateRotaterScNotify = 6833;
    CmdRotateMapCsReq = 6871;
    CmdResetMapRotationRegionScRsp = 6846;
    CmdInteractChargerCsReq = 6831;
    CmdUpdateEnergyScNotify = 6860;
    CmdRemoveRotaterCsReq = 6839;
    CmdUpdateMapRotationDataScNotify = 6802;
    CmdDeployRotaterCsReq = 6876;
    CmdInteractChargerScRsp = 6840;
    CmdRemoveRotaterScRsp = 6843;
}

enum CmdMarbleType {
    CmdMarbleTypeNone = 0;
    CmdMarbleUpdateShownSealCsReq = 8277;
    CmdMarbleGetDataScRsp = 8283;
    CmdMarbleLevelFinishCsReq = 8278;
    CmdMarbleUpdateShownSealScRsp = 8273;
    CmdMarbleLevelFinishScRsp = 8280;
    CmdMarblePvpDataUpdateScNotify = 8279;
    CmdMarbleUnlockSealScNotify = 8290;
    CmdMarbleShopBuyCsReq = 8274;
    CmdMarbleShopBuyScRsp = 8272;
    CmdMarbleGetDataCsReq = 8284;
}

enum CmdMarkChestType {
    CmdMarkChestTypeNone = 0;
    CmdUpdateMarkChestScRsp = 8190;
    CmdGetMarkChestScRsp = 8193;
    CmdGetMarkChestCsReq = 8194;
    CmdMarkChestChangedScNotify = 8184;
    CmdUpdateMarkChestCsReq = 8188;
}

enum CmdMatchType {
    CmdMatchTypeNone = 0;
    CmdGetCrossInfoCsReq = 7317;
    CmdCancelMatchScRsp = 7337;
    CmdStartMatchCsReq = 7304;
    CmdGetCrossInfoScRsp = 7327;
    CmdStartMatchScRsp = 7346;
    CmdCancelMatchCsReq = 7302;
    CmdMatchResultScNotify = 7336;
}

enum CmdMatchThreeModuleType {
    CmdMatchThreeModuleTypeNone = 0;
    CmdMatchThreeSetBirdPosCsReq = 7417;
    CmdMatchThreeLevelEndScRsp = 7437;
    CmdMatchThreeSetBirdPosScRsp = 7427;
    CmdMatchThreeSyncDataScNotify = 7436;
    CmdMatchThreeGetDataScRsp = 7446;
    CmdMatchThreeLevelEndCsReq = 7402;
    CmdMatchThreeGetDataCsReq = 7404;
}

enum AJDDHBHMOOF {
    MatchThreeStatistics_None = 0;
    MatchThreeStatistics_First = 1;
    MatchThreeStatistics_Second = 2;
    MatchThreeStatistics_Third = 3;
    MatchThreeStatistics_Fruit = 4;
    MatchThreeStatistics_Skill = 5;
    MatchThreeStatistics_Defeat = 6;
    MatchThreeStatistics_Bomb = 7;
    MatchThreeStatistics_Damage = 8;
    MatchThreeStatistics_Energy = 9;
    MatchThreeStatistics_SwapBomb = 10;
}

enum CmdMessageType {
    CmdMessageTypeNone = 0;
    CmdGetMissionMessageInfoCsReq = 2772;
    CmdFinishPerformSectionIdScRsp = 2756;
    CmdGetNpcStatusCsReq = 2731;
    CmdFinishItemIdCsReq = 2776;
    CmdFinishSectionIdScRsp = 2752;
    CmdFinishItemIdScRsp = 2748;
    CmdGetMissionMessageInfoScRsp = 2785;
    CmdFinishSectionIdCsReq = 2771;
    CmdFinishPerformSectionIdCsReq = 2722;
    CmdGetNpcMessageGroupCsReq = 2795;
    CmdGetNpcStatusScRsp = 2740;
    CmdGetNpcMessageGroupScRsp = 2732;
}

enum CmdMiscModuleType {
    CmdMiscModuleTypeNone = 0;
    CmdDifficultyAdjustmentGetDataScRsp = 4114;
    CmdCancelCacheNotifyCsReq = 4122;
    CmdCancelCacheNotifyScRsp = 4156;
    CmdMazeKillDirectScRsp = 4175;
    CmdGetOrigamiPropInfoScRsp = 4139;
    CmdDifficultyAdjustmentUpdateDataCsReq = 4184;
    CmdGetShareDataCsReq = 4131;
    CmdGetMovieRacingDataCsReq = 4142;
    CmdUpdateGunPlayDataCsReq = 4111;
    CmdTakePictureScRsp = 4148;
    CmdGetGunPlayDataCsReq = 4129;
    CmdShareCsReq = 4195;
    CmdDifficultyAdjustmentUpdateDataScRsp = 4137;
    CmdGetShareDataScRsp = 4140;
    CmdTakePictureCsReq = 4176;
    CmdSubmitOrigamiItemScRsp = 4160;
    CmdMazeKillDirectCsReq = 4130;
    CmdDifficultyAdjustmentGetDataCsReq = 4125;
    CmdSecurityReportScRsp = 4185;
    CmdTriggerVoiceScRsp = 4146;
    CmdTriggerVoiceCsReq = 4116;
    CmdUpdateGunPlayDataScRsp = 4193;
    CmdGetOrigamiPropInfoCsReq = 4102;
    CmdGetMovieRacingDataScRsp = 4177;
    CmdUpdateMovieRacingDataCsReq = 4158;
    CmdSecurityReportCsReq = 4172;
    CmdGetGunPlayDataScRsp = 4163;
    CmdUpdateMovieRacingDataScRsp = 4121;
    CmdSubmitOrigamiItemCsReq = 4183;
    CmdShareScRsp = 4132;
}

enum CancelCacheType {
    CACHE_NOTIFY_TYPE_NONE = 0;
    CACHE_NOTIFY_TYPE_RECYCLE = 1;
    CACHE_NOTIFY_TYPE_RECHARGE = 2;
}

enum MovieRacingType {
    MOVIE_RACING_OVER_TAKE = 0;
    MOVIE_RACING_OVER_TAKE_ENDLESS = 1;
    MOVIE_RACING_SHOOTING = 2;
    MOVIE_RACING_SHOOTING_ENDLESS = 3;
}

enum DifficultyAdjustmentType {
    DIFFICULTY_AJUSTMENT_TYPE_DEFAULT = 0;
    DIFFICULTY_AJUSTMENT_TYPE_EASY = 1;
}

enum GIILENMKCAH {
    DIFFICULTY_AJUSTMENT_SOURCE_NONE = 0;
    DIFFICULTY_AJUSTMENT_SOURCE_RAID = 1;
    DIFFICULTY_AJUSTMENT_SOURCE_EVENT = 2;
}

enum MNIJHMEPGNN {
    MAZE_KILL_SOURCE_NONE = 0;
    MAZE_KILL_SOURCE_SWITCH_HAND = 1;
    MAZE_KILL_SOURCE_TIME_LINE = 2;
}

enum CmdMissionType {
    CmdMissionTypeNone = 0;
    CmdSubMissionRewardScNotify = 1263;
    CmdStartFinishMainMissionScNotify = 1214;
    CmdUpdateMainMissionCustomValueScRsp = 1264;
    CmdStartFinishSubMissionScNotify = 1225;
    CmdGetMissionDataScRsp = 1232;
    CmdGetMissionStatusCsReq = 1233;
    CmdGetMainMissionCustomValueScRsp = 1275;
    CmdFinishedMissionScNotify = 1207;
    CmdGetMissionStatusScRsp = 1242;
    CmdSyncTaskScRsp = 1271;
    CmdGetMainMissionCustomValueCsReq = 1230;
    CmdUpdateMainMissionCustomValueCsReq = 1298;
    CmdFinishTalkMissionCsReq = 1231;
    CmdUpdateTrackMainMissionIdCsReq = 1224;
    CmdTeleportToMissionResetPointScRsp = 1293;
    CmdAcceptMainMissionScRsp = 1237;
    CmdMissionAcceptScNotify = 1251;
    CmdAcceptMainMissionCsReq = 1284;
    CmdFinishTalkMissionScRsp = 1240;
    CmdMissionGroupWarnScNotify = 1285;
    CmdUpdateTrackMainMissionIdScRsp = 1257;
    CmdSyncTaskCsReq = 1248;
    CmdFinishCosumeItemMissionScRsp = 1246;
    CmdGetMissionDataCsReq = 1295;
    CmdFinishCosumeItemMissionCsReq = 1216;
    CmdTeleportToMissionResetPointCsReq = 1211;
    CmdMissionRewardScNotify = 1276;
}

enum MissionSyncRecord {
    MISSION_SYNC_RECORD_NONE = 0;
    MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1;
    MISSION_SYNC_RECORD_MAIN_MISSION_START = 2;
    MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3;
    MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4;
    MISSION_SYNC_RECORD_MISSION_ACCEPT = 11;
    MISSION_SYNC_RECORD_MISSION_START = 12;
    MISSION_SYNC_RECORD_MISSION_FINISH = 13;
    MISSION_SYNC_RECORD_MISSION_DELETE = 14;
    MISSION_SYNC_RECORD_MISSION_PROGRESS = 15;
}

enum GJPKMNEFCFO {
    MAIN_MISSION_SYNC_NONE = 0;
    MAIN_MISSION_SYNC_MCV = 1;
}

enum TrackMainMissionUpdateReasonId {
    TRACK_MAIN_MISSION_UPDATE_NONE = 0;
    TRACK_MAIN_MISSION_UPDATE_AUTO = 1;
    TRACK_MAIN_MISSION_UPDATE_MANUAL = 2;
    TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3;
}

enum CmdMonopolyType {
    CmdMonopolyTypeNone = 0;
    CmdMonopolySelectOptionScRsp = 7072;
    CmdMonopolyScrachRaffleTicketScRsp = 7070;
    CmdMonopolyCellUpdateNotify = 7040;
    CmdMonopolyBuyGoodsScRsp = 7077;
    CmdMonopolyClickMbtiReportScRsp = 7038;
    CmdMonopolyTakeRaffleTicketRewardScRsp = 7097;
    CmdGetMbtiReportScRsp = 7001;
    CmdMonopolyAcceptQuizScRsp = 7057;
    CmdMonopolyGameBingoFlipCardScRsp = 7091;
    CmdMonopolyGetRegionProgressScRsp = 7018;
    CmdGetMonopolyFriendRankingListScRsp = 7087;
    CmdGetMonopolyDailyReportScRsp = 7015;
    CmdMonopolyGameCreateScNotify = 7007;
    CmdMonopolyMoveCsReq = 7052;
    CmdMonopolyGuessBuyInformationCsReq = 7006;
    CmdMonopolyGetRafflePoolInfoCsReq = 7044;
    CmdMonopolyConfirmRandomScRsp = 7033;
    CmdMonopolyGuessBuyInformationScRsp = 7045;
    CmdMonopolySocialEventEffectScNotify = 7094;
    CmdMonopolyRollDiceCsReq = 7048;
    CmdMonopolyGameRaiseRatioScRsp = 7084;
    CmdMonopolyActionResultScNotify = 7031;
    CmdMonopolyBuyGoodsCsReq = 7042;
    CmdMonopolyMoveScRsp = 7022;
    CmdMonopolyEventLoadUpdateScNotify = 7096;
    CmdMonopolyClickCellCsReq = 7055;
    CmdMonopolyConfirmRandomCsReq = 7043;
    CmdMonopolyGuessChooseScRsp = 7064;
    CmdMonopolyGiveUpCurContentScRsp = 7063;
    CmdMonopolyTakeRaffleTicketRewardCsReq = 7010;
    CmdMonopolyGetDailyInitItemScRsp = 7019;
    CmdGetSocialEventServerCacheScRsp = 7074;
    CmdMonopolyGameSettleScNotify = 7037;
    CmdMonopolyGiveUpCurContentCsReq = 7029;
    CmdGetMonopolyFriendRankingListCsReq = 7099;
    CmdMonopolyGetRegionProgressCsReq = 7004;
    CmdMonopolyGameGachaScRsp = 7075;
    CmdMonopolyConditionUpdateScNotify = 7089;
    CmdMonopolyLikeCsReq = 7008;
    CmdMonopolyUpgradeAssetScRsp = 7021;
    CmdMonopolyContentUpdateScNotify = 7025;
    CmdMonopolyGetDailyInitItemCsReq = 7050;
    CmdMonopolyLikeScRsp = 7035;
    CmdMonopolyAcceptQuizCsReq = 7024;
    CmdMonopolyLikeScNotify = 7034;
    CmdMonopolyReRollRandomCsReq = 7002;
    CmdMonopolyUpgradeAssetCsReq = 7058;
    CmdMonopolyClickCellScRsp = 7080;
    CmdMonopolyTakePhaseRewardCsReq = 7073;
    CmdMonopolyGameRaiseRatioCsReq = 7014;
    CmdGetMbtiReportCsReq = 7068;
    CmdMonopolyGuessChooseCsReq = 7098;
    CmdMonopolyCheatDiceCsReq = 7011;
    CmdGetMonopolyInfoScRsp = 7032;
    CmdMonopolyDailySettleScNotify = 7054;
    CmdMonopolyGetRaffleTicketCsReq = 7049;
    CmdMonopolyReRollRandomScRsp = 7039;
    CmdGetSocialEventServerCacheCsReq = 7027;
    CmdGetMonopolyDailyReportCsReq = 7028;
    CmdMonopolyGetRafflePoolInfoScRsp = 7026;
    CmdDeleteSocialEventServerCacheCsReq = 7090;
    CmdDeleteSocialEventServerCacheScRsp = 7017;
    CmdMonopolyCheatDiceScRsp = 7093;
    CmdMonopolyClickMbtiReportCsReq = 7088;
    CmdGetMonopolyMbtiReportRewardCsReq = 7041;
    CmdMonopolySttUpdateScNotify = 7012;
    CmdMonopolyEventSelectFriendScRsp = 7036;
    CmdDailyFirstEnterMonopolyActivityCsReq = 7016;
    CmdMonopolyScrachRaffleTicketCsReq = 7079;
    CmdMonopolyGameGachaCsReq = 7030;
    CmdGetMonopolyMbtiReportRewardScRsp = 7062;
    CmdDailyFirstEnterMonopolyActivityScRsp = 7046;
    CmdMonopolyGuessDrawScNotify = 7013;
    CmdMonopolyTakePhaseRewardScRsp = 7067;
    CmdMonopolyRollRandomCsReq = 7083;
    CmdMonopolyGameBingoFlipCardCsReq = 7051;
    CmdMonopolyGetRaffleTicketScRsp = 7003;
    CmdMonopolyRollDiceScRsp = 7071;
    CmdMonopolyEventSelectFriendCsReq = 7053;
    CmdMonopolyRollRandomScRsp = 7060;
    CmdGetMonopolyInfoCsReq = 7095;
    CmdMonopolyQuizDurationChangeScNotify = 7078;
    CmdMonopolySelectOptionCsReq = 7056;
}

enum GOJOINDBKIK {
    MONOPOLY_SOCIAL_EVENT_STATUS_NONE = 0;
    MONOPOLY_SOCIAL_EVENT_STATUS_WAITING_SELECT_FRIEND = 1;
}

enum IHGJLLNGDKL {
    MONOPOLY_CELL_STATE_IDLE = 0;
    MONOPOLY_CELL_STATE_BARRIER = 1;
    MONOPOLY_CELL_STATE_GROUND = 2;
    MONOPOLY_CELL_STATE_FINISH = 3;
}

enum GKEJFKAKENM {
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_EFFECT = 1;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_BONUS = 2;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_TAX = 3;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE = 4;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_GAME_SETTLE = 5;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_BUY_GOODS = 6;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_CLICK = 7;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_SOCIAL_EVENT = 8;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_LIKE = 9;
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_QUIZ_GAME_SETTLE = 10;
}

enum CmdMultiplayerType {
    CmdMultiplayerTypeNone = 0;
    CmdMultiplayerFightGameStateCsReq = 1095;
    CmdMultiplayerMatch3FinishScNotify = 1022;
    CmdMultiplayerGetFightGateCsReq = 1031;
    CmdMultiplayerFightGameStartScNotify = 1071;
    CmdMultiplayerFightGameStateScRsp = 1032;
    CmdMultiplayerFightGiveUpCsReq = 1076;
    CmdMultiplayerGetFightGateScRsp = 1040;
    CmdMultiplayerFightGiveUpScRsp = 1048;
    CmdMultiplayerFightGameFinishScNotify = 1052;
}

enum CmdMultipleDropType {
    CmdMultipleDropTypeNone = 0;
    CmdMultipleDropInfoScNotify = 4631;
    CmdGetMultipleDropInfoScRsp = 4632;
    CmdGetPlayerReturnMultiDropInfoScRsp = 4676;
    CmdMultipleDropInfoNotify = 4648;
    CmdGetPlayerReturnMultiDropInfoCsReq = 4640;
    CmdGetMultipleDropInfoCsReq = 4695;
}

enum CmdMuseumType {
    CmdMuseumTypeNone = 0;
    CmdMuseumFundsChangedScNotify = 4339;
    CmdMuseumTargetRewardNotify = 4311;
    CmdMuseumTargetStartNotify = 4329;
    CmdMuseumDispatchFinishedScNotify = 4321;
    CmdGetStuffScNotify = 4322;
    CmdRemoveStuffFromAreaScRsp = 4352;
    CmdMuseumTargetMissionFinishNotify = 4363;
    CmdFinishCurTurnCsReq = 4372;
    CmdRemoveStuffFromAreaCsReq = 4371;
    CmdMuseumInfoChangedScNotify = 4302;
    CmdMuseumRandomEventQueryCsReq = 4333;
    CmdMuseumRandomEventSelectCsReq = 4377;
    CmdMuseumTakeCollectRewardScRsp = 4325;
    CmdBuyNpcStuffCsReq = 4331;
    CmdGetMuseumInfoCsReq = 4395;
    CmdMuseumRandomEventSelectScRsp = 4358;
    CmdSetStuffToAreaScRsp = 4348;
    CmdUpgradeAreaScRsp = 4346;
    CmdUpgradeAreaCsReq = 4316;
    CmdGetExhibitScNotify = 4356;
    CmdMuseumTakeCollectRewardCsReq = 4393;
    CmdUpgradeAreaStatCsReq = 4383;
    CmdUpgradeAreaStatScRsp = 4360;
    CmdSetStuffToAreaCsReq = 4376;
    CmdMuseumRandomEventQueryScRsp = 4342;
    CmdGetMuseumInfoScRsp = 4332;
    CmdMuseumRandomEventStartScNotify = 4343;
    CmdBuyNpcStuffScRsp = 4340;
    CmdFinishCurTurnScRsp = 4385;
}

enum AIHADKBHPBM {
    MUSEUM_RANDOM_EVENT_STATE_NONE = 0;
    MUSEUM_RANDOM_EVENT_STATE_START = 1;
    MUSEUM_RANDOM_EVENT_STATE_PROCESSING = 2;
    MUSEUM_RANDOM_EVENT_STATE_FINISH = 3;
}

enum KAMLGLMNJGJ {
    WORK_POS_NONE = 0;
    WORK_POS_1 = 1;
    WORK_POS_2 = 2;
    WORK_POS_3 = 3;
}

enum IBBGDGGHEJL {
    STAT_TYPE_NONE = 0;
    STAT_TYPE_ART = 1;
    STAT_TYPE_CULTURE = 2;
    STAT_TYPE_POPULAR = 3;
}

enum KGJJJKPDCFG {
    UNKNOW = 0;
    MISSION_REWARD = 1;
    EVENT_BUY_STUFF = 2;
    MARKET_BUY_STUFF = 3;
    QUEST_REWARD = 4;
    INITIAL = 5;
    PHASE_FINISH_REWARD = 6;
}

enum CmdMusicRhythmType {
    CmdMusicRhythmTypeNone = 0;
    CmdMusicRhythmDataCsReq = 7573;
    CmdMusicRhythmStartLevelScRsp = 7589;
    CmdMusicRhythmDataScRsp = 7590;
    CmdMusicRhythmSaveSongConfigDataScRsp = 7600;
    CmdMusicRhythmFinishLevelCsReq = 7571;
    CmdMusicRhythmUnlockSongSfxScNotify = 7592;
    CmdMusicRhythmSaveSongConfigDataCsReq = 7588;
    CmdMusicRhythmUnlockTrackScNotify = 7577;
    CmdMusicRhythmStartLevelCsReq = 7596;
    CmdMusicRhythmUnlockSongNotify = 7581;
    CmdMusicRhythmMaxDifficultyLevelsUnlockNotify = 7579;
    CmdMusicRhythmFinishLevelScRsp = 7594;
}

enum EPGDHHHDJDC {
    STATUS_CLOSE = 0;
    STATUS_OPEN = 1;
}

enum CmdOfferingType {
    CmdOfferingTypeNone = 0;
    CmdGetOfferingInfoCsReq = 6934;
    CmdSubmitOfferingItemCsReq = 6928;
    CmdTakeOfferingRewardScRsp = 6922;
    CmdGetOfferingInfoScRsp = 6933;
    CmdSubmitOfferingItemScRsp = 6930;
    CmdOfferingInfoScNotify = 6940;
    CmdTakeOfferingRewardCsReq = 6924;
}

enum FBOMLIBEGOC {
    OFFERING_STATE_NONE = 0;
    OFFERING_STATE_LOCK = 1;
    OFFERING_STATE_OPEN = 2;
}

enum CmdPamMissionType {
    CmdPamMissionTypeNone = 0;
    CmdSyncAcceptedPamMissionNotify = 4031;
    CmdAcceptedPamMissionExpireCsReq = 4095;
    CmdAcceptedPamMissionExpireScRsp = 4032;
}

enum CmdPamSkinType {
    CmdPamSkinTypeNone = 0;
    CmdGetPamSkinDataCsReq = 8134;
    CmdSelectPamSkinCsReq = 8128;
    CmdUnlockPamSkinScNotify = 8124;
    CmdSelectPamSkinScRsp = 8130;
    CmdGetPamSkinDataScRsp = 8133;
}

enum CmdParkourType {
    CmdParkourTypeNone = 0;
    CmdParkourGetDataCsReq = 8394;
    CmdParkourEndLevelCsReq = 8400;
    CmdParkourStartLevelCsReq = 8384;
    CmdParkourStartLevelScRsp = 8382;
    CmdParkourGetRankingInfoCsReq = 8388;
    CmdParkourEndLevelScRsp = 8389;
    CmdParkourGetRankingInfoScRsp = 8390;
    CmdParkourGetDataScRsp = 8393;
}

enum POAHABDKPKJ {
    PARKOUR_END_LEVEL_REASON_NONE = 0;
    PARKOUR_END_LEVEL_REASON_FINISH = 1;
    PARKOUR_END_LEVEL_REASON_QUIT = 2;
}

enum HCFFFEIMCMF {
    PARKOUR_LEVEL_STT_NONE = 0;
    PARKOUR_LEVEL_STT_BOMBED_BY_SPARKLE_FIGURE = 1;
    PARKOUR_LEVEL_STT_DESTROY_SPARKLE_FIGURE = 2;
}

enum CmdPetType {
    CmdPetTypeNone = 0;
    CmdSummonPetScRsp = 7619;
    CmdCurPetChangedScNotify = 7603;
    CmdRecallPetScRsp = 7601;
    CmdSummonPetCsReq = 7609;
    CmdGetPetDataScRsp = 7620;
    CmdGetPetDataCsReq = 7611;
    CmdRecallPetCsReq = 7624;
}

enum CDEFBKPCPPA {
    PET_OPERATION_TYPE_NONE = 0;
    PET_OPERATION_TYPE_SUMMON = 1;
    PET_OPERATION_TYPE_RECALL = 2;
}

enum CmdPhoneType {
    CmdPhoneTypeNone = 0;
    CmdUnlockPhoneCaseScNotify = 5172;
    CmdSelectPhoneCaseScRsp = 5156;
    CmdSelectPhoneThemeCsReq = 5148;
    CmdSelectPhoneThemeScRsp = 5171;
    CmdUnlockPhoneThemeScNotify = 5152;
    CmdSelectChatBubbleCsReq = 5131;
    CmdGetPhoneDataScRsp = 5132;
    CmdUnlockChatBubbleScNotify = 5176;
    CmdSelectChatBubbleScRsp = 5140;
    CmdGetPhoneDataCsReq = 5195;
    CmdSelectPhoneCaseCsReq = 5122;
}

enum CmdPlanetFesType {
    CmdPlanetFesTypeNone = 0;
    CmdPlanetFesGetFriendRankingInfoListScRsp = 8247;
    CmdPlanetFesCollectIncomeScRsp = 8236;
    CmdPlanetFesGetBusinessDayInfoCsReq = 8222;
    CmdPlanetFesDeliverPamCargoScRsp = 8218;
    CmdPlanetFesSetCustomKeyValueScRsp = 8248;
    CmdPlanetFesUpgradeFesLevelScRsp = 8233;
    CmdGetPlanetFesDataScRsp = 8246;
    CmdPlanetFesUseItemCsReq = 8214;
    CmdPlanetFesGetAvatarStatScRsp = 8230;
    CmdPlanetFesDoGachaScRsp = 8220;
    CmdPlanetFesBonusEventInteractScRsp = 8219;
    CmdPlanetFesClientStatusCsReq = 8209;
    CmdPlanetFesChooseAvatarEventOptionCsReq = 8201;
    CmdPlanetFesStartMiniGameScRsp = 8249;
    CmdPlanetFesGameBingoFlipScRsp = 8225;
    CmdPlanetFesSetAvatarWorkScRsp = 8227;
    CmdPlanetFesGetBusinessDayInfoScRsp = 8216;
    CmdPlanetFesUpgradeSkillLevelCsReq = 8211;
    CmdPlanetFesCollectIncomeCsReq = 8237;
    CmdPlanetFesBuyLandCsReq = 8215;
    CmdPlanetFesClientStatusScRsp = 8245;
    CmdPlanetFesAvatarLevelUpCsReq = 8244;
    CmdPlanetFesUpgradeFesLevelCsReq = 8241;
    CmdPlanetFesBonusEventInteractCsReq = 8210;
    CmdPlanetFesDeliverPamCargoCsReq = 8234;
    CmdPlanetFesAvatarLevelUpScRsp = 8232;
    CmdPlanetFesDealAvatarEventOptionItemScRsp = 8239;
    CmdPlanetFesCollectAllIncomeCsReq = 8207;
    CmdGetPlanetFesDataCsReq = 8204;
    CmdPlanetFesGetFriendRankingInfoListCsReq = 8203;
    CmdPlanetFesTakeRegionPhaseRewardCsReq = 8213;
    CmdPlanetFesDealAvatarEventOptionItemCsReq = 8235;
    CmdPlanetFesBusinessDayRefreshEventCsReq = 8242;
    CmdPlanetFesBusinessDayRefreshEventScRsp = 8229;
    CmdPlanetFesUseItemScRsp = 8208;
    CmdPlanetFesGetAvatarStatCsReq = 8231;
    CmdPlanetFesTakeQuestRewardCsReq = 8223;
    CmdPlanetFesSyncChangeScNotify = 8202;
    CmdPlanetFesDoGachaCsReq = 8240;
    CmdPlanetFesTakeRegionPhaseRewardScRsp = 8206;
    CmdPlanetFesCollectAllIncomeScRsp = 8250;
    CmdPlanetFesFriendRankingInfoChangeScNotify = 8224;
    CmdPlanetFesUpgradeSkillLevelScRsp = 8238;
    CmdPlanetFesChooseAvatarEventOptionScRsp = 8205;
    CmdPlanetFesBuyLandScRsp = 8243;
    CmdPlanetFesGameBingoFlipCsReq = 8228;
    CmdPlanetFesSetCustomKeyValueCsReq = 8212;
    CmdPlanetFesStartMiniGameCsReq = 8221;
    CmdPlanetFesSetAvatarWorkCsReq = 8217;
    CmdPlanetFesTakeQuestRewardScRsp = 8226;
}

enum GMFEJEFIBBI {
    PLANET_FES_QUEST_NONE = 0;
    PLANET_FES_QUEST_DOING = 1;
    PLANET_FES_QUEST_FINISH = 2;
    PLANET_FES_QUEST_CLOSE = 3;
}

enum DFHEJCIJBEJ {
    PLANET_FES_BUSINESS_EVENT_CHANGE_REASON_NONE = 0;
    PLANET_FES_BUSINESS_EVENT_AVATAR_CHANGE = 1;
    PLANET_FES_BUSINESS_EVENT_FINISH_GAME = 2;
}

enum IOCPJFKGKDG {
    PLANET_FES_CUSTOM_KEY_NONE = 0;
    PLANET_FES_CUSTOM_KEY_UNLOCK_INFINITE_BUSINESS_DAY_PERFORMANCE = 1;
    PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_START_PERFORMANCE_LAST_SEEN_DAY = 2;
    PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_UNLOCK_PERFORMANCE_LAST_SEEN_DAY = 3;
    PLANET_FES_CUSTOM_KEY_SUMMARY_SHOW = 4;
}

enum CmdPlanetFesExtType {
    CmdPlanetFesExtTypeNone = 0;
    CmdPlanetFesApplyCardPieceCsReq = 8317;
    CmdPlanetFesGetOfferedCardPieceScRsp = 8297;
    CmdPlanetFesLargeBonusInteractScRsp = 8334;
    CmdPlanetFesLargeBonusInteractCsReq = 8310;
    CmdPlanetFesGiveCardPieceScRsp = 8330;
    CmdPlanetFesChangeCardPieceApplyPermissionCsReq = 8326;
    CmdPlanetFesHandleCardPieceApplyScRsp = 8299;
    CmdPlanetFesGetExtraCardPieceInfoScRsp = 8336;
    CmdPlanetFesEnterNextBusinessDayCsReq = 8322;
    CmdPlanetFesHandleCardPieceApplyCsReq = 8333;
    CmdPlanetFesGetOfferedCardPieceCsReq = 8335;
    CmdPlanetFesGiveCardPieceCsReq = 8340;
    CmdPlanetFesApplyCardPieceScRsp = 8305;
    CmdPlanetFesGetExtraCardPieceInfoCsReq = 8294;
    CmdPlanetFesGetFriendCardPieceCsReq = 8292;
    CmdPlanetFesGetFriendCardPieceScRsp = 8327;
    CmdPlanetFesEnterNextBusinessDayScRsp = 8313;
    CmdPlanetFesChangeCardPieceApplyPermissionScRsp = 8307;
}

enum AOPKIFDMADI {
    PLANET_FES_LARGE_BONUS_INTERACT_START = 0;
    PLANET_FES_LARGE_BONUS_INTERACT_REPORT = 1;
    PLANET_FES_LARGE_BONUS_INTERACT_FINISH = 2;
}

enum CmdPlayerType {
    CmdPlayerTypeNone = 0;
    CmdGetBasicInfoCsReq = 86;
    CmdAntiAddictScNotify = 43;
    CmdAvatarPathChangedNotify = 19;
    CmdPlayerHeartBeatScRsp = 1;
    CmdUpdatePsnSettingsInfoCsReq = 12;
    CmdExchangeStaminaCsReq = 46;
    CmdGetGameStateServiceConfigScRsp = 47;
    CmdGateServerScNotify = 53;
    CmdQueryProductInfoScRsp = 13;
    CmdGetBasicInfoScRsp = 100;
    CmdSetAvatarPathCsReq = 15;
    CmdReserveStaminaExchangeScRsp = 4;
    CmdSetNicknameScRsp = 42;
    CmdRetcodeNotify = 34;
    CmdClientObjDownloadDataScNotify = 73;
    CmdUpdatePlayerSettingScRsp = 26;
    CmdGetAuthkeyCsReq = 60;
    CmdStaminaInfoScNotify = 18;
    CmdPlayerGetTokenCsReq = 76;
    CmdGetLevelRewardCsReq = 21;
    CmdSetGenderScRsp = 7;
    CmdAceAntiCheaterCsReq = 87;
    CmdGetVideoVersionKeyCsReq = 49;
    CmdPlayerLoginScRsp = 32;
    CmdSetMultipleAvatarPathsCsReq = 38;
    CmdPlayerLoginFinishCsReq = 17;
    CmdGmTalkCsReq = 56;
    CmdUnlockAvatarPathCsReq = 89;
    CmdPlayerLoginCsReq = 95;
    CmdAceAntiCheaterScRsp = 8;
    CmdUpdatePsnSettingsInfoScRsp = 41;
    CmdGetLevelRewardTakenListScRsp = 58;
    CmdSetRedPointStatusScNotify = 10;
    CmdRegionStopScNotify = 39;
    CmdGetMultiPathAvatarInfoCsReq = 80;
    CmdFeatureSwitchClosedScNotify = 36;
    CmdSetPlayerInfoCsReq = 98;
    CmdServerAnnounceNotify = 14;
    CmdGetLevelRewardScRsp = 29;
    CmdPlayerGetTokenScRsp = 48;
    CmdPlayerKickOutScNotify = 22;
    CmdPlayerLogoutCsReq = 31;
    CmdSetNicknameCsReq = 33;
    CmdSetGameplayBirthdayCsReq = 54;
    CmdSetPlayerInfoScRsp = 64;
    CmdSetGameplayBirthdayScRsp = 99;
    CmdSetLanguageScRsp = 25;
    CmdExchangeStaminaScRsp = 83;
    CmdPlayerLoginFinishScRsp = 69;
    CmdReserveStaminaExchangeCsReq = 70;
    CmdSetAvatarPathScRsp = 55;
    CmdGetSecretKeyInfoCsReq = 74;
    CmdPlayerHeartBeatCsReq = 68;
    CmdDailyRefreshNotify = 9;
    CmdGetVideoVersionKeyScRsp = 3;
    CmdUpdateFeatureSwitchScNotify = 20;
    CmdUnlockAvatarPathScRsp = 88;
    CmdGetLevelRewardTakenListCsReq = 77;
    CmdSetLanguageCsReq = 93;
    CmdSetGenderCsReq = 57;
    CmdPlayerLogoutScRsp = 40;
    CmdUpdatePlayerSettingCsReq = 44;
    CmdClientObjUploadCsReq = 67;
    CmdQueryProductInfoCsReq = 45;
    CmdGmTalkScNotify = 52;
    CmdClientDownloadDataScNotify = 78;
    CmdClientObjUploadScRsp = 96;
    CmdGetMultiPathAvatarInfoScRsp = 50;
    CmdSetMultipleAvatarPathsScRsp = 5;
    CmdGetGameStateServiceConfigCsReq = 82;
    CmdMonthCardRewardNotify = 35;
    CmdGetAuthkeyScRsp = 2;
    CmdGmTalkScRsp = 72;
    CmdGetSecretKeyInfoScRsp = 90;
}

enum ILPMNLDGEAK {
    AUTHKEY_SIGN_TYPE_NONE = 0;
    AUTHKEY_SIGN_TYPE_DEFAULT = 1;
    AUTHKEY_SIGN_TYPE_RSA = 2;
}

enum CmdPlayerBoardType {
    CmdPlayerBoardTypeNone = 0;
    CmdSetIsDisplayAvatarInfoCsReq = 2871;
    CmdSetPersonalCardScRsp = 2883;
    CmdSetPersonalCardCsReq = 2846;
    CmdSetAssistAvatarCsReq = 2885;
    CmdSetDisplayAvatarCsReq = 2876;
    CmdSetHeadIconScRsp = 2840;
    CmdSetSignatureScRsp = 2872;
    CmdSetIsDisplayAvatarInfoScRsp = 2852;
    CmdSetAssistAvatarScRsp = 2816;
    CmdGetPlayerBoardDataCsReq = 2895;
    CmdGetPlayerBoardDataScRsp = 2832;
    CmdSetDisplayAvatarScRsp = 2848;
    CmdUnlockHeadIconScNotify = 2822;
    CmdSetSignatureCsReq = 2856;
    CmdSetHeadIconCsReq = 2831;
}

enum CmdPlayerReturnType {
    CmdPlayerReturnTypeNone = 0;
    CmdPlayerReturnTakePointRewardScRsp = 4548;
    CmdPlayerReturnTakeRewardScRsp = 4552;
    CmdPlayerReturnForceFinishScNotify = 4572;
    CmdPlayerReturnTakeRewardCsReq = 4571;
    CmdPlayerReturnInfoQueryCsReq = 4522;
    CmdPlayerReturnTakeRelicCsReq = 4585;
    CmdPlayerReturnSignCsReq = 4532;
    CmdPlayerReturnTakeRelicScRsp = 4516;
    CmdPlayerReturnPointChangeScNotify = 4540;
    CmdPlayerReturnStartScNotify = 4595;
    CmdPlayerReturnTakePointRewardCsReq = 4576;
    CmdPlayerReturnSignScRsp = 4531;
    CmdPlayerReturnInfoQueryScRsp = 4556;
}

enum NOBPMMNFENJ {
    PLAYER_RETURN_NONE = 0;
    PLAYER_RETURN_PROCESSING = 1;
    PLAYER_RETURN_FINISH = 2;
}

enum CmdPlotType {
    CmdPlotTypeNone = 0;
    CmdFinishPlotCsReq = 1195;
    CmdFinishPlotScRsp = 1132;
}

enum CmdPunkLordType {
    CmdPunkLordTypeNone = 0;
    CmdSharePunkLordMonsterCsReq = 3276;
    CmdPunkLordMonsterInfoScNotify = 3283;
    CmdGetPunkLordMonsterDataCsReq = 3295;
    CmdPunkLordRaidTimeOutScNotify = 3243;
    CmdStartPunkLordRaidCsReq = 3231;
    CmdGetPunkLordBattleRecordScRsp = 3230;
    CmdTakeKilledPunkLordMonsterScoreCsReq = 3225;
    CmdPunkLordMonsterKilledNotify = 3293;
    CmdGetPunkLordMonsterDataScRsp = 3232;
    CmdSummonPunkLordMonsterScRsp = 3252;
    CmdGetPunkLordDataScRsp = 3202;
    CmdSummonPunkLordMonsterCsReq = 3271;
    CmdTakePunkLordPointRewardScRsp = 3246;
    CmdTakePunkLordPointRewardCsReq = 3216;
    CmdPunkLordBattleResultScNotify = 3258;
    CmdGetPunkLordBattleRecordCsReq = 3237;
    CmdGetPunkLordDataCsReq = 3260;
    CmdPunkLordDataChangeNotify = 3284;
    CmdTakeKilledPunkLordMonsterScoreScRsp = 3214;
    CmdGetKilledPunkLordMonsterDataCsReq = 3221;
    CmdSharePunkLordMonsterScRsp = 3248;
    CmdStartPunkLordRaidScRsp = 3240;
    CmdGetKilledPunkLordMonsterDataScRsp = 3229;
}

enum NLEFPBICECN {
    PUNK_LORD_OPERATION_NONE = 0;
    PUNK_LORD_OPERATION_REFRESH = 1;
    PUNK_LORD_OPERATION_SHARE = 2;
    PUNK_LORD_OPERATION_START_RAID = 3;
    PUNK_LORD_OPERATION_GET_BATTLE_RECORD = 4;
}

enum CmdQuestType {
    CmdQuestTypeNone = 0;
    CmdTakeQuestOptionalRewardCsReq = 985;
    CmdGetQuestRecordCsReq = 971;
    CmdTakeQuestRewardCsReq = 931;
    CmdTakeQuestOptionalRewardScRsp = 916;
    CmdQuestRecordScNotify = 922;
    CmdTakeQuestRewardScRsp = 940;
    CmdGetQuestDataScRsp = 932;
    CmdGetQuestDataCsReq = 995;
    CmdGetQuestRecordScRsp = 952;
    CmdBatchGetQuestDataCsReq = 983;
    CmdFinishQuestCsReq = 956;
    CmdBatchGetQuestDataScRsp = 960;
    CmdFinishQuestScRsp = 972;
}

enum QuestStatus {
    QUEST_NONE = 0;
    QUEST_DOING = 1;
    QUEST_FINISH = 2;
    QUEST_CLOSE = 3;
    QUEST_DELETE = 4;
}

enum CmdRaidType {
    CmdRaidTypeNone = 0;
    CmdStartRaidScRsp = 2232;
    CmdRaidInfoNotify = 2276;
    CmdLeaveRaidScRsp = 2240;
    CmdDelSaveRaidScNotify = 2243;
    CmdGetSaveRaidCsReq = 2283;
    CmdGetAllSaveRaidCsReq = 2202;
    CmdStartRaidCsReq = 2295;
    CmdGetSaveRaidScRsp = 2260;
    CmdGetRaidInfoCsReq = 2272;
    CmdTakeChallengeRaidRewardCsReq = 2252;
    CmdGetRaidInfoScRsp = 2285;
    CmdGetChallengeRaidInfoCsReq = 2248;
    CmdSetClientRaidTargetCountCsReq = 2216;
    CmdLeaveRaidCsReq = 2231;
    CmdChallengeRaidNotify = 2256;
    CmdGetAllSaveRaidScRsp = 2239;
    CmdGetChallengeRaidInfoScRsp = 2271;
    CmdTakeChallengeRaidRewardScRsp = 2222;
    CmdRaidKickByServerScNotify = 2233;
    CmdSetClientRaidTargetCountScRsp = 2246;
}

enum RaidStatus {
    RAID_STATUS_NONE = 0;
    RAID_STATUS_DOING = 1;
    RAID_STATUS_FINISH = 2;
    RAID_STATUS_FAILED = 3;
}

enum FOCHDFJANPC {
    RAID_TARGET_STATUS_NONE = 0;
    RAID_TARGET_STATUS_DOING = 1;
    RAID_TARGET_STATUS_FINISH = 2;
}

enum EGKFNDOOPNN {
    RAID_KICK_REASON_NONE = 0;
    RAID_KICK_REASON_ACTIVITY_SCHEDULE_FINISH = 1;
}

enum CmdRaidCollectionType {
    CmdRaidCollectionTypeNone = 0;
    CmdRaidCollectionDataCsReq = 6954;
    CmdRaidCollectionDataScNotify = 6948;
    CmdRaidCollectionDataScRsp = 6953;
    CmdRaidCollectionEnterNextRaidCsReq = 6950;
    CmdRaidCollectionEnterNextRaidScRsp = 6944;
}

enum CmdRechargeGiftType {
    CmdRechargeGiftTypeNone = 0;
    CmdGetRechargeGiftInfoCsReq = 8374;
    CmdGetRechargeGiftInfoScRsp = 8373;
    CmdGetRechargeBenefitInfoCsReq = 8364;
    CmdTakeRechargeGiftRewardCsReq = 8368;
    CmdTakeRechargeBenefitRewardCsReq = 8369;
    CmdSyncRechargeBenefitInfoScNotify = 8380;
    CmdTakeRechargeGiftRewardScRsp = 8370;
    CmdTakeRechargeBenefitRewardScRsp = 8367;
    CmdGetRechargeBenefitInfoScRsp = 8362;
}

enum CmdRecommendType {
    CMD_RECOMMEND_TYPE_NONE = 0;
    CmdGetBigDataAllRecommendScRsp = 2409;
    CmdGetChallengeRecommendLineupListScRsp = 2417;
    CmdGetBigDataRecommendScRsp = 2415;
    CmdGetBigDataAllRecommendCsReq = 2443;
    CmdGetBigDataRecommendCsReq = 2427;
    CmdGetChallengeRecommendLineupListCsReq = 2436;
}

enum BigDataRecommendType {
    BIG_DATA_RECOMMEND_TYPE_NONE = 0;
    BIG_DATA_RECOMMEND_TYPE_EQUIPMENT = 1;
    BIG_DATA_RECOMMEND_TYPE_RELIC_SUIT = 2;
    BIG_DATA_RECOMMEND_TYPE_RELIC_AVATAR = 3;
    BIG_DATA_RECOMMEND_TYPE_AVATAR_RELIC = 4;
    BIG_DATA_RECOMMEND_TYPE_LOCAL_LEGEND = 5;
}

enum CmdRedDotType {
    CmdRedDotTypeNone = 0;
    CmdGetSingleRedDotParamGroupCsReq = 5976;
    CmdUpdateRedDotDataScRsp = 5940;
    CmdGetSingleRedDotParamGroupScRsp = 5948;
    CmdGetAllRedDotDataScRsp = 5932;
    CmdUpdateRedDotDataCsReq = 5931;
    CmdGetAllRedDotDataCsReq = 5995;
}

enum OJLJHFNFDKP {
    UPDATE_REDDOT_NONE = 0;
    UPDATE_REDDOT_ADD = 1;
    UPDATE_REDDOT_REPLACE = 2;
}

enum CmdRelicSmartWearType {
    CmdRelicSmartWearTypeNone = 0;
    CmdRelicSmartWearUpdatePlanCsReq = 8254;
    CmdRelicSmartWearPinRelicScRsp = 8253;
    CmdRelicSmartWearGetPlanScRsp = 8263;
    CmdRelicSmartWearUpdatePlanScRsp = 8252;
    CmdRelicSmartWearAddPlanCsReq = 8258;
    CmdRelicSmartWearUpdatePinRelicScNotify = 8261;
    CmdRelicSmartWearPinRelicCsReq = 8257;
    CmdRelicSmartWearDeletePlanCsReq = 8270;
    CmdRelicSmartWearGetPinRelicCsReq = 8255;
    CmdRelicSmartWearDeletePlanScRsp = 8259;
    CmdRelicSmartWearAddPlanScRsp = 8260;
    CmdRelicSmartWearGetPlanCsReq = 8264;
    CmdRelicSmartWearGetPinRelicScRsp = 8251;
}

enum CmdReplayType {
    CmdReplayTypeNone = 0;
    CmdGetReplayTokenCsReq = 3595;
    CmdGetPlayerReplayInfoScRsp = 3540;
    CmdGetReplayTokenScRsp = 3532;
    CmdGetPlayerReplayInfoCsReq = 3531;
}

enum CmdRndOptionType {
    CmdRndOptionTypeNone = 0;
    CmdDailyFirstMeetPamScRsp = 3440;
    CmdDailyFirstMeetPamCsReq = 3431;
    CmdGetRndOptionCsReq = 3495;
    CmdGetRndOptionScRsp = 3432;
}

enum CmdRogueType {
    CmdRogueTypeNone = 0;
    CmdEnableRogueTalentScRsp = 1805;
    CmdFinishAeonDialogueGroupScRsp = 1819;
    CmdQuitRogueCsReq = 1837;
    CmdExchangeRogueRewardKeyCsReq = 1868;
    CmdTakeRogueScoreRewardScRsp = 1877;
    CmdEnterRogueCsReq = 1876;
    CmdGetRogueInitialScoreCsReq = 1864;
    CmdGetRogueTalentInfoScRsp = 1888;
    CmdSyncRogueRewardInfoScNotify = 1866;
    CmdEnterRogueScRsp = 1848;
    CmdSyncRogueMapRoomScNotify = 1845;
    CmdFinishAeonDialogueGroupCsReq = 1850;
    CmdGetRogueInfoCsReq = 1895;
    CmdGetRogueAeonInfoCsReq = 1855;
    CmdReviveRogueAvatarScRsp = 1833;
    CmdStartRogueCsReq = 1831;
    CmdEnhanceRogueBuffScRsp = 1863;
    CmdSyncRogueVirtualItemInfoScNotify = 1865;
    CmdLeaveRogueCsReq = 1871;
    CmdOpenRogueChestScRsp = 1834;
    CmdSyncRogueAreaUnlockScNotify = 1810;
    CmdSyncRogueStatusScNotify = 1881;
    CmdReviveRogueAvatarCsReq = 1843;
    CmdGetRogueTalentInfoCsReq = 1889;
    CmdTakeRogueScoreRewardCsReq = 1842;
    CmdPickRogueAvatarScRsp = 1802;
    CmdGetRogueBuffEnhanceInfoScRsp = 1821;
    CmdEnterRogueMapRoomScRsp = 1898;
    CmdSyncRogueReviveInfoScNotify = 1884;
    CmdSyncRogueExploreWinScNotify = 1851;
    CmdSyncRogueFinishScNotify = 1883;
    CmdSyncRoguePickAvatarInfoScNotify = 1861;
    CmdTakeRogueAeonLevelRewardScRsp = 1870;
    CmdQuitRogueScRsp = 1830;
    CmdStartRogueScRsp = 1840;
    CmdLeaveRogueScRsp = 1852;
    CmdTakeRogueAeonLevelRewardCsReq = 1879;
    CmdExchangeRogueRewardKeyScRsp = 1801;
    CmdGetRogueScoreRewardInfoCsReq = 1873;
    CmdGetRogueAeonInfoScRsp = 1880;
    CmdSyncRogueAeonScNotify = 1803;
    CmdGetRogueInfoScRsp = 1832;
    CmdGetRogueBuffEnhanceInfoCsReq = 1858;
    CmdSyncRogueSeasonFinishScNotify = 1891;
    CmdOpenRogueChestCsReq = 1835;
    CmdSyncRogueGetItemScNotify = 1897;
    CmdGetRogueInitialScoreScRsp = 1806;
    CmdEnhanceRogueBuffCsReq = 1829;
    CmdPickRogueAvatarCsReq = 1860;
    CmdEnableRogueTalentCsReq = 1838;
    CmdGetRogueScoreRewardInfoScRsp = 1867;
    CmdEnterRogueMapRoomCsReq = 1807;
    CmdSyncRogueAeonLevelUpRewardScNotify = 1826;
}

enum EGPIMDADFDI {
    ROGUE_STATUS_NONE = 0;
    ROGUE_STATUS_DOING = 1;
    ROGUE_STATUS_PENDING = 2;
    ROGUE_STATUS_ENDLESS = 3;
    ROGUE_STATUS_FINISH = 4;
}

enum ILNPBECOEPL {
    ROGUE_ROOM_STATUS_NONE = 0;
    ROGUE_ROOM_STATUS_LOCK = 1;
    ROGUE_ROOM_STATUS_UNLOCK = 2;
    ROGUE_ROOM_STATUS_PLAY = 3;
    ROGUE_ROOM_STATUS_FINISH = 4;
}

enum JDAKAMIGKHF {
    ROGUE_AREA_STATUS_LOCK = 0;
    ROGUE_AREA_STATUS_UNLOCK = 1;
    ROGUE_AREA_STATUS_FIRST_PASS = 2;
    ROGUE_AREA_STATUS_CLOSE = 3;
}

enum JJEIKCOBDLP {
    ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
    ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
    ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
    ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
    ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
    ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
    ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 6;
    ROGUE_BUFF_SOURCE_TYPE_SHOP = 7;
    ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 8;
    ROGUE_BUFF_SOURCE_TYPE_ENDLESS_LEVEL_START = 9;
}

enum EOHHHDDAHKL {
    ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
    ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
    ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
    ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
    ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
    ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
    ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
    ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
    ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
    ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
    ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
    ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
    ROGUE_MIRACLE_SOURCE_TYPE_ENDLESS_LEVEL_START = 12;
}

enum FFNEDMEGPJD {
    ROGUE_DIALOGUE_RESULT_SUCC = 0;
    ROGUE_DIALOGUE_RESULT_FAIL = 1;
}

enum CmdRogueArcadeType {
    CmdRogueArcadeTypeNone = 0;
    CmdRogueArcadeLeaveScRsp = 7687;
    CmdRogueArcadeRestartCsReq = 7686;
    CmdRogueArcadeGetInfoScRsp = 7665;
    CmdRogueArcadeStartCsReq = 7654;
    CmdRogueArcadeGetInfoCsReq = 7677;
    CmdRogueArcadeLeaveCsReq = 7652;
    CmdRogueArcadeRestartScRsp = 7667;
    CmdRogueArcadeStartScRsp = 7696;
}

enum CmdRogueCommonType {
    CmdRogueCommonTypeNone = 0;
    CmdGetRogueHandbookDataScRsp = 5657;
    CmdHandleRogueCommonPendingActionScRsp = 5608;
    CmdCommonRogueQueryScRsp = 5634;
    CmdRogueShopBeginBattleScRsp = 5623;
    CmdFinishRogueCommonDialogueScRsp = 5674;
    CmdGetRogueCommonDialogueDataCsReq = 5601;
    CmdGetRogueShopMiracleInfoCsReq = 5640;
    CmdBuyRogueShopFormulaCsReq = 5682;
    CmdRogueGetGambleInfoScRsp = 5615;
    CmdEnhanceCommonRogueBuffScRsp = 5621;
    CmdTakeRogueMiracleHandbookRewardScRsp = 5664;
    CmdRogueWorkbenchHandleFuncScRsp = 5697;
    CmdSetRogueCollectionScRsp = 5618;
    CmdUpdateRogueAdventureRoomScoreCsReq = 5620;
    CmdGetRogueShopFormulaInfoScRsp = 5605;
    CmdHandleRogueCommonPendingActionCsReq = 5687;
    CmdRogueDoGambleScRsp = 5680;
    CmdSelectRogueCommonDialogueOptionScRsp = 5694;
    CmdRogueDoGambleCsReq = 5655;
    CmdSetRogueExhibitionCsReq = 5673;
    CmdGetRogueHandbookDataCsReq = 5624;
    CmdCommonRogueUpdateScNotify = 5668;
    CmdSyncRogueHandbookDataUpdateScNotify = 5607;
    CmdRogueWorkbenchGetInfoScRsp = 5603;
    CmdFinishRogueCommonDialogueCsReq = 5627;
    CmdStopRogueAdventureRoomCsReq = 5629;
    CmdBuyRogueShopMiracleScRsp = 5622;
    CmdBuyRogueShopBuffCsReq = 5656;
    CmdPrepareRogueAdventureRoomScRsp = 5631;
    CmdPrepareRogueAdventureRoomCsReq = 5632;
    CmdRogueWorkbenchGetInfoCsReq = 5649;
    CmdGetRogueShopFormulaInfoCsReq = 5638;
    CmdTakeRogueEventHandbookRewardScRsp = 5645;
    CmdGetRogueExhibitionScRsp = 5626;
    CmdRogueWorkbenchHandleFuncCsReq = 5610;
    CmdBuyRogueShopMiracleCsReq = 5652;
    CmdCommonRogueQueryCsReq = 5635;
    CmdSetRogueExhibitionScRsp = 5667;
    CmdSyncRogueCommonDialogueDataScNotify = 5690;
    CmdSyncRogueCommonVirtualItemInfoScNotify = 5700;
    CmdGetRogueCollectionCsReq = 5679;
    CmdRogueNpcDisappearScRsp = 5616;
    CmdUpdateRogueAdventureRoomScoreScRsp = 5686;
    CmdBuyRogueShopFormulaScRsp = 5647;
    CmdRogueGetGambleInfoCsReq = 5628;
    CmdSyncRogueAdventureRoomInfoScNotify = 5695;
    CmdRogueDebugReplaySaveScNotify = 5688;
    CmdSyncRogueCommonDialogueOptionFinishScNotify = 5617;
    CmdGetRogueShopBuffInfoScRsp = 5671;
    CmdSetRogueCollectionCsReq = 5604;
    CmdStopRogueAdventureRoomScRsp = 5663;
    CmdEnhanceCommonRogueBuffCsReq = 5658;
    CmdTakeRogueEventHandbookRewardCsReq = 5606;
    CmdGetRogueAdventureRoomInfoScRsp = 5683;
    CmdSyncRogueCommonActionResultScNotify = 5613;
    CmdGetRogueShopMiracleInfoScRsp = 5676;
    CmdTakeRogueMiracleHandbookRewardCsReq = 5698;
    CmdSelectRogueCommonDialogueOptionCsReq = 5636;
    CmdGetEnhanceCommonRogueBuffInfoCsReq = 5642;
    CmdRogueShopBeginBattleCsReq = 5692;
    CmdRogueNpcDisappearCsReq = 5685;
    CmdSyncRogueCommonPendingActionScNotify = 5678;
    CmdGetRogueCollectionScRsp = 5670;
    CmdGetEnhanceCommonRogueBuffInfoScRsp = 5677;
    CmdGetRogueAdventureRoomInfoCsReq = 5646;
    CmdGetRogueShopBuffInfoCsReq = 5648;
    CmdGetRogueCommonDialogueDataScRsp = 5653;
    CmdBuyRogueShopBuffScRsp = 5672;
    CmdGetRogueExhibitionCsReq = 5644;
}

enum JAOCJOMENIN {
    ROGUE_ADVENTURE_ROOM_STATUS_NONE = 0;
    ROGUE_ADVENTURE_ROOM_STATUS_PREPARE = 1;
    ROGUE_ADVENTURE_ROOM_STATUS_STARTED = 2;
    ROGUE_ADVENTURE_ROOM_STATUS_STOPPED = 3;
}

enum NNIOHHMJGHG {
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_NONE = 0;
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_AEON = 2;
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum ODOPDKELAEB {
    ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0;
    ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1;
    ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2;
    ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3;
    ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4;
    ROGUE_UNLOCK_FUNTION_TYPE_TOURN_GOD_MODE = 5;
}

enum PMPCBALMNEO {
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_NONE = 0;
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_AEON = 2;
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum OJEIGIEKJEH {
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_NONE = 0;
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_ADD = 1;
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_REMOVE = 2;
}

enum LAIAPKNDBPH {
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_NONE = 0;
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_ADD = 1;
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REMOVE = 2;
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REPAIR = 3;
}

enum PAICKPMOGDG {
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_NONE = 0;
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_ADD = 1;
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_REMOVE = 2;
}

enum NEMKLKDBEAP {
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_NONE = 0;
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_SINGLE = 1;
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_MULTI = 2;
}

enum CFJGPIFIOOL {
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SELECT = 1;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_ENHANCE = 2;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MIRACLE = 3;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DIALOGUE = 4;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BONUS = 5;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SHOP = 6;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DICE = 7;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_AEON = 8;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BOARD_EVENT = 9;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAZE_SKILL = 10;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_LEVEL_MECHANISM = 11;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF = 12;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_REFORGE = 13;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE = 14;
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_REFORGE = 15;
}

enum NDKLJJIIMGM {
    kTitanBlessSelectNone = 0;
    kSelectTitanBlessType = 1;
    kSelectTitanBlessEnhance = 2;
}

enum KPABFFANJBK {
    ROGUE_TALENT_STATUS_LOCK = 0;
    ROGUE_TALENT_STATUS_UNLOCK = 1;
    ROGUE_TALENT_STATUS_ENABLE = 2;
}

enum MHKMPGABBPL {
    ROGUE_COLLECTION_OPERATE_NONE = 0;
    ROGUE_COLLECTION_OPERATE_SET = 1;
    ROGUE_COLLECTION_OPERATE_UNSET = 2;
}

enum HHICLPLJNCO {
    ROGUE_BOOTH_NONE = 0;
    ROGUE_BOOTH_EMPTY = 1;
    ROGUE_BOOTH_DISPLAY = 2;
}

enum HGPOKMDGKNN {
    ROGUE_COLLECTION_NONE = 0;
    ROGUE_COLLECTION_UNLOCKED = 1;
    ROGUE_COLLECTION_DISPLAY = 2;
}

enum EHCOBODEEJE {
    ROGUE_EXHIBITION_NONE = 0;
    ROGUE_EXHIBITION_UNLOCKED = 1;
    ROGUE_EXHIBITION_DISPLAY = 2;
}

enum CmdRogueEndless {
    CmdRogueEndlessNone = 0;
    CmdTakeRogueEndlessActivityAllBonusRewardScRsp = 6010;
    CmdGetRogueEndlessActivityDataCsReq = 6002;
    CmdTakeRogueEndlessActivityPointRewardScRsp = 6006;
    CmdEnterRogueEndlessActivityStageCsReq = 6004;
    CmdGetRogueEndlessActivityDataScRsp = 6005;
    CmdRogueEndlessActivityBattleEndScNotify = 6001;
    CmdTakeRogueEndlessActivityAllBonusRewardCsReq = 6003;
    CmdTakeRogueEndlessActivityPointRewardCsReq = 6009;
    CmdEnterRogueEndlessActivityStageScRsp = 6007;
}

enum CmdRogueMagic {
    CmdRogueMagicNone = 0;
    CmdRogueMagicSetAutoDressInMagicUnitCsReq = 7724;
    CmdRogueMagicScepterTakeOffUnitCsReq = 7711;
    CmdRogueMagicStartCsReq = 7795;
    CmdRogueMagicEnterCsReq = 7731;
    CmdRogueMagicScepterDressInUnitScRsp = 7763;
    CmdRogueMagicAutoDressInMagicUnitChangeScNotify = 7713;
    CmdRogueMagicEnterScRsp = 7740;
    CmdRogueMagicScepterDressInUnitCsReq = 7729;
    CmdRogueMagicEnterRoomCsReq = 7722;
    CmdRogueMagicQueryScRsp = 7758;
    CmdRogueMagicEnterLayerCsReq = 7772;
    CmdRogueMagicReviveCostUpdateScNotify = 7743;
    CmdRogueMagicLevelInfoUpdateScNotify = 7716;
    CmdRogueMagicSettleScRsp = 7752;
    CmdRogueMagicSettleCsReq = 7771;
    CmdRogueMagicScepterTakeOffUnitScRsp = 7793;
    CmdRogueMagicStartScRsp = 7732;
    CmdRogueMagicEnterRoomScRsp = 7756;
    CmdRogueMagicEnableTalentCsReq = 7751;
    CmdRogueMagicReviveAvatarCsReq = 7733;
    CmdRogueMagicSetAutoDressInMagicUnitScRsp = 7757;
    CmdRogueMagicGetMiscRealTimeDataScRsp = 7798;
    CmdRogueMagicAreaUpdateScNotify = 7746;
    CmdRogueMagicEnterLayerScRsp = 7785;
    CmdRogueMagicUnitComposeScRsp = 7714;
    CmdRogueMagicLeaveCsReq = 7776;
    CmdRogueMagicAutoDressInUnitScRsp = 7706;
    CmdRogueMagicAutoDressInUnitCsReq = 7764;
    CmdRogueMagicReviveAvatarScRsp = 7742;
    CmdRogueMagicBattleFailSettleInfoScNotify = 7739;
    CmdRogueMagicLeaveScRsp = 7748;
    CmdRogueMagicUnitReforgeCsReq = 7784;
    CmdRogueMagicQueryCsReq = 7777;
    CmdRogueMagicUnitReforgeScRsp = 7737;
    CmdRogueMagicGetTalentInfoCsReq = 7730;
    CmdRogueMagicStoryInfoUpdateScNotify = 7745;
    CmdRogueMagicGetTalentInfoScRsp = 7775;
    CmdRogueMagicUnitComposeCsReq = 7725;
    CmdRogueMagicGetMiscRealTimeDataCsReq = 7707;
    CmdRogueMagicEnableTalentScRsp = 7791;
}

enum BEHFNMKDOMK {
    ROGUE_MAGIC_LEVEL_STATUS_NONE = 0;
    ROGUE_MAGIC_LEVEL_STATUS_PROCESSING = 1;
    ROGUE_MAGIC_LEVEL_STATUS_FINISHED = 2;
    ROGUE_MAGIC_LEVEL_STATUS_SETTLED = 3;
}

enum JLCBBKKGOEJ {
    ROGUE_MAGIC_LAYER_STATUS_NONE = 0;
    ROGUE_MAGIC_LAYER_STATUS_PROCESSING = 1;
    ROGUE_MAGIC_LAYER_STATUS_FINISH = 2;
}

enum JIOKHLHGEOD {
    ROGUE_MAGIC_ROOM_STATUS_NONE = 0;
    ROGUE_MAGIC_ROOM_STATUS_INITED = 1;
    ROGUE_MAGIC_ROOM_STATUS_PROCESSING = 2;
    ROGUE_MAGIC_ROOM_STATUS_FINISH = 3;
}

enum JMPPHGIGFFI {
    ROGUE_MAGIC_SETTLE_REASON_NONE = 0;
    ROGUE_MAGIC_SETTLE_REASON_WIN = 1;
    ROGUE_MAGIC_SETTLE_REASON_FAIL = 2;
    ROGUE_MAGIC_SETTLE_REASON_INTERRUPT = 3;
}

enum CmdRogueModifierType {
    CmdRogueModifierTypeNone = 0;
    CmdRogueModifierSelectCellScRsp = 5376;
    CmdRogueModifierDelNotify = 5322;
    CmdRogueModifierUpdateNotify = 5352;
    CmdRogueModifierStageStartNotify = 5356;
    CmdRogueModifierAddNotify = 5331;
    CmdRogueModifierSelectCellCsReq = 5340;
}

enum LGMDBCFFJOF {
    ROGUE_MODIFIER_SOURCE_NONE = 0;
    ROGUE_MODIFIER_SOURCE_DICE_ROLL = 1;
    ROGUE_MODIFIER_SOURCE_AEON = 2;
    ROGUE_MODIFIER_SOURCE_BOARD_EVENT = 3;
    ROGUE_MODIFIER_SOURCE_DIALOG_EVENT = 4;
    ROGUE_MODIFIER_SOURCE_MIRACLE = 5;
    ROGUE_MODIFIER_SOURCE_CELL_MARK = 6;
    ROGUE_MODIFIER_SOURCE_AEON_TALENT = 7;
    ROGUE_MODIFIER_SOURCE_BOSS_DECAY = 8;
    ROGUE_MODIFIER_SOURCE_DICE_BRANCH = 9;
}

enum NJCHLJFIODM {
    ROGUE_MODIFIER_CONTENT_DEFINITE = 0;
    ROGUE_MODIFIER_CONTENT_RANDOM = 1;
}

enum CmdRogueTournType {
    CmdRogueTournTypeNone = 0;
    CmdRogueTournGetArchiveRepositoryCsReq = 6074;
    CmdRogueTournAreaUpdateScNotify = 6040;
    CmdRogueTournLeaveCsReq = 6026;
    CmdRogueTournGetMiscRealTimeDataCsReq = 6045;
    CmdRogueTournConfirmSettleCsReq = 6088;
    CmdRogueTournDeleteArchiveCsReq = 6043;
    CmdRogueTournDeleteBuildRefScRsp = 6083;
    CmdRogueTournGetCurRogueCocoonInfoCsReq = 6055;
    CmdRogueTournRenameArchiveCsReq = 6024;
    CmdRogueTournReEnterRogueCocoonStageCsReq = 6027;
    CmdRogueTournStartCsReq = 6032;
    CmdRogueTournEnterLayerScRsp = 6073;
    CmdRogueTournEnablePermanentTalentScRsp = 6058;
    CmdRogueTournQueryCsReq = 6095;
    CmdRogueTournRenameArchiveScRsp = 6093;
    CmdRogueTournSaveBuildRefScRsp = 6020;
    CmdRogueTournTakeExpRewardScRsp = 6094;
    CmdRogueTournGetCurRogueCocoonInfoScRsp = 6063;
    CmdRogueTournConfirmSettleScRsp = 6090;
    CmdRogueTournReEnterRogueCocoonStageScRsp = 6016;
    CmdRogueTournExpNotify = 6030;
    CmdRogueTournEnterCsReq = 6064;
    CmdRogueTournStartScRsp = 6078;
    CmdRogueTournQueryScRsp = 6052;
    CmdRogueTournRenameBuildRefScRsp = 6028;
    CmdRogueTournEnableSeasonTalentScRsp = 6041;
    CmdRogueTournLeaveScRsp = 6042;
    CmdRogueTournTitanUpdateTitanBlessProgressScNotify = 6053;
    CmdRogueTournWeekChallengeUpdateScNotify = 6018;
    CmdRogueTournEnterLayerCsReq = 6081;
    CmdRogueTournEnableSeasonTalentCsReq = 6019;
    CmdRogueTournGetAllBuildRefCsReq = 6035;
    CmdRogueTournSaveBuildRefCsReq = 6012;
    CmdRogueTournTakeExpRewardCsReq = 6039;
    CmdRogueTournClearArchiveNameScNotify = 6082;
    CmdRogueTournDeleteArchiveScRsp = 6049;
    CmdRogueTournGetSeasonTalentInfoCsReq = 6079;
    CmdRogueTournEnterRogueCocoonSceneScRsp = 6062;
    CmdRogueTournGetAllBuildRefScRsp = 6046;
    CmdRogueTournReviveAvatarCsReq = 6098;
    CmdRogueTournBattleFailSettleInfoScNotify = 6037;
    CmdRogueTournGetSeasonTalentInfoScRsp = 6097;
    CmdRogueTournEnablePermanentTalentCsReq = 6013;
    CmdRogueTournEnterRoomScRsp = 6061;
    CmdRogueTournLevelInfoUpdateScNotify = 6087;
    CmdRogueTournReviveAvatarScRsp = 6047;
    CmdRogueTournResetPermanentTalentScRsp = 6089;
    CmdRogueTournSettleCsReq = 6080;
    CmdRogueTournEnterScRsp = 6070;
    CmdRogueTournDeleteBuildRefCsReq = 6085;
    CmdRogueTournReviveCostUpdateScNotify = 6086;
    CmdRogueTournGetPermanentTalentInfoCsReq = 6099;
    CmdRogueTournSettleScRsp = 6056;
    CmdRogueTournResetPermanentTalentCsReq = 6031;
    CmdRogueTournDifficultyCompNotify = 6050;
    CmdRogueTournGetPermanentTalentInfoScRsp = 6067;
    CmdRogueTournEnterRogueCocoonSceneCsReq = 6034;
    CmdRogueTournLeaveRogueCocoonSceneScRsp = 6066;
    CmdRogueTournEnterRoomCsReq = 6084;
    CmdRogueTournGetSettleInfoCsReq = 6068;
    CmdRogueTournLeaveRogueCocoonSceneCsReq = 6017;
    CmdRogueTournGetSettleInfoScRsp = 6059;
    CmdRogueTournGetAllArchiveCsReq = 6021;
    CmdRogueTournGetAllArchiveScRsp = 6100;
    CmdRogueTournGetArchiveRepositoryScRsp = 6011;
    CmdRogueTournRenameBuildRefCsReq = 6014;
    CmdRogueTournHandBookNotify = 6023;
    CmdRogueTournGetMiscRealTimeDataScRsp = 6044;
}

enum OGADIMMLJHN {
    ROGUE_TOURN_LEVEL_STATUS_NONE = 0;
    ROGUE_TOURN_LEVEL_STATUS_PROCESSING = 1;
    ROGUE_TOURN_LEVEL_STATUS_FINISHED = 2;
    ROGUE_TOURN_LEVEL_STATUS_SETTLED = 3;
}

enum ODBNIGDLNCF {
    ROGUE_TOURN_LAYER_STATUS_NONE = 0;
    ROGUE_TOURN_LAYER_STATUS_PROCESSING = 1;
    ROGUE_TOURN_LAYER_STATUS_FINISH = 2;
}

enum LMIKNFDLFFO {
    ROGUE_TOURN_ROOM_STATUS_NONE = 0;
    ROGUE_TOURN_ROOM_STATUS_INITED = 1;
    ROGUE_TOURN_ROOM_STATUS_PROCESSING = 2;
    ROGUE_TOURN_ROOM_STATUS_FINISH = 3;
}

enum AKKHKMECAFL {
    ROGUE_TOURN_SETTLE_REASON_NONE = 0;
    ROGUE_TOURN_SETTLE_REASON_WIN = 1;
    ROGUE_TOURN_SETTLE_REASON_FAIL = 2;
    ROGUE_TOURN_SETTLE_REASON_INTERRUPT = 3;
}

enum OLLCHPFKHAA {
    ROGUE_TOURN_HANDBOOK_NONE = 0;
    ROGUE_TOURN_HANDBOOK_SIMPLE_MIRACLE = 1;
    ROGUE_TOURN_HANDBOOK_HEX_MIRACLE = 2;
    ROGUE_TOURN_HANDBOOK_BUFF = 3;
    ROGUE_TOURN_HANDBOOK_EVENT = 4;
    ROGUE_TOURN_HANDBOOK_FORMULA = 5;
    ROGUE_TOURN_HANDBOOK_TITAN_BLESS = 6;
}

enum CmdRollShopType {
    CmdRollShopTypeNone = 0;
    CmdDoGachaInRollShopScRsp = 6910;
    CmdTakeRollShopRewardScRsp = 6902;
    CmdGetRollShopInfoCsReq = 6914;
    CmdTakeRollShopRewardCsReq = 6904;
    CmdGetRollShopInfoScRsp = 6913;
    CmdDoGachaInRollShopCsReq = 6908;
}

enum CmdSceneType {
    CmdSceneTypeNone = 0;
    CmdUpdateMechanismBarScNotify = 1468;
    CmdSpringRefreshScRsp = 1443;
    CmdSceneCastSkillCostMpScRsp = 1483;
    CmdSceneEnterStageScRsp = 1421;
    CmdSceneReviveAfterRebattleScRsp = 1463;
    CmdGetUnlockTeleportScRsp = 1418;
    CmdDeactivateFarmElementCsReq = 1445;
    CmdSceneCastSkillScRsp = 1448;
    CmdUnlockTeleportNotify = 1466;
    CmdReturnLastTownScRsp = 1477;
    CmdActivateFarmElementScRsp = 1420;
    CmdUpdateGroupPropertyCsReq = 1461;
    CmdSceneGroupRefreshScNotify = 1412;
    CmdGroupStateChangeCsReq = 1428;
    CmdRecoverAllLineupScRsp = 1475;
    CmdStartCocoonStageCsReq = 1491;
    CmdEntityBindPropCsReq = 1457;
    CmdEnterSectionCsReq = 1411;
    CmdInteractPropCsReq = 1431;
    CmdSetClientPausedCsReq = 1498;
    CmdSetGroupCustomSaveDataScRsp = 1453;
    CmdReturnLastTownCsReq = 1442;
    CmdRefreshTriggerByClientScRsp = 1488;
    CmdSceneEntityTeleportCsReq = 1490;
    CmdStartCocoonStageScRsp = 1424;
    CmdUpdateGroupPropertyScRsp = 1459;
    CmdGameplayCounterRecoverCsReq = 1441;
    CmdReEnterLastElementStageCsReq = 1427;
    CmdSceneEnterStageCsReq = 1458;
    CmdGetCurSceneInfoScRsp = 1452;
    CmdSceneUpdatePositionVersionNotify = 1485;
    CmdSetCurInteractEntityCsReq = 1484;
    CmdSetClientPausedScRsp = 1464;
    CmdSyncEntityBuffChangeListScNotify = 1416;
    CmdEnterSceneCsReq = 1469;
    CmdGroupStateChangeScRsp = 1415;
    CmdSetCurInteractEntityScRsp = 1437;
    CmdEnteredSceneChangeScNotify = 1419;
    CmdGetEnteredSceneScRsp = 1450;
    CmdDeleteSummonUnitCsReq = 1405;
    CmdSpringRefreshCsReq = 1439;
    CmdGameplayCounterCountDownScRsp = 1467;
    CmdDeactivateFarmElementScRsp = 1413;
    CmdOpenChestScNotify = 1444;
    CmdDeleteSummonUnitScRsp = 1482;
    CmdSyncServerSceneChangeNotify = 1470;
    CmdLastSpringRefreshTimeNotify = 1433;
    CmdSceneEntityMoveScRsp = 1432;
    CmdRefreshTriggerByClientScNotify = 1438;
    CmdGameplayCounterCountDownCsReq = 1473;
    CmdTrainWorldIdChangeScNotify = 1492;
    CmdRecoverAllLineupCsReq = 1430;
    CmdSceneCastSkillCostMpCsReq = 1446;
    CmdEnterSceneScRsp = 1449;
    CmdGameplayCounterRecoverScRsp = 1462;
    CmdSceneReviveAfterRebattleCsReq = 1429;
    CmdUnlockedAreaMapScNotify = 1447;
    CmdChangePropTimelineInfoCsReq = 1422;
    CmdGetSceneMapInfoScRsp = 1479;
    CmdSavePointsInfoNotify = 1451;
    CmdGetUnlockTeleportCsReq = 1404;
    CmdUpdateFloorSavedValueNotify = 1426;
    CmdGetSceneMapInfoCsReq = 1497;
    CmdEnterSceneByServerScNotify = 1403;
    CmdReEnterLastElementStageScRsp = 1474;
    CmdEnterSectionScRsp = 1493;
    CmdGroupStateChangeScNotify = 1455;
    CmdSetGroupCustomSaveDataCsReq = 1401;
    CmdSceneCastSkillMpUpdateScNotify = 1460;
    CmdChangePropTimelineInfoScRsp = 1456;
    CmdGameplayCounterUpdateScNotify = 1496;
    CmdSceneCastSkillCsReq = 1476;
    CmdInteractPropScRsp = 1440;
    CmdGetEnteredSceneCsReq = 1480;
    CmdSceneEntityMoveCsReq = 1495;
    CmdGetCurSceneInfoCsReq = 1471;
    CmdSceneEntityTeleportScRsp = 1417;
    CmdSceneEntityMoveScNotify = 1472;
    CmdActivateFarmElementCsReq = 1478;
    CmdRefreshTriggerByClientCsReq = 1489;
    CmdScenePlaneEventScNotify = 1410;
    CmdEntityBindPropScRsp = 1407;
}

enum SkillExtraTag {
    SCENE_CAST_SKILL_NONE = 0;
    SCENE_CAST_SKILL_PROJECTILE_HIT = 1;
    SCENE_CAST_SKILL_PROJECTILE_LIFETIME_FINISH = 2;
}

enum MonsterBattleType {
    MONSTER_BATTLE_TYPE_NONE = 0;
    MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;
    MONSTER_BATTLE_TYPE_NO_BATTLE = 4;
}

enum SceneEntityBuffChangeType {
    SCENE_ENTITY_BUFF_CHANGE_TYPE_DEFAULT = 0;
    SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_MAZEBUFF = 1;
    SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_ADV_MODIFIER = 2;
}

enum EnterSceneReason {
    ENTER_SCENE_REASON_NONE = 0;
    ENTER_SCENE_REASON_CHALLENGE_TIMEOUT = 1;
    ENTER_SCENE_REASON_ROGUE_TIMEOUT = 2;
    ENTER_SCENE_REASON_CHANGE_STORYLINE = 3;
    ENTER_SCENE_REASON_DIMENSION_MERGE = 4;
}

enum ChestType {
    MAP_INFO_CHEST_TYPE_NONE = 0;
    MAP_INFO_CHEST_TYPE_NORMAL = 101;
    MAP_INFO_CHEST_TYPE_CHALLENGE = 102;
    MAP_INFO_CHEST_TYPE_PUZZLE = 104;
}

enum GameplayCounterUpdateReason {
    GAMEPLAY_COUNTER_UPDATE_REASON_NONE = 0;
    GAMEPLAY_COUNTER_UPDATE_REASON_ACTIVATE = 1;
    GAMEPLAY_COUNTER_UPDATE_REASON_DEACTIVATE = 2;
    GAMEPLAY_COUNTER_UPDATE_REASON_CHANGE = 3;
}

enum SceneGroupRefreshType {
    SCENE_GROUP_REFRESH_TYPE_NONE = 0;
    SCENE_GROUP_REFRESH_TYPE_LOADED = 1;
    SCENE_GROUP_REFRESH_TYPE_UNLOAD = 2;
}

enum CmdServerPrefsType {
    CmdServerPrefsTypeNone = 0;
    CmdUpdateServerPrefsDataCsReq = 6176;
    CmdGetAllServerPrefsDataCsReq = 6195;
    CmdUpdateServerPrefsDataScRsp = 6148;
    CmdGetServerPrefsDataCsReq = 6131;
    CmdGetAllServerPrefsDataScRsp = 6132;
    CmdGetServerPrefsDataScRsp = 6140;
}

enum CmdShopType {
    CmdShopTypeNone = 0;
    CmdBuyGoodsCsReq = 1531;
    CmdGetShopListCsReq = 1595;
    CmdBuyGoodsScRsp = 1540;
    CmdTakeCityShopRewardScRsp = 1548;
    CmdTakeCityShopRewardCsReq = 1576;
    CmdCityShopInfoScNotify = 1571;
    CmdGetShopListScRsp = 1532;
}

enum CmdSpaceZooType {
    CmdSpaceZooTypeNone = 0;
    CmdSpaceZooBornScRsp = 6740;
    CmdSpaceZooDataScRsp = 6732;
    CmdSpaceZooDataCsReq = 6795;
    CmdSpaceZooMutateCsReq = 6776;
    CmdSpaceZooBornCsReq = 6731;
    CmdSpaceZooExchangeItemCsReq = 6785;
    CmdSpaceZooOpCatteryScRsp = 6752;
    CmdSpaceZooCatUpdateNotify = 6772;
    CmdSpaceZooExchangeItemScRsp = 6716;
    CmdSpaceZooOpCatteryCsReq = 6771;
    CmdSpaceZooTakeCsReq = 6746;
    CmdSpaceZooDeleteCatScRsp = 6756;
    CmdSpaceZooTakeScRsp = 6783;
    CmdSpaceZooMutateScRsp = 6748;
    CmdSpaceZooDeleteCatCsReq = 6722;
}

enum CmdStarFightType {
    CmdStarFightTypeNone = 0;
    CmdGetStarFightDataCsReq = 7162;
    CmdGetStarFightDataScRsp = 7165;
    CmdStartStarFightLevelScRsp = 7167;
    CmdStartStarFightLevelCsReq = 7164;
    CmdStarFightDataChangeNotify = 7161;
}

enum CmdStoryLineType {
    CmdStoryLineTypeNone = 0;
    CmdChangeStoryLineFinishScNotify = 6248;
    CmdGetStoryLineInfoCsReq = 6295;
    CmdStoryLineTrialAvatarChangeScNotify = 6271;
    CmdStoryLineInfoScNotify = 6231;
    CmdGetStoryLineInfoScRsp = 6232;
}

enum AMJOCDIAPHF {
    ChangeStoryLineAction_None = 0;
    ChangeStoryLineAction_FinishAction = 1;
    ChangeStoryLineAction_Client = 2;
    ChangeStoryLineAction_CustomOP = 3;
    ChangeStoryLineAction_Raid = 4;
}

enum CmdStrongChallengeActivityType {
    CmdStrongChallengeActivityTypeNone = 0;
    CmdEnterStrongChallengeActivityStageCsReq = 6631;
    CmdStrongChallengeActivityBattleEndScNotify = 6676;
    CmdEnterStrongChallengeActivityStageScRsp = 6640;
    CmdGetStrongChallengeActivityDataCsReq = 6695;
    CmdGetStrongChallengeActivityDataScRsp = 6632;
}

enum CmdSummonActivityType {
    CmdSummonActivityTypeNone = 0;
    CmdEnterSummonActivityStageCsReq = 7564;
    CmdGetSummonActivityDataScRsp = 7565;
    CmdEnterSummonActivityStageScRsp = 7567;
    CmdGetSummonActivityDataCsReq = 7562;
    CmdSummonActivityBattleEndScNotify = 7561;
}

enum CmdSwitchHandType {
    CmdSwitchHandTypeNone = 0;
    CmdSwitchHandDataScRsp = 8113;
    CmdSwitchHandStartScRsp = 8110;
    CmdSwitchHandCoinUpdateCsReq = 8107;
    CmdSwitchHandUpdateCsReq = 8120;
    CmdSwitchHandResetHandPosScRsp = 8101;
    CmdSwitchHandCoinUpdateScRsp = 8103;
    CmdSwitchHandStartCsReq = 8108;
    CmdSwitchHandUpdateScRsp = 8109;
    CmdSwitchHandResetGameScRsp = 8119;
    CmdSwitchHandResetHandPosCsReq = 8105;
    CmdSwitchHandFinishScRsp = 8102;
    CmdSwitchHandFinishCsReq = 8104;
    CmdSwitchHandDataCsReq = 8114;
    CmdSwitchHandResetGameCsReq = 8111;
}

enum HandPropType {
    SWITCH_HAND_OP_PROP_TYPE_NONE = 0;
    SWITCH_HAND_OP_PROP_TYPE_CATCH = 1;
    SWITCH_HAND_OP_PROP_TYPE_LIFT = 2;
}

enum CmdSwordTrainingType {
    CmdSwordTrainingTypeNone = 0;
    CmdSwordTrainingGiveUpGameCsReq = 7492;
    CmdSwordTrainingDialogueSelectOptionScRsp = 7493;
    CmdSwordTrainingResumeGameCsReq = 7453;
    CmdSwordTrainingGameSettleScNotify = 7468;
    CmdSwordTrainingDailyPhaseConfirmCsReq = 7467;
    CmdSwordTrainingResumeGameScRsp = 7497;
    CmdSwordTrainingGiveUpGameScRsp = 7479;
    CmdSwordTrainingStoryBattleScRsp = 7469;
    CmdEnterSwordTrainingExamScRsp = 7470;
    CmdSwordTrainingStartGameCsReq = 7473;
    CmdSwordTrainingSetSkillTraceScRsp = 7491;
    CmdGetSwordTrainingDataCsReq = 7496;
    CmdSwordTrainingGameSyncChangeScNotify = 7454;
    CmdSwordTrainingStartGameScRsp = 7476;
    CmdSwordTrainingSetSkillTraceCsReq = 7498;
    CmdSwordTrainingDailyPhaseConfirmScRsp = 7477;
    CmdSwordTrainingLearnSkillCsReq = 7494;
    CmdSwordTrainingRestoreGameCsReq = 7456;
    CmdSwordTrainingMarkEndingViewedCsReq = 7483;
    CmdSwordTrainingLearnSkillScRsp = 7482;
    CmdSwordTrainingUnlockSyncScNotify = 7451;
    CmdSwordTrainingTurnActionScRsp = 7486;
    CmdSwordTrainingSelectEndingCsReq = 7489;
    CmdGetSwordTrainingDataScRsp = 7452;
    CmdEnterSwordTrainingExamCsReq = 7490;
    CmdSwordTrainingTurnActionCsReq = 7487;
    CmdSwordTrainingStoryBattleCsReq = 7460;
    CmdSwordTrainingStoryConfirmScRsp = 7466;
    CmdSwordTrainingMarkEndingViewedScRsp = 7481;
    CmdSwordTrainingRestoreGameScRsp = 7471;
    CmdSwordTrainingActionTurnSettleScNotify = 7499;
    CmdSwordTrainingExamResultConfirmCsReq = 7464;
    CmdSwordTrainingStoryConfirmCsReq = 7472;
    CmdSwordTrainingExamResultConfirmScRsp = 7458;
    CmdSwordTrainingDialogueSelectOptionCsReq = 7465;
    CmdSwordTrainingSelectEndingScRsp = 7461;
}

enum PKHJBPMIBBA {
    SWORD_TRAIN_GAME_SOURCE_TYPE_NONE = 0;
    SWORD_TRAIN_GAME_SOURCE_TYPE_TURN_SETTLE = 1;
    SWORD_TRAIN_GAME_SOURCE_TYPE_STATUS_UPGRADE = 2;
    SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION = 3;
    SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION_HINT = 4;
    SWORD_TRAIN_GAME_SOURCE_TYPE_STORY = 5;
    SWORD_TRAIN_GAME_SOURCE_TYPE_EXAM_BONUS = 6;
    SWORD_TRAIN_GAME_SOURCE_TYPE_DIALOGUE = 7;
}

enum BJNCDEFEEJI {
    SWORD_TRAINING_DAILY_PHASE_TYPE_NONE = 0;
    SWORD_TRAINING_DAILY_PHASE_TYPE_MORNING = 1;
    SWORD_TRAINING_DAILY_PHASE_TYPE_NOON = 2;
    SWORD_TRAINING_DAILY_PHASE_TYPE_AFTERNOON = 3;
    SWORD_TRAINING_DAILY_PHASE_TYPE_EVENING = 4;
}

enum HDIJJMDPILE {
    SWORD_TRAINING_STATUS_TYPE_NONE = 0;
    SWORD_TRAINING_STATUS_TYPE_POWER = 1;
    SWORD_TRAINING_STATUS_TYPE_AGILITY = 2;
    SWORD_TRAINING_STATUS_TYPE_TOUGHNESS = 3;
    SWORD_TRAINING_STATUS_TYPE_PERCEPTION = 4;
    _SWORD_TRAINING_STATUS_TYPE_MAX = 5;
}

enum HDMKPHALALG {
    SWORD_TRAINING_GAME_SETTLE_NONE = 0;
    SWORD_TRAINING_GAME_SETTLE_FINISH = 1;
    SWORD_TRAINING_GAME_SETTLE_GIVE_UP = 2;
    SWORD_TRAINING_GAME_SETTLE_BATTLE_FAILED = 3;
    SWORD_TRAINING_GAME_SETTLE_FORCE = 4;
    SWORD_TRAINING_GAME_SETTLE_BY_RESTORE = 5;
}

enum CmdPlayerSync {
    CmdPlayerSyncNone = 0;
    CmdPlayerSyncScNotify = 695;
}

enum CmdTalkRewardType {
    CmdTalkRewardTypeNone = 0;
    CmdTakeTalkRewardCsReq = 2131;
    CmdFinishFirstTalkByPerformanceNpcCsReq = 2116;
    CmdGetFirstTalkNpcScRsp = 2148;
    CmdGetFirstTalkByPerformanceNpcCsReq = 2172;
    CmdFinishFirstTalkNpcScRsp = 2152;
    CmdGetNpcTakenRewardScRsp = 2132;
    CmdSelectInclinationTextScRsp = 2156;
    CmdTakeTalkRewardScRsp = 2140;
    CmdSelectInclinationTextCsReq = 2122;
    CmdFinishFirstTalkNpcCsReq = 2171;
    CmdGetFirstTalkByPerformanceNpcScRsp = 2185;
    CmdGetFirstTalkNpcCsReq = 2176;
    CmdGetNpcTakenRewardCsReq = 2195;
    CmdFinishFirstTalkByPerformanceNpcScRsp = 2146;
}

enum CmdTarotBookType {
    CmdTarotBookTypeNone = 0;
    CmdTarotBookFinishStoryCsReq = 8160;
    CmdTarotBookFinishInteractionCsReq = 8143;
    CmdTarotBookGetDataCsReq = 8154;
    CmdTarotBookFinishStoryScRsp = 8149;
    CmdTarotBookUnlockStoryScRsp = 8142;
    CmdTarotBookModifyEnergyScNotify = 8147;
    CmdTarotBookFinishInteractionScRsp = 8145;
    CmdTarotBookOpenPackScRsp = 8150;
    CmdTarotBookGetDataScRsp = 8153;
    CmdTarotBookUnlockStoryCsReq = 8144;
    CmdTarotBookOpenPackCsReq = 8148;
}

enum CmdTelevisionActivityType {
    CmdTelevisionActivityTypeNone = 0;
    CmdTelevisionActivityDataChangeScNotify = 6968;
    CmdEnterTelevisionActivityStageScRsp = 6964;
    CmdTelevisionActivityBattleEndScNotify = 6962;
    CmdGetTelevisionActivityDataScRsp = 6973;
    CmdGetTelevisionActivityDataCsReq = 6974;
    CmdEnterTelevisionActivityStageCsReq = 6970;
}

enum CmdTextJoinType {
    CmdTextJoinTypeNone = 0;
    CmdTextJoinSaveCsReq = 3895;
    CmdTextJoinSaveScRsp = 3832;
    CmdTextJoinQueryScRsp = 3840;
    CmdTextJoinBatchSaveScRsp = 3848;
    CmdTextJoinBatchSaveCsReq = 3876;
    CmdTextJoinQueryCsReq = 3831;
}

enum CmdTrackPhotoActivityType {
    CmdTrackPhotoActivityTypeNone = 0;
    CmdStartTrackPhotoStageScRsp = 7559;
    CmdQuitTrackPhotoStageScRsp = 7553;
    CmdGetTrackPhotoActivityDataCsReq = 7552;
    CmdGetTrackPhotoActivityDataScRsp = 7555;
    CmdQuitTrackPhotoStageCsReq = 7556;
    CmdSettleTrackPhotoStageCsReq = 7554;
    CmdStartTrackPhotoStageCsReq = 7551;
    CmdSettleTrackPhotoStageScRsp = 7557;
}

enum CmdTrainPartyType {
    CmdTrainPartyTypeNone = 0;
    CmdTrainPartyAddBuildDynamicBuffScRsp = 8091;
    CmdTrainPartyBuildStartStepScRsp = 8046;
    CmdTrainPartyUseCardScRsp = 8040;
    CmdTrainPartyTakeBuildLevelAwardScRsp = 8075;
    CmdTrainPartyTakeBuildLevelAwardCsReq = 8030;
    CmdTrainPartyHandlePendingActionCsReq = 8072;
    CmdTrainPartyLeaveCsReq = 8042;
    CmdTrainPartyBuildDiyScRsp = 8060;
    CmdTrainPartyGamePlayStartScRsp = 8093;
    CmdTrainPartySyncUpdateScNotify = 8022;
    CmdTrainPartyEnterScRsp = 8033;
    CmdTrainPartyBuildDiyCsReq = 8083;
    CmdTrainPartyAddBuildDynamicBuffCsReq = 8051;
    CmdTrainPartyBuildStartStepCsReq = 8016;
    CmdTrainPartyGamePlaySettleNotify = 8025;
    CmdTrainPartyBuildingUpdateNotify = 8002;
    CmdTrainPartyGetDataScRsp = 8032;
    CmdTrainPartyMoveScNotify = 8076;
    CmdTrainPartyLeaveScRsp = 8077;
    CmdTrainPartyUpdatePosEnvCsReq = 8084;
    CmdTrainPartyGetDataCsReq = 8095;
    CmdTrainPartyUseCardCsReq = 8031;
    CmdTrainPartySettleNotify = 8071;
    CmdTrainPartyUpdatePosEnvScRsp = 8037;
    CmdTrainPartyGamePlayStartCsReq = 8011;
    CmdTrainPartyEnterCsReq = 8043;
    CmdTrainPartyHandlePendingActionScRsp = 8085;
}

enum KNOOCOCANAM {
    BuildGoalStepNone = 0;
    BuildGoalStepIdle = 1;
    BuildGoalStepStart = 2;
    BuildGoalStepFinish = 3;
}

enum CBEJAJENOHJ {
    kTrainPartySrcNone = 0;
    kTrainPartySrcCard = 1;
    kTrainPartySrcGrid = 2;
    kTrainPartySrcPam = 3;
    kTrainPartySrcPassenger = 4;
    kTrainPartySrcBuilding = 5;
}

enum IJDNOJEMIAN {
    kDialogueEventNone = 0;
    kGamePlayStartDialogueEvent = 1;
    kGridDialogueEvent = 2;
    kAfterMeetingDialogueEvent = 3;
}

enum LCDEMGACEKD {
    kMtSkillNone = 0;
    kMtSkillModifyBase = 1;
    kMtSkillModifyRatio = 2;
    kMtSkillMultiplyRatio = 3;
    kMtSkillSelfDestroy = 4;
}

enum DMLCPAKDBLJ {
    TRAIN_PARTY_MT_CATEGORY_NONE = 0;
    TRAIN_PARTY_MT_CATEGORY_S = 1;
    TRAIN_PARTY_MT_CATEGORY_A = 2;
    TRAIN_PARTY_MT_CATEGORY_B = 3;
    TRAIN_PARTY_MT_CATEGORY_C = 4;
    TRAIN_PARTY_MT_CATEGORY_D = 5;
    TRAIN_PARTY_MT_CATEGORY_E = 6;
    TRAIN_PARTY_MT_CATEGORY_F = 7;
    TRAIN_PARTY_MT_CATEGORY_G = 8;
}

enum CmdTrainVisitorType {
    CmdTrainVisitorTypeNone = 0;
    CmdShowNewSupplementVisitorCsReq = 3772;
    CmdTrainVisitorRewardSendNotify = 3748;
    CmdGetTrainVisitorRegisterCsReq = 3771;
    CmdShowNewSupplementVisitorScRsp = 3785;
    CmdTakeTrainVisitorUntakenBehaviorRewardCsReq = 3722;
    CmdGetTrainVisitorBehaviorScRsp = 3740;
    CmdTrainVisitorBehaviorFinishScRsp = 3732;
    CmdGetTrainVisitorBehaviorCsReq = 3731;
    CmdTakeTrainVisitorUntakenBehaviorRewardScRsp = 3756;
    CmdGetTrainVisitorRegisterScRsp = 3752;
    CmdTrainVisitorBehaviorFinishCsReq = 3795;
    CmdTrainRefreshTimeNotify = 3776;
}

enum TrainVisitorRewardSendType {
    TRAIN_VISITOR_REWARD_SEND_NONE = 0;
    TRAIN_VISITOR_REWARD_SEND_REGISTER = 1;
    TRAIN_VISITOR_REWARD_SEND_MISSION = 2;
}

enum TrainVisitorStatus {
    TRAIN_VISITOR_STATUS_NONE = 0;
    TRAIN_VISITOR_STATUS_INIT = 1;
    TRAIN_VISITOR_STATUS_GET_ON = 2;
    TRAIN_VISITOR_STATUS_GET_OFF = 3;
    TRAIN_VISITOR_STATUS_BE_TRAIN_MEMBER = 4;
}

enum TrainVisitorRegisterGetType {
    TRAIN_VISITOR_REGISTER_GET_TYPE_NONE = 0;
    TRAIN_VISITOR_REGISTER_GET_TYPE_AUTO = 1;
    TRAIN_VISITOR_REGISTER_GET_TYPE_MANUAL = 2;
}

enum CmdTravelBrochure {
    CmdTravelBrochureNone = 0;
    CmdTravelBrochureSelectMessageCsReq = 6476;
    CmdTravelBrochurePageResetCsReq = 6443;
    CmdTravelBrochureRemovePasterCsReq = 6422;
    CmdTravelBrochureRemovePasterScRsp = 6456;
    CmdTravelBrochureGetDataScRsp = 6432;
    CmdTravelBrochureGetPasterScNotify = 6416;
    CmdTravelBrochureApplyPasterCsReq = 6471;
    CmdTravelBrochureApplyPasterListCsReq = 6442;
    CmdTravelBrochureSetCustomValueCsReq = 6483;
    CmdTravelBrochureUpdatePasterPosCsReq = 6472;
    CmdTravelBrochureGetDataCsReq = 6495;
    CmdTravelBrochureSetPageDescStatusScRsp = 6439;
    CmdTravelBrochureApplyPasterListScRsp = 6477;
    CmdTravelBrochurePageResetScRsp = 6433;
    CmdTravelBrochureUpdatePasterPosScRsp = 6485;
    CmdTravelBrochureSetCustomValueScRsp = 6460;
    CmdTravelBrochureSelectMessageScRsp = 6448;
    CmdTravelBrochurePageUnlockScNotify = 6431;
    CmdTravelBrochureApplyPasterScRsp = 6452;
    CmdTravelBrochureSetPageDescStatusCsReq = 6402;
}

enum HGKKPPLJBOI {
    PAGE_NONE = 0;
    PAGE_UNLOCKED = 1;
    PAGE_INTERACTED = 2;
}

enum DCJAOPDINOI {
    PAGE_DESC_NONE = 0;
    PAGE_DESC_SHOW_DETAIL = 1;
    PAGE_DESC_COLLAPSE = 2;
}

enum CmdTreasureDungeonType {
    CmdTreasureDungeonTypeNone = 0;
    CmdTreasureDungeonDataScNotify = 4495;
    CmdQuitTreasureDungeonCsReq = 4458;
    CmdUseTreasureDungeonItemCsReq = 4442;
    CmdOpenTreasureDungeonGridScRsp = 4460;
    CmdOpenTreasureDungeonGridCsReq = 4483;
    CmdTreasureDungeonFinishScNotify = 4432;
    CmdUseTreasureDungeonItemScRsp = 4477;
    CmdInteractTreasureDungeonGridCsReq = 4443;
    CmdGetTreasureDungeonActivityDataCsReq = 4472;
    CmdGetTreasureDungeonActivityDataScRsp = 4485;
    CmdEnterTreasureDungeonScRsp = 4446;
    CmdEnterTreasureDungeonCsReq = 4416;
    CmdInteractTreasureDungeonGridScRsp = 4433;
    CmdFightTreasureDungeonMonsterCsReq = 4402;
    CmdFightTreasureDungeonMonsterScRsp = 4439;
    CmdQuitTreasureDungeonScRsp = 4421;
}

enum IMKNBJCOIOP {
    TREASURE_DUNGEON_RECORD_NONE = 0;
    TREASURE_DUNGEON_RECORD_ADD_HP = 1;
    TREASURE_DUNGEON_RECORD_SUB_HP = 2;
    TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE = 3;
    TREASURE_DUNGEON_RECORD_ADD_ATTACK = 5;
    TREASURE_DUNGEON_RECORD_ADD_DEFENCE = 6;
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE = 9;
    TREASURE_DUNGEON_RECORD_SUB_EXPLORE = 10;
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW = 11;
    TREASURE_DUNGEON_RECORD_SUMMON = 15;
    TREASURE_DUNGEON_RECORD_KILL = 16;
    TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR = 20;
    TREASURE_DUNGEON_RECORD_ADD_BUFF = 24;
    TREASURE_DUNGEON_RECORD_UNLOCK_DOOR = 25;
    TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE = 27;
    TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN = 28;
    TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE = 29;
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN = 30;
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL = 31;
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS = 33;
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL = 34;
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE = 35;
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID = 36;
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM = 37;
    TREASURE_DUNGEON_RECORD_AVATAR_DEAD = 40;
    TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD = 41;
    TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD = 42;
    TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST = 43;
}

enum CmdTutorialType {
    CmdTutorialTypeNone = 0;
    CmdFinishTutorialGuideCsReq = 1672;
    CmdFinishTutorialScRsp = 1656;
    CmdGetTutorialGuideScRsp = 1640;
    CmdUnlockTutorialCsReq = 1676;
    CmdFinishTutorialCsReq = 1622;
    CmdGetTutorialCsReq = 1695;
    CmdGetTutorialGuideCsReq = 1631;
    CmdGetTutorialScRsp = 1632;
    CmdFinishTutorialGuideScRsp = 1685;
    CmdUnlockTutorialGuideScRsp = 1652;
    CmdUnlockTutorialScRsp = 1648;
    CmdUnlockTutorialGuideCsReq = 1671;
}

enum TutorialStatus {
    TUTORIAL_NONE = 0;
    TUTORIAL_UNLOCK = 1;
    TUTORIAL_FINISH = 2;
}

enum CmdWaypointType {
    CmdWaypointTypeNone = 0;
    CmdSetCurWaypointScRsp = 440;
    CmdGetWaypointScRsp = 432;
    CmdGetWaypointCsReq = 495;
    CmdTakeChapterRewardScRsp = 422;
    CmdSetCurWaypointCsReq = 431;
    CmdGetChapterScRsp = 448;
    CmdWaypointShowNewCsNotify = 471;
    CmdGetChapterCsReq = 476;
    CmdTakeChapterRewardCsReq = 452;
}

enum MHHLJFEJGNM {
    WAYPOINT_TYPE_NONE = 0;
    WAYPOINT_TYPE_STAGE = 1;
    WAYPOINT_TYPE_PLOT = 2;
}

enum OBFAICFOGMP {
    WAYPOINT_UNLOCK_NONE = 0;
    WAYPOINT_UNLOCK_PRE = 1;
    WAYPOINT_UNLOCK_LEVEL = 2;
}

enum CmdWolfBroType {
    CmdWolfBroTypeNone = 0;
    CmdGetWolfBroGameDataCsReq = 6543;
    CmdWolfBroGameExplodeMonsterScRsp = 6526;
    CmdArchiveWolfBroGameScRsp = 6537;
    CmdArchiveWolfBroGameCsReq = 6502;
    CmdWolfBroGameActivateBulletCsReq = 6544;
    CmdGetWolfBroGameDataScRsp = 6509;
    CmdRestoreWolfBroGameArchiveCsReq = 6536;
    CmdWolfBroGameActivateBulletScRsp = 6532;
    CmdQuitWolfBroGameScRsp = 6515;
    CmdWolfBroGameExplodeMonsterCsReq = 6523;
    CmdWolfBroGameDataChangeScNotify = 6545;
    CmdWolfBroGameUseBulletCsReq = 6507;
    CmdQuitWolfBroGameCsReq = 6527;
    CmdWolfBroGamePickupBulletScRsp = 6520;
    CmdWolfBroGamePickupBulletCsReq = 6540;
    CmdRestoreWolfBroGameArchiveScRsp = 6517;
    CmdStartWolfBroGameScRsp = 6546;
    CmdStartWolfBroGameCsReq = 6504;
    CmdWolfBroGameUseBulletScRsp = 6550;
}

enum CmdWorldUnlockType {
    CmdWorldUnlockTypeNone = 0;
    CmdWorldUnlockScRsp = 7627;
    CmdWorldUnlockCsReq = 7626;
}

enum DJEBIMHNPBM {
    DISPATCH_TYPE_NONE = 0;
    DISPATCH_TYPE_BY_ADDR = 1;
    DISPATCH_TYPE_BY_MOD = 2;
    DISPATCH_TYPE_BY_RAND = 3;
    DISPATCH_TYPE_BY_CHASH = 4;
    DISPATCH_TYPE_BY_STICKY_SESSION = 5;
    DISPATCH_TYPE_BY_OBJECT = 6;
}

enum KickType {
    KICK_SQUEEZED = 0;
    KICK_BLACK = 1;
    KICK_CHANGE_PWD = 2;
    KICK_LOGIN_WHITE_TIMEOUT = 3;
    KICK_ACE_ANTI_CHEATER = 4;
    KICK_BY_GM = 5;
}

enum IPKPKDCEBKI {
    NotReach = 0;
    Received = 1;
    CanReceive = 2;
}

message MMMNFDNLJMD {
    uint32 HBAPCCEGNME = 1;
    uint32 GPJGGKNOAFD = 2;
    oneof ILAAKOMCALI {
        int32 MarbleGameBegin = 101;
        int32 MarbleGameEnd = 102;
        int32 MarbleGameRound = 103;
        int32 MarbleGameTurn = 104;
    }
}

message HCJJOOFKCJH {
    uint32 LPDBPKKADGG = 1;
    int32 HOMGCFJPBLK = 2;
    int32 CJJBLMKJAPA = 3;
}

message LNGMDMIPCKL {
    uint32 LPDBPKKADGG = 1;
    uint32 JOJAHIAFNLK = 2;
}

message CCCNHOECCMD {
    uint32 item_id = 1;
    uint32 BANELELNLKB = 2;
    uint32 skill_id = 3;
    int32 display_value = 4;
}

message NOOBBIHJKMA {
    int32 MFLEKHHPIEO = 1;
    int32 MAJLGJCFGJA = 2;
    int32 IOLCFLOFAGF = 3;
    int32 AMEIIMFKBFA = 4;
}

message LJNPGKDOJHO {
    uint32 monster_battle_type = 1;
    uint64 DBADLNFOPAO = 2;
    uint32 ACJCPHIFMLN = 3;
    uint32 NLIBKABFGCC = 4;
    repeated HCJJOOFKCJH BIECGFIMCFB = 5;
    uint32 rank = 6;
    uint64 EKLDPALNLDC = 7;
    repeated HCJJOOFKCJH FFFGFCPHBPN = 8;
    uint32 JBLMGNPMADM = 9;
}

message BPNMJCHEDNL {
    uint32 monster_battle_type = 1;
    uint64 DBADLNFOPAO = 2;
    uint32 ACJCPHIFMLN = 3;
    uint32 NLIBKABFGCC = 4;
    repeated HCJJOOFKCJH BIECGFIMCFB = 5;
    uint32 rank = 6;
    uint64 EKLDPALNLDC = 7;
    repeated HCJJOOFKCJH FFFGFCPHBPN = 8;
    uint32 JBLMGNPMADM = 9;
    uint32 IMBCLFCBODJ = 10;
    int32 score_id = 11;
    int32 NPJEECEDPOK = 12;
    repeated LNGMDMIPCKL PCEAECMKDEH = 13;
    uint32 IFNMBNGIFPH = 14;
    uint32 IEHJGOMBPBI = 15;
    uint32 IPHAFKFGNAO = 16;
    uint32 LBPFECLGEFC = 17;
}

message FOOPINGAFEG {
    uint32 monster_battle_type = 1;
    uint64 DBADLNFOPAO = 2;
    uint32 ACJCPHIFMLN = 3;
    uint32 NLIBKABFGCC = 4;
    uint32 IGHLABGGIJE = 5;
    uint32 LPDBPKKADGG = 6;
    bool HGBBKGNEPFB = 7;
    repeated HCJJOOFKCJH FEOPFHOLKBM = 8;
    uint32 rank = 9;
    repeated HCJJOOFKCJH CNDCKAKKMCG = 10;
    uint32 JBLMGNPMADM = 11;
    repeated CCCNHOECCMD skill_info = 12;
    repeated NOOBBIHJKMA KBGAJGEOMGL = 13;
    repeated HCJJOOFKCJH LELHCFOEOCO = 14;
    repeated HCJJOOFKCJH IMJEKFDHING = 15;
    uint32 DJNMHMPKKKB = 16;
}

message OFILKJCLEGI {
    uint32 monster_battle_type = 1;
    uint64 DBADLNFOPAO = 2;
    uint32 ACJCPHIFMLN = 3;
    uint32 NLIBKABFGCC = 4;
    bool NLEAIJHAPAP = 5;
    uint32 IGHLABGGIJE = 6;
    uint32 rank = 7;
    uint64 EKLDPALNLDC = 8;
    uint32 JBLMGNPMADM = 9;
    uint32 CBOIIACBAKF = 10;
    repeated uint32 buff_list = 11;
    uint32 DJNMHMPKKKB = 12;
}

message PlayerBasicInfo {
    string nickname = 1;
    uint32 level = 2;
    uint32 exp = 3;
    uint32 stamina = 4;
    uint32 mcoin = 5;
    uint32 hcoin = 6;
    uint32 scoin = 7;
    uint32 world_level = 8;
}

message SpBarInfo {
    uint32 sp_cur = 1;
    uint32 sp_max = 2;
}

message BlackInfo {
    int64 begin_time = 1;
    int64 end_time = 2;
    uint32 limit_level = 3;
    uint32 ban_type = 4;
}

message FeverTimeAvatar {
    AvatarType avatar_type = 1;
    uint32 id = 2;
}

message OILPIACENNH {
    AvatarType avatar_type = 1;
    uint32 id = 2;
    uint32 level = 3;
    uint32 index = 4;
    uint32 GGDIIBCDOBB = 5;
}

message VersionCount {
    uint32 version = 1;
    uint32 count = 2;
}

message ClientDownloadData {
    uint32 version = 1;
    int64 time = 2;
    bytes data = 3;
    uint32 HAEHHCPOAPP = 4;
}

message ClientObjDownloadData {
    string BIDJPEIMLLF = 1;
    ClientDownloadData client_obj_download_data = 2;
    repeated ClientDownloadData JEDHNEJHGNP = 3;
}

message ClientUploadData {
    string tag = 1;
    string value = 2;
}

message FeatureSwitchParam {
    repeated uint32 switch_list = 1;
}

message FeatureSwitchInfo {
    FeatureSwitchType Type = 1;
    repeated FeatureSwitchParam SwitchList = 2;
    bool IsAllClosed = 3;
}

message JGFKICDCFLJ {
    string FDKGFDICMFD = 1;
    string MDJCAOAGCKO = 2;
    string GIOOHOOMJHO = 3;
    string FBMLLNKCFEN = 4;
    string DGOOHIBAOEE = 5;
    string FKBAMBOODKJ = 6;
    string JKHHEDMNJLC = 7;
}

message OCCHNEFHGNE {
    int32 EJIEAGFLGED = 28;
    int32 LDBFAIKMIFI = 29;
    int32 PKFLGKPHOED = 30;
    int32 AKDCLAEPFEJ = 31;
}

message ReplayInfo {
    uint64 DKNPKJMAHCM = 1;
    ReplayType replay_type = 2;
    uint32 stage_id = 3;
    uint32 uid = 4;
    string nickname = 5;
    uint32 head_icon = 6;
    string replay_name = 7;
    uint64 create_time = 8;
    uint32 AFEHLMFIBMD = 9;
    uint32 CMPBKBBKAOA = 10;
}

message PunkLordBattleAvatar {
    uint32 AvatarId = 1;
    uint32 AvatarLevel = 2;
}

message PunkLordBattleRecord {
    uint32 Uid = 1;
    uint32 DamageHp = 2;
    bool IsFinalHit = 3;
    uint32 OverKillDamageHp = 4;
    string BattleReplayKey = 5;
    repeated PunkLordBattleAvatar AvatarList = 6;
    uint32 AssistScore = 7;
    uint32 DamageScore = 8;
    uint32 FinalHitScore = 9;
}

message PunkLordBattleRecordList {
    repeated PunkLordBattleRecord battle_record_list = 1;
}

message PunkLordMonsterKey {
    uint32 uid = 1;
    uint32 monster_id = 2;
}

message PunkLordMonsterBasicInfo {
    uint32 uid = 1;
    uint32 monster_id = 2;
    uint32 config_id = 3;
    uint32 world_level = 4;
    int64 create_time = 5;
    uint32 left_hp = 6;
    uint32 attacker_num = 7;
    PunkLordShareType share_type = 8;
    bool PPBOCECKCAH = 9;
}

message PunkLordBattleReplay {
    string BattleReplayKey = 1;
    ReplayInfo ReplayInfo = 2;
}

message ILDHFMHBKNC {
    uint64 INFHIKBLJLA = 1;
    uint32 NBDLPGBIDLC = 2;
    uint32 AHBEMDLGGEO = 3;
}

message LKAPFHAHNEM {
    uint32 panel_id = 1;
    uint32 LGHOKGABGCK = 2;
    uint64 CFDANMOMHPI = 3;
}

message PEDLPHDBNAF {
    oneof GAHLGLNKAFC {
        ILDHFMHBKNC LFCPHAJCEKF = 101;
        LKAPFHAHNEM CELMKOLBJNN = 102;
    }
}

message RegionInfo {
    string name = 1;
    string title = 2;
    string dispatch_url = 3;
    string env_type = 4;
    string display_name = 5;
    string msg = 6;
}

message Dispatch {
    uint32 retcode = 1;
    string msg = 2;
    string top_sever_region_name = 3;
    repeated RegionInfo region_list = 4;
    string stop_desc = 5;
}

message RelicFilterPlanSettings {
    uint32 RarityBitset = 1;
    repeated uint32 RelicSetList = 2;
    repeated uint32 BodyMainPropertyList = 3;
    repeated uint32 FootMainPropertyList = 4;
    repeated uint32 SphereMainPropertyList = 5;
    repeated uint32 RopeMainPropertyList = 6;
    bool IsIncludeFilterSubProperty = 7;
    uint32 SubPropertyNum = 8;
    repeated uint32 SubPropertyList = 9;
    repeated uint32 HeadMainPropertyList = 10;
    repeated uint32 HandMainPropertyList = 11;
}

message BattleOp {
    uint32 turn_counter = 1;
    uint32 state = 2;
    uint32 action_entity_id = 3;
    uint32 target_entity_id = 4;
    uint32 op_type = 5;
    uint32 skill_index = 6;
    uint32 operation_counter = 7;
    string NPLIEIPHCBF = 8;
}

message BattleEquipment {
    uint32 id = 1;
    uint32 level = 2;
    uint32 promotion = 3;
    uint32 rank = 4;
}

message BattleRelic {
    uint32 id = 1;
    uint32 level = 2;
    uint32 main_affix_id = 3;
    repeated RelicAffix sub_affix_list = 4;
    uint32 unique_id = 5;
    uint32 set_id = 6;
    uint32 type = 7;
    uint32 rarity = 8;
}

message AvatarSkillTree {
    uint32 point_id = 1;
    uint32 level = 2;
}

message RelicAffix {
    uint32 affix_id = 1;
    uint32 cnt = 2;
    uint32 step = 3;
}

message BJHEBCCBANA {
    bool LJPADNCGLOC = 1;
    repeated uint32 DDDHNAKLMHF = 2;
    uint32 JGJCDMJIMNN = 3;
    uint32 POFMKDABEHD = 4;
}

message BattleAvatar {
    AvatarType avatar_type = 1;
    uint32 id = 2;
    uint32 level = 3;
    uint32 rank = 4;
    uint32 index = 5;
    repeated AvatarSkillTree skilltree_list = 6;
    repeated BattleEquipment equipment_list = 7;
    uint32 hp = 8;
    uint32 promotion = 10;
    repeated BattleRelic relic_list = 11;
    uint32 world_level = 12;
    uint32 assist_uid = 13;
    BJHEBCCBANA ECIFJLAKHCL = 15;
    SpBarInfo sp_bar = 16;
    uint32 GMOBAOCEFCE = 17;
    repeated AvatarSkillTree IMJJKBJOOHJ = 18;
}

message BattleMonsterParam {
    uint32 hard_level_group = 1;
    uint32 level = 2;
    uint32 elite_group = 3;
    uint32 DNEAMPLLFME = 4;
}

message BattleMonster {
    uint32 monster_id = 1;
    uint32 cur_hp = 2;
    uint32 max_hp = 3;
}

message BattleMonsterWave {
    repeated BattleMonster monster_list = 1;
    BattleMonsterParam wave_param = 2;
    uint32 battle_stage_id = 3;
    uint32 battle_wave_id = 4;
}

message BattleBuff {
    uint32 id = 1;
    uint32 level = 2;
    uint32 owner_index = 3;
    uint32 wave_flag = 4;
    repeated uint32 target_index_list = 5;
    map<string, sfixed32> dynamic_values = 6;
}

message ILLCDMOCLDO {
    uint32 id = 1;
    uint32 HFALJIHKECN = 2;
    uint32 LAEJDGHMKDB = 3;
}

message LJGIAGLFHHC {
    uint32 FENMMMKOOCF = 1;
}

message ENFLFBDAOIJ {
    uint32 id = 1;
    uint32 HFALJIHKECN = 2;
}

message GMGJCIHDFMA {
    uint32 id = 1;
    uint32 progress = 2;
}

message BattleTarget {
    uint32 id = 1;
    uint32 progress = 2;
    uint32 total_progress = 3;
}

message BattleTargetList {
    repeated BattleTarget battle_target_list = 1;
}

message BattleLineup {
    repeated BattleAvatar avatar_list = 1;
    repeated BattleMonsterWave monster_wave_list = 2;
    repeated BattleBuff buff_list = 3;
    uint32 world_level = 7;
    map<uint32, BattleTargetList> EDBBOPKOOFK = 9;
    LJGIAGLFHHC AJGPJGLPMIO = 10;
    repeated BattleAvatar EJCLJLDENDM = 11;
    EvolveBuildBattleInfo JPGIFCHJDLK = 12;
    GIEIBEACBAO MFKJOKAJJMJ = 13;
    BattleRogueMagicInfo battle_rogue_magic_info = 14;
}

message GIEIBEACBAO {
    map<uint32, uint32> GCCJDHKHMNK = 1;
    uint32 FPBNIPMHANH = 2;
    uint32 AAGIANCIEEG = 3;
    uint32 ELPFOMLCOBM = 4;
}

message AetherAvatarInfo {
    uint32 id = 1;
    uint32 index = 2;
    uint32 promotion = 3;
    repeated uint32 passive_skill = 4;
    AetherdivideSpiritLineupType spirit_lineup_type = 5;
    SpBarInfo sp_bar = 6;
}

message PNDFMBJFGIM {
    repeated AetherAvatarInfo avatar_list = 1;
    repeated BattleMonsterWave monster_wave_list = 2;
    repeated BattleBuff buff_list = 3;
}

message ClientTurnSnapshot {
    uint32 turn_counter = 1;
    uint32 random_counter = 2;
    uint32 anim_event_counter = 3;
    repeated CharacterSnapshot snapshot_list = 4;
    repeated AnimEventSnapshot anim_event_list = 5;
    uint32 JEINBMLFCBP = 6;
}

message GamecoreConfig {
    bool is_skip_verify = 1;
    uint32 max_turn_cnt = 2;
    bool is_auto_fight = 3;
    string csv_path = 4;
    bool LKFDPDLDMIB = 5;
    bool MNALPNFNMIO = 6;
    uint32 GGFCOJFLKBP = 7;
}

message BattleBuffMsg {
    repeated uint32 buff_id_list = 1;
    repeated uint32 buff_index_list = 2;
    repeated uint32 buff_level_list = 3;
    repeated uint32 buff_flag_list = 4;
}

message DKFLALJDIFL {
    uint32 MBBCHGENGGL = 1;
    uint32 HFCDPHCHFGK = 2;
}

message MBMCFOLIOLO {
    bool CDNOJCACELJ = 1;
    map<string, DKFLALJDIFL> HANEGINLANI = 2;
    string CJKMGENOJBE = 3;
}

message MIAIDAILDKM {
    repeated ClientTurnSnapshot EEFLGHCOBML = 1;
    string KGBHEHHFMPI = 2;
    string debug_extra_info = 3;
    repeated BattleReplayStringHash HLAGIMENBJG = 4;
    uint32 plane_id = 5;
    uint32 floor_id = 6;
    uint32 EBHLFAEGLCD = 7;
    uint32 BNJMMLKOFCP = 8;
    MBMCFOLIOLO EDHBGDEICNC = 9;
    uint32 BBNAEFBAPLG = 10;
}

message BattleReplay {
    uint32 version = 1;
    uint32 logic_random_seed = 2;
    uint32 stage_id = 3;
    BattleLineup lineup = 4;
    repeated BattleOp op_list = 5;
    string turn_snapshot_hash = 6;
    uint32 maze_plane_id = 7;
    repeated uint32 extra_ability_list = 8;
    bool is_ai_consider_ultra_skill = 9;
    BattleCheckStrategyType check_strategy = 10;
    BattleModuleType battle_module_type = 11;
    repeated BattleEventBattleInfo battle_event = 12;
    uint32 rounds_limit = 14;
    GamecoreConfig config = 15;
    string game_core_log_encode = 16;
    uint32 client_version = 17;
    uint32 monster_wave_length = 18;
    PNDFMBJFGIM GMPCFGEDHKI = 19;
    MIAIDAILDKM BNMIIAHADJH = 100;
}

message BattleReplayStringHash {
    int32 hash = 1;
    string value = 2;
}

message AvatarProperty {
    fixed64 max_hp = 1;
    fixed64 attack = 2;
    fixed64 defence = 3;
    fixed64 speed = 4;
    fixed64 left_hp = 5;
    fixed64 left_sp = 6;
    fixed64 sp_max = 7;
}

message EquipmentProperty {
    uint32 id = 1;
    uint32 rank = 2;
    uint32 promotion = 3;
    uint32 level = 4;
}

message AttackDamageProperty {
    string attack_type = 1;
    fixed64 damage = 2;
}

message SkillUseProperty {
    uint32 skill_id = 1;
    string skill_type = 2;
    uint32 skill_level = 3;
    uint32 skill_use_count = 4;
    uint32 IFEJKALHOPI = 5;
    uint32 JHDHLCNCDNC = 6;
    uint32 HOAFNNIJOOM = 7;
    uint32 MDEADCLNJCJ = 8;
    uint32 OHNPPJEMKDE = 9;
}

message GAAGEHABINM {
    uint32 skill_id = 1;
    fixed64 HGFLPENKIII = 2;
    repeated uint32 battle_target_list = 3;
    fixed64 damage = 4;
}

message SpAddSource {
    string source = 1;
    uint32 sp_add = 2;
}

message AbilityUseStt {
    string FKHHOBBFMEH = 1;
    uint32 count = 2;
    fixed64 total_damage = 3;
}

message AvatarBattleInfo {
    AvatarType avatar_type = 1;
    uint32 id = 2;
    uint32 avatar_level = 3;
    uint32 avatar_rank = 4;
    uint32 avatar_promotion = 5;
    AvatarProperty avatar_status = 6;
    repeated AvatarSkillTree avatar_skill = 7;
    repeated EquipmentProperty avatar_equipment = 8;
    uint32 total_turns = 9;
    fixed64 total_damage = 10;
    fixed64 total_heal = 11;
    fixed64 total_damage_taken = 12;
    fixed64 total_hp_recover = 13;
    fixed64 total_sp_cost = 14;
    uint32 stage_id = 15;
    uint32 stage_type = 16;
    fixed64 total_break_damage = 17;
    repeated AttackDamageProperty attack_type_damage = 18;
    repeated AttackDamageProperty attack_type_break_damage = 19;
    repeated AttackDamageProperty attack_type_max_damage = 20;
    repeated SkillUseProperty skill_times = 21;
    fixed64 delay_cumulate = 22;
    uint32 total_sp_add = 23;
    repeated SpAddSource sp_add_source = 24;
    uint32 total_bp_cost = 25;
    uint32 die_times = 26;
    uint32 revive_times = 27;
    uint32 break_times = 28;
    uint32 extra_turns = 29;
    fixed64 total_shield = 30;
    fixed64 total_shield_taken = 31;
    fixed64 total_shield_damage = 32;
    AvatarProperty initial_status = 33;
    repeated BattleRelic relics = 34;
    uint32 assist_uid = 35;
    repeated AttackDamageProperty AADGFLPBPDF = 36;
    fixed64 FPFBMIMBBHJ = 37;
    fixed64 GGPJOHNOCPC = 38;
    fixed64 LACKCJHHIMK = 39;
    fixed64 FMODLGOBNPE = 40;
    repeated AbilityUseStt LHKABNICKJN = 41;
    uint32 NCJHDJJDJNL = 42;
    uint32 LKMGDIADOPB = 43;
    fixed64 IBLGMCIPCKM = 44;
    fixed64 HACJDJIGMGP = 45;
    fixed64 IMDJAHAJGCF = 46;
    fixed64 JDOLKDBICLJ = 47;
    fixed64 CACCODDCJHI = 48;
    uint32 LLDMLOHBFLO = 49;
    uint32 CHNIKKCIBEG = 50;
    uint32 LBNJHHHLPMO = 51;
    fixed64 PDLILFICHIL = 52;
    uint32 PMKLPHJIOHC = 53;
    uint32 MPFAENEKFDC = 54;
}

message MonsterProperty {
    fixed64 max_hp = 1;
    fixed64 attack = 2;
    fixed64 defence = 3;
    fixed64 shield = 4;
    fixed64 speed = 5;
    fixed64 left_hp = 6;
    fixed64 enter_battle_hp = 7;
}

message MonsterPhaseStt {
    uint32 NDBOJANDNJN = 1;
    fixed64 MMCPHLPECDJ = 2;
    uint32 DOIADGDBOHF = 3;
    uint32 break_times = 4;
}

message LAFIENGMEMJ {
    uint32 entity_id = 1;
    uint32 monster_id = 2;
    uint32 OAKILFGDACJ = 3;
    uint32 BFPAOANBJON = 4;
    MonsterProperty NKCMCMHAFAF = 5;
    uint32 total_turns = 6;
    fixed64 total_damage = 7;
    fixed64 total_heal = 8;
    fixed64 total_damage_taken = 9;
    fixed64 AKGFCPFAOLP = 10;
    fixed64 total_hp_recover = 11;
    uint32 stage_id = 12;
    uint32 battle_id = 13;
    uint32 JBCDLFJJJDG = 14;
    repeated AttackDamageProperty attack_type_damage = 15;
    repeated SkillUseProperty skill_times = 16;
    uint32 stage_type = 17;
    fixed64 ACOFIPPJKBI = 18;
    fixed64 delay_cumulate = 19;
    DeathSource FIEDKNKIEBH = 20;
    uint32 wave = 21;
    int32 JHAOGJJDBHL = 22;
    uint32 phase = 23;
    uint32 DCMOHECBOLK = 24;
    BattleTag JEDAHLGBIEM = 25;
    repeated GAAGEHABINM skill_info = 26;
    uint32 LANFCLOLBOF = 27;
    repeated MonsterPhaseStt KFGJBILJGDP = 28;
    uint32 FPKONIKLICA = 29;
    uint32 JEEMGAEIFAE = 30;
    HEMBNDJAFDA HBOFDAJJJME = 31;
}

message BattleEventProperty {
    SpBarInfo sp_bar = 2;
}

message BattleEventBattleInfo {
    uint32 NGNAPJAJBAL = 1;
    BattleEventProperty status = 2;
    repeated GAAGEHABINM skill_info = 3;
}

message ScoreInfo {
    uint32 FJJDFPKGOPC = 1;
    uint32 score_id = 2;
}

message IBFFAJOHKMO {
    uint32 avatar_id = 1;
    repeated uint32 LEICKPDIFOG = 2;
    uint32 source = 3;
    fixed64 damage = 4;
    repeated uint32 DIKKHPFKAPF = 5;
    int32 EOOFIMEGMFB = 6;
    fixed64 BKJEAMPNANK = 7;
    uint32 BLFHKGPMNDK = 8;
    uint32 wave = 9;
}

message KKMPKJPGGCL {
    uint32 avatar_id = 1;
    int32 ABAPDFGJNME = 2;
}

message CNPNNIJGLFI {
    uint32 DPDNNMBCPOI = 1;
    uint32 DBELJGBKBPA = 2;
    uint32 entity_id = 3;
}

message IIIPHJIMNID {
    uint32 NDBOJANDNJN = 1;
    uint32 monster_id = 2;
    repeated KKMPKJPGGCL NGLPBHMLEHN = 3;
    uint32 HGFLPENKIII = 4;
    repeated CNPNNIJGLFI AKKGGPADAOO = 5;
}

message MMNDJAMEBML {
    BattleStaticticEventType type = 1;
    uint32 OCPPPKDDIML = 2;
    uint32 display_value = 3;
}

message KPKKKJPJCPC {
    uint32 LIDGJNDGBKM = 1;
    uint32 OAABADFKCOA = 2;
}

message MEOIFIOAECF {
    uint32 JJCCJJINLFL = 1;
    bool HEMJHDOEEBL = 2;
    KPKKKJPJCPC KACALGIOEDB = 3;
}

message EvolveBuildCardInfo {
    uint32 CardId = 1;
    fixed64 Param = 2;
    bool IsEnable = 3;
    fixed64 ParamList = 4;
}

message EvolveBuildGearDamageInfo {
    uint32 GearId = 1;
    fixed64 Damage = 2;
    fixed64 HpDamage = 3;
}

message LGIFEDNKHON {
    repeated uint32 DAKIJNBFKOB = 1;
    repeated uint32 FJJOBAEMEHP = 2;
}

message MJKIBJLOBKD {
    uint32 wave = 1;
    uint32 score_id = 2;
    uint32 DCHIOLBFKJN = 3;
    repeated KPKKKJPJCPC BHJKMHMOEAK = 4;
    fixed32 HGFLPENKIII = 5;
}

message DKOOKEJCHGO {
    uint32 CHBJKKMIOFD = 1;
    fixed64 HGFLPENKIII = 2;
}

message PMNHMAMHGAI {
    uint32 ICPHOOMNDKA = 1;
    repeated MJKIBJLOBKD ENBJCPKGCOL = 2;
    repeated DKOOKEJCHGO OOOGLIEOOKI = 3;
}

message EGDAJHJPLGI {
    BOJGAKMDPDL type = 1;
    uint32 count = 2;
}

message EvolveBuildBattleInfo {
    uint32 CurLevelId = 1;
    uint32 CurPeriod = 2;
    uint32 CurCoin = 3;
    repeated MEOIFIOAECF WeaponSlotList = 4;
    repeated MEOIFIOAECF AccessorySlotList = 5;
    repeated uint32 BanGearList = 6;
    LGIFEDNKHON Collection = 7;
    repeated uint32 AllowedGearList = 8;
    uint32 CurExp = 9;
    uint32 CurReroll = 10;
    uint32 CurTreasureMissCnt = 11;
    repeated uint32 PeriodIdList = 12;
    uint32 CurGearLostCnt = 13;
    uint32 CurWave = 14;
    bool IsUnlockGearReroll = 15;
    bool IsUnlockGearBan = 16;
    repeated EvolveBuildCardInfo CardList = 17;
    repeated EvolveBuildGearDamageInfo GearDamageList = 18;
    repeated uint32 StatParams = 19;
    bool IsGiveup = 20;
    uint32 CurUnusedRoundCnt = 21;
    PMNHMAMHGAI StatLogInfo = 22;
    uint32 PeriodFirstRandomSeed = 23;
    uint32 CurCardReroll = 24;
    repeated uint32 AllowedCardList = 25;
    repeated EGDAJHJPLGI FuncList = 26;
    uint32 FinishedStoryId = 27;
}

message PLPNLIBMNIO {
    string phase = 1;
    fixed32 DBDCNAFOGLF = 2;
    fixed32 HDALBIANCMF = 3;
    uint32 ADJBBABEHAH = 4;
    uint32 PJBIAEJECAE = 5;
    uint32 KPNACGHJALJ = 6;
    uint32 FPJADBGOHKM = 7;
    uint32 CJEJOFAMDCD = 8;
    repeated uint32 BGJCEDEAHGM = 9;
    repeated uint32 AAGJCJIOFPA = 10;
}

message CHDONIGOKNM {
    uint32 HEOCPAKCELM = 1;
    uint32 BGHKBMFHMOJ = 2;
    uint32 LOOLLAGMNLH = 3;
    uint32 HECJOOOBAHC = 4;
    uint32 FKEAAIPKPAA = 5;
    uint32 ICLEENHIPOH = 6;
    repeated uint32 boss_info = 7;
    repeated PLPNLIBMNIO ODBONKCMDMP = 8;
}

message JFFNDOBBNFB {
    uint32 wave = 1;
    fixed64 HFIHDDDILJB = 2;
    fixed64 KHGCLCLLECL = 3;
    uint32 FFPMJFHNCHO = 4;
    uint32 GMMBGAMHBKB = 5;
}

message EKBAGMOMECL {
    string key = 1;
    fixed64 value = 2;
}

message BattleRogueMagicModifierInfo {
    uint32 rogue_magic_battle_const = 1;
}

message BattleRogueMagicRoundCount {
    uint32 battle_standard_round_limit = 1;
    uint32 battle_extra_round_limit = 2;
}

message BattleRogueMagicUnit {
    uint32 magic_unit_id = 1;
    uint32 level = 2;
    bool HEMJHDOEEBL = 3;
    uint32 dice_slot_id = 4;
    map<uint32, uint32> IKDDALCBAFJ = 5;
}

message BattleRogueMagicScepter {
    uint32 scepter_id = 1;
    repeated BattleRogueMagicUnit rogue_magic_unit_info_list = 2;
    uint32 level = 3;
    map<uint32, uint32> EEPOJGNFLPA = 4;
}

message BattleRogueMagicItemInfo {
    BattleRogueMagicRoundCount battle_round_count = 1;
    repeated BattleRogueMagicScepter battle_scepter_list = 2;
}

message FKOCBOOCDNL {
    uint32 POIIAIAKILF = 1;
}

message BattleRogueMagicDetailInfo {
    oneof LOFNLGCFGIC {
        AKKCDLMLKDF CGGNFJCBBKM = 1;
        BHJHAPDLPNO NDKHOGEMKJA = 2;
        KOJKPLCEGEN NNCHMGDGDFI = 3;
        ALNIGMCJFDM PICLEGGGNCF = 5;
        GJBBLCIPBHD LCBECPOOGCL = 7;
        FHJGLOPMFNC PGPAAPOPDOC = 8;
        JBNCDFFPDOP PMKEHGBPCNG = 10;
        NEOCCICFNED EAPMICBGOIO = 11;
        JDOOIDBKCIM JLFDDMEKLJK = 13;
        LEHGLCELJMF CEAJNLIOFHF = 14;
    }
}

message BattleRogueMagicInfo {
    BattleRogueMagicModifierInfo modifier_content = 1;
    BattleRogueMagicDetailInfo detail_info = 2;
}

message CCCCGJABBPM {
    uint32 scepter_id = 1;
    uint32 level = 2;
    fixed64 total_damage = 3;
}

message AENPIJCDBMH {
    uint32 KLMCPPBBOOH = 1;
    uint32 KMOEADPMFLG = 2;
    repeated CCCCGJABBPM CICANOKPNBM = 3;
}

message GBNCGKDNMIL {
    uint32 AENKMAOABMP = 1;
    uint32 MCDPIABDIGI = 2;
    fixed64 JNIMLOIOHNH = 3;
    fixed64 IEJJJKFEDAH = 4;
}

message MBJHFPCJALN {
    GBNCGKDNMIL EHNNECGHJAL = 1;
}

message AIGKNHFANGA {
    AENPIJCDBMH EILAABLDPHM = 1;
    MBJHFPCJALN INPKGDFMPEA = 2;
}

message LHLBIANFOHK {
    uint32 monster_id = 1;
    uint32 GMLFMPJPEGG = 2;
    uint32 FFPMJFHNCHO = 3;
    uint32 GMMBGAMHBKB = 4;
}

message LLBMAPHBOGD {
    uint32 ACPBMMMCJIP = 1;
    fixed64 KKANCJALJPO = 2;
    fixed64 MFJKFLGPGKO = 3;
    uint32 wave = 4;
    uint32 GMLFMPJPEGG = 5;
    fixed64 ABMNLNNOKLO = 6;
    fixed64 IHBBEKCOEAE = 7;
}

message DPNDLHGEMEI {
    uint32 IMCPKLDFDOG = 1;
    uint32 AJGEOFIIDDH = 2;
    fixed64 OMOENBAKMHJ = 3;
    uint32 wave = 4;
    uint32 GMLFMPJPEGG = 5;
}

message CPFCBLADMBH {
    repeated LHLBIANFOHK HAAFHKIAGKM = 1;
    repeated LLBMAPHBOGD OEAGAMJDLMA = 2;
    repeated DPNDLHGEMEI PLENNPAGJLL = 3;
}

message BAAGNOHEHMA {
    CPFCBLADMBH OIMBGAEHDBI = 1;
}

message MKEECCHGIGH {
    uint32 NMIMBIOPEKI = 1;
    fixed64 KKANCJALJPO = 2;
    fixed64 MFJKFLGPGKO = 3;
    uint32 FGMLCKANIAN = 4;
    uint32 GOAEBJJPAJO = 5;
    uint32 NILAKIDFHEJ = 6;
    uint32 PIGNDAJGDGJ = 7;
    fixed64 ABMNLNNOKLO = 8;
    uint32 JBJMOPHGMFA = 9;
    uint32 POBIBILOANI = 10;
    fixed64 IHBBEKCOEAE = 11;
    uint32 LOOLLAGMNLH = 12;
    uint32 FKEAAIPKPAA = 13;
}

message BDMGOEJBFGL {
    uint32 LOOLLAGMNLH = 1;
    uint32 FKEAAIPKPAA = 2;
    uint32 AKPMNJCGGAI = 3;
    repeated MKEECCHGIGH OEAGAMJDLMA = 4;
}

message HANHNLNEICM {
    uint32 avatar_id = 1;
    uint32 DPDNNMBCPOI = 2;
    uint32 total_turns = 3;
    fixed64 FBCMJGMBJFC = 4;
    repeated SkillUseProperty skill_times = 5;
    fixed64 total_damage = 6;
    fixed64 total_break_damage = 7;
    repeated AttackDamageProperty attack_type_damage = 8;
    repeated AttackDamageProperty attack_type_break_damage = 9;
    repeated AttackDamageProperty attack_type_max_damage = 10;
    fixed64 total_damage_taken = 11;
    fixed64 total_heal = 12;
    fixed64 total_hp_recover = 13;
    fixed64 total_shield = 14;
    fixed64 total_shield_taken = 15;
    fixed64 total_shield_damage = 16;
    uint32 break_times = 17;
    uint32 JEPLCJKFOMB = 18;
    uint32 NCJHDJJDJNL = 19;
    uint32 LKMGDIADOPB = 20;
    fixed64 IBLGMCIPCKM = 21;
    uint32 entity_id = 22;
}

message PEDJNPJKOCK {
    uint32 avatar_id = 1;
    uint32 OJEBLMKKMGO = 2;
    uint32 IAGENFADHLP = 3;
}

message NMCMOHAHOPL {
    repeated HANHNLNEICM PCCDMDFNJPD = 1;
    uint32 HKPBEFFLFEO = 2;
    uint32 DFNKMIJEBLD = 3;
}

message BattleStatistics {
    uint32 total_battle_turns = 1;
    uint32 total_auto_turns = 2;
    repeated uint32 avatar_id_list = 3;
    uint32 ultra_cnt = 4;
    fixed64 total_delay_cumulate = 5;
    fixed64 cost_time = 6;
    repeated AvatarBattleInfo pve_avatar_list = 7;
    repeated LAFIENGMEMJ monster_list = 8;
    uint32 round_cnt = 9;
    uint32 cocoon_dead_wave = 10;
    uint32 avatar_battle_turns = 11;
    uint32 monster_battle_turns = 12;
    map<string, sfixed32> NBDEKMAKPKJ = 13;
    uint32 challenge_score = 14;
    repeated BattleEventBattleInfo IJOLOFBJINB = 16;
    BattleEndReason end_reason = 19;
    repeated IBFFAJOHKMO GLOJPNLNHJH = 21;
    repeated int32 IICCEFCGPAK = 22;
    repeated IIIPHJIMNID LDGAANONMBK = 23;
    repeated MMNDJAMEBML ADBHGKPNIKP = 26;
    repeated GMKEPCOMHPN ECEFBCNOFKB = 27;
    map<uint32, BattleTargetList> EDBBOPKOOFK = 28;
    repeated EAGOCAHFGAF NAJLKHFLLPG = 29;
    EvolveBuildBattleInfo JPGIFCHJDLK = 30;
    CHDONIGOKNM MNPHNJKGPKL = 31;
    bool LEDDODAMMNO = 32;
    repeated JFFNDOBBNFB ENBJCPKGCOL = 33;
    repeated EKBAGMOMECL NGOKNFDMHMF = 34;
    uint32 DKOEADNAMCJ = 35;
    AIGKNHFANGA IDCGPAKJFMD = 36;
    BAAGNOHEHMA BILLJJBFIOL = 37;
    BDMGOEJBFGL HMPGMILJAPB = 38;
    NMCMOHAHOPL NOCIGFLLIFG = 39;
    repeated PEDJNPJKOCK OKGCIPAHMEI = 42;
}

message EAGOCAHFGAF {
    uint32 OEFEEFGLIEB = 1;
    uint32 PBHPHHMPAIH = 2;
}

message GMKEPCOMHPN {
    AetherdivideSpiritLineupType type = 1;
    uint32 id = 2;
    SpBarInfo sp_bar = 3;
}

message MultiPath {
    uint32 multi_path_type = 1;
    uint32 level = 2;
    uint32 exp = 3;
}

message EPHILIMKADK {
    BattleCheckResultType retcode = 1;
    BattleEndStatus end_status = 2;
    BattleStatistics stt = 3;
    string game_core_log_encode = 4;
    map<string, uint32> DGNMMINGACJ = 5;
    uint32 mismatch_turn_count = 6;
    uint32 MDLPCFCPHDK = 7;
}

message CharacterSnapshot {
    uint32 runtime_id = 1;
    repeated uint64 properties = 2;
}

message AnimEventSnapshot {
    string event_name = 1;
    uint32 count = 2;
}

message OODOCMDLOMF {
    uint32 uid = 1;
    uint32 level = 2;
    string nickname = 3;
    uint32 GFIDNAANAFH = 4;
    PlatformType platform_type = 5;
    string AKCEJFCFBAN = 6;
    string BJELLAPOGJN = 7;
    uint64 version = 8;
}

message IDDLKHHLECG {
    LobbyCharacterType NOIIAOIDGEO = 1;
    LobbyCharacterStatus status = 2;
}

message NJFGJPCANDI {
    uint32 BKMPFEOCFIB = 1;
    bool COCONGACIFJ = 2;
    uint32 JEJKIGABEEK = 3;
    uint32 MIAFPFPMACA = 4;
}

message LCMIFOBKNEN {
    uint32 MKFDPCCKFNF = 1;
    uint32 rank = 2;
    repeated uint32 GNIGOHIAFFI = 3;
    uint32 score_id = 4;
}

message EPEGHCGCMHP {
    string BHGGHFJMMBM = 1;
    bool FMOPBFKNLNI = 2;
    oneof EMAHJGMLBNJ {
        NJFGJPCANDI DCHDJALLNEC = 1001;
        LCMIFOBKNEN EMBBHNCJDPK = 1002;
    }
}

message CBBDIOMIFHD {
    OODOCMDLOMF basic_info = 1;
    IDDLKHHLECG NCKCCOKDKOL = 2;
    EPEGHCGCMHP stage_info = 3;
}

message CDIMEMFJJFP {
    uint32 LMMGODPHJNE = 1;
    uint32 PGJCCGNBBPI = 2;
    uint32 NNBHKCJCPIO = 3;
    uint32 KHBNJGPPHOA = 4;
    uint32 AGDCEBLFGKH = 5;
    uint32 DNCPBBLIOPL = 6;
    uint32 LILIFGBAFKN = 7;
    uint32 MMIIJHOHOGE = 8;
    uint32 IOKFIKHHANG = 9;
    uint32 CILKFJBLEJG = 10;
}

message PPGGKMDAOEA {
    uint64 LOFAMEGPMBC = 1;
    FightGameMode GBAHCDLHACN = 2;
}

message BIPLKGDFAFJ {
    uint64 id = 1;
    FightGameMode PDMOLPLCFLG = 2;
    repeated CBBDIOMIFHD IIHPMLIBBEB = 3;
    MatchUnitType type = 4;
    uint64 INFHIKBLJLA = 5;
    uint64 MLELAJDLJNL = 6;
    uint32 JBNENLHCCBH = 7;
}

message LoginActivityData {
    uint32 login_days = 3;
    uint32 panel_id = 6;
    repeated uint32 JLHOGGDHMHG = 7;
    uint32 id = 12;
}

message GetLoginActivityCsReq {
}

message GetLoginActivityScRsp {
    repeated LoginActivityData login_activity_list = 2;
    uint32 retcode = 9;
}

message TakeLoginActivityRewardCsReq {
    uint32 take_days = 2;
    uint32 id = 14;
}

message TakeLoginActivityRewardScRsp {
    uint32 retcode = 1;
    uint32 take_days = 3;
    ItemList reward = 4;
    uint32 id = 8;
    uint32 panel_id = 13;
}

message ActivityScheduleData {
    uint32 activity_id = 6;
    int64 end_time = 9;
    uint32 panel_id = 10;
    int64 begin_time = 12;
}

message GetActivityScheduleConfigCsReq {
}

message GetActivityScheduleConfigScRsp {
    uint32 retcode = 2;
    repeated ActivityScheduleData schedule_data = 13;
}

message TrialActivityInfo {
    uint32 stage_id = 8;
    bool taken_reward = 15;
}

message GetTrialActivityDataCsReq {
}

message GetTrialActivityDataScRsp {
    repeated TrialActivityInfo trial_activity_info_list = 5;
    uint32 activity_stage_id = 9;
    uint32 retcode = 11;
}

message TrialActivityDataChangeScNotify {
    TrialActivityInfo trial_activity_info = 7;
}

message EnterTrialActivityStageCsReq {
    uint32 stage_id = 13;
}

message EnterTrialActivityStageScRsp {
    SceneBattleInfo battle_info = 6;
    uint32 retcode = 11;
}

message TakeTrialActivityRewardCsReq {
    uint32 stage_id = 13;
}

message TakeTrialActivityRewardScRsp {
    uint32 retcode = 4;
    uint32 stage_id = 6;
    ItemList reward = 7;
}

message StartTrialActivityCsReq {
    uint32 stage_id = 2;
}

message StartTrialActivityScRsp {
    uint32 stage_id = 2;
    uint32 retcode = 10;
}

message LeaveTrialActivityCsReq {
    uint32 stage_id = 6;
}

message LeaveTrialActivityScRsp {
    uint32 stage_id = 4;
    uint32 retcode = 7;
}

message CurTrialActivityScNotify {
    uint32 activity_stage_id = 6;
    PMIDEHDOBHJ status = 7;
}

message BCEKBNMNHOO {
    uint32 panel_id = 4;
    uint32 PEHOFBBDNIC = 5;
    bool CBNFFEMDBKF = 11;
    bool is_taken_reward = 12;
}

message GetMaterialSubmitActivityDataCsReq {
}

message GetMaterialSubmitActivityDataScRsp {
    uint32 retcode = 2;
    repeated BCEKBNMNHOO NBLHGEHLODN = 7;
}

message SubmitMaterialSubmitActivityMaterialCsReq {
    uint32 PEHOFBBDNIC = 3;
}

message SubmitMaterialSubmitActivityMaterialScRsp {
    BCEKBNMNHOO BLAAOIAEIAH = 11;
    uint32 retcode = 14;
}

message TakeMaterialSubmitActivityRewardCsReq {
    uint32 PEHOFBBDNIC = 12;
}

message TakeMaterialSubmitActivityRewardScRsp {
    uint32 PEHOFBBDNIC = 1;
    uint32 retcode = 7;
    ItemList reward = 15;
}

message GetAvatarDeliverRewardActivityDataCsReq {
}

message GetAvatarDeliverRewardActivityDataScRsp {
    uint32 avatar_id = 2;
    bool is_taken_reward = 5;
    uint32 retcode = 6;
}

message AvatarDeliverRewardChooseAvatarCsReq {
    uint32 avatar_id = 6;
}

message AvatarDeliverRewardChooseAvatarScRsp {
    uint32 avatar_id = 6;
    uint32 retcode = 15;
}

message AvatarDeliverRewardTakeRewardCsReq {
}

message AvatarDeliverRewardTakeRewardScRsp {
    ItemList reward = 8;
    uint32 retcode = 14;
}

message EnterAdventureCsReq {
    uint32 map_id = 4;
}

message EnterAdventureScRsp {
    SceneInfo scene = 2;
    uint32 retcode = 13;
}

message FarmStageGachaInfo {
    uint32 gacha_id = 4;
    int64 begin_time = 5;
    int64 end_time = 11;
}

message GetFarmStageGachaInfoCsReq {
    repeated uint32 farm_stage_gacha_id_list = 9;
}

message GetFarmStageGachaInfoScRsp {
    uint32 retcode = 3;
    repeated FarmStageGachaInfo farm_stage_gacha_info_list = 4;
}

message QuickStartCocoonStageCsReq {
    uint32 cocoon_id = 6;
    uint32 wave = 10;
    uint32 world_level = 13;
}

message QuickStartCocoonStageScRsp {
    uint32 cocoon_id = 4;
    SceneBattleInfo battle_info = 9;
    uint32 wave = 11;
    uint32 retcode = 12;
}

message QuickStartFarmElementCsReq {
    uint32 world_level = 1;
    uint32 JDANOKNHNHL = 13;
}

message QuickStartFarmElementScRsp {
    SceneBattleInfo battle_info = 2;
    uint32 retcode = 7;
    uint32 world_level = 11;
    uint32 JDANOKNHNHL = 12;
}

message CocoonSweepCsReq {
    uint32 world_level = 2;
    uint32 cocoon_id = 10;
}

message CocoonSweepScRsp {
    uint32 cocoon_id = 3;
    uint32 retcode = 6;
    ItemList drop_data = 11;
    ItemList multiple_drop_data = 12;
}

message FarmElementSweepCsReq {
    uint32 JDANOKNHNHL = 6;
    uint32 world_level = 12;
}

message FarmElementSweepScRsp {
    ItemList multiple_drop_data = 5;
    uint32 retcode = 7;
    uint32 JDANOKNHNHL = 11;
}

message EnterAetherDivideSceneCsReq {
    uint32 BDKNGDOCPGP = 6;
}

message EnterAetherDivideSceneScRsp {
    uint32 BDKNGDOCPGP = 7;
    uint32 retcode = 15;
}

message LeaveAetherDivideSceneCsReq {
}

message LeaveAetherDivideSceneScRsp {
    uint32 retcode = 6;
}

message StartAetherDivideSceneBattleCsReq {
    uint32 cast_entity_id = 1;
    uint32 skill_index = 4;
    repeated uint32 assist_monster_entity_id_list = 5;
    uint32 attacked_by_entity_id = 8;
    repeated AssistMonsterEntityInfo assist_monster_entity_info = 9;
}

message StartAetherDivideSceneBattleScRsp {
    uint32 retcode = 2;
    uint32 cast_entity_id = 7;
    AetherDivideBattleInfo battle_info = 12;
}

message StartAetherDivideChallengeBattleCsReq {
    uint32 lineup_index = 8;
    uint32 challenge_id = 14;
}

message StartAetherDivideChallengeBattleScRsp {
    AetherDivideBattleInfo battle_info = 9;
    uint32 retcode = 10;
}

message PassiveSkillItem {
    uint32 item_id = 10;
    uint32 slot = 14;
}

message AetherDivideSpiritInfo {
    uint32 aether_avatar_id = 4;
    SpBarInfo sp_bar = 5;
    uint32 JDHCHABCLCC = 7;
    uint32 exp = 9;
    repeated PassiveSkillItem passive_skill = 10;
    uint32 promotion = 11;
}

message AetherDivideLineupInfo {
    repeated uint32 aether_avatar_list = 8;
    uint32 slot = 11;
}

message AetherSkillInfo {
    uint32 item_id = 2;
    uint32 skill_dress_avatar_id = 11;
    uint32 Num = 12;
}

message GetAetherDivideInfoCsReq {
}

message GetAetherDivideInfoScRsp {
    uint32 PHLKDNGHOOA = 1;
    uint32 IBCIPIIDCOL = 2;
    repeated AetherDivideSpiritInfo NLFIHKICDDO = 4;
    repeated AetherDivideLineupInfo lineup_list = 6;
    uint32 retcode = 8;
    uint32 PFLJGGDAOFM = 9;
    repeated AetherSkillInfo skill_list = 10;
    uint32 JDHLMHJBOJM = 14;
    uint32 EGEMNDNEDIP = 15;
}

message SetAetherDivideLineUpCsReq {
    AetherDivideLineupInfo lineup = 13;
}

message SetAetherDivideLineUpScRsp {
    AetherDivideLineupInfo lineup = 5;
    uint32 retcode = 7;
}

message EquipAetherDividePassiveSkillCsReq {
    uint32 slot = 2;
    uint32 aether_avatar_id = 4;
    uint32 item_id = 9;
}

message EquipAetherDividePassiveSkillScRsp {
    uint32 retcode = 6;
    AetherDivideSpiritInfo aether_info = 7;
    AetherSkillInfo aether_skill_info = 8;
}

message ClearAetherDividePassiveSkillCsReq {
    uint32 aether_avatar_id = 2;
    uint32 slot = 13;
}

message ClearAetherDividePassiveSkillScRsp {
    AetherSkillInfo aether_skill_info = 8;
    uint32 retcode = 10;
    AetherDivideSpiritInfo aether_info = 13;
}

message AetherDivideSpiritExpUpCsReq {
    uint32 aether_avatar_id = 1;
    uint32 JDHLMHJBOJM = 9;
    uint32 KBMLAJOAANE = 11;
}

message AetherDivideSpiritExpUpScRsp {
    AetherDivideSpiritInfo aether_info = 2;
    uint32 retcode = 10;
    uint32 JDHLMHJBOJM = 11;
}

message SwitchAetherDivideLineUpSlotCsReq {
    uint32 lineup_index = 7;
}

message SwitchAetherDivideLineUpSlotScRsp {
    uint32 lineup_index = 1;
    uint32 retcode = 13;
}

message StartAetherDivideStageBattleCsReq {
    uint32 event_id = 10;
}

message StartAetherDivideStageBattleScRsp {
    uint32 retcode = 6;
    AetherDivideBattleInfo battle_info = 15;
}

message AetherDivideLineupScNotify {
    AetherDivideLineupInfo lineup = 5;
}

message AetherDivideSpiritInfoScNotify {
    AetherDivideSpiritInfo aether_info = 10;
    uint32 JDHLMHJBOJM = 11;
    repeated AetherDivideSpiritInfo MGEGIMBBAJB = 15;
}

message GetAetherDivideChallengeInfoCsReq {
}

message GetAetherDivideChallengeInfoScRsp {
    uint32 retcode = 6;
    repeated uint32 BFDIPGBLMMO = 7;
    repeated uint32 GKHJKFCCCGP = 12;
    uint32 PCNNMJBJIOC = 13;
}

message AetherDivideFinishChallengeScNotify {
    uint32 challenge_id = 4;
}

message AetherDivideTainerInfoScNotify {
    uint32 EGEMNDNEDIP = 11;
}

message AetherDivideSkillItemScNotify {
    uint32 item_id = 5;
    uint32 Num = 9;
}

message AetherDivideRefreshEndlessCsReq {
}

message AetherDivideRefreshEndlessScRsp {
    uint32 retcode = 7;
    uint32 IBCIPIIDCOL = 9;
}

message AetherDivideRefreshEndlessScNotify {
    uint32 IBCIPIIDCOL = 5;
}

message AetherDivideTakeChallengeRewardCsReq {
    uint32 challenge_id = 7;
}

message AetherDivideTakeChallengeRewardScRsp {
    uint32 challenge_id = 9;
    ItemList reward = 14;
    uint32 retcode = 15;
}

message JONGAGACHHO {
}

message ADOLEOFEGOK {
    uint32 POIIAIAKILF = 10;
    uint32 map_id = 12;
}

message GetAlleyInfoCsReq {
    uint32 level = 13;
    uint32 shop_id = 14;
}

message AGADEMAJIMD {
    repeated LogisticsScore FMJPLHOHBAB = 3;
    repeated NJAOIGGMEAL HNFOJBCJAMG = 10;
    repeated uint32 OMNGCIJALFM = 12;
    repeated ADOLEOFEGOK IMMLPHDNMOL = 14;
}

message GetAlleyInfoScRsp {
    LAIEMCFACDK KLPNGFNMIPI = 1;
    repeated uint32 GLBOEMJJAHD = 2;
    repeated uint32 OEDPOPCOHGB = 3;
    repeated uint32 GEFNDEEIKEF = 4;
    uint32 retcode = 5;
    uint32 level = 7;
    ECJMJJKJGOP BOKOLCPKEJM = 8;
    map<uint32, uint32> NPLAKEOKEKB = 9;
    uint32 DBJHEMIPPIM = 10;
    AGADEMAJIMD NJGAMCCGADC = 11;
    repeated HEHAOMIAMGL BJCMPHLPKNF = 12;
    uint32 NOPODEIMFFB = 15;
}

message KFAIFHOPNHH {
    uint32 BDDLDNEJFKN = 2;
    uint32 IFFPPGLAFNB = 12;
}

message KGCANLJIKCP {
    uint32 goods_id = 8;
    repeated KFAIFHOPNHH KALFMCAGHDO = 14;
}

message AlleyPlacingShip {
    uint32 ShipId = 1;
    repeated KGCANLJIKCP GoodsList = 12;
}

message AlleyPlacingGameCsReq {
    uint32 HLOJKEKIPKF = 2;
    uint32 FJDABPPANDC = 4;
    uint32 DHHJLCHCLAF = 5;
    uint32 ENGDBIIMAFF = 6;
    uint32 KEOKDNIKBDA = 8;
    uint32 INDEPLOFDEC = 10;
    uint32 BMNHHIDHODD = 11;
    uint32 cost_time = 13;
    AlleyPlacingShip EJJODHJHHAM = 15;
}

message AlleyPlacingGameScRsp {
    uint32 ILEGFKGCMOM = 1;
    uint32 event_id = 2;
    uint32 retcode = 4;
    uint32 ELBBANDDJCI = 7;
    uint32 PGLGBLKKIDA = 9;
    uint32 KFBOKLHDJDA = 13;
    uint32 KOFICKLLJNI = 14;
    uint32 KHIBBGPHDMB = 15;
}

message ActivityRaidPlacingGameCsReq {
    AlleyPlacingShip EJJODHJHHAM = 11;
    oneof DGEPHKNEPBM {
        uint32 CJEMMDPICLJ = 4;
        uint32 FJDABPPANDC = 13;
    }
}

message ActivityRaidPlacingGameScRsp {
    uint32 retcode = 7;
    oneof DGEPHKNEPBM {
        uint32 CJEMMDPICLJ = 4;
        uint32 FJDABPPANDC = 13;
    }
}

message ECJMJJKJGOP {
    repeated uint32 FBEILDAJEDE = 1;
    uint32 CPGAJPCKCDG = 2;
    uint32 HDKDKJBDGCC = 3;
    bool IICHHOKOPGG = 7;
    repeated uint32 JDJCNBGOGLP = 10;
    uint32 JALHNEIDHGJ = 14;
}

message AlleyOrderChangedScNotify {
    ECJMJJKJGOP PPHIADNKGAF = 1;
}

message AlleyShipUnlockScNotify {
    uint32 EJDFKNMNALE = 14;
}

message LLLOMACPCGB {
    uint32 shop_id = 8;
    uint32 LEPACDHLBIB = 9;
    repeated uint32 PPIBBKHLMJC = 10;
    repeated uint32 CADHPHLNOCH = 11;
    uint32 BEHPABEEODH = 12;
    repeated uint32 DGNKGDLILLB = 13;
    uint32 CAKCCBJOHOI = 15;
}

message NJAOIGGMEAL {
    uint32 map_id = 1;
    uint32 cost_time = 4;
    repeated LLLOMACPCGB HOFDBFLCGKB = 15;
}

message LogisticsScore {
    ItemList Reward = 1;
    uint32 LastMaxScore = 4;
    uint32 CurScore = 5;
    uint32 UnlockLevel = 7;
    uint32 MapId = 10;
    uint32 MaxScore = 11;
    uint32 LastLevel = 12;
}

message LogisticsGameCsReq {
    bool BOBLNBJMKCA = 2;
    repeated NJAOIGGMEAL APMCPHFMAEG = 12;
}

message LogisticsScoreRewardSyncInfoScNotify {
    repeated LogisticsScore FMJPLHOHBAB = 8;
}

message LogisticsGameScRsp {
    bool BOBLNBJMKCA = 2;
    uint32 retcode = 8;
    uint32 event_id = 11;
    repeated LogisticsScore FMJPLHOHBAB = 14;
}

message HEHAOMIAMGL {
    uint32 event_id = 4;
    uint32 NINGBNBMKOP = 7;
    AlleyEventState state = 9;
}

message StartAlleyEventCsReq {
    uint32 event_id = 15;
}

message StartAlleyEventScRsp {
    uint32 retcode = 10;
    uint32 event_id = 12;
}

message AlleyEventChangeNotify {
    uint32 HCNLDIBEACA = 1;
    HEHAOMIAMGL NFLDODIABCL = 12;
}

message AlleyEventEffectNotify {
    uint32 LFILNMFDNIG = 6;
}

message TakePrestigeRewardCsReq {
    uint32 level = 2;
}

message TakePrestigeRewardScRsp {
    ItemList reward = 1;
    uint32 retcode = 4;
    uint32 level = 10;
}

message PrestigeLevelUpCsReq {
}

message PrestigeLevelUpScRsp {
    uint32 retcode = 4;
    uint32 level = 12;
}

message AlleyFundsScNotify {
    uint32 DBJHEMIPPIM = 8;
}

message SaveLogisticsCsReq {
    repeated NJAOIGGMEAL APMCPHFMAEG = 15;
}

message SaveLogisticsScRsp {
    uint32 retcode = 6;
    repeated NJAOIGGMEAL APMCPHFMAEG = 15;
}

message LogisticsInfoScNotify {
    AGADEMAJIMD NJGAMCCGADC = 10;
}

message LAIEMCFACDK {
    uint32 ALGHCNAJBMM = 6;
    uint32 PGHCKCPKGLL = 7;
    map<uint32, uint32> AAHAPCBILHC = 10;
}

message AlleyShipmentEventEffectsScNotify {
    LAIEMCFACDK LGJKPJOJBLF = 8;
}

message GetSaveLogisticsMapCsReq {
}

message GetSaveLogisticsMapScRsp {
    repeated NJAOIGGMEAL HNFOJBCJAMG = 1;
    uint32 retcode = 11;
}

message AlleyShipUsedCountScNotify {
    map<uint32, uint32> NPLAKEOKEKB = 1;
}

message AlleyGuaranteedFundsCsReq {
}

message AlleyGuaranteedFundsScRsp {
    uint32 CLIBOBEHNDM = 4;
    uint32 retcode = 14;
}

message AlleyTakeEventRewardCsReq {
    uint32 event_id = 12;
}

message AlleyTakeEventRewardScRsp {
    ItemList reward = 3;
    uint32 retcode = 10;
}

message LogisticsDetonateStarSkiffCsReq {
}

message LogisticsDetonateStarSkiffScRsp {
    uint32 retcode = 15;
}

message RelicList {
    uint32 type = 3;
    uint32 set_id = 6;
}

message MonsterList {
    uint32 Num = 5;
    uint32 monster_id = 14;
}

message ArchiveData {
    repeated uint32 archive_missing_avatar_id_list = 2;
    repeated MonsterList kill_monster_list = 6;
    repeated uint32 archive_equipment_id_list = 7;
    repeated RelicList relic_list = 9;
    repeated uint32 archive_missing_equipment_id_list = 14;
}

message GetArchiveDataCsReq {
}

message GetArchiveDataScRsp {
    uint32 retcode = 4;
    ArchiveData archive_data = 10;
}

message GetUpdatedArchiveDataCsReq {
}

message GetUpdatedArchiveDataScRsp {
    ArchiveData archive_data = 8;
    uint32 retcode = 15;
}

message GetAvatarDataCsReq {
    bool is_get_all = 10;
    repeated uint32 base_avatar_id_list = 11;
}

message EquipRelic {
    uint32 type = 4;
    uint32 relic_unique_id = 11;
}

message Avatar {
    bool is_marked = 2;
    uint32 base_avatar_id = 3;
    uint64 first_met_time_stamp = 4;
    uint32 dressed_skin_id = 5;
    uint32 rank = 6;
    repeated uint32 has_taken_promotion_reward_list = 7;
    uint32 exp = 9;
    repeated AvatarSkillTree skilltree_list = 10;
    repeated EquipRelic equip_relic_list = 11;
    uint32 equipment_unique_id = 12;
    uint32 level = 13;
    uint32 promotion = 14;
}

message GetAvatarDataScRsp {
    repeated GrowthTartgetFuncType PNKCFEALAMI = 1;
    uint32 JPNLPOPMKEJ = 5;
    repeated Avatar avatar_list = 10;
    uint32 retcode = 11;
    repeated uint32 skin_list = 13;
    bool is_get_all = 14;
}

message AvatarExpUpCsReq {
    uint32 base_avatar_id = 5;
    ItemCostData item_cost = 6;
}

message AvatarExpUpScRsp {
    repeated PileItem return_item_list = 2;
    uint32 retcode = 9;
}

message UnlockSkilltreeCsReq {
    uint32 point_id = 1;
    uint32 level = 2;
    repeated ItemCost item_list = 3;
}

message UnlockSkilltreeScRsp {
    uint32 retcode = 2;
    uint32 point_id = 6;
    uint32 level = 8;
}

message PromoteAvatarCsReq {
    uint32 base_avatar_id = 7;
    repeated ItemCost item_list = 9;
}

message PromoteAvatarScRsp {
    uint32 retcode = 10;
}

message DressAvatarCsReq {
    uint32 equipment_unique_id = 12;
    uint32 avatar_id = 15;
}

message DressAvatarScRsp {
    uint32 retcode = 4;
}

message TakeOffEquipmentCsReq {
    uint32 avatar_id = 9;
}

message TakeOffEquipmentScRsp {
    uint32 retcode = 13;
}

message AddAvatarScNotify {
    bool is_new = 2;
    ItemList reward = 8;
    uint32 base_avatar_id = 9;
    AddAvatarSrcState src = 14;
}

message AddMultiPathAvatarScNotify {
    ItemList reward = 2;
    uint32 avatar_id = 4;
    bool is_new = 12;
}

message RankUpAvatarCsReq {
    ItemCostData cost_data = 2;
    uint32 rank = 7;
    uint32 avatar_id = 11;
}

message RankUpAvatarScRsp {
    uint32 retcode = 13;
}

message DressRelicParam {
    uint32 relic_type = 11;
    uint32 relic_unique_id = 13;
}

message DressRelicAvatarCsReq {
    uint32 avatar_id = 2;
    repeated DressRelicParam switch_list = 8;
}

message DressRelicAvatarScRsp {
    uint32 retcode = 6;
}

message TakeOffRelicCsReq {
    uint32 avatar_id = 8;
    repeated uint32 relic_type_list = 15;
}

message TakeOffRelicScRsp {
    uint32 retcode = 15;
}

message TakePromotionRewardCsReq {
    uint32 base_avatar_id = 10;
    uint32 promotion = 11;
}

message TakePromotionRewardScRsp {
    ItemList reward_list = 5;
    uint32 retcode = 10;
}

message DressAvatarSkinCsReq {
    uint32 avatar_id = 4;
    uint32 skin_id = 15;
}

message DressAvatarSkinScRsp {
    uint32 retcode = 14;
}

message TakeOffAvatarSkinCsReq {
    uint32 avatar_id = 6;
}

message TakeOffAvatarSkinScRsp {
    uint32 retcode = 10;
}

message UnlockAvatarSkinScNotify {
    uint32 skin_id = 1;
}

message MarkAvatarCsReq {
    bool is_marked = 3;
    uint32 avatar_id = 5;
}

message MarkAvatarScRsp {
    uint32 avatar_id = 1;
    bool is_marked = 9;
    uint32 retcode = 15;
}

message SetGrowthTargetAvatarCsReq {
    repeated GrowthTartgetFuncType growth_target_type_list = 1;
    GrowthTargetState source = 3;
    uint32 avatar_id = 7;
    uint32 IDNMEKNHLPO = 14;
}

message SetGrowthTargetAvatarScRsp {
    repeated GrowthTartgetFuncType growth_target_type_list = 5;
    uint32 retcode = 7;
    uint32 JPNLPOPMKEJ = 9;
    uint32 NCBKPDNGOHJ = 14;
}

message GrowthTargetAvatarChangedScNotify {
    uint32 JPNLPOPMKEJ = 8;
    repeated GrowthTartgetFuncType growth_target_type_list = 15;
}

message GetPreAvatarGrowthInfoCsReq {
    uint32 KJAEOJBJOJD = 1;
}

message GetPreAvatarGrowthInfoScRsp {
    uint32 DLAPKBDDBBC = 1;
    uint32 IHOKHLFHOCC = 2;
    uint32 retcode = 3;
    uint32 AEKFJKENPHN = 4;
    uint32 LIJCNGOHKHF = 5;
    uint32 FOJCCKACDHH = 6;
    uint32 PHIBNKMIOGP = 7;
    uint32 HDNIKCBLKIL = 8;
    uint32 KJAEOJBJOJD = 9;
    uint32 FLAAGNAPDHP = 10;
    uint32 DBIJFKOBKKH = 11;
    uint32 LKKAMLLAFAE = 12;
    uint32 JJMKEADCIAG = 13;
    uint32 PMMCFGMPLBA = 14;
    uint32 EGDDNPEONKC = 15;
    uint32 DGGNNBCJOCC = 221;
    string MKHLDLFONKN = 426;
    string OANPNFJJFHG = 508;
    string KPJHBEILAIP = 1269;
    uint32 KIEJACMOGAN = 1486;
    string EBPPBPMHDHI = 1911;
}

message OPPGLJBHKLL {
    uint32 panel_id = 3;
    uint32 type = 13;
    uint32 KJAEOJBJOJD = 14;
}

message GetPreAvatarListCsReq {
}

message GetPreAvatarListScRsp {
    uint32 retcode = 3;
    repeated OPPGLJBHKLL JMJGMDHNPEN = 7;
}

message PVEBattleResultCsReq {
    uint32 JCJFGOJFEGE = 1;
    bool is_ai_consider_ultra_skill = 2;
    uint32 client_res_version = 3;
    uint32 battle_id = 4;
    BattleEndStatus end_status = 5;
    map<string, uint32> HPEKEKIPJLF = 6;
    BattleStatistics stt = 7;
    string turn_snapshot_hash = 8;
    uint32 client_version = 9;
    uint32 cost_time = 10;
    repeated BattleOp op_list = 11;
    string debug_extra_info = 12;
    uint32 stage_id = 13;
    bool GJGKAGFPAGM = 14;
    bool is_auto_fight = 15;
}

message PVEBattleResultScRsp {
    ItemList multiple_drop_data = 1;
    uint32 KLODELECMCI = 2;
    ItemList drop_data = 3;
    repeated BattleAvatar pve_avatar_list = 4;
    uint32 battle_id = 5;
    string bin_version = 6;
    string res_version = 7;
    BattleEndStatus end_status = 8;
    bool check_identical = 9;
    uint32 GGMPFNKOFKD = 10;
    uint32 stage_id = 11;
    uint32 retcode = 12;
    ItemList EIGNJEEGDEP = 13;
    uint32 mismatch_turn_count = 14;
    uint32 event_id = 15;
    ItemList item_list_unk2 = 1637;
    MBKOCMMICPG KJCHGEHDLNO = 1649;
}

message QuitBattleCsReq {
    BattleStatistics stt = 1;
    RebattleType rebattle_type = 7;
}

message QuitBattleScRsp {
    uint32 retcode = 11;
}

message GetCurBattleInfoCsReq {
}

message GetCurBattleInfoScRsp {
    uint32 retcode = 1;
    BattleEndStatus last_end_status = 5;
    AetherDivideBattleInfo PBPHJBAFGBB = 7;
    SceneBattleInfo battle_info = 11;
    uint32 IBPJKFFFLNG = 13;
}

message SyncClientResVersionCsReq {
    uint32 client_res_version = 10;
}

message SyncClientResVersionScRsp {
    uint32 client_res_version = 8;
    uint32 retcode = 12;
}

message QuitBattleScNotify {
}

message BattleLogReportCsReq {
}

message BattleLogReportScRsp {
    bool is_battle_log_report = 4;
    uint32 retcode = 15;
}

message ServerSimulateBattleFinishScNotify {
}

message ReBattleAfterBattleLoseCsNotify {
    bool PMJAHILBLFL = 4;
}

message RebattleByClientCsNotify {
    RebattleType rebattle_type = 8;
    BattleStatistics stt = 10;
}

message GetBattleCollegeDataCsReq {
}

message GetBattleCollegeDataScRsp {
    repeated uint32 finished_college_id_list = 2;
    uint32 MAMHOJMFJOF = 11;
    uint32 retcode = 13;
}

message BattleCollegeDataChangeScNotify {
    uint32 MAMHOJMFJOF = 6;
    repeated uint32 finished_college_id_list = 12;
    ItemList reward = 14;
}

message StartBattleCollegeCsReq {
    uint32 id = 9;
}

message StartBattleCollegeScRsp {
    SceneBattleInfo battle_info = 2;
    uint32 id = 6;
    uint32 retcode = 7;
}

message BattlePassInfoNotify {
    uint64 HKEOAACCBPL = 1;
    uint64 INBOCKJGLBO = 2;
    uint32 exp = 4;
    uint32 EDBMNMDJBKO = 5;
    uint32 level = 6;
    uint64 NKAOKNMHOLH = 7;
    uint64 FDKKIKGANCK = 8;
    uint64 LJOEKEFKPKO = 9;
    BpTierType JLLHALOHJII = 10;
    uint64 CBJKLLEOHDC = 11;
    uint64 EKGOPLDJOII = 12;
    uint32 LJFLFLIMKAD = 13;
    uint64 CPHIIOCKHPI = 15;
}

message TakeBpRewardCsReq {
    BpRewardType type = 1;
    uint32 optional_reward_id = 14;
    uint32 level = 15;
}

message TakeBpRewardScRsp {
    uint32 retcode = 8;
    ItemList reward = 11;
}

message BuyBpLevelCsReq {
    uint32 LDNJEACFBJE = 5;
}

message BuyBpLevelScRsp {
    uint32 retcode = 7;
}

message OptionalReward {
    uint32 Level = 1;
    uint32 OptionalRewardId = 4;
}

message TakeAllRewardCsReq {
    repeated OptionalReward MODOOFJOIAO = 15;
}

message TakeAllRewardScRsp {
    ItemList reward = 5;
    uint32 retcode = 11;
}

message GetBenefitActivityInfoCsReq {
}

message LuckyKoiInfo {
    string NameStr = 3;
    string UidStr = 10;
    uint32 HeadIcon = 11;
}

message BenefitRewardItem {
    ItemList item_list = 10;
    uint32 level = 15;
}

message BenefitItemConfig {
    repeated LuckyKoiInfo lucky_koi_list = 3;
    uint64 reveal_time = 5;
    uint32 reveal_num_limit = 7;
    uint64 begin_time = 9;
    repeated BenefitRewardItem rogue_score_reward_info = 13;
    uint64 end_time = 14;
}

message BenefitData {
    uint32 status = 4;
    uint32 level = 7;
    BenefitItemConfig config = 10;
    uint32 daily_index = 14;
}

message GetBenefitActivityInfoScRsp {
    repeated BenefitData benefit_data_list = 3;
    bool is_open = 5;
    uint32 retcode = 8;
}

message SwitchItem {
    bool EINFBGKENDH = 7;
    uint32 daily_index = 8;
}

message TakeBenefitActivityRewardCsReq {
    repeated SwitchItem switch_list = 6;
    bool BFBPCBNPFPH = 7;
}

message RewardSwitchItem {
    ItemList item_list = 2;
    bool EINFBGKENDH = 8;
    uint32 daily_index = 12;
}

message TakeBenefitActivityRewardScRsp {
    repeated RewardSwitchItem switch_list = 4;
    ItemList CKEKCCONJGB = 12;
    uint32 retcode = 14;
}

message JoinBenefitActivityCsReq {
    uint32 daily_index = 4;
}

message JoinBenefitActivityScRsp {
    uint32 retcode = 2;
    uint32 daily_index = 13;
}

message IJKJJDHLKLB {
    uint32 avatar_id = 8;
    AvatarType avatar_type = 15;
}

message FCIHIJLOMGA {
    bool APLKNJEGBKF = 1;
    uint32 NAALCBMBPGC = 2;
    uint32 HNPEAPPMGAA = 3;
    repeated uint32 avatar_list = 5;
    repeated IJKJJDHLKLB MDLACHDKMPH = 6;
    uint32 LLFOFPNDAFG = 8;
    repeated uint32 HLIBIJFHHPG = 9;
    uint32 HJMGLEMJHKG = 13;
    uint32 CPGOIPICPJF = 14;
    uint32 challenge_id = 15;
}

message GetBoxingClubInfoCsReq {
}

message GetBoxingClubInfoScRsp {
    uint32 retcode = 2;
    repeated FCIHIJLOMGA challenge_list = 4;
}

message GNEIBBPOAAB {
    AvatarType avatar_type = 3;
    uint32 avatar_id = 12;
}

message MatchBoxingClubOpponentCsReq {
    repeated uint32 avatar_list = 11;
    uint32 challenge_id = 12;
    repeated GNEIBBPOAAB MDLACHDKMPH = 13;
}

message MatchBoxingClubOpponentScRsp {
    FCIHIJLOMGA challenge = 3;
    uint32 retcode = 8;
}

message ChooseBoxingClubResonanceCsReq {
    uint32 challenge_id = 7;
    uint32 LLFOFPNDAFG = 15;
}

message ChooseBoxingClubResonanceScRsp {
    FCIHIJLOMGA challenge = 4;
    uint32 retcode = 6;
}

message SetBoxingClubResonanceLineupCsReq {
    uint32 challenge_id = 12;
    repeated GNEIBBPOAAB MDLACHDKMPH = 14;
}

message SetBoxingClubResonanceLineupScRsp {
    FCIHIJLOMGA challenge = 5;
    uint32 retcode = 11;
}

message ChooseBoxingClubStageOptionalBuffCsReq {
    uint32 FMGMAIEGOFP = 2;
    uint32 challenge_id = 12;
}

message ChooseBoxingClubStageOptionalBuffScRsp {
    FCIHIJLOMGA challenge = 3;
    uint32 retcode = 5;
}

message StartBoxingClubBattleCsReq {
    uint32 challenge_id = 3;
}

message StartBoxingClubBattleScRsp {
    uint32 challenge_id = 2;
    SceneBattleInfo battle_info = 6;
    uint32 retcode = 12;
}

message GiveUpBoxingClubChallengeCsReq {
    uint32 challenge_id = 2;
    bool PCPDFJHDJCC = 4;
}

message GiveUpBoxingClubChallengeScRsp {
    uint32 retcode = 4;
    FCIHIJLOMGA challenge = 11;
}

message BoxingClubRewardScNotify {
    uint32 NAALCBMBPGC = 1;
    bool is_win = 3;
    ItemList reward = 9;
    uint32 challenge_id = 12;
}

message BoxingClubChallengeUpdateScNotify {
    FCIHIJLOMGA challenge = 5;
}

message Challenge {
    uint32 challenge_id = 2;
    uint32 record_id = 4;
    bool KFDAICILNMB = 7;
    uint32 score_two = 8;
    uint32 taken_reward = 10;
    uint32 star = 11;
    ChallengeStageInfo stage_info = 12;
    uint32 score_id = 15;
}

message ChallengeGroup {
    uint32 group_id = 13;
    uint64 taken_stars_count_reward = 15;
}

message ChallengeHistoryMaxLevel {
    uint32 reward_display_type = 3;
    uint32 level = 7;
}

message GetChallengeCsReq {
}

message GetChallengeScRsp {
    uint32 retcode = 1;
    uint32 LPLJMKPBLIF = 4;
    repeated ChallengeHistoryMaxLevel max_level_list = 5;
    repeated Challenge challenge_list = 10;
    repeated ChallengeGroup challenge_group_list = 11;
}

message ChallengeStoryBuffInfo {
    uint32 buff_two = 1;
    uint32 buff_one = 14;
}

message ChallengeBossBuffInfo {
    uint32 buff_one = 3;
    uint32 buff_two = 11;
}

message ChallengeBuffInfo {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message StartChallengeCsReq {
    repeated uint32 first_lineup = 1;
    uint32 challenge_id = 5;
    repeated uint32 second_lineup = 6;
    ChallengeBuffInfo stage_info = 10;
}

message StartChallengeScRsp {
    ChallengeStageInfo stage_info = 9;
    repeated LineupInfo lineup_list = 10;
    CurChallenge cur_challenge = 11;
    SceneInfo scene = 13;
    uint32 retcode = 15;
}

message StartPartialChallengeCsReq {
    bool is_first_half = 3;
    uint32 buff_id = 8;
    uint32 challenge_id = 10;
}

message StartPartialChallengeScRsp {
    CurChallenge cur_challenge = 4;
    SceneInfo scene = 8;
    uint32 retcode = 12;
    LineupInfo lineup = 14;
}

message LeaveChallengeCsReq {
}

message LeaveChallengeScRsp {
    uint32 retcode = 3;
}

message ChallengeSettleNotify {
    uint32 challenge_score = 3;
    CurChallenge cur_challenge = 4;
    uint32 challenge_id = 5;
    ChallengeHistoryMaxLevel max_level = 6;
    bool is_win = 8;
    uint32 score_two = 10;
    uint32 star = 11;
    uint32 LPLJMKPBLIF = 12;
    repeated uint32 HAHAEIFMLBM = 14;
    ItemList reward = 15;
}

message KillMonster {
    uint32 kill_num = 1;
    uint32 monster_id = 13;
}

message ChallengeStoryBuffList {
    repeated uint32 buff_list = 14;
}

message ChallengeBossBuffList {
    repeated uint32 buff_list = 5;
    uint32 challenge_boss_const = 10;
}

message ChallengeCurBuffInfo {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message CurChallenge {
    uint32 dead_avatar_num = 1;
    ChallengeCurBuffInfo stage_info = 2;
    ExtraLineupType extra_lineup_type = 5;
    uint32 challenge_id = 8;
    uint32 round_count = 9;
    ChallengeStatus status = 10;
    uint32 score_id = 13;
    uint32 score_two = 14;
    repeated KillMonster kill_monster_list = 15;
}

message GetCurChallengeCsReq {
}

message GetCurChallengeScRsp {
    repeated LineupInfo lineup_list = 1;
    CurChallenge cur_challenge = 12;
    uint32 retcode = 15;
}

message ChallengeLineupNotify {
    ExtraLineupType extra_lineup_type = 11;
}

message TakeChallengeRewardCsReq {
    uint32 group_id = 13;
}

message TakeChallengeRewardScRsp {
    uint32 group_id = 11;
    repeated TakenChallengeRewardInfo taken_reward_list = 14;
    uint32 retcode = 15;
}

message TakenChallengeRewardInfo {
    ItemList reward = 6;
    uint32 star_count = 8;
}

message ChallengeStatistics {
    ChallengeStageTertinggi stage_tertinggi = 8;
    uint32 record_id = 9;
}

message ChallengeStoryStatistics {
    uint32 record_id = 1;
    ChallengeStoryStageTertinggi stage_tertinggi = 10;
}

message ChallengeBossStatistics {
    ChallengeBossStageTertinggi stage_tertinggi = 7;
    uint32 record_id = 9;
}

message ChallengeStageTertinggi {
    repeated ChallengeLineupList lineup_list = 1;
    uint32 round_count = 6;
    uint32 INHDDNNPBDB = 11;
    uint32 level = 12;
}

message ChallengeStoryStageTertinggi {
    uint32 buff_one = 1;
    uint32 INHDDNNPBDB = 2;
    repeated ChallengeLineupList lineup_list = 3;
    uint32 buff_two = 6;
    uint32 level = 7;
    uint32 score_id = 8;
}

message ChallengeBossStageTertinggi {
    uint32 buff_one = 1;
    uint32 level = 3;
    uint32 INHDDNNPBDB = 4;
    uint32 buff_two = 6;
    repeated ChallengeLineupList lineup_list = 10;
    uint32 score_id = 15;
}

message ChallengeLineupList {
    repeated ChallengeAvatarInfo avatar_list = 14;
}

message ChallengeAvatarInfo {
    uint32 id = 4;
    uint32 index = 6;
    uint32 GGDIIBCDOBB = 7;
    AvatarType avatar_type = 10;
    uint32 level = 13;
}

message GetChallengeGroupStatisticsCsReq {
    uint32 group_id = 2;
}

message GetChallengeGroupStatisticsScRsp {
    uint32 retcode = 1;
    uint32 group_id = 15;
    oneof CGFPDMPPNJF {
        ChallengeStatistics challenge_default = 172;
        ChallengeStoryStatistics challenge_story = 847;
        ChallengeBossStatistics challenge_boss = 1035;
    }
}

message ChallengeBossSingleNodeInfo {
    bool MEELGNDNOMN = 7;
    uint32 buff_id = 9;
    bool is_win = 11;
    uint32 max_score = 13;
}

message ChallengeBossEquipmentInfo {
    uint32 unique_id = 2;
    uint32 tid = 6;
    uint32 level = 7;
    uint32 rank = 10;
    uint32 promotion = 12;
}

message ChallengeBossRelicInfo {
    uint32 tid = 6;
    uint32 main_affix_id = 7;
    repeated RelicAffix sub_affix_list = 11;
    uint32 unique_id = 12;
    uint32 level = 13;
}

message ChallengeBossAvatarRelicInfo {
    map<uint32, ChallengeBossRelicInfo> NAGDKFKIFIG = 10;
}

message ChallengeBossInfo {
    ChallengeBossSingleNodeInfo second_node = 2;
    bool NCBDNPGPEAI = 4;
    repeated uint32 first_lineup = 5;
    ChallengeBossSingleNodeInfo first_node = 8;
    map<uint32, ChallengeBossAvatarRelicInfo> FOMGNPGACKC = 10;
    map<uint32, ChallengeBossEquipmentInfo> EHJEDEONJKK = 12;
    repeated uint32 second_lineup = 13;
}

message ChallengeStageInfo {
    ChallengeBossInfo boss_info = 4;
}

message RestartChallengePhaseCsReq {
}

message RestartChallengePhaseScRsp {
    SceneInfo scene = 4;
    uint32 retcode = 14;
}

message EnterChallengeNextPhaseCsReq {
}

message EnterChallengeNextPhaseScRsp {
    uint32 retcode = 8;
    SceneInfo scene = 10;
}

message ChallengeBossPhaseSettleNotify {
    uint32 phase = 2;
    bool is_second_half = 3;
    uint32 page_type = 5;
    bool is_win = 6;
    uint32 star = 7;
    bool is_reward = 8;
    repeated BattleTarget battle_target_list = 9;
    uint32 challenge_score = 10;
    uint32 score_two = 13;
    uint32 challenge_id = 15;
}

message SendMsgCsReq {
    MsgType message_type = 3;
    repeated uint32 target_list = 5;
    string message_text = 6;
    uint32 extra_id = 8;
    PEDLPHDBNAF HNBEPABNBNG = 9;
    ChatType chat_type = 13;
}

message SendMsgScRsp {
    uint64 end_time = 1;
    uint32 retcode = 3;
}

message ChatMessageData {
    uint32 sender_id = 1;
    PEDLPHDBNAF HNBEPABNBNG = 5;
    MsgType message_type = 6;
    uint64 create_time = 11;
    uint32 extra_id = 14;
    string content = 15;
}

message RevcMsgScNotify {
    uint32 source_uid = 1;
    ChatType chat_type = 3;
    uint32 extra_id = 4;
    PEDLPHDBNAF HNBEPABNBNG = 7;
    MsgType message_type = 10;
    string message_text = 12;
    uint32 target_uid = 14;
}

message PrivateMsgOfflineUsersScNotify {
    repeated uint32 contact_id_list = 2;
}

message GetPrivateChatHistoryCsReq {
    uint32 target_side = 4;
    uint32 contact_side = 6;
}

message GetPrivateChatHistoryScRsp {
    uint32 retcode = 6;
    uint32 target_side = 9;
    uint32 contact_side = 14;
    repeated ChatMessageData chat_message_list = 15;
}

message FriendHistoryInfo {
    uint32 contact_side = 2;
    int64 last_send_time = 10;
}

message GetChatFriendHistoryCsReq {
}

message GetChatFriendHistoryScRsp {
    uint32 retcode = 3;
    repeated FriendHistoryInfo friend_history_info = 9;
}

message GetChatEmojiListCsReq {
}

message GetChatEmojiListScRsp {
    uint32 retcode = 12;
    repeated uint32 chat_emoji_list = 15;
}

message MarkChatEmojiCsReq {
    bool is_remove_id = 3;
    uint32 extra_id = 8;
}

message MarkChatEmojiScRsp {
    uint32 extra_id = 2;
    bool is_remove_id = 3;
    uint32 retcode = 6;
}

message BatchMarkChatEmojiCsReq {
    repeated uint32 marked_emoji_id_list = 7;
}

message BatchMarkChatEmojiScRsp {
    repeated uint32 marked_emoji_id_list = 1;
    uint32 retcode = 8;
}

message GetLoginChatInfoCsReq {
}

message GetLoginChatInfoScRsp {
    repeated uint32 contact_id_list = 1;
    uint32 retcode = 5;
}

message RogueAvatarReviveCost {
    ItemCostData rogue_revive_cost = 12;
}

message ChessRogueInfo {
    SceneInfo scene = 5;
    LineupInfo lineup = 13;
}

message ChessRogueDiceInfo {
    uint32 cur_surface_slot_id = 1;
    ChessRogueDiceStatus dice_status = 3;
    uint32 cheat_times = 4;
    uint32 display_id = 5;
    bool can_reroll_dice = 6;
    ChessRogueDiceType dice_type = 7;
    uint32 reroll_times = 8;
    uint32 cur_surface_id = 9;
    uint32 PAGPBLAFNEH = 11;
    uint32 game_branch_id = 12;
    uint32 game_dice_branch_id = 14;
    RogueModifier rogue_modifider = 139;
    bool FNEIDJIMJPH = 263;
    EENDHPKPFLP EDPHLDEGJLM = 1462;
    int32 JFIPIIFPMMB = 1591;
    ChessRogueDice dice = 1702;
    repeated uint32 NGDEDLKNGFG = 1708;
}

message ChessRogueRollDiceCsReq {
    uint32 KCHFJDAJECM = 9;
}

message ChessRogueRollDiceScRsp {
    uint32 retcode = 5;
    ChessRogueDiceInfo rogue_dice_info = 6;
}

message CellMonster {
    uint32 boss_decay_id = 6;
    uint32 monster_id = 13;
}

message CellMonsterInfo {
    bool confirm = 3;
    uint32 select_boss_id = 5;
    repeated CellMonster cell_monster_list = 6;
}

message CellMonsterSelectInfo {
    repeated uint32 select_decay_id = 12;
}

message CellFinalMonsterInfo {
    CellMonsterSelectInfo select_boss_info = 1;
    CellMonsterInfo cell_boss_info = 5;
}

message CellAdvanceInfo {
    oneof LDMCCMABLLC {
        CellFinalMonsterInfo final_boss_info = 1;
        CellMonsterInfo cell_boss_info = 9;
        CellMonsterSelectInfo select_boss_info = 14;
    }
}

message ChessRogueCell {
    uint32 pos_y = 2;
    uint32 block_type = 3;
    ChessRogueBoardCellStatus cell_status = 6;
    uint32 mark_type = 7;
    bool is_unlocked = 8;
    uint32 id = 10;
    ChessRogueCellSpecialType special_type = 11;
    uint32 room_id = 12;
    uint32 pos_x = 13;
    CellAdvanceInfo stage_info = 14;
    bool unlock = 15;
}

message CellInfo {
    uint32 HDHIONGOFID = 4;
    uint32 BMAJDILBPOB = 6;
    repeated ChessRogueCell cell_list = 8;
    uint32 NGHPPEGBPAO = 12;
    uint32 HLAMICLGPEE = 15;
}

message ChessRogueHistoryCellInfo {
    uint32 room_id = 5;
    uint32 cell_id = 12;
}

message KKCKGEOJFKE {
    uint32 BDMLGEPNDFM = 10;
    EENDHPKPFLP BOHDMINEJNO = 14;
}

message ChessRogueAreaInfo {
    CellInfo cell = 1;
    repeated ChessRogueHistoryCellInfo history_cell = 2;
    uint32 cur_id = 4;
    repeated uint32 allow_select_cell_id_list = 5;
    uint32 cur_board_id = 8;
    ChessRogueBoardCellStatus CCGHBBBOLMH = 13;
    KKCKGEOJFKE CFEKAOLKHJG = 14;
}

message ChessRogueLevelInfo {
    repeated uint32 area_id_list = 1;
    uint32 id = 3;
    ChessRogueAreaInfo area_info = 4;
    uint32 level_status = 7;
    uint32 MHOIJAFGECP = 9;
    int32 OCDNMHNNKGM = 10;
    uint32 layer_id = 11;
    int32 action_point = 14;
}

message ChessRogueQueryAeon {
    uint32 aeon_id = 12;
    uint32 MAMHOJMFJOF = 14;
}

message ChessRogueQueryAeonInfo {
    repeated ChessRogueQueryAeon aeon_list = 5;
}

message ChessRogueAeonInfo {
    repeated uint32 aeon_id_list = 5;
    EENDHPKPFLP BOHDMINEJNO = 10;
    uint32 game_aeon_id = 12;
    int32 ICJABPGMACJ = 13;
    ChessRogueQueryAeonInfo chess_aeon_info = 14;
}

message ChessRogueLineupAvatarInfo {
    uint32 avatar_id = 6;
}

message ChessRogueLineupInfo {
    repeated ChessRogueLineupAvatarInfo chess_avatar_list = 2;
    RogueAvatarReviveCost revive_info = 6;
}

message HKMLALBDPGO {
    uint32 LHCBBGIMMDG = 1;
    repeated uint32 BOONPDEOBLA = 2;
    uint32 FAHIHDJFOHM = 3;
    bool FJKGKAEKBKJ = 12;
}

message ChessRogueNousValueInfo {
    int32 nous_value = 11;
}

message ChessRogueCurrentDifficultyInfo {
    repeated uint32 difficulty_id_list = 10;
}

message ChessRogueGameInfo {
    uint32 rogue_sub_mode = 1;
    ChessRogueDiceInfo rogue_dice_info = 2;
    IMNPEAJAJJO OPAKJJMAGPH = 3;
    ChessRogueAeonInfo rogue_aeon_info = 4;
    HKMLALBDPGO story_info = 5;
    repeated RogueGameInfo rogue_current_game_info = 7;
    ChessRogueLevelInfo level_info = 8;
    ChessRogueNousValueInfo nous_value_info = 9;
    RogueVirtualItem virtual_item_info = 10;
    ChessRogueLineupInfo rogue_lineup_info = 11;
    ChessRogueMiracleInfo game_miracle_info = 12;
    ChessRogueBuffInfo rogue_buff_info = 14;
    RogueCommonPendingAction pending_action = 15;
    ChessRogueCurrentDifficultyInfo rogue_difficulty_info = 1724;
}

message ChessRogueQueryInfo {
    ChessRogueTalentInfo talent_info_list = 1;
    ChessRogueQueryAeonInfo chess_aeon_info = 2;
    repeated uint32 area_id_list = 5;
    repeated uint32 explored_area_id_list = 6;
    ChessRogueQueryDiceInfo query_dice_info = 9;
    AFAGHELICPD rogue_difficulty_info = 13;
}

message ChessRogueCurrentInfo {
    uint32 rogue_sub_mode = 3;
    repeated RogueGameInfo rogue_current_game_info = 14;
}

message ChessRogueGetInfo {
    repeated uint32 explored_area_id_list = 3;
    ChessRogueQueryDiceInfo query_dice_info = 6;
    repeated uint32 area_id_list = 9;
    ChessRogueTalentInfo talent_info_list = 11;
    AFAGHELICPD rogue_difficulty_info = 13;
    ChessRogueQueryAeonInfo chess_aeon_info = 15;
}

message ChessRogueFinishInfo {
    uint32 DMBDNAICPFB = 1;
    uint32 PBALFIENEFO = 2;
    LineupInfo ANNIAOIDADO = 3;
    ChessRogueQuitReason GMOLNJIBNJA = 4;
    bool is_finish = 5;
    AJPFPHKKLPG game_miracle_info = 6;
    ItemList BGPECKFDELD = 7;
    uint32 BLBBOKOGFDA = 8;
    uint32 IPOJMMGOOPJ = 9;
    uint32 FGOMIPLMEIC = 10;
    GCKBLHADLGN rogue_buff_info = 12;
    repeated uint32 OJGGMOOPGIL = 13;
    uint32 PLBCDIAADKD = 14;
    uint32 EGPCIBJIAJD = 320;
    uint32 score_id = 811;
    uint32 rogue_sub_mode = 1004;
    IMNPEAJAJJO OPAKJJMAGPH = 1807;
    uint32 OPOIMHHAFJO = 1841;
    uint32 ABEHKCJHCEH = 2016;
}

message OJLEEFJELAP {
    repeated ChessRogueCell cell_list = 3;
    uint32 HBCMGIICJMK = 9;
}

message LAHJPFOOHEB {
    uint32 FGOMIPLMEIC = 10;
    uint32 KENPCKFONOK = 13;
}

message DIPMFOMGCGL {
    uint32 CFIBPMKAINO = 5;
    uint32 FAHIHDJFOHM = 6;
}

message ChessRogueQueryCsReq {
}

message ChessRogueQueryScRsp {
    ChessRogueGameInfo HNDLHICDNPC = 1;
    uint32 retcode = 3;
    ChessRogueQueryInfo BLNDMFGKPMJ = 10;
    ChessRogueGetInfo rogue_get_info = 14;
    ChessRogueFinishInfo BOIKABLFKEC = 15;
}

message ChessRogueEnterCellCsReq {
    uint32 cell_id = 4;
    uint32 FEMGPNLFAGC = 11;
}

message ChessRogueEnterCellScRsp {
    uint32 retcode = 2;
    uint32 cell_id = 3;
    ChessRogueInfo stage_info = 7;
    ChessRogueGameInfo HNDLHICDNPC = 8;
}

message ChessRogueEnterCsReq {
    uint32 id = 15;
}

message ChessRogueEnterScRsp {
    ChessRogueGameInfo HNDLHICDNPC = 2;
    uint32 id = 5;
    ChessRogueInfo stage_info = 6;
    uint32 retcode = 13;
}

message ChessRogueLeaveCsReq {
}

message ChessRogueLeaveScRsp {
    ChessRogueInfo stage_info = 3;
    ChessRogueAeonInfo rogue_aeon_info = 4;
    ChessRogueGetInfo rogue_get_info = 5;
    uint32 retcode = 12;
    ChessRogueQueryInfo BLNDMFGKPMJ = 13;
}

message ChessRogueGiveUpCsReq {
}

message ChessRogueGiveUpScRsp {
    ChessRogueAeonInfo rogue_aeon_info = 2;
    ChessRogueGetInfo rogue_get_info = 5;
    uint32 retcode = 7;
    ChessRogueQueryInfo BLNDMFGKPMJ = 10;
    ChessRogueFinishInfo BOIKABLFKEC = 13;
    ChessRogueInfo stage_info = 14;
}

message ChessRogueStartCsReq {
    uint32 aeon_id = 3;
    repeated uint32 AHIIBHKDFJB = 4;
    repeated uint32 HJGNDHLMMIB = 5;
    repeated uint32 base_avatar_id_list = 6;
    uint32 DHNDAMPBHPP = 7;
    uint32 id = 8;
    repeated uint32 LGHCAHBBCAM = 14;
}

message ChessRogueStartScRsp {
    uint32 retcode = 6;
    ChessRogueGameInfo HNDLHICDNPC = 7;
    ChessRogueInfo stage_info = 8;
    OJLEEFJELAP DBDGAHBLGBB = 9;
}

message ChessRogueQueryAeonDimensionsCsReq {
}

message ChessRogueQueryAeonDimensionsScRsp {
    ChessRogueQueryAeonInfo HNDLHICDNPC = 3;
    uint32 retcode = 15;
}

message ChessRogueChangeyAeonDimensionNotify {
    ChessRogueQueryAeon HNDLHICDNPC = 14;
}

message ChessRogueSelectCellCsReq {
    uint32 FEMGPNLFAGC = 6;
    uint32 cell_id = 11;
}

message ChessRogueSelectCellScRsp {
    uint32 FEMGPNLFAGC = 2;
    uint32 retcode = 7;
    OIAOLBGOAAG KAJAFNPEKAJ = 8;
    uint32 cell_id = 11;
}

message ChessRogueLayerAccountInfoNotify {
    uint32 PBALFIENEFO = 4;
    ChessRogueFinishInfo BOIKABLFKEC = 8;
    uint32 layer_id = 9;
}

message GetChessRogueBuffEnhanceInfoCsReq {
}

message GetChessRogueBuffEnhanceInfoScRsp {
    uint32 retcode = 3;
    NGPIMHHELMM FHLOMGDANJM = 9;
}

message EnhanceChessRogueBuffCsReq {
    uint32 OJEBLMKKMGO = 2;
}

message EnhanceChessRogueBuffScRsp {
    NGPIMHHELMM FHLOMGDANJM = 3;
    bool FGEFCEFKHMH = 4;
    uint32 retcode = 6;
    FFAMNKOAIHF ANAGCODDMOM = 10;
}

message ChessRoguePickAvatarCsReq {
    repeated uint32 base_avatar_id_list = 9;
    uint32 prop_entity_id = 14;
}

message ChessRoguePickAvatarScRsp {
    uint32 retcode = 2;
    repeated uint32 base_avatar_id_list = 5;
    ChessRogueLineupInfo rogue_lineup_info = 10;
}

message ChessRogueReviveAvatarCsReq {
    uint32 interacted_prop_entity_id = 6;
    repeated uint32 base_avatar_id_list = 14;
}

message ChessRogueReviveAvatarScRsp {
    uint32 retcode = 8;
    repeated uint32 base_avatar_id_list = 14;
    RogueAvatarReviveCost revive_info = 15;
}

message ChessRogueUpdateReviveInfoScNotify {
    RogueAvatarReviveCost revive_info = 2;
}

message ChessRogueUpdateMoneyInfoScNotify {
    RogueVirtualItem virtual_item_info = 15;
}

message ChessRogueUpdateDiceInfoScNotify {
    ChessRogueDiceInfo rogue_dice_info = 5;
}

message ChessRogueUpdateLevelBaseInfoScNotify {
    ChessRogueLevelStatus level_status = 13;
    ChessRogueUpdateLevelStatus reason = 15;
}

message ChessRogueUpdateAllowedSelectCellScNotify {
    uint32 EAMGAHFFECO = 6;
    repeated uint32 allow_select_cell_id_list = 10;
}

message ChessRogueUpdateBoardScNotify {
    CellInfo DHDKNMFMGBC = 11;
}

message ChessRogueUpdateAeonModifierValueScNotify {
    int32 ICJABPGMACJ = 6;
    uint32 aeon_id = 13;
}

message ChessRogueUpdateDicePassiveAccumulateValueScNotify {
    int32 CBLAEMEMMIG = 4;
}

message ChessRogueSkipTeachingLevelCsReq {
}

message ChessRogueSkipTeachingLevelScRsp {
    ItemList SkipRewardList = 4;
    uint32 retcode = 5;
}

message ChessRogueUpdateUnlockLevelScNotify {
    repeated uint32 area_id_list = 9;
}

message ChessRogueEnterNextLayerCsReq {
}

message ChessRogueEnterNextLayerScRsp {
    OJLEEFJELAP DBDGAHBLGBB = 5;
    ChessRogueGameInfo rogue_game_info = 7;
    uint32 retcode = 10;
    ChessRogueInfo stage_info = 11;
}

message ChessRogueReRollDiceCsReq {
    uint32 KCHFJDAJECM = 10;
}

message ChessRogueReRollDiceScRsp {
    uint32 retcode = 9;
    ChessRogueDiceInfo rogue_dice_info = 10;
}

message ChessRogueConfirmRollCsReq {
    uint32 KCHFJDAJECM = 8;
}

message ChessRogueConfirmRollScRsp {
    ChessRogueDiceInfo rogue_dice_info = 2;
    uint32 retcode = 9;
}

message ChessRogueCheatRollCsReq {
    uint32 KCHFJDAJECM = 8;
    uint32 EOOADPOCPHD = 13;
}

message ChessRogueCheatRollScRsp {
    uint32 EOOADPOCPHD = 5;
    uint32 NLJOLDMCGAI = 6;
    ChessRogueDiceInfo rogue_dice_info = 12;
    uint32 retcode = 15;
}

message ChessRogueGiveUpRollCsReq {
}

message ChessRogueGiveUpRollScRsp {
    ChessRogueDiceInfo rogue_dice_info = 6;
    uint32 retcode = 9;
    ItemList NKMJHEJCOLP = 10;
}

message ChessRogueQuitCsReq {
}

message ChessRogueQuitScRsp {
    uint32 retcode = 1;
    ChessRogueLevelInfo level_info = 3;
    ChessRogueAeonInfo rogue_aeon_info = 7;
    ChessRogueFinishInfo BOIKABLFKEC = 8;
    ChessRogueQueryInfo BLNDMFGKPMJ = 9;
    ChessRogueInfo stage_info = 12;
    ChessRogueGetInfo rogue_get_info = 15;
}

message ChessRogueCellUpdateNotify {
    ChessRogueCellUpdateReason reason = 1;
    LGMDBCFFJOF DNIIBBHLLNB = 3;
    uint32 EAMGAHFFECO = 4;
    repeated ChessRogueCell cell_list = 13;
}

message ChessRogueQuestFinishNotify {
    uint32 NNJCCFEINDO = 2;
    uint32 quest_id = 3;
}

message GetChessRogueStoryInfoCsReq {
}

message GetChessRogueStoryInfoScRsp {
    repeated DIPMFOMGCGL MNHMEKKHKNA = 1;
    repeated LAHJPFOOHEB IDGIAHOPGAJ = 5;
    uint32 retcode = 6;
}

message SelectChessRogueSubStoryCsReq {
    uint32 IFIIJGNGOGP = 1;
    uint32 rogue_dialogue_event_id = 5;
    uint32 IKMNAMKJAFA = 13;
    uint32 FAHIHDJFOHM = 14;
}

message SelectChessRogueSubStoryScRsp {
    uint32 IFIIJGNGOGP = 7;
    uint32 retcode = 9;
    uint32 rogue_dialogue_event_id = 12;
    uint32 IKMNAMKJAFA = 13;
    uint32 FAHIHDJFOHM = 15;
}

message FinishChessRogueSubStoryCsReq {
    uint32 IKMNAMKJAFA = 1;
}

message FinishChessRogueSubStoryScRsp {
    uint32 FGOMIPLMEIC = 4;
    uint32 IKMNAMKJAFA = 11;
    uint32 retcode = 12;
}

message ChessRogueUpdateActionPointScNotify {
    int32 action_point = 5;
}

message EnterChessRogueAeonRoomCsReq {
}

message EnterChessRogueAeonRoomScRsp {
    uint32 retcode = 5;
    ChessRogueInfo stage_info = 14;
}

message GetChessRogueStoryAeonTalkInfoCsReq {
    uint32 talk_dialogue_id = 12;
}

message GetChessRogueStoryAeonTalkInfoScRsp {
    uint32 retcode = 5;
    map<uint32, uint32> KJCBNEINDHL = 7;
    uint32 talk_dialogue_id = 13;
}

message SyncChessRogueMainStoryFinishScNotify {
    uint32 KENPCKFONOK = 1;
    uint32 FGOMIPLMEIC = 12;
}

message SyncChessRogueNousValueScNotify {
    ChessRogueNousValueInfo nous_value_info = 11;
}

message GBEEJNBEBEP {
    uint32 FGOMIPLMEIC = 12;
    ChessRogueNousMainStoryStatus status = 14;
}

message DIECDDGEBNB {
    uint32 IKMNAMKJAFA = 4;
}

message GetChessRogueNousStoryInfoCsReq {
}

message GetChessRogueNousStoryInfoScRsp {
    repeated GBEEJNBEBEP IDGIAHOPGAJ = 1;
    repeated DIECDDGEBNB MNHMEKKHKNA = 8;
    uint32 retcode = 10;
}

message SyncChessRogueNousSubStoryScNotify {
    uint32 IKMNAMKJAFA = 7;
}

message SyncChessRogueNousMainStoryScNotify {
    repeated GBEEJNBEBEP IDGIAHOPGAJ = 3;
}

message IMNPEAJAJJO {
    uint32 FGOMIPLMEIC = 1;
    uint32 IKMNAMKJAFA = 5;
    bool FFHEEIDBHEA = 6;
    repeated uint32 EMLLECGEPCK = 8;
    uint32 FFMDBDEHHEG = 9;
    repeated uint32 OBLHBOEOLAF = 11;
    bool FJKGKAEKBKJ = 13;
    repeated uint32 ILMOOKBJHHC = 14;
}

message HNGIHJJIACO {
    uint32 EOOADPOCPHD = 14;
    uint32 dice_slot_id = 15;
}

message ChessRogueDice {
    uint32 HMKEBDLFLPG = 2;
    uint32 DHNDAMPBHPP = 7;
    repeated HNGIHJJIACO IGBCACGFCKB = 11;
    uint32 OABLIOFCOFO = 15;
}

message ChessRogueQueryDiceInfo {
    map<uint32, bool> NBCMAKNLPHG = 6;
    repeated ChessRogueDice ALEHDAAOHOE = 9;
    repeated uint32 JKMIMLBAJBL = 10;
    ChessRogueNousDicePhase HDMPBPOFFDK = 14;
}

message ChessRogueTalentInfo {
    IMJMGEENCEH JMGIPEBLOGE = 5;
    uint32 POFMJBLMBJI = 10;
}

message AFAGHELICPD {
    repeated uint32 GIHDMHDADON = 6;
}

message ChessRogueNousEditDiceCsReq {
    ChessRogueDice query_dice_info = 4;
}

message ChessRogueNousEditDiceScRsp {
    uint32 retcode = 2;
    ChessRogueDice query_dice_info = 10;
}

message ChessRogueNousDiceUpdateNotify {
    ChessRogueQueryDiceInfo MBIBKHKKEFB = 5;
}

message ChessRogueNousDiceSurfaceUnlockNotify {
    uint32 CAPHIDDHLFG = 11;
}

message ChessRogueNousGetRogueTalentInfoCsReq {
}

message ChessRogueNousGetRogueTalentInfoScRsp {
    uint32 retcode = 2;
    uint32 POFMJBLMBJI = 8;
    IMJMGEENCEH talent_info_list = 14;
}

message ChessRogueNousEnableRogueTalentCsReq {
    uint32 talent_id = 14;
}

message ChessRogueNousEnableRogueTalentScRsp {
    IMJMGEENCEH talent_info_list = 2;
    uint32 POFMJBLMBJI = 12;
    uint32 retcode = 14;
}

message AACOFIKDCPL {
    uint32 IENPELBPHDP = 2;
    uint32 progress = 5;
}

message ODNNKBIMEFH {
    repeated AACOFIKDCPL KEEDPLPACLP = 6;
}

message EADGANMJIPK {
    repeated uint32 IBPFGEBMILB = 5;
}

message JCNJDFFCLDG {
    uint32 id = 2;
    ODNNKBIMEFH KEEDPLPACLP = 3;
    repeated uint32 OOPKIKMBBHH = 7;
    bool JNBOONPDOCE = 9;
    int32 LKEBLPIJMGB = 10;
    int32 hp = 15;
}

message MPJDIBCCOHF {
    uint32 MIAIOPGIPHH = 1;
    repeated uint32 OBCPGOBAEDE = 5;
}

message DIFPDPLCIGD {
    uint32 JFPNMOONLNJ = 2;
    uint32 GONEAKBDGEK = 7;
}

message JMAANMPANHM {
    uint32 NOEIMMHCKPM = 3;
    uint32 CLPMIBDFPJC = 4;
    int32 hp = 5;
    uint32 index = 7;
    int32 attack = 9;
    uint32 FPAIBLDAKLI = 12;
    uint32 NKOFFBMHAPI = 14;
    uint32 NHJALPDBOGN = 15;
}

message EGDGHFLLMGN {
    uint32 CFIJIPCHHGO = 1;
    uint32 total_auto_turns = 4;
    uint32 LCJHGDJDENG = 5;
    uint32 total_turns = 7;
    uint32 cost_time = 8;
    uint32 total_damage = 14;
}

message ChimeraGetDataCsReq {
}

message ChimeraGetDataScRsp {
    uint32 IJEIOMMFPKA = 1;
    OAPDMKKKEOL BBMGIIMECEL = 2;
    uint32 LFKFOCJFNCJ = 3;
    uint32 EAIOJCNLMNG = 4;
    uint32 JFPNMOONLNJ = 6;
    uint32 CJEKJHPIBJL = 7;
    repeated uint32 MFAFNNCJJNG = 8;
    MPJDIBCCOHF lineup = 9;
    uint32 retcode = 10;
    uint32 GBEMDNCKKBA = 11;
    uint32 CJKCNHCLMGD = 12;
    repeated DIFPDPLCIGD NCDAOBLMHHP = 13;
    uint32 BBBGKCHNOCK = 14;
    repeated JCNJDFFCLDG KIIMKAEAJAL = 15;
    uint32 CPBDBAIDAEH = 220;
    uint32 OLLDKAJOAJD = 301;
    uint32 CAGAPLNHABB = 788;
    uint32 KILPNHJBPDB = 1095;
}

message ChimeraSetLineupCsReq {
    MPJDIBCCOHF lineup = 14;
}

message ChimeraSetLineupScRsp {
    uint32 retcode = 2;
    MPJDIBCCOHF lineup = 8;
}

message ChimeraFinishRoundCsReq {
    MPJDIBCCOHF lineup = 1;
    repeated JMAANMPANHM OPAMAEIJCOH = 2;
    bool MOLIDIKIFGB = 3;
    map<uint32, uint32> BAHHNMLHALJ = 4;
    map<uint32, ODNNKBIMEFH> MLBALJKCMCG = 5;
    BIAKDFELJFM end_reason = 8;
    uint32 HJOEAMDLBPL = 13;
    EGDGHFLLMGN stt = 14;
    repeated uint32 HGODGDEAAJO = 15;
}

message ChimeraFinishRoundScRsp {
    uint32 retcode = 1;
    bool MOLIDIKIFGB = 2;
    uint32 JFPNMOONLNJ = 3;
    map<uint32, EADGANMJIPK> GHKGCFCLABF = 4;
    BIAKDFELJFM end_reason = 5;
    repeated JCNJDFFCLDG GOIAKPGJLCB = 6;
    uint32 EAIOJCNLMNG = 7;
    map<uint32, ODNNKBIMEFH> NAHPKPPMDKK = 8;
    OAPDMKKKEOL BBMGIIMECEL = 9;
    uint32 OLLDKAJOAJD = 10;
    uint32 CJKCNHCLMGD = 11;
    repeated uint32 MFAFNNCJJNG = 12;
    bool JIEIFDOCOHE = 13;
    repeated DIFPDPLCIGD NCDAOBLMHHP = 14;
    uint32 IJEIOMMFPKA = 15;
}

message ChimeraStartEndlessCsReq {
}

message ChimeraStartEndlessScRsp {
    uint32 retcode = 12;
}

message ChimeraFinishEndlessRoundCsReq {
    MPJDIBCCOHF lineup = 1;
    repeated JMAANMPANHM OPAMAEIJCOH = 2;
    repeated uint32 HGODGDEAAJO = 11;
    uint32 CPBDBAIDAEH = 13;
    bool PAHMAGPFDDJ = 14;
    EGDGHFLLMGN stt = 15;
}

message ChimeraFinishEndlessRoundScRsp {
    uint32 GBEMDNCKKBA = 1;
    uint32 LFKFOCJFNCJ = 2;
    uint32 retcode = 5;
    uint32 BBBGKCHNOCK = 8;
    uint32 CPBDBAIDAEH = 9;
    bool PAHMAGPFDDJ = 11;
    uint32 AEBJNGIMHCJ = 14;
    repeated JCNJDFFCLDG IGAGIBNELCK = 15;
}

message ChimeraQuitEndlessCsReq {
}

message ChimeraQuitEndlessScRsp {
    uint32 retcode = 7;
}

message ChimeraDoFinalRoundCsReq {
    MPJDIBCCOHF lineup = 1;
    repeated JMAANMPANHM OPAMAEIJCOH = 3;
    repeated uint32 HGODGDEAAJO = 7;
    uint32 CPBDBAIDAEH = 9;
    bool PAHMAGPFDDJ = 12;
    EGDGHFLLMGN stt = 14;
}

message ChimeraDoFinalRoundScRsp {
    repeated JCNJDFFCLDG IGAGIBNELCK = 2;
    uint32 index = 3;
    uint32 JFPNMOONLNJ = 4;
    bool PAHMAGPFDDJ = 5;
    uint32 CAGAPLNHABB = 6;
    uint32 EAIOJCNLMNG = 8;
    repeated DIFPDPLCIGD NCDAOBLMHHP = 9;
    uint32 retcode = 11;
    uint32 CPBDBAIDAEH = 12;
    uint32 OLLDKAJOAJD = 15;
}

message ChimeraRoundWorkStartCsReq {
    uint32 FLGJPHEOPAA = 1;
    MPJDIBCCOHF lineup = 4;
    repeated JMAANMPANHM OPAMAEIJCOH = 11;
    uint32 MDFEEKIKBMJ = 15;
}

message ChimeraRoundWorkStartScRsp {
    uint32 retcode = 14;
}

message ClockParkGetInfoCsReq {
}

message NLLJBBCJIAM {
    uint32 script_id = 4;
    repeated uint32 ODOGFHENJEP = 11;
}

message ClockParkGetInfoScRsp {
    uint32 retcode = 3;
    repeated NLLJBBCJIAM BNFHFHEFMEM = 4;
    repeated uint32 IBJPCOFDLJI = 8;
    uint32 progress = 11;
    uint32 EDIAJGCBPFO = 12;
    uint32 GFADCAHLKFP = 14;
}

message ClockParkUnlockTalentCsReq {
    uint32 talent_id = 7;
}

message ClockParkUnlockTalentScRsp {
    uint32 talent_id = 10;
    uint32 retcode = 11;
}

message ClockParkStartScriptCsReq {
    repeated uint32 JMOJEOALCLO = 2;
    uint32 script_id = 4;
}

message ClockParkStartScriptScRsp {
    uint32 script_id = 13;
    uint32 retcode = 15;
}

message ClockParkGetOngoingScriptInfoCsReq {
}

message LNIHJDAILDJ {
}

message ACCBIGFANOA {
    repeated uint32 PNEOOLFLNLK = 2;
    uint32 card_id = 5;
    uint32 BJKHPADCLHI = 9;
}

message HDCKCHPDMMI {
    repeated ACCBIGFANOA FODPDMPBAND = 7;
    repeated uint32 PNEOOLFLNLK = 12;
}

message NNCCFPOOCKH {
    HDCKCHPDMMI ANCPCPCLJED = 12;
}

message MACHNDHAMNM {
    HDCKCHPDMMI ANCPCPCLJED = 7;
}

message IFBDBDCCOPO {
    HDCKCHPDMMI ANCPCPCLJED = 13;
}

message GLIJKLOOAPA {
    uint32 ECFAGNKDAEF = 8;
    uint32 gacha_random = 10;
    HDCKCHPDMMI ANCPCPCLJED = 14;
}

message ANBANKMLCLH {
    HDCKCHPDMMI ANCPCPCLJED = 15;
}

message EPPNKGOLAAP {
    bool BGDOIJPHFDB = 14;
}

message LKBBKOJDDPD {
    uint32 AHIDJBJGGPP = 11;
    oneof NKPNKGIAHIP {
        MACHNDHAMNM OEOFNNBLJIK = 1;
        NNCCFPOOCKH DHLEEJMIIMO = 3;
        EPPNKGOLAAP BCIIGHIOAPL = 4;
        LNIHJDAILDJ PNIMPJFILGF = 5;
        GLIJKLOOAPA LNKPGGGKMNK = 6;
        bool GNEOOAIFKIB = 12;
        ANBANKMLCLH AENEFMCBFGM = 13;
        IFBDBDCCOPO GPBGDCMJHLN = 15;
    }
}

message BMLOFPCNGKN {
    int32 DJFHCDDIFMI = 8;
    int32 OFCNDEMAPPL = 9;
    int32 IHLHDPNAEKC = 11;
}

message IONCPPDEJEJ {
    uint32 buff_id = 6;
    uint32 FEONEHHCJJM = 9;
    uint64 unique_id = 11;
}

message ECMILHCKOMO {
    repeated IONCPPDEJEJ buff_list = 13;
}

message ClockParkGetOngoingScriptInfoScRsp {
    LKBBKOJDDPD IENPHEFANGL = 1;
    uint32 retcode = 3;
    string CMGKEOLCBIP = 5;
    uint32 OBPFBLNBFKI = 6;
    ECMILHCKOMO rogue_buff_info = 7;
    uint32 AIGEHHNHKPM = 8;
    BMLOFPCNGKN MJDOGPBOJIP = 9;
    uint32 script_id = 10;
    repeated uint32 EIDLLEOLFGM = 11;
    uint32 BLHGBEDNFIB = 12;
    uint32 KIEKJEFFPHK = 14;
    uint32 CHOBAOGMLFN = 15;
}

message OBNONMHMECK {
}

message FFOMIBNCFKI {
    HDCKCHPDMMI ANCPCPCLJED = 11;
}

message AJEHAMDABNA {
    bool is_win = 8;
    uint32 OMDDFKMAAPE = 14;
}

message AMGHDCABJMJ {
    repeated uint32 avatar_id_list = 2;
}

message INNNICFOLII {
    bool JCNODAMFFFC = 2;
    uint32 gacha_random = 8;
}

message CEOONFLONDJ {
    bool is_win = 11;
    uint32 OMDDFKMAAPE = 12;
}

message HELNOIHMDHA {
}

message ClockParkHandleWaitOperationCsReq {
    uint32 script_id = 1;
    uint32 AHIDJBJGGPP = 4;
    oneof NOMEMJFHDIB {
        CEOONFLONDJ LMGGLCNCDHF = 5;
        INNNICFOLII LIHJMEINGIK = 6;
        AJEHAMDABNA MEGNBBFILNL = 7;
        FFOMIBNCFKI IPIKFLCEFLA = 8;
        OBNONMHMECK JFBCKCLPAKO = 9;
        HELNOIHMDHA FNGFOAEPFJN = 11;
        uint32 OBPFBLNBFKI = 12;
        AMGHDCABJMJ ABKKDHAPCHN = 13;
    }
}

message MDJLOJFMEMC {
    bool EEEHGHKOCJI = 2;
    uint32 script_id = 3;
    bool KFDAICILNMB = 5;
    uint32 AIGEHHNHKPM = 9;
    uint32 KIEKJEFFPHK = 10;
    uint32 progress = 11;
    ItemList reward = 14;
}

message ClockParkHandleWaitOperationScRsp {
    uint32 AHIDJBJGGPP = 3;
    uint32 KOIJFOFFJNJ = 4;
    ClockParkPlayStatus JFKDBMDOMNK = 6;
    uint32 retcode = 11;
    SceneBattleInfo battle_info = 12;
    uint32 FICFGDNHNGE = 15;
}

message ClockParkQuitScriptCsReq {
    uint32 script_id = 3;
    bool KHNHPGDEIMM = 11;
}

message ClockParkQuitScriptScRsp {
    uint32 retcode = 11;
}

message ClockParkBattleEndScNotify {
    uint32 retcode = 10;
    uint32 AHIDJBJGGPP = 15;
}

message ClockParkUseBuffCsReq {
    uint32 AHIDJBJGGPP = 5;
    uint32 script_id = 11;
    uint64 unique_id = 15;
}

message ClockParkUseBuffScRsp {
    uint32 retcode = 4;
    ECMILHCKOMO rogue_buff_info = 9;
    uint32 script_id = 13;
    uint32 AHIDJBJGGPP = 14;
    oneof IFLLBCFGBDM {
        BMLOFPCNGKN MJDOGPBOJIP = 805;
        HDCKCHPDMMI ANCPCPCLJED = 1841;
    }
}

message ClockParkFinishScriptScNotify {
    MDJLOJFMEMC rogue_finish_info = 1;
}

message Item {
    uint32 Num = 1;
    uint32 ItemId = 2;
    uint32 Promotion = 5;
    uint32 Level = 6;
    uint32 UniqueId = 7;
    uint32 Rank = 8;
    uint32 MainAffixId = 13;
}

message ItemList {
    repeated Item ItemList_ = 10;
}

message PileItem {
    uint32 ItemId = 6;
    uint32 ItemNum = 11;
}

message ItemCost {
    oneof itemCase_ {
        PileItem PileItem = 6;
        uint32 RelicUniqueId = 12;
        uint32 EquipmentUniqueId = 13;
    }
}

message ItemCostData {
    repeated ItemCost item_list = 10;
}

message IEKHJDECAPE {
    uint32 item_count = 3;
    uint32 item_id = 15;
}

message AKCPALGEMOL {
    uint32 promotion = 1;
    uint32 tid = 2;
    uint32 exp = 4;
    uint32 level = 11;
    uint32 rank = 14;
}

message NHDBOFCFCJM {
    uint32 main_affix_id = 8;
    uint32 level = 10;
    uint32 tid = 12;
    uint32 exp = 13;
    repeated RelicAffix sub_affix_list = 15;
}

message NDHOPEDOFOC {
    oneof LAGNOBAOLIJ {
        AKCPALGEMOL ADEOIGEBMDF = 3;
        NHDBOFCFCJM FHGAFCJCAOA = 13;
        IEKHJDECAPE OEKHNGFFGKB = 14;
    }
}

message AODIDFNPICF {
    repeated NDHOPEDOFOC item_list = 1;
}

message Vector {
    sint64 z = 8;
    sint64 x = 11;
    sint64 y = 15;
}

message MotionInfo {
    Vector rot = 5;
    Vector pos = 13;
}

message Vector4 {
    fixed32 z = 2;
    fixed32 w = 4;
    fixed32 y = 6;
    fixed32 x = 15;
}

message SceneMonsterWaveParam {
    uint32 DNEAMPLLFME = 7;
    uint32 hard_level_group = 9;
    uint32 elite_group = 14;
    uint32 level = 15;
}

message SceneMonster {
    uint32 cur_hp = 7;
    uint32 monster_id = 9;
    uint32 max_hp = 10;
}

message SceneMonsterWave {
    uint32 battle_stage_id = 1;
    uint32 battle_wave_id = 2;
    repeated ItemList JCDLJGHHAOF = 9;
    SceneMonsterWaveParam wave_param = 12;
    repeated SceneMonster monster_list = 14;
}

message SceneBattleInfo {
    uint32 monster_wave_length = 1;
    uint32 battle_id = 2;
    repeated BattleAvatar pve_avatar_list = 3;
    uint32 stage_id = 4;
    uint32 world_level = 6;
    repeated BattleBuff buff_list = 7;
    uint32 rounds_limit = 8;
    repeated SceneMonsterWave monster_wave_list = 9;
    uint32 logic_random_seed = 10;
    bool NBCKFDGMFDB = 11;
    GIEIBEACBAO MFKJOKAJJMJ = 435;
    EvolveBuildBattleInfo JPGIFCHJDLK = 657;
    BattleRogueMagicInfo battle_rogue_magic_info = 988;
    repeated BattleEventBattleInfo battle_event = 1390;
    LJGIAGLFHHC AJGPJGLPMIO = 1508;
    map<uint32, BattleTargetList> battle_target_info = 1855;
}

message AetherDivideBattleInfo {
    uint32 logic_random_seed = 1;
    uint32 battle_id = 5;
    repeated BattleBuff buff_list = 6;
    repeated SceneMonsterWave monster_wave_list = 7;
    uint32 stage_id = 10;
    bool NBCKFDGMFDB = 11;
    repeated AetherAvatarInfo pve_avatar_list = 13;
}

message PHHKOMBGPPK {
    uint32 assist_uid = 1;
    uint32 id = 11;
    AvatarType avatar_type = 13;
}

message MBKOCMMICPG {
    ItemList return_item_list = 4;
    repeated uint32 KGEFHOECMMN = 12;
    bool EBNKEIEHNHA = 13;
}

message KHOCCHABNMN {
    uint32 value = 14;
    uint32 key = 15;
}

message ContentPackageGetDataCsReq {
}

message ContentPackageGetDataScRsp {
    ContentPackageData data = 1;
    uint32 retcode = 12;
}

message ContentPackageInfo {
    ContentPackageStatus status = 9;
    uint32 content_id = 11;
}

message ContentPackageData {
    uint32 cur_content_id = 1;
    repeated ContentPackageInfo content_package_list = 10;
}

message ContentPackageSyncDataScNotify {
    ContentPackageData data = 2;
}

message ContentPackageUnlockCsReq {
    uint32 content_id = 5;
}

message ContentPackageUnlockScRsp {
    uint32 retcode = 3;
    uint32 content_id = 5;
}

message ContentPackageTransferScNotify {
}

message DailyActivityInfo {
    uint32 daily_active_point = 6;
    uint32 world_level = 8;
    bool is_has_taken = 11;
    uint32 level = 13;
}

message TakeApRewardCsReq {
    uint32 level = 1;
}

message TakeApRewardScRsp {
    ItemList reward = 3;
    uint32 level = 5;
    uint32 retcode = 11;
}

message GetDailyActiveInfoCsReq {
}

message GetDailyActiveInfoScRsp {
    repeated DailyActivityInfo daily_active_level_list = 1;
    uint32 retcode = 5;
    uint32 daily_active_point = 8;
    repeated uint32 daily_active_quest_id_list = 15;
}

message DailyActiveInfoNotify {
    uint32 daily_active_point = 3;
    repeated uint32 daily_active_quest_id_list = 5;
    repeated DailyActivityInfo daily_active_level_list = 15;
}

message TakeAllApRewardCsReq {
}

message TakeAllApRewardScRsp {
    repeated uint32 take_reward_level_list = 10;
    ItemList reward = 11;
    uint32 retcode = 15;
}

message ServerLogSettings {
    repeated ServerLogTag NotifyTagList = 10;
    ServerLogLevel NotifyLevel = 14;
}

message GetServerLogSettingsCsReq {
}

message GetServerLogSettingsScRsp {
    ServerLogSettings Settings = 1;
    uint32 retcode = 6;
}

message UpdateServerLogSettingsCsReq {
    ServerLogSettings Settings = 14;
}

message UpdateServerLogSettingsScRsp {
    uint32 retcode = 8;
}

message ServerLogScNotify {
    string LCPLLGNJNAJ = 3;
    ServerLogTag tag = 7;
    ServerLogLevel level = 9;
    string HKLIGCHHIEG = 15;
}

message LCMJFEHMCNF {
    uint32 group_id = 9;
    uint32 config_id = 10;
}

message OEDDOIJLGFG {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message CFCAJKFEPAO {
    string BENANABPPJN = 6;
    string msg = 9;
    OJIDJNDHDGA state = 10;
}

message KDOEJMHBBGI {
    OEDDOIJLGFG DBGFAODBEFC = 6;
    repeated CFCAJKFEPAO LOPBAJPAEMI = 10;
}

message GetServerGraphDataCsReq {
    repeated OEDDOIJLGFG EOFCIILDILF = 4;
}

message GetServerGraphDataScRsp {
    repeated KDOEJMHBBGI DCOIHAMJKHJ = 2;
    uint32 retcode = 9;
}

message DrinkMakerGuest {
    uint32 GuestId = 2;
    uint32 Faith = 9;
    repeated uint32 UnlockedFavorTagList = 13;
}

message EEKFECDIHJE {
    uint32 DGPPFFKIHOC = 1;
    uint32 JIBLNLHCNKD = 4;
    repeated uint32 DBPGEFGLFJJ = 6;
    uint32 ODMPHFANIEE = 11;
    uint32 KIDBBFGHECN = 12;
}

message MFLPAMAFJNC {
    bool FGEFCEFKHMH = 1;
    uint32 KCFPIECMGBD = 6;
}

message GetDrinkMakerDataCsReq {
}

message GetDrinkMakerDataScRsp {
    uint32 level = 1;
    EEKFECDIHJE BOINOMBHPCL = 2;
    repeated DrinkMakerGuest PJKIBODPCKI = 3;
    repeated uint32 PCNNPEJEGEF = 4;
    uint32 HEPALNIOJNP = 6;
    uint32 exp = 7;
    uint32 EAOLMHOAAML = 8;
    uint32 AMEFGBICGDI = 12;
    uint32 retcode = 13;
    uint32 DHAKOFAGDOF = 15;
}

message MakeDrinkCsReq {
    uint32 EAOLMHOAAML = 4;
    EEKFECDIHJE LPMCGNJLBGD = 5;
}

message MakeDrinkScRsp {
    uint32 NextChatId = 1;
    bool IsSucc = 5;
    uint32 retcode = 10;
}

message EndDrinkMakerSequenceCsReq {
}

message EndDrinkMakerSequenceScRsp {
    uint32 Exp = 2;
    uint32 Tips = 3;
    DrinkMakerGuest Guest = 4;
    uint32 retcode = 6;
    repeated MFLPAMAFJNC RequestList = 8;
    uint32 NextSequenceId = 9;
    ItemList Reward = 10;
    uint32 Level = 11;
}

message MakeMissionDrinkCsReq {
    uint32 KCFPIECMGBD = 3;
    bool JGEAEGMHDOC = 9;
    EEKFECDIHJE LPMCGNJLBGD = 15;
}

message MakeMissionDrinkScRsp {
    EEKFECDIHJE CustomDrink = 2;
    uint32 retcode = 10;
    bool IsSave = 13;
    bool IsSucc = 14;
}

message DrinkMakerDayEndScNotify {
    uint32 ECILICNOLFN = 2;
}

message DrinkMakerChallengeCsReq {
    uint32 challenge_id = 7;
    EEKFECDIHJE LPMCGNJLBGD = 15;
}

message DrinkMakerChallengeScRsp {
    bool FGEFCEFKHMH = 1;
    uint32 retcode = 4;
    uint32 challenge_id = 8;
    ItemList reward = 14;
}

message DrinkMakerUpdateTipsNotify {
    uint32 AMEFGBICGDI = 2;
}

message GOAHFMLPDMF {
    uint32 state = 2;
    uint32 era_flipper_region_id = 9;
}

message KKEAENNDMKB {
    repeated GOAHFMLPDMF NDPGBLAAGHK = 5;
}

message GetEraFlipperDataCsReq {
}

message GetEraFlipperDataScRsp {
    uint32 retcode = 1;
    KKEAENNDMKB data = 7;
}

message ChangeEraFlipperDataCsReq {
    KKEAENNDMKB data = 8;
}

message ChangeEraFlipperDataScRsp {
    uint32 retcode = 9;
    KKEAENNDMKB data = 14;
}

message ResetEraFlipperDataCsReq {
    bool PAHMAGPFDDJ = 3;
}

message ResetEraFlipperDataScRsp {
    bool PAHMAGPFDDJ = 9;
    KKEAENNDMKB data = 10;
    uint32 retcode = 15;
}

message EnterEraFlipperRegionCsReq {
    uint32 era_flipper_region_id = 7;
    uint32 state = 8;
}

message EnterEraFlipperRegionScRsp {
    uint32 retcode = 4;
    uint32 era_flipper_region_id = 14;
}

message EraFlipperDataChangeScNotify {
    uint32 floor_id = 1;
    KKEAENNDMKB data = 13;
}

message EvolveBuildAvatar {
    fixed64 Damage = 3;
    AvatarType AvatarType = 6;
    uint32 AvatarId = 11;
}

message EvolveBuildLevelInfo {
    repeated EvolveBuildAvatar AvatarList = 3;
    repeated uint32 PeriodIdList = 4;
    uint32 RoundCnt = 7;
    repeated BattleTarget BattleTargetList = 8;
    uint32 CurGameExp = 13;
    KLNIPNJCNMJ Season = 14;
    EvolveBuildBattleInfo battle_info = 15;
}

message CEENLALPDMK {
    uint32 CEADMDAMHMO = 2;
    uint32 ACJCPHIFMLN = 6;
    uint32 max_score = 12;
}

message IMGJIEBFGPF {
    uint32 NECILJOJGAN = 6;
    uint32 level = 10;
}

message ECMMJLLHPMD {
    repeated uint32 LGDNIIGEPHH = 6;
    bool NAJOHIHMABC = 8;
    bool CADMFGHALJG = 12;
    uint32 ACJCPHIFMLN = 13;
}

message PDFHJMMDGAE {
    uint32 CPIOGJKFECH = 2;
    repeated IMGJIEBFGPF COKDNPEEMAG = 7;
    KLNIPNJCNMJ MDCJFOAFDJK = 15;
}

message PDICNBBKFNP {
    bool DEHGHEDINIH = 1;
    uint32 CPIOGJKFECH = 2;
    bool OOFHJAHFIDH = 3;
    repeated PDFHJMMDGAE FEJGMNNFFLG = 5;
    repeated ECMMJLLHPMD LCJNNDGKIDP = 6;
    repeated uint32 LMELJCIFBDF = 9;
    repeated IMGJIEBFGPF COKDNPEEMAG = 10;
    repeated CEENLALPDMK KLGHECCBHCG = 12;
    uint32 exp = 13;
    uint32 EODGCNAFIAC = 14;
    repeated uint32 FJOCDKIFPPC = 15;
}

message EvolveBuildQueryInfoCsReq {
}

message EvolveBuildQueryInfoScRsp {
    uint32 retcode = 4;
    repeated EvolveBuildLevelInfo DHMBDIIBKLM = 8;
    EvolveBuildLevelInfo level_info = 9;
    PDICNBBKFNP OMCBCGCHLGN = 10;
}

message EvolveBuildStartLevelCsReq {
    repeated EvolveBuildAvatar avatar_list = 3;
    KPKKKJPJCPC JIAPJHDLFBJ = 5;
    uint32 ACJCPHIFMLN = 15;
}

message EvolveBuildStartLevelScRsp {
    SceneBattleInfo NOPHEEHJHEK = 8;
    EvolveBuildLevelInfo level_info = 11;
    uint32 retcode = 12;
}

message EvolveBuildStartStageCsReq {
    uint32 ACJCPHIFMLN = 6;
}

message EvolveBuildStartStageScRsp {
    SceneBattleInfo NOPHEEHJHEK = 1;
    EvolveBuildLevelInfo level_info = 5;
    uint32 retcode = 9;
}

message EvolveBuildGiveupCsReq {
    uint32 ACJCPHIFMLN = 9;
}

message EvolveBuildGiveupScRsp {
    EvolveBuildLevelInfo level_info = 3;
    uint32 retcode = 4;
}

message EvolveBuildLeaveCsReq {
}

message EvolveBuildLeaveScRsp {
    uint32 retcode = 6;
    EvolveBuildLevelInfo level_info = 14;
}

message EvolveBuildFinishScNotify {
    uint32 Score = 2;
    DLHCMCNIHII BattleResultType = 3;
    uint32 wave = 4;
    uint32 Exp = 5;
    uint32 Coin = 6;
    bool IsLose = 7;
    uint32 LevelId = 9;
    EvolveBuildLevelInfo LevelInfo = 14;
    uint32 CurPeriodType = 15;
}

message EvolveBuildReRandomStageCsReq {
    uint32 ACJCPHIFMLN = 12;
}

message EvolveBuildReRandomStageScRsp {
    ECMMJLLHPMD JGPBFLCCIJP = 9;
    uint32 retcode = 14;
}

message EvolveBuildShopAbilityUpCsReq {
    uint32 level = 7;
    uint32 NECILJOJGAN = 11;
}

message EvolveBuildShopAbilityUpScRsp {
    uint32 NECILJOJGAN = 4;
    uint32 level = 12;
    uint32 retcode = 14;
}

message EvolveBuildShopAbilityDownCsReq {
    uint32 level = 4;
    uint32 NECILJOJGAN = 10;
}

message EvolveBuildShopAbilityDownScRsp {
    uint32 retcode = 2;
    uint32 level = 3;
    uint32 NECILJOJGAN = 12;
}

message EvolveBuildTakeExpRewardCsReq {
}

message EvolveBuildTakeExpRewardScRsp {
    uint32 retcode = 1;
    uint32 EODGCNAFIAC = 3;
    ItemList reward = 12;
}

message EvolveBuildShopAbilityResetCsReq {
    KLNIPNJCNMJ MDCJFOAFDJK = 10;
}

message EvolveBuildShopAbilityResetScRsp {
    repeated IMGJIEBFGPF COKDNPEEMAG = 7;
    uint32 CPIOGJKFECH = 8;
    KLNIPNJCNMJ MDCJFOAFDJK = 10;
    uint32 retcode = 13;
}

message EvolveBuildCoinNotify {
    KLNIPNJCNMJ MDCJFOAFDJK = 8;
    uint32 CPIOGJKFECH = 15;
}

message LCAOFIDPICA {
    uint32 ACJCPHIFMLN = 3;
}

message OBBGCAMDHFG {
    uint32 ACJCPHIFMLN = 9;
    uint32 retcode = 12;
}

message ExpeditionInfo {
    repeated uint32 avatar_id_list = 5;
    uint32 total_duration = 8;
    int64 start_expedition_time = 9;
    uint32 id = 10;
}

message ActivityExpedition {
    int64 start_expedition_time = 1;
    uint32 id = 2;
    uint32 OJFNLMHMLOF = 4;
    repeated uint32 avatar_id_list = 5;
    uint32 FNGGNBMOFAA = 8;
    uint32 IPGECLELHGJ = 14;
}

message GetExpeditionDataCsReq {
}

message GetExpeditionDataScRsp {
    repeated uint32 FJGIMKEPJOB = 5;
    repeated ExpeditionInfo expedition_info = 6;
    repeated ActivityExpedition activity_expedition_info = 8;
    repeated uint32 FNALLOLDGLM = 9;
    uint32 retcode = 11;
    repeated uint32 JFJPADLALMD = 12;
    uint32 total_expedition_count = 15;
}

message AcceptExpeditionCsReq {
    ExpeditionInfo accept_expedition = 10;
}

message AcceptExpeditionScRsp {
    ExpeditionInfo accept_expedition = 6;
    uint32 retcode = 10;
}

message AcceptMultipleExpeditionCsReq {
    repeated ExpeditionInfo expedition = 4;
}

message AcceptMultipleExpeditionScRsp {
    repeated ExpeditionInfo accept_multi_expedition = 1;
    uint32 retcode = 7;
}

message CancelExpeditionCsReq {
    uint32 expedition_id = 9;
}

message CancelExpeditionScRsp {
    uint32 retcode = 6;
    uint32 expedition_id = 9;
}

message TakeExpeditionRewardCsReq {
    uint32 expedition_id = 4;
}

message TakeExpeditionRewardScRsp {
    uint32 expedition_id = 4;
    ItemList reward = 13;
    ItemList extra_reward = 14;
    uint32 retcode = 15;
}

message TakeMultipleExpeditionRewardCsReq {
    repeated uint32 take_multi_expedition = 12;
}

message TakeMultipleExpeditionRewardScRsp {
    uint32 retcode = 1;
    repeated ItemList extra_reward_list = 2;
    ItemList reward = 5;
    repeated uint32 reward_expedition = 10;
    ItemList extra_reward = 11;
    repeated ItemList reward_list = 15;
}

message ExpeditionDataChangeScNotify {
    repeated ActivityExpedition activity_expedition_info = 1;
    uint32 total_expedition_count = 3;
    repeated uint32 JFJPADLALMD = 4;
    repeated ExpeditionInfo expedition_info = 6;
    repeated uint32 FNALLOLDGLM = 7;
}

message AcceptActivityExpeditionCsReq {
    ActivityExpedition LGKJLFJGOJE = 12;
}

message AcceptActivityExpeditionScRsp {
    ActivityExpedition LGKJLFJGOJE = 5;
    uint32 retcode = 14;
}

message CancelActivityExpeditionCsReq {
    uint32 MPGEMLGLHBH = 15;
}

message CancelActivityExpeditionScRsp {
    uint32 MPGEMLGLHBH = 13;
    uint32 retcode = 15;
}

message TakeActivityExpeditionRewardCsReq {
    uint32 MPGEMLGLHBH = 12;
}

message TakeActivityExpeditionRewardScRsp {
    ItemList extra_reward = 1;
    uint32 MPGEMLGLHBH = 5;
    uint32 score_id = 7;
    uint32 retcode = 9;
    ItemList reward = 10;
}

message TakeMultipleActivityExpeditionRewardCsReq {
    repeated uint32 GOMDMNHMMNH = 8;
}

message MMNJMINGAHJ {
    ItemList reward = 8;
    ItemList extra_reward = 9;
    uint32 score_id = 10;
    uint32 MPGEMLGLHBH = 11;
}

message TakeMultipleActivityExpeditionRewardScRsp {
    repeated uint32 JIEEELIKIJM = 6;
    uint32 retcode = 12;
    repeated MMNJMINGAHJ CDNDFCEEDCO = 15;
}

message GCAIEMMCPDH {
    repeated uint32 buff_list = 6;
    repeated KJMFEOCKCML avatar_list = 10;
}

message FHBLGMPMIIE {
    map<uint32, uint32> JGAJKOEFGPC = 1;
    repeated uint32 HKMMNFGHFPB = 2;
    uint32 BEJCALDILNC = 3;
    repeated uint32 NJNGBPJEMCL = 9;
    repeated uint32 EDHNAKFOFGJ = 10;
    repeated uint32 AMDHNCJJOPH = 12;
    map<uint32, GCAIEMMCPDH> GBLOOEPPGDM = 15;
}

message GetFantasticStoryActivityDataCsReq {
    uint32 BEJCALDILNC = 13;
}

message GetFantasticStoryActivityDataScRsp {
    uint32 retcode = 9;
    FHBLGMPMIIE FPEPICFCFFM = 11;
}

message FinishChapterScNotify {
    FHBLGMPMIIE FPEPICFCFFM = 1;
}

message KJMFEOCKCML {
    AvatarType avatar_type = 10;
    uint32 avatar_id = 12;
}

message EnterFantasticStoryActivityStageCsReq {
    repeated uint32 buff_list = 4;
    uint32 battle_id = 6;
    repeated KJMFEOCKCML avatar_list = 8;
    uint32 BEJCALDILNC = 11;
}

message EnterFantasticStoryActivityStageScRsp {
    uint32 retcode = 2;
    uint32 battle_id = 3;
    SceneBattleInfo battle_info = 11;
    uint32 BEJCALDILNC = 14;
}

message FantasticStoryActivityBattleEndScNotify {
    uint32 PKKLPBBNNCE = 5;
    uint32 BEJCALDILNC = 9;
    uint32 battle_id = 15;
}

message FeverTimeActivityData {
    uint32 NLPKLPCCJPL = 5;
    FeverTimeBattleRank PLIKADKKLGD = 8;
    uint32 JBOLAAFDKAN = 12;
}

message GetFeverTimeActivityDataCsReq {
}

message GetFeverTimeActivityDataScRsp {
    repeated FeverTimeActivityData CAAEJFIJIDJ = 4;
    uint32 retcode = 10;
}

message FeverTimeActivityBattleEndScNotify {
    uint32 id = 2;
    FeverTimeBattleRank LFJKKFGPKDM = 6;
    uint32 HOEHIOBIIEJ = 7;
    uint32 FHFMFMLLLGD = 12;
}

message EnterFeverTimeActivityStageCsReq {
    uint32 FFINMBACAHH = 2;
    uint32 id = 5;
    repeated FeverTimeAvatar avatar_list = 6;
    uint32 GCJEICIFJGI = 14;
}

message EnterFeverTimeActivityStageScRsp {
    SceneBattleInfo battle_info = 7;
    uint32 retcode = 8;
    uint32 id = 15;
}

message FightEnterCsReq {
    uint32 platform = 2;
    string AOKCMMPFGBC = 3;
    uint64 KPKDNMDAJGL = 5;
    uint32 ICMFPNPIJJF = 6;
    uint32 uid = 8;
    uint32 client_res_version = 9;
    uint32 MKINIOFGIAG = 14;
    uint32 FGOJLPAEJEC = 15;
}

message FightEnterScRsp {
    uint32 retcode = 4;
    bool JLPKEOBINCP = 5;
    uint64 secret_key_seed = 11;
    uint32 MKINIOFGIAG = 13;
    uint64 server_timestamp_ms = 15;
}

message FightLeaveScNotify {
    uint32 CAGJMMMFDLI = 2;
}

message FightKickOutScNotify {
    FightKickoutType kick_type = 15;
}

message FightHeartBeatCsReq {
    uint64 client_time_ms = 3;
}

message FightHeartBeatScRsp {
    uint64 server_time_ms = 8;
    uint64 client_time_ms = 9;
    uint32 retcode = 11;
}

message FightSessionStopScNotify {
    PPGGKMDAOEA PFFFJNGNPOM = 11;
}

message FightGeneralCsReq {
    string MBBDNLNCEJD = 4;
    uint32 JJCMFKJHCFA = 9;
}

message FightGeneralScRsp {
    string MBBDNLNCEJD = 2;
    uint32 retcode = 4;
    uint32 JJCMFKJHCFA = 5;
}

message FightGeneralScNotify {
    string MBBDNLNCEJD = 11;
    uint32 JJCMFKJHCFA = 15;
}

message JHPKNHHNAPP {
    repeated uint32 JBLECMAPFDC = 3;
    string KBJFONAGBHK = 4;
    string LBGDLHKEEKC = 8;
    uint32 ELINMPKBEFL = 13;
    repeated FightGeneralScNotify AHMDOBICECA = 14;
}

message AIDOADPOOFG {
    repeated CBBDIOMIFHD LIPJDJPMOKB = 13;
}

message FightActivityGroup {
    uint32 GroupId = 9;
    repeated uint32 TakenDifficultyLevelRewardList = 10;
    uint32 PassedMaxDifficultyLevel = 14;
    uint32 EndlessMaxWave = 15;
}

message GetFightActivityDataCsReq {
}

message GetFightActivityDataScRsp {
    repeated FightActivityGroup JKHIFDGHJDO = 2;
    uint32 world_level = 9;
    uint32 retcode = 11;
    map<uint32, uint32> DGNFCMDJOPA = 12;
    bool KAIOMPFBGKL = 14;
}

message FightActivityDataChangeScNotify {
    repeated FightActivityGroup JKHIFDGHJDO = 7;
    map<uint32, uint32> DGNFCMDJOPA = 9;
}

message NPEDHHCKLIA {
    AvatarType avatar_type = 12;
    uint32 avatar_id = 14;
}

message EnterFightActivityStageCsReq {
    uint32 NEDFIBONLKB = 1;
    uint32 group_id = 3;
    repeated uint32 item_list = 5;
    repeated NPEDHHCKLIA FOPNLGBGAGH = 8;
    repeated uint32 avatar_list = 13;
}

message EnterFightActivityStageScRsp {
    SceneBattleInfo battle_info = 3;
    uint32 retcode = 5;
    uint32 NEDFIBONLKB = 11;
    uint32 group_id = 12;
}

message TakeFightActivityRewardCsReq {
    uint32 group_id = 1;
    uint32 NEDFIBONLKB = 2;
}

message TakeFightActivityRewardScRsp {
    ItemList reward = 2;
    uint32 retcode = 6;
    uint32 NEDFIBONLKB = 9;
    uint32 group_id = 14;
}

message IKLNILKPENA {
    HGDAPJPKFFB PLIKADKKLGD = 3;
    uint32 JBOLAAFDKAN = 10;
    uint32 challenge_id = 13;
    uint32 AEIEOJGCMMO = 14;
}

message GetFightFestDataCsReq {
}

message GetFightFestDataScRsp {
    uint32 score_id = 7;
    uint32 CPIOGJKFECH = 10;
    repeated uint32 MFGONHJGIPP = 12;
    uint32 retcode = 14;
    repeated IKLNILKPENA challenge_list = 15;
}

message AFODMEJODLG {
    AvatarType avatar_type = 4;
    uint32 id = 5;
}

message StartFightFestCsReq {
    repeated AFODMEJODLG avatar_list = 5;
    uint32 event_id = 8;
    uint32 id = 10;
    APLOAGDIBKI type = 13;
    repeated uint32 MFGONHJGIPP = 15;
}

message StartFightFestScRsp {
    APLOAGDIBKI type = 1;
    uint32 event_id = 7;
    uint32 retcode = 9;
    uint32 id = 10;
    SceneBattleInfo battle_info = 11;
}

message FightFestScoreUpdateNotify {
    uint32 score_id = 2;
    uint32 GNPKPLJLABM = 3;
}

message FightFestUnlockSkillNotify {
    uint32 EJJEHJMMBGJ = 10;
}

message FightFestUpdateChallengeRecordNotify {
    uint32 JBOLAAFDKAN = 1;
    uint32 challenge_id = 2;
    uint32 HOEHIOBIIEJ = 7;
    HGDAPJPKFFB FKPEPBMJHKN = 9;
    HGDAPJPKFFB rank = 11;
}

message FightFestUpdateCoinNotify {
    uint32 CPIOGJKFECH = 4;
}

message KPBFCKNEEIA {
    uint64 LDNBEIDJBHI = 5;
    int32 BLGNMALBOLO = 9;
    FFJPPNGGLFF OILPCHBIJNO = 15;
}

message GLDHEPJPMFM {
    repeated KPBFCKNEEIA FLBMHLPHFND = 10;
}

message PFGAIEBGHCP {
    fixed32 y = 6;
    fixed32 x = 10;
}

message JEJDMMBDALP {
    PFGAIEBGHCP KBCEJINFNNJ = 4;
    uint32 item_id = 10;
}

message AKOKICDPFMP {
    uint32 AHEHKCILDFA = 15;
    oneof PEFGBHJABLK {
        MAOGFDKDCKM MEJDMJIKIMO = 742;
        GLDNBPFCNHD PHMCJEJIDJA = 1070;
        ICAOOPPMJDJ rogue_finish_info = 1206;
        LBAOGIBPJOP LGPIEMDLHJM = 1365;
        GOCKGIGBDCG JHFGDIJPFCG = 1622;
    }
}

message GEMEBEBMIAH {
    repeated AKOKICDPFMP LNDIGHEIHLN = 9;
}

message LBAOGIBPJOP {
    uint32 PBFAIOJJGNL = 1;
    uint32 DKPNENBHELH = 2;
    uint32 EIGABCKEDNP = 3;
    uint32 JIJHAAIHNCN = 4;
    bool JIKEIGBCABB = 5;
    JOMKPEGEFMP HJEFOLKGAEI = 6;
    JOMKPEGEFMP CEIFKJIEAJE = 7;
    uint32 MODDKLNDAMK = 8;
    bool LIKHCLPMHJK = 9;
    uint32 NLIBKABFGCC = 10;
    uint32 BBDOPLEKIAC = 11;
    repeated uint32 JJEFBPKPKBK = 12;
    uint32 ACJCPHIFMLN = 13;
    repeated uint32 PCMGAGAHBLK = 14;
    uint32 KHCMOFPFOAK = 15;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 582;
}

message GKLOALDHNEF {
    int32 FALBKIMMPIH = 1;
    uint32 JOJAHIAFNLK = 2;
    uint32 item_id = 6;
    int32 total_damage = 9;
    int32 JPHEDNECAGD = 11;
}

message ICAOOPPMJDJ {
    uint32 BLKFGAJHMLK = 2;
    repeated GKLOALDHNEF BPIPOBHCMFD = 3;
    bool is_win = 6;
    uint32 CHLLMFJGPPA = 10;
    bool DJEEEABMDDK = 13;
    EEIBHJPNJCF KJPMOHFIILO = 14;
    int32 CLBNHPEABFK = 15;
}

message DCDNIAJCEHN {
    uint32 JLJIGEPLPMH = 1;
    PFGAIEBGHCP IAAGGMKGODC = 2;
    PAJNHIAGODD DJOADECJPOB = 3;
    int32 max_hp = 4;
    PFGAIEBGHCP GODNAALNOKL = 5;
    fixed32 time = 6;
    PFGAIEBGHCP LKEFOLCGFGD = 7;
    int32 hp = 8;
    uint32 skill_id = 9;
    uint32 id = 10;
    int32 attack = 11;
    LKKAJCACIJI KAMIHNEJMFG = 12;
    PFGAIEBGHCP FDNDMHJOHMO = 13;
    uint32 CIPICLLLIJH = 14;
    PFGAIEBGHCP FNIHJJJGOEE = 15;
    bool NBKELCHILGG = 399;
    uint32 buff_id = 439;
    uint32 DKPNENBHELH = 506;
    int32 HDBLELEBKHO = 577;
    fixed32 MNBEMGNNFOD = 673;
    uint32 JLCIKBLNENH = 777;
    uint32 level = 862;
    fixed32 GGBFKENAHOE = 907;
    uint32 DHELBCIMLGA = 929;
    uint32 PNLDLMNKJMK = 1226;
    uint32 IDABOFPKOKN = 1253;
    uint32 JIJHAAIHNCN = 1401;
    FIPPKLCOEGJ CCLMFABDENA = 1417;
    bool DMBBMFFEJGI = 1846;
    uint32 text_id = 1884;
    bool PLFKOCCDBAG = 2005;
}

message GLDNBPFCNHD {
    uint32 HBAPCCEGNME = 1;
    uint32 EHCJCILCNOP = 2;
    fixed32 EEFCBBKKFLC = 3;
    repeated uint32 DPOOAPKPCHF = 4;
    uint32 HMFFHGBKOGL = 5;
    bool FJKBAIMDPEP = 6;
    uint32 extra_id = 7;
    repeated uint32 KNCHEHIIJNN = 8;
    uint32 FMKDIFNJAJC = 9;
    uint32 DHELBCIMLGA = 10;
    IMPKPKAMIAF DNDJKDFHEPE = 11;
    repeated DCDNIAJCEHN HLIEAMPLIPP = 12;
    bool PMANBPLFLKL = 13;
    uint32 KJGDKNJFCPG = 14;
    repeated uint32 JLDCFLKCBLD = 15;
    uint32 IEPGCLGKHEG = 88;
    repeated DCDNIAJCEHN AINLMGDNHIB = 302;
    bool OMKKPGFJHFE = 333;
    uint32 NKHPCKEGPCL = 1095;
    uint32 FOMBHJKDHGO = 1753;
}

message MAOGFDKDCKM {
    uint32 IEHFHKMDAGC = 1;
    repeated HBGHAOPBKJP OLKMCBJFLEJ = 2;
    EOJLNGDDLNN BBDOPLEKIAC = 3;
    EOJLNGDDLNN KHCMOFPFOAK = 5;
    uint32 HMFFHGBKOGL = 6;
    uint32 CHLLMFJGPPA = 7;
    LBAOGIBPJOP LGPIEMDLHJM = 9;
    repeated HBGHAOPBKJP DIBPGGOOGPK = 10;
    fixed32 DPLGCEKJACK = 11;
    PPIFFKJEJJA phase = 12;
    repeated uint32 KNCHEHIIJNN = 13;
    bool OMKKPGFJHFE = 15;
}

message GOCKGIGBDCG {
    uint32 item_id = 5;
    uint32 CHLLMFJGPPA = 6;
    PFGAIEBGHCP KBCEJINFNNJ = 10;
}

message EOJLNGDDLNN {
    repeated JALLAPPCPFE MDBGGBLEGEM = 2;
    repeated uint32 JFEDJMKMLFO = 4;
    repeated HBGHAOPBKJP NBKHPJHJMHO = 6;
    bool NBKELCHILGG = 8;
    bool BLALJMMHIFP = 9;
    uint32 PANBCNICOHJ = 13;
    uint32 CGNBHKBHICG = 15;
}

message HBGHAOPBKJP {
    PFGAIEBGHCP FNIHJJJGOEE = 1;
    int32 hp = 2;
    int32 max_hp = 3;
    bool BMNECPIOPDN = 4;
    uint32 JLCIKBLNENH = 5;
    bool PMANBPLFLKL = 7;
    uint32 id = 8;
    uint32 level = 9;
    uint32 buff_id = 10;
    int32 attack = 11;
    fixed32 MNBEMGNNFOD = 12;
    PFGAIEBGHCP LKEFOLCGFGD = 13;
    bool DMBBMFFEJGI = 14;
    bool PLFKOCCDBAG = 15;
}

message JALLAPPCPFE {
    uint32 DHELBCIMLGA = 7;
    bool FHOKFDMFNKG = 8;
}

message MEKDNIKFDNA {
    uint32 LDNBEIDJBHI = 2;
    NPPNFPPENMC state = 4;
    uint32 rank = 6;
    uint32 NMLFFOGBPOC = 7;
    uint32 score_id = 10;
    uint32 OGNEPBFPILH = 12;
    uint32 hp = 13;
    bool HNJFFFJDGNE = 14;
}

message KLDMJEMIMCN {
    repeated uint32 HBANCCOKOFC = 1;
    repeated MEKDNIKFDNA CPKPINCCEIP = 3;
    DGFCBOFAOIA JGIBHFJMOBE = 5;
    MDOHAFBEEPK MEJDMJIKIMO = 6;
    uint64 MCOKHHFPBPJ = 7;
    int32 HCBBHCKJNJI = 8;
    uint32 DANCCAOJLJN = 10;
}

message JJAEPDIHCNL {
    uint32 HECKMDLOLAG = 3;
    uint32 FPBEDNCOCHO = 14;
}

message MDOHAFBEEPK {
    uint32 GDFNDPMJDAF = 1;
    uint32 score_id = 3;
    uint32 NAJLPNLNOJE = 6;
    CDIMEMFJJFP NIAEGHJLNMB = 7;
    uint32 ANHFJKEPCGF = 8;
    NPPNFPPENMC KJPMOHFIILO = 9;
    uint32 cur_hp = 10;
    repeated uint32 AIHMGHAJGKJ = 11;
    uint32 MIDEJNJCAIA = 12;
    uint32 energy_info = 13;
    uint32 PKDPIEMGIBE = 15;
}

message EGCDDLKHFEB {
    MDOHAFBEEPK MLPCFGDAFND = 6;
    BFILLIOBMFN OLKNDFJBDGJ = 10;
}

message FightMatch3DataCsReq {
    int32 EDIBBBKLGHJ = 5;
}

message FightMatch3DataScRsp {
    KLDMJEMIMCN data = 2;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 6;
    uint32 retcode = 7;
}

message FightMatch3StartCountDownScNotify {
    KLDMJEMIMCN data = 8;
}

message FightMatch3TurnStartScNotify {
    KLDMJEMIMCN HKPODFLGCDJ = 14;
}

message FightMatch3TurnEndScNotify {
    KLDMJEMIMCN HIKLOBGICMP = 1;
    KLDMJEMIMCN CINLCMHHKKO = 14;
}

message FightMatch3SwapCsReq {
    repeated EGCDDLKHFEB ECKKBLNELBM = 6;
    uint32 BBLBLAFIGHM = 7;
    JJAEPDIHCNL PHNLDPOKBKL = 10;
    JJAEPDIHCNL FECLGLBFIDH = 15;
}

message FightMatch3SwapScRsp {
    bool PGMGMJDILCL = 1;
    uint32 retcode = 2;
    uint32 BBLBLAFIGHM = 5;
    MDOHAFBEEPK CHMAONMMEGM = 13;
}

message FightMatch3OpponentDataScNotify {
    uint32 DANCCAOJLJN = 1;
    NPPNFPPENMC state = 3;
    uint32 NMLFFOGBPOC = 11;
    uint32 hp = 12;
    uint32 score_id = 14;
}

message FightMatch3ChatCsReq {
    uint32 HABDKBFMKEE = 9;
}

message FightMatch3ChatScRsp {
    uint32 HABDKBFMKEE = 7;
    uint32 retcode = 12;
}

message FightMatch3ChatScNotify {
    uint32 HABDKBFMKEE = 1;
    uint32 EGKPFGNJAHN = 8;
}

message FightMatch3ForceUpdateNotify {
    KLDMJEMIMCN data = 8;
}

message AssistSimpleInfo {
    uint32 Level = 1;
    uint32 DressedSkinId = 2;
    uint32 AvatarId = 3;
    uint32 Pos = 14;
}

message IHKGNJDNALJ {
    uint32 JGMIPMDPPIJ = 4;
    uint32 KHCNAJOKJHJ = 5;
    uint32 group_id = 6;
    uint32 FCCDILGGOCI = 7;
}

message KPIGLOPEMCF {
    uint32 IJHLOJEFCPM = 12;
}

message PHHLIOGFDEK {
    uint32 IJHLOJEFCPM = 1;
    uint32 OFGBJCCCIKE = 13;
    repeated uint32 CAPICCCIEBO = 15;
}

message BCPDFIPOMAP {
    PHHLIOGFDEK LBHJEHFJLNF = 6;
}

message OBIHNGMNKEK {
    oneof HNIOEHOHNJG {
        BCPDFIPOMAP DAOPOHAMOMF = 5;
        KPIGLOPEMCF LOONEHFNAPC = 14;
    }
}

message HIEJJBDNCNH {
    OBIHNGMNKEK JFPCPDCFLMD = 3;
    IHKGNJDNALJ EBOOMGDGNEP = 8;
    BattleRecordType FGMGPLJCKPC = 9;
}

message PlayerSimpleInfo {
    uint32 uid = 1;
    string GMALCPNOHBF = 2;
    FriendOnlineStatus online_status = 3;
    string nickname = 4;
    repeated AssistSimpleInfo assist_simple_info = 5;
    string AKCEJFCFBAN = 6;
    int64 last_active_time = 8;
    PlatformType platform_type = 9;
    uint32 ANPLLAOBFJI = 10;
    uint32 chat_bubble_id = 11;
    string signature = 12;
    bool is_banned = 13;
    uint32 level = 14;
    uint32 head_icon = 15;
}

message DisplayEquipmentInfo {
    uint32 exp = 5;
    uint32 promotion = 9;
    uint32 tid = 10;
    uint32 level = 13;
    uint32 rank = 14;
}

message DisplayRelicInfo {
    uint32 level = 1;
    uint32 tid = 2;
    uint32 exp = 4;
    uint32 main_affix_id = 6;
    repeated RelicAffix sub_affix_list = 9;
    uint32 type = 14;
}

message DisplayAvatarDetailInfo {
    uint32 Rank = 2;
    uint32 Pos = 3;
    uint32 DressedSkinId = 4;
    uint32 Exp = 6;
    repeated AvatarSkillTree SkilltreeList = 8;
    uint32 AvatarId = 9;
    DisplayEquipmentInfo Equipment = 10;
    uint32 Level = 12;
    repeated DisplayRelicInfo RelicList = 13;
    uint32 Promotion = 14;
}

message PlayerCollectionInfo {
    uint32 LJPEKEDICML = 1;
    uint32 BDBMIKDJLKO = 3;
    uint32 NLJIFEKDPHN = 8;
    uint32 PGCDMMNNCJC = 10;
    uint32 PJCJNKBEIMK = 11;
}

message PlayerRecordInfo {
    uint32 CFDFMGLLICO = 2;
    uint32 GEKKNDONHLJ = 3;
    uint32 EMJDEBDMHLL = 4;
    uint32 FHKKMPDDMGO = 5;
    uint32 BHFEFEODNIM = 6;
    uint32 HKNOAKGCJBK = 7;
    uint32 EHBDEIJJOHK = 11;
    PlayerCollectionInfo collection_info = 13;
    uint32 JFPGBKBPBNF = 14;
}

message PrivacySettings {
    bool AICNFAOBCPI = 2;
    bool NJFMILJOFOK = 4;
    bool KJNCCKHJFHE = 6;
    bool APONEIDMPHL = 8;
    bool PBKBGLHHKPE = 10;
}

message PlayerDisplaySettings {
    OBIHNGMNKEK JFPCPDCFLMD = 7;
    repeated IHKGNJDNALJ challenge_list = 8;
}

message PlayerDetailInfo {
    PlatformType platform_type = 1;
    uint32 uid = 2;
    repeated DisplayAvatarDetailInfo display_avatar_list = 3;
    uint32 head_icon = 4;
    bool is_banned = 5;
    uint32 level = 6;
    uint32 KBMGBNINFBK = 7;
    string nickname = 8;
    bool EMOBIJBDKEI = 9;
    string signature = 10;
    PlayerRecordInfo record_info = 11;
    uint32 world_level = 12;
    string AKCEJFCFBAN = 13;
    uint32 OOOPBHIMNFD = 14;
    string GMALCPNOHBF = 15;
    PlayerDisplaySettings ONKHLHOJHGN = 361;
    uint32 ANPLLAOBFJI = 635;
    PrivacySettings privacy_settings = 863;
    repeated DisplayAvatarDetailInfo assist_avatar_list = 1517;
}

message FriendSimpleInfo {
    HIEJJBDNCNH ILCHAJCFFBF = 3;
    PlayingState playing_state = 5;
    PlayerSimpleInfo player_simple_info = 6;
    string remark_name = 12;
    int64 create_time = 14;
    bool is_marked = 15;
}

message FriendApplyInfo {
    int64 apply_time = 6;
    PlayerSimpleInfo player_simple_info = 11;
}

message FriendRecommendInfo {
    PlayerSimpleInfo player_simple_info = 5;
    bool JHOLBLPEGLJ = 11;
}

message PlayerAssistInfo {
    PlayerSimpleInfo player_simple_info = 4;
    DisplayAvatarDetailInfo MDHFANLHNMA = 10;
}

message FLCMJAHGKFK {
    uint32 level = 1;
    uint32 uid = 2;
    string nickname = 3;
    uint32 INNANICLCAE = 4;
    string remark_name = 5;
    string GMALCPNOHBF = 8;
    uint32 NPPPHGFENPH = 10;
    PlatformType platform_type = 13;
    uint32 head_icon = 15;
}

message FCNOLLFGPCK {
    uint32 buff_one = 2;
    uint32 INHDDNNPBDB = 3;
    repeated ChallengeLineupList lineup_list = 6;
    PlayerSimpleInfo player_simple_info = 9;
    string remark_name = 11;
    uint32 buff_two = 12;
    uint32 score_id = 14;
}

message CHKIICNAPHA {
    uint32 group_id = 1;
    uint32 KHCNAJOKJHJ = 7;
    oneof CGFPDMPPNJF {
        ChallengeStatistics challenge_default = 172;
        ChallengeStoryStatistics challenge_story = 847;
        ChallengeBossStatistics challenge_boss = 1035;
    }
}

message OGNLDADPJFO {
    uint32 map_id = 8;
    RogueFinishInfo rogue_finish_info = 13;
}

message EAIMKOMHKHD {
    uint32 avatar_id = 5;
    uint32 GGDIIBCDOBB = 15;
}

message ANGOAMADOMA {
    uint32 JBLOKLCPAFN = 1;
    uint32 OFGBJCCCIKE = 2;
    RogueTournFinishInfo tourn_finish_info = 5;
    uint32 IJHLOJEFCPM = 7;
}

message GGKBHALPIDK {
    uint32 LHBDONJIICC = 6;
    uint32 DBAHFEFGLMD = 9;
    uint32 IMLHFGEPCAN = 13;
}

message LFJPDDCNBKC {
    uint32 DBAHFEFGLMD = 2;
    uint32 FNMGAOHMLIM = 7;
    uint32 FJHIGBBMJDM = 10;
    uint32 EPLJMCAPMPC = 13;
}

message NHAGPMMCDCF {
    uint32 ONAHHAMHFDB = 1;
    uint32 AGIJKFBCJOC = 11;
    uint32 DBAHFEFGLMD = 13;
    uint32 OIAJANCBABP = 15;
}

message OKDBOGBABNI {
    GGKBHALPIDK PLCCEHDNAFL = 7;
    LFJPDDCNBKC APMJFGKIFON = 10;
    NHAGPMMCDCF HDLJBADEKFI = 13;
    oneof MBLAGJJOEFF {
        ANGOAMADOMA OPFPOLCGMED = 130;
        OGNLDADPJFO EDGFEDJBAHF = 788;
    }
}

message IOJHJAHIMHM {
    uint32 DBAHFEFGLMD = 6;
}

message JIENKFADCHE {
    uint32 DBAHFEFGLMD = 2;
    uint32 NJOICIOPBNH = 15;
}

message MEEHCBGDBEA {
    uint32 challenge_id = 3;
}

message DHAHAKMPNAF {
    int64 time = 10;
    DevelopmentType EJHMNKHEPFA = 11;
    oneof PAECDOKLPFG {
        uint32 CKKNNHMDCOG = 75;
        uint32 avatar_id = 793;
        IOJHJAHIMHM LIIBBGGEHFP = 1131;
        JIENKFADCHE IELHLBFFAGK = 1433;
        uint32 MDMGKHLHIIN = 1661;
        MEEHCBGDBEA IKFFOBAMGHJ = 1838;
        uint32 panel_id = 1901;
    }
}

message GetFriendListInfoCsReq {
}

message GetFriendListInfoScRsp {
    uint32 retcode = 2;
    repeated PlayerSimpleInfo black_list = 4;
    repeated FriendSimpleInfo friend_list = 15;
}

message GetPlayerDetailInfoCsReq {
    uint32 uid = 12;
}

message GetPlayerDetailInfoScRsp {
    uint32 retcode = 4;
    PlayerDetailInfo detail_info = 11;
}

message GetFriendApplyListInfoCsReq {
}

message GetFriendApplyListInfoScRsp {
    uint32 retcode = 10;
    repeated uint32 send_apply_list = 11;
    repeated FriendApplyInfo receive_apply_list = 12;
}

message ApplyFriendCsReq {
    FriendApplySource source = 8;
    uint32 uid = 14;
}

message ApplyFriendScRsp {
    uint32 uid = 2;
    uint32 retcode = 13;
}

message SyncApplyFriendScNotify {
    FriendApplyInfo apply_info = 4;
}

message HandleFriendCsReq {
    bool is_accept = 2;
    uint32 uid = 8;
}

message HandleFriendScRsp {
    bool is_accept = 1;
    uint32 retcode = 2;
    FriendSimpleInfo friend_info = 3;
    uint32 uid = 12;
}

message SyncHandleFriendScNotify {
    FriendSimpleInfo friend_info = 5;
    bool is_accept = 11;
    uint32 uid = 14;
}

message DeleteFriendCsReq {
    uint32 FIOCDBIPCGB = 8;
    uint32 uid = 15;
}

message DeleteFriendScRsp {
    uint32 uid = 7;
    uint32 retcode = 12;
}

message SyncDeleteFriendScNotify {
    uint32 uid = 15;
}

message AddBlacklistCsReq {
    uint32 uid = 3;
}

message AddBlacklistScRsp {
    PlayerSimpleInfo black_info = 6;
    uint32 retcode = 7;
}

message SyncAddBlacklistScNotify {
    uint32 uid = 9;
}

message GetFriendRecommendListInfoCsReq {
    bool AHOILNFIIEG = 12;
}

message GetFriendRecommendListInfoScRsp {
    uint32 retcode = 11;
    repeated FriendRecommendInfo player_simple_info_list = 15;
}

message SetFriendRemarkNameCsReq {
    uint32 reason = 2;
    uint32 uid = 5;
    string remark_name = 11;
}

message SetFriendRemarkNameScRsp {
    uint32 uid = 3;
    string remark_name = 8;
    uint32 retcode = 10;
}

message ReportPlayerCsReq {
    string MIMAKHAABAH = 2;
    uint32 uid = 5;
    uint32 EHBCLJFPOOE = 7;
}

message ReportPlayerScRsp {
    uint32 retcode = 9;
}

message DeleteBlacklistCsReq {
    uint32 uid = 4;
}

message DeleteBlacklistScRsp {
    uint32 retcode = 3;
    uint32 uid = 9;
}

message SearchPlayerCsReq {
    repeated uint32 uid_list = 5;
    bool AHOILNFIIEG = 9;
}

message SearchPlayerScRsp {
    repeated uint32 result_uid_list = 4;
    uint32 retcode = 6;
    repeated PlayerSimpleInfo simple_info_list = 12;
}

message GetAssistListCsReq {
    bool AHOILNFIIEG = 7;
    bool KIBOAGMOJCP = 13;
}

message GetAssistListScRsp {
    repeated PlayerAssistInfo assist_list = 1;
    uint32 retcode = 14;
}

message SetAssistCsReq {
    uint32 avatar_id = 3;
    uint32 uid = 4;
}

message SetAssistScRsp {
    uint32 retcode = 7;
    uint32 avatar_id = 10;
    uint32 uid = 11;
}

message GetCurAssistCsReq {
}

message GetCurAssistScRsp {
    PlayerAssistInfo assist_info = 1;
    uint32 retcode = 15;
}

message GetAssistHistoryCsReq {
}

message GetAssistHistoryScRsp {
    uint32 NFJJAPNPPKP = 2;
    uint32 OMHCHJLLIIF = 5;
    repeated uint32 today_use_uid_list = 8;
    uint32 PBFNEIGOPMP = 10;
    uint32 retcode = 13;
}

message NewAssistHistoryNotify {
    uint32 NFJJAPNPPKP = 14;
}

message TakeAssistRewardCsReq {
}

message TakeAssistRewardScRsp {
    ItemList reward = 7;
    uint32 retcode = 10;
    repeated FLCMJAHGKFK NLCNBIEHCOH = 11;
}

message CurAssistChangedNotify {
    PlayerAssistInfo assist_info = 7;
}

message GetPlatformPlayerInfoCsReq {
    PlatformType platform_type = 10;
    string DNENLCHJEKG = 14;
}

message GetPlatformPlayerInfoScRsp {
    uint32 retcode = 9;
    repeated PlayerSimpleInfo player_simple_info_list = 11;
}

message GetFriendLoginInfoCsReq {
}

message GetFriendLoginInfoScRsp {
    uint32 retcode = 1;
    bool LIFCEHLFDNM = 3;
    repeated uint32 IIHDBINOPMG = 5;
    bool BOHNBJMMKBO = 14;
    repeated uint32 DBNDOMDMMGF = 15;
}

message SetForbidOtherApplyFriendCsReq {
    bool MJPFLIKAFEJ = 15;
}

message SetForbidOtherApplyFriendScRsp {
    uint32 retcode = 1;
    bool MJPFLIKAFEJ = 12;
}

message SetFriendMarkCsReq {
    uint32 uid = 2;
    uint32 reason = 4;
    bool ADJGKCOKOLN = 6;
}

message SetFriendMarkScRsp {
    uint32 uid = 1;
    uint32 retcode = 13;
    bool ADJGKCOKOLN = 14;
}

message GetFriendAssistListCsReq {
    AssistAvatarType MLOOGABMIHP = 1;
    repeated uint32 KCPAODEBJDG = 2;
    repeated uint32 BIJGJECJMHM = 6;
    uint32 target_side = 8;
    bool AHOILNFIIEG = 9;
}

message GetFriendAssistListScRsp {
    repeated PlayerAssistInfo assist_list = 8;
    uint32 retcode = 9;
    uint32 target_side = 14;
}

message GetFriendChallengeLineupCsReq {
    uint32 challenge_id = 15;
}

message GetFriendChallengeLineupScRsp {
    bool ONOCJEEBFCI = 1;
    uint32 retcode = 7;
    repeated FCNOLLFGPCK JAEJJMJPMNC = 11;
}

message GetFriendChallengeDetailCsReq {
    uint32 uid = 3;
    uint32 challenge_id = 6;
}

message GetFriendChallengeDetailScRsp {
    repeated DisplayAvatarDetailInfo CCGDMOOLHHB = 4;
    uint32 uid = 6;
    uint32 retcode = 10;
    uint32 challenge_id = 14;
}

message KAMCIOPBPGA {
    PlayerSimpleInfo player_simple_info = 2;
    repeated OILPIACENNH avatar_list = 4;
    string remark_name = 9;
    repeated uint32 JHIAKMCHPLB = 13;
}

message KEHMGKIHEFN {
    oneof NJEFMLLOBBJ {
        FCNOLLFGPCK GIEIDJEEPAC = 5;
        KAMCIOPBPGA ADDCJEJPFEF = 10;
    }
}

message IDNHIELAIFM {
    uint32 key = 3;
    DLLLEANDAIH type = 13;
}

message PCAPDIPOLMC {
    uint32 key = 6;
    uint32 retcode = 7;
    DLLLEANDAIH type = 8;
    repeated KEHMGKIHEFN JAEJJMJPMNC = 10;
    bool ONOCJEEBFCI = 14;
}

message HHIOHFKOCFD {
    uint32 key = 4;
    DLLLEANDAIH type = 9;
    uint32 uid = 13;
}

message CLCGHILDELA {
    DLLLEANDAIH type = 6;
    repeated DisplayAvatarDetailInfo CCGDMOOLHHB = 7;
    uint32 key = 9;
    uint32 uid = 10;
    uint32 retcode = 15;
}

message GetFriendBattleRecordDetailCsReq {
    uint32 uid = 13;
}

message GetFriendBattleRecordDetailScRsp {
    OKDBOGBABNI PGBBEPKAHBH = 7;
    uint32 uid = 8;
    uint32 retcode = 9;
    repeated CHKIICNAPHA JDIDIHOBAOD = 12;
}

message GetFriendDevelopmentInfoCsReq {
    uint32 uid = 10;
}

message GetFriendDevelopmentInfoScRsp {
    uint32 uid = 5;
    repeated DHAHAKMPNAF JBHBFBJGBPH = 9;
    uint32 retcode = 15;
}

message GetGachaInfoCsReq {
}

message GachaCeilingAvatar {
    uint32 RepeatedCnt = 4;
    uint32 AvatarId = 15;
}

message GachaCeiling {
    bool is_claimed = 7;
    uint32 ceiling_num = 9;
    repeated GachaCeilingAvatar avatar_list = 13;
}

message LOPDJAHFPHN {
    uint32 IINCDJPOOMC = 5;
    repeated uint32 JIGONEALCPC = 9;
    repeated uint32 DLABDNPIHFF = 10;
    uint32 CHDOIBFEHLP = 11;
}

message GachaInfo {
    uint32 gacha_id = 1;
    LOPDJAHFPHN GDPOEEJNMHN = 3;
    int64 begin_time = 4;
    string drop_history_webview = 5;
    repeated uint32 item_detail_list = 7;
    GachaCeiling gacha_ceiling = 8;
    int64 end_time = 10;
    uint32 KMNJNMJFGBG = 11;
    repeated uint32 prize_item_list = 12;
    uint32 GDIFAAHIFBH = 14;
    string detail_webview = 15;
}

message GetGachaInfoScRsp {
    repeated GachaInfo gacha_info_list = 1;
    uint32 gacha_random = 3;
    uint32 NBELNOIPOEK = 4;
    uint32 DJNDMNPEBKA = 9;
    uint32 NOPBEBKHIKA = 12;
    uint32 retcode = 14;
}

message DoGachaCsReq {
    uint32 gacha_random = 1;
    uint32 simulate_magic = 4;
    uint32 gacha_num = 6;
    uint32 gacha_id = 7;
}

message GachaItem {
    ItemList transfer_item_list = 1;
    bool is_new = 3;
    ItemList token_item = 7;
    Item gacha_item = 14;
}

message DoGachaScRsp {
    repeated GachaItem gacha_item_list = 1;
    uint32 ceiling_num = 3;
    uint32 KMNJNMJFGBG = 4;
    uint32 retcode = 5;
    uint32 gacha_id = 6;
    uint32 gacha_num = 7;
    uint32 NOPBEBKHIKA = 12;
    uint32 PENILHGLHHM = 13;
    uint32 GDIFAAHIFBH = 14;
}

message GetGachaCeilingCsReq {
    uint32 gacha_type = 1;
}

message GetGachaCeilingScRsp {
    uint32 gacha_type = 1;
    uint32 retcode = 9;
    GachaCeiling gacha_ceiling = 13;
}

message ExchangeGachaCeilingCsReq {
    uint32 gacha_type = 8;
    uint32 avatar_id = 15;
}

message ExchangeGachaCeilingScRsp {
    uint32 retcode = 3;
    uint32 gacha_type = 5;
    uint32 avatar_id = 6;
    GachaCeiling gacha_ceiling = 14;
    ItemList transfer_item_list = 15;
}

message SetGachaDecideItemCsReq {
    repeated uint32 DLABDNPIHFF = 4;
    uint32 CHDOIBFEHLP = 7;
    uint32 gacha_id = 8;
}

message SetGachaDecideItemScRsp {
    repeated uint32 farm_stage_gacha_id_list = 4;
    LOPDJAHFPHN GDPOEEJNMHN = 7;
    uint32 retcode = 8;
}

message GachaDecideItemChangeScNotify {
    repeated uint32 farm_stage_gacha_id_list = 2;
    LOPDJAHFPHN GDPOEEJNMHN = 7;
}

message HeartDialDialogueInfo {
    bool FBKEKCGELBE = 4;
    uint32 dialogue_id = 6;
}

message HeartDialScriptInfo {
    uint32 script_id = 2;
    HeartDialStepType step = 8;
    bool JMPEJFICKJO = 12;
    HeartDialEmotionType cur_emotion_type = 13;
    bool KKGFIGCHKIB = 14;
}

message MMEINFMDJFG {
    uint32 KBMMMMCKJNI = 7;
    uint32 script_id = 13;
}

message GetHeartDialInfoCsReq {
}

message GetHeartDialInfoScRsp {
    repeated MMEINFMDJFG OCMOEJIDLAM = 3;
    uint32 retcode = 4;
    HeartDialUnlockStatus unlock_status = 6;
    repeated HeartDialDialogueInfo dialogue_info_list = 10;
    repeated HeartDialScriptInfo script_info_list = 11;
}

message ChangeScriptEmotionCsReq {
    HeartDialEmotionType target_emotion_type = 6;
    uint32 FIHNCOABELA = 9;
    uint32 script_id = 11;
}

message ChangeScriptEmotionScRsp {
    uint32 retcode = 5;
    HeartDialEmotionType KEFKOGKLEFC = 9;
    uint32 script_id = 11;
}

message SubmitEmotionItemCsReq {
    ItemList item_list = 5;
    uint32 FIHNCOABELA = 10;
    uint32 script_id = 12;
}

message SubmitEmotionItemScRsp {
    uint32 retcode = 5;
    uint32 script_id = 15;
}

message FinishEmotionDialoguePerformanceCsReq {
    uint32 script_id = 5;
    uint32 FIHNCOABELA = 6;
    uint32 dialogue_id = 12;
}

message FinishEmotionDialoguePerformanceScRsp {
    uint32 retcode = 3;
    ItemList reward_list = 5;
    uint32 script_id = 13;
    uint32 dialogue_id = 14;
}

message HeartDialScriptChangeScNotify {
    repeated HeartDialScriptInfo PKFLGDFDMOI = 3;
    HeartDialUnlockStatus unlock_status = 7;
    repeated MMEINFMDJFG OCMOEJIDLAM = 9;
    repeated HeartDialDialogueInfo NGLHCMBGHIO = 12;
}

message HeartDialTraceScriptCsReq {
    MMEINFMDJFG AGOIPFBDDPO = 12;
}

message HeartDialTraceScriptScRsp {
    uint32 retcode = 6;
    MMEINFMDJFG AGOIPFBDDPO = 7;
}

message DEJAKPOEPKN {
    repeated uint32 LFPMAOBGNEN = 2;
    uint32 CGFGFMGDPNJ = 13;
}

message JMIJJHKIBLB {
    uint32 star = 4;
    bool GJIEAHDBNNI = 12;
    uint32 challenge_id = 15;
}

message HeliobusChallengeLineup {
    uint32 GroupId = 5;
    uint32 SkillId = 7;
    repeated uint32 AvatarIdList = 9;
}

message HeliobusActivityDataCsReq {
}

message HeliobusActivityDataScRsp {
    uint32 IBHAAEJEEHC = 1;
    uint32 EENJBPMNDOL = 2;
    uint32 level = 3;
    repeated JMIJJHKIBLB challenge_list = 4;
    repeated GBJKKFHPFFN NFDBMHPPFIP = 5;
    uint32 phase = 6;
    uint32 IPHKDELMOIH = 8;
    DEJAKPOEPKN skill_info = 9;
    uint32 retcode = 10;
    repeated HeliobusChallengeLineup GCLJENGJICM = 14;
}

message GOAMMAGCIJJ {
    repeated GOAMMAGCIJJ JNDKOOEJCFC = 7;
    uint32 ELIADKDAECO = 9;
    uint32 KMAEMPMOCCC = 10;
}

message GBJKKFHPFFN {
    bool AJCIODKLLML = 2;
    uint32 FCLNOOGEHMC = 3;
    uint32 CMHGBBHKNCI = 4;
    bool DEKHDIBCFAB = 6;
    repeated GOAMMAGCIJJ NDJFNHFPCGD = 9;
    uint32 JFMOFIIDCNP = 10;
    uint32 IHKEJEBCEIB = 14;
    uint32 AKNKPKPLJHF = 15;
}

message HeliobusSnsReadCsReq {
    uint32 IHKEJEBCEIB = 5;
}

message HeliobusSnsReadScRsp {
    uint32 IHKEJEBCEIB = 11;
    uint32 retcode = 15;
}

message HeliobusSnsPostCsReq {
    uint32 JFMOFIIDCNP = 11;
    uint32 FCLNOOGEHMC = 12;
    uint32 IHKEJEBCEIB = 14;
}

message HeliobusSnsPostScRsp {
    uint32 retcode = 6;
    GBJKKFHPFFN EIMCNIFMLBL = 12;
}

message HeliobusSnsLikeCsReq {
    uint32 IHKEJEBCEIB = 3;
}

message HeliobusSnsLikeScRsp {
    uint32 retcode = 2;
    uint32 IHKEJEBCEIB = 11;
    bool DEKHDIBCFAB = 14;
}

message HeliobusSnsCommentCsReq {
    uint32 IHKEJEBCEIB = 2;
    uint32 KALJKFKJFFA = 4;
    uint32 KMAEMPMOCCC = 7;
}

message HeliobusSnsCommentScRsp {
    GBJKKFHPFFN EIMCNIFMLBL = 2;
    uint32 retcode = 6;
}

message HeliobusSnsUpdateScNotify {
    repeated GBJKKFHPFFN GKFHMGMBIKA = 3;
}

message HeliobusInfoChangedScNotify {
    repeated GBJKKFHPFFN GKFHMGMBIKA = 2;
    uint32 EENJBPMNDOL = 8;
    uint32 phase = 10;
    uint32 IPHKDELMOIH = 13;
}

message HeliobusUpgradeLevelCsReq {
}

message HeliobusUpgradeLevelScRsp {
    uint32 retcode = 1;
    uint32 level = 15;
}

message HeliobusUnlockSkillScNotify {
    uint32 CGFGFMGDPNJ = 3;
    uint32 skill_id = 10;
}

message HeliobusEnterBattleCsReq {
    uint32 event_id = 10;
    repeated uint32 avatar_id_list = 12;
    uint32 skill_id = 13;
}

message HeliobusEnterBattleScRsp {
    uint32 event_id = 3;
    uint32 retcode = 14;
    SceneBattleInfo battle_info = 15;
}

message HeliobusSelectSkillCsReq {
    uint32 skill_id = 7;
}

message HeliobusSelectSkillScRsp {
    uint32 retcode = 12;
    uint32 skill_id = 13;
}

message HeliobusChallengeUpdateScNotify {
    JMIJJHKIBLB challenge = 11;
}

message HeliobusLineupUpdateScNotify {
    HeliobusChallengeLineup lineup = 3;
}

message HeliobusStartRaidCsReq {
    repeated uint32 avatar_list = 1;
    uint32 skill_id = 2;
    bool JGEAEGMHDOC = 3;
    uint32 ENLKNPIBLIO = 7;
    uint32 CENIFNKNFNP = 10;
    uint32 prop_entity_id = 13;
}

message HeliobusStartRaidScRsp {
    uint32 retcode = 5;
    FNLGPLNCPCL scene = 15;
}

message GetBagCsReq {
}

message Equipment {
    uint32 equip_avatar_id = 1;
    bool is_protected = 5;
    uint32 rank = 6;
    uint32 tid = 7;
    uint32 unique_id = 8;
    uint32 exp = 9;
    uint32 promotion = 12;
    uint32 level = 14;
}

message Relic {
    uint32 exp = 1;
    bool is_discarded = 2;
    uint32 main_affix_id = 3;
    repeated RelicAffix sub_affix_list = 4;
    uint32 unique_id = 5;
    uint32 tid = 6;
    uint32 equip_avatar_id = 8;
    bool is_protected = 10;
    uint32 level = 12;
    repeated RelicAffix reforge_sub_affix_list = 14;
}

message Material {
    uint64 expire_time = 9;
    uint32 tid = 10;
    uint32 Num = 12;
}

message WaitDelResource {
    uint32 Num = 7;
    uint32 tid = 10;
}

message Material0 {
    uint64 expire_time = 5;
    uint32 tid = 7;
    uint32 Num = 15;
}

message GetBagScRsp {
    repeated uint32 AOIIHCFMFPH = 1;
    repeated Relic relic_list = 2;
    uint32 retcode = 3;
    repeated Material0 FCOKFFEAPMI = 4;
    repeated PileItem BAFEBHDOBFJ = 5;
    repeated Material IFENMDPBNKG = 6;
    repeated uint32 FDBJLGDHCDO = 7;
    repeated Equipment equipment_list = 8;
    repeated TurnFoodSwitch KMJEFMFBLLI = 9;
    repeated uint32 GEMCACJLPIJ = 10;
    repeated WaitDelResource HLINMKBDKNC = 11;
    repeated Material material_list = 12;
    repeated Material0 PHNGMELJKBE = 13;
    uint32 AEPNIDPONKC = 15;
}

message PromoteEquipmentCsReq {
    ItemCostData cost_data = 12;
    uint32 equipment_unique_id = 13;
}

message PromoteEquipmentScRsp {
    uint32 retcode = 15;
}

message LockEquipmentCsReq {
    repeated uint32 ODLDPKIOEOM = 2;
    bool OAHNBDDIAJL = 4;
}

message LockEquipmentScRsp {
    uint32 retcode = 12;
}

message UseItemCsReq {
    uint32 base_avatar_id = 1;
    bool FELCIEMKCGF = 6;
    uint32 use_item_id = 8;
    AvatarType use_avatar_type = 9;
    uint32 use_item_count = 13;
    uint32 optional_reward_id = 15;
}

message UseItemScRsp {
    uint64 month_card_out_date_time = 1;
    uint32 formula_id = 3;
    uint32 use_item_id = 8;
    ItemList return_data = 9;
    uint32 use_item_count = 10;
    uint32 retcode = 13;
}

message RankUpEquipmentCsReq {
    uint32 equipment_unique_id = 5;
    ItemCostData cost_data = 8;
}

message RankUpEquipmentScRsp {
    uint32 retcode = 8;
}

message BEPAHBKLJNN {
    ItemCostData cost_data = 9;
    uint32 equipment_unique_id = 12;
}

message BatchRankUpEquipmentCsReq {
    repeated BEPAHBKLJNN switch_list = 15;
}

message BatchRankUpEquipmentScRsp {
    uint32 retcode = 6;
}

message ExpUpEquipmentCsReq {
    ItemCostData cost_data = 2;
    uint32 equipment_unique_id = 11;
}

message ExpUpEquipmentScRsp {
    repeated PileItem return_item_list = 2;
    uint32 retcode = 5;
}

message ComposeItemCsReq {
    uint32 compose_id = 1;
    uint32 count = 4;
    ItemCostData convert_item_list = 5;
    ItemCostData compose_item_list = 12;
}

message ComposeItemScRsp {
    ItemList return_item_list = 5;
    uint32 compose_id = 8;
    uint32 count = 12;
    uint32 retcode = 14;
}

message ComposeSelectedRelicCsReq {
    uint32 main_affix_id = 2;
    repeated uint32 sub_affix_id_list = 3;
    uint32 compose_id = 4;
    ItemCostData wr_item_list = 10;
    ItemCostData compose_item_list = 11;
    uint32 compose_relic_id = 13;
    uint32 count = 15;
}

message ComposeSelectedRelicScRsp {
    ItemList return_item_list = 2;
    uint32 retcode = 9;
    uint32 compose_id = 14;
}

message ExpUpRelicCsReq {
    ItemCostData cost_data = 1;
    uint32 relic_unique_id = 2;
}

message ExpUpRelicScRsp {
    repeated PileItem return_item_list = 3;
    uint32 retcode = 12;
}

message LockRelicCsReq {
    bool IEMNPGOMJCO = 3;
    bool OAHNBDDIAJL = 8;
    repeated uint32 KGEFHOECMMN = 10;
}

message LockRelicScRsp {
    uint32 retcode = 14;
}

message DiscardRelicCsReq {
    ICPINEHOLML NLPCONNJONF = 1;
    repeated uint32 KGEFHOECMMN = 4;
    uint64 HNHFDMDIBIO = 6;
    bool JNKHGFILJPB = 11;
}

message DiscardRelicScRsp {
    repeated uint32 KGEFHOECMMN = 1;
    bool JNKHGFILJPB = 2;
    ICPINEHOLML NLPCONNJONF = 5;
    uint32 retcode = 7;
}

message SellItemCsReq {
    bool OLFKACKGOFK = 6;
    ItemCostData cost_data = 10;
}

message SellItemScRsp {
    ItemList return_item_list = 8;
    uint32 retcode = 14;
}

message RechargeSuccNotify {
    ItemList ItemList = 6;
    string ChannelOrderNo = 9;
    uint64 MonthCardOutdateTime = 11;
    string ProductId = 12;
}

message ExchangeHcoinCsReq {
    uint32 Num = 12;
}

message ExchangeHcoinScRsp {
    uint32 Num = 12;
    uint32 retcode = 13;
}

message AddEquipmentScNotify {
    uint32 MDMGKHLHIIN = 1;
}

message GetRecyleTimeCsReq {
    repeated uint32 CJLNDNILGMF = 2;
}

message GetRecyleTimeScRsp {
    repeated Material0 FCOKFFEAPMI = 1;
    uint32 retcode = 7;
}

message FNHMMMKJGPB {
    uint32 OJEMELHCMPJ = 1;
    uint32 AMBDKDAMHLH = 2;
}

message ComposeLimitNumCompleteNotify {
    repeated FNHMMMKJGPB DCHNAEDINMM = 5;
}

message ComposeLimitNumUpdateNotify {
    FNHMMMKJGPB FGLFGJDPJPD = 5;
}

message DestroyItemCsReq {
    uint32 item_id = 1;
    uint32 cur_item_count = 5;
    uint32 item_count = 11;
}

message DestroyItemScRsp {
    uint32 retcode = 5;
    uint32 cur_item_count = 7;
}

message GetMarkItemListCsReq {
}

message GetMarkItemListScRsp {
    uint32 retcode = 10;
    repeated uint32 PDBIHONOLFJ = 12;
}

message MarkItemCsReq {
    bool NAEHPHHDGEK = 2;
    uint32 item_id = 13;
}

message MarkItemScRsp {
    uint32 item_id = 3;
    uint32 retcode = 7;
    bool NAEHPHHDGEK = 12;
}

message CancelMarkItemNotify {
    uint32 item_id = 10;
}

message SyncTurnFoodNotify {
    repeated uint32 FDBJLGDHCDO = 3;
    repeated TurnFoodSwitch KMJEFMFBLLI = 7;
}

message SetTurnFoodSwitchCsReq {
    bool BNDLHJHALMB = 4;
    TurnFoodSwitch JCAKHHKFDFN = 13;
}

message SetTurnFoodSwitchScRsp {
    bool BNDLHJHALMB = 4;
    TurnFoodSwitch JCAKHHKFDFN = 10;
    uint32 retcode = 15;
}

message GeneralVirtualItemDataNotify {
    bool PKBAHPFJGDB = 4;
    repeated PileItem FDJKCCGDNKA = 13;
}

message RelicFilterPlanIcon {
    bool IsAvatarIcon = 8;
    uint32 IconId = 10;
}

message RelicFilterPlan {
    string Name = 1;
    uint32 SlotIndex = 2;
    RelicFilterPlanIcon Icon = 3;
    uint32 AvatarIdOnCreate = 6;
    bool IsMarked = 8;
    int64 UpdateTimestamp = 11;
    RelicFilterPlanSettings Settings = 13;
}

message GetRelicFilterPlanCsReq {
}

message GetRelicFilterPlanScRsp {
    uint32 retcode = 3;
    repeated RelicFilterPlan RelicFilterPlanList = 12;
}

message AddRelicFilterPlanCsReq {
    uint32 AvatarIdOnCreate = 3;
    RelicFilterPlanSettings Settings = 6;
    bool IsMarked = 7;
    string Name = 10;
    RelicFilterPlanIcon Icon = 13;
}

message AddRelicFilterPlanScRsp {
    uint32 retcode = 2;
    RelicFilterPlan Plan = 14;
}

message ModifyRelicFilterPlanCsReq {
    uint32 SlotIndex = 10;
    oneof infoCase_ {
        RogueTournWorkbenchInfo RogueTournWorkbenchInfo = 3;
        PropRogueInfo RogueInfo = 5;
        PropChessRogueInfo ChessRogueInfo = 6;
        RogueTournDoorInfo RogueTournDoorInfo = 7;
        //RogueGambleMachineInfo RogueGambleMachineInfo = 10;
        PropAeonInfo AeonInfo = 11;
        RogueMagicDoorInfo RogueMagicDoorInfo = 12;
        RogueCurseChestInfo RogueCurseChestInfo = 14;
    }
}

message ModifyRelicFilterPlanScRsp {
    uint32 SlotIndex = 4;
    uint32 retcode = 5;
    int64 UpdateTimestamp = 11;
    oneof infoCase_ {
        RogueTournWorkbenchInfo RogueTournWorkbenchInfo = 3;
        //PropRogueInfo RogueInfo = 5;
        PropChessRogueInfo ChessRogueInfo = 6;
        RogueTournDoorInfo RogueTournDoorInfo = 7;
        RogueGambleMachineInfo RogueGambleMachineInfo = 10;
        //PropAeonInfo AeonInfo = 11;
        RogueMagicDoorInfo RogueMagicDoorInfo = 12;
        RogueCurseChestInfo RogueCurseChestInfo = 14;
    }
}

message DeleteRelicFilterPlanCsReq {
    bool IsBatchOp = 3;
    repeated uint32 SlotIndexList = 10;
}

message DeleteRelicFilterPlanScRsp {
    repeated uint32 NDOBMAJMLNK = 1;
    uint32 retcode = 3;
    bool IEMNPGOMJCO = 4;
}

message MarkRelicFilterPlanCsReq {
    bool IsBatchOp = 5;
    bool IsMark = 8;
    repeated uint32 SlotIndexList = 14;
}

message MarkRelicFilterPlanScRsp {
    bool IsBatchOp = 1;
    uint32 retcode = 2;
    bool IsMark = 3;
    repeated uint32 SlotIndexList = 11;
}

message RelicFilterPlanClearNameScNotify {
    uint32 max_times = 15;
}

message RelicReforgeCsReq {
    uint32 relic_unique_id = 12;
}

message RelicReforgeScRsp {
    uint32 retcode = 3;
}

message RelicReforgeConfirmCsReq {
    uint32 relic_unique_id = 4;
    bool is_cancel = 6;
}

message RelicReforgeConfirmScRsp {
    uint32 retcode = 5;
}

message MusicData {
    bool is_played = 1;
    uint32 group_id = 9;
    uint32 id = 12;
}

message GetJukeboxDataCsReq {
}

message GetJukeboxDataScRsp {
    uint32 retcode = 8;
    uint32 current_music_id = 10;
    repeated MusicData unlocked_music_list = 12;
}

message PlayBackGroundMusicCsReq {
    uint32 play_music_id = 11;
}

message PlayBackGroundMusicScRsp {
    uint32 retcode = 3;
    uint32 play_music_id = 6;
    uint32 current_music_id = 10;
}

message UnlockBackGroundMusicCsReq {
    repeated uint32 unlock_ids = 4;
}

message UnlockBackGroundMusicScRsp {
    repeated uint32 OGHDILHDLEB = 5;
    uint32 retcode = 9;
    repeated MusicData unlocked_music_list = 15;
}

message TrialBackGroundMusicCsReq {
    uint32 PIGBBGCLAMJ = 13;
}

message TrialBackGroundMusicScRsp {
    uint32 PIGBBGCLAMJ = 5;
    uint32 retcode = 12;
}

message GetStageLineupCsReq {
}

message JLCHBKKFANL {
    uint32 stage_type = 8;
    uint32 DOGDACFLBOE = 10;
}

message GetStageLineupScRsp {
    repeated JLCHBKKFANL NMKPEKMMNBP = 2;
    uint32 retcode = 3;
}

message LineupAvatar {
    AvatarType avatar_type = 3;
    uint32 satiety = 5;
    uint32 slot = 7;
    SpBarInfo sp_bar = 10;
    uint32 hp = 12;
    uint32 id = 15;
}

message LineupInfo {
    repeated uint32 MANKKFPBFCB = 1;
    uint32 max_mp = 2;
    bool BFNBKLMAMKB = 4;
    repeated LineupAvatar avatar_list = 5;
    uint32 leader_slot = 6;
    uint32 mp = 7;
    uint32 game_story_line_id = 8;
    uint32 index = 9;
    repeated uint32 story_line_avatar_id_list = 10;
    uint32 plane_id = 11;
    bool is_virtual = 12;
    ExtraLineupType extra_lineup_type = 13;
    string name = 14;
    repeated uint32 KOMPCJPAPKM = 15;
}

message GetCurLineupDataCsReq {
}

message GetCurLineupDataScRsp {
    LineupInfo lineup = 4;
    uint32 retcode = 13;
}

message JoinLineupCsReq {
    uint32 base_avatar_id = 2;
    bool is_virtual = 3;
    uint32 index = 4;
    uint32 plane_id = 6;
    ExtraLineupType extra_lineup_type = 7;
    AvatarType avatar_type = 10;
    uint32 slot = 14;
}

message JoinLineupScRsp {
    uint32 retcode = 14;
}

message QuitLineupCsReq {
    uint32 base_avatar_id = 2;
    AvatarType avatar_type = 3;
    bool is_virtual = 6;
    ExtraLineupType extra_lineup_type = 9;
    uint32 plane_id = 11;
    uint32 index = 15;
}

message QuitLineupScRsp {
    bool is_virtual = 3;
    bool HIOFPDKDOFD = 5;
    uint32 plane_id = 6;
    uint32 retcode = 7;
    uint32 base_avatar_id = 9;
}

message SwapLineupCsReq {
    uint32 index = 1;
    uint32 ELLIDANJNOB = 4;
    uint32 NEDIKHNGMBH = 5;
    ExtraLineupType extra_lineup_type = 7;
    bool is_virtual = 9;
    uint32 plane_id = 11;
}

message SwapLineupScRsp {
    uint32 retcode = 3;
}

message SyncLineupNotify {
    LineupInfo Lineup = 10;
    repeated SyncLineupReason ReasonList = 12;
}

message GetLineupAvatarDataCsReq {
}

message LineupAvatarData {
    uint32 hp = 6;
    AvatarType avatar_type = 11;
    uint32 id = 13;
}

message GetLineupAvatarDataScRsp {
    uint32 retcode = 1;
    repeated LineupAvatarData avatar_data_list = 10;
}

message ChangeLineupLeaderCsReq {
    uint32 slot = 5;
}

message ChangeLineupLeaderScRsp {
    uint32 retcode = 4;
    uint32 slot = 8;
}

message SwitchLineupIndexCsReq {
    uint32 index = 10;
}

message SwitchLineupIndexScRsp {
    uint32 index = 4;
    uint32 retcode = 13;
}

message SetLineupNameCsReq {
    uint32 index = 12;
    string name = 14;
}

message SetLineupNameScRsp {
    uint32 retcode = 10;
    string name = 12;
    uint32 index = 13;
}

message GetAllLineupDataCsReq {
}

message GetAllLineupDataScRsp {
    uint32 retcode = 3;
    uint32 cur_index = 7;
    repeated LineupInfo lineup_list = 15;
}

message VirtualLineupDestroyNotify {
    uint32 plane_id = 14;
}

message LineupSlotData {
    uint32 slot = 3;
    AvatarType avatar_type = 11;
    uint32 id = 15;
}

message ReplaceLineupCsReq {
    uint32 plane_id = 1;
    uint32 index = 4;
    uint32 leader_slot = 6;
    uint32 game_story_line_id = 10;
    repeated LineupSlotData lineup_slot_list = 12;
    bool is_virtual = 13;
    ExtraLineupType extra_lineup_type = 14;
}

message ReplaceLineupScRsp {
    uint32 retcode = 8;
}

message ExtraLineupDestroyNotify {
    ExtraLineupType extra_lineup_type = 1;
}

message VirtualLineupTrialAvatarChangeScNotify {
    repeated uint32 KFMFFGGJMNE = 2;
    repeated uint32 IBLBNIANPHD = 5;
    uint32 plane_id = 7;
    bool CLIIGMNMHNA = 14;
}

message LobbyCreateCsReq {
    uint32 NEPODDOJJFE = 4;
    FightGameMode NBDLPGBIDLC = 9;
    EPEGHCGCMHP EJOFCNAEDHK = 11;
}

message LobbyCreateScRsp {
    FightGameMode NBDLPGBIDLC = 2;
    uint32 NEPODDOJJFE = 8;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 11;
    uint64 room_id = 13;
    uint32 retcode = 15;
}

message LobbyInviteCsReq {
    repeated uint32 uid_list = 12;
}

message LobbyInviteScRsp {
    uint32 retcode = 3;
    repeated uint32 uid_list = 13;
}

message LobbyJoinCsReq {
    EPEGHCGCMHP EJOFCNAEDHK = 5;
    uint64 room_id = 12;
}

message LobbyJoinScRsp {
    repeated CBBDIOMIFHD LIPJDJPMOKB = 6;
    uint64 room_id = 7;
    uint32 retcode = 8;
    uint32 NEPODDOJJFE = 9;
    FightGameMode NBDLPGBIDLC = 13;
}

message LobbyQuitCsReq {
}

message LobbyQuitScRsp {
    uint32 retcode = 12;
}

message LobbyStartFightCsReq {
}

message LobbyStartFightScRsp {
    uint32 retcode = 13;
}

message LobbyModifyPlayerInfoCsReq {
    LobbyModifyType type = 3;
    EPEGHCGCMHP EJOFCNAEDHK = 5;
    uint32 HFDJAELBNGA = 6;
}

message LobbyModifyPlayerInfoScRsp {
    uint32 retcode = 2;
}

message LobbySyncInfoScNotify {
    uint32 uid = 5;
    LobbyModifyType type = 9;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 14;
}

message LobbyKickOutCsReq {
    uint32 uid = 4;
}

message LobbyKickOutScRsp {
    uint32 retcode = 2;
}

message LobbyInviteScNotify {
    uint32 sender_id = 9;
    uint32 room_id = 10;
    FightGameMode NBDLPGBIDLC = 13;
}

message LobbyGetInfoCsReq {
}

message LobbyGetInfoScRsp {
    uint32 retcode = 3;
    FightGameMode NBDLPGBIDLC = 5;
    uint64 NOGFEEMNHPC = 6;
    uint64 room_id = 7;
    uint32 NEPODDOJJFE = 8;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 13;
}

message LobbyInteractCsReq {
    IMAONMHILNE IHCILNHKLMC = 2;
    uint32 CBEGNBKMHCD = 10;
}

message LobbyInteractScRsp {
    uint32 CBEGNBKMHCD = 10;
    uint32 retcode = 11;
}

message LobbyInteractScNotify {
    uint32 sender_id = 5;
    IMAONMHILNE IHCILNHKLMC = 7;
}

message GetMailCsReq {
    uint32 DAPCDNELCMA = 3;
    uint32 CIJEFNOOJJK = 4;
}

message ClientMail {
    int64 ExpireTime = 1;
    string Title = 2;
    string Content = 4;
    string Sender = 5;
    int64 Time = 6;
    MailType MailType = 8;
    uint32 TemplateId = 9;
    uint32 id = 10;
    bool IsRead = 12;
    ItemList Attachment = 13;
    string ParaList = 14;
}

message GetMailScRsp {
    repeated ClientMail NoticeMailList = 3;
    uint32 retcode = 7;
    bool IsEnd = 8;
    repeated ClientMail MailList = 12;
    uint32 TotalNum = 13;
    uint32 Start = 14;
}

message MarkReadMailCsReq {
    uint32 id = 8;
}

message MarkReadMailScRsp {
    uint32 retcode = 4;
    uint32 id = 8;
}

message DelMailCsReq {
    repeated uint32 id_list = 1;
}

message DelMailScRsp {
    repeated uint32 IdList = 4;
    uint32 retcode = 15;
}

message TakeMailAttachmentCsReq {
    uint32 optional_reward_id = 1;
    repeated uint32 mail_id_list = 7;
}

message ClientMailAttachmentItem {
    uint32 item_id = 3;
    uint32 mail_id = 4;
}

message TakeMailAttachmentScRsp {
    uint32 retcode = 6;
    repeated ClientMailAttachmentItem FailMailList = 7;
    ItemList Attachment = 12;
    repeated uint32 SuccMailIdList = 15;
}

message NewMailScNotify {
    repeated uint32 MailIdList = 6;
}

message RogueMapRotateInfo {
    int32 era_flipper_region_id = 4;
    RotateMapInfo rogue_map = 6;
    repeated RotaterData rotater_data_list = 7;
    RotaterEnergyInfo energy_info = 8;
    repeated ChargerInfo charger_info = 11;
    bool is_rotate = 13;
    uint32 NFLBONDJAIE = 15;
}

message RotaterEnergyInfo {
    uint32 max_num = 14;
    uint32 cur_num = 15;
}

message RotateMapInfo {
    Vector4 rotate_vector = 4;
    Vector vector = 10;
}

message EnterMapRotationRegionCsReq {
    uint32 NFLBONDJAIE = 6;
    MotionInfo motion = 7;
    uint32 era_flipper_region_id = 13;
}

message EnterMapRotationRegionScRsp {
    MotionInfo motion = 2;
    uint32 retcode = 3;
    uint32 NFLBONDJAIE = 7;
    RotaterEnergyInfo energy_info = 10;
    uint32 client_pos_version = 12;
    uint32 era_flipper_region_id = 15;
}

message ChargerInfo {
    uint32 group_id = 2;
    uint32 GLHAGJGAEHE = 15;
}

message InteractChargerCsReq {
    ChargerInfo charger_info = 7;
}

message InteractChargerScRsp {
    uint32 retcode = 4;
    RotaterEnergyInfo energy_info = 8;
    ChargerInfo charger_info = 12;
}

message RotaterData {
    uint32 GLHAGJGAEHE = 5;
    uint32 group_id = 8;
    fixed32 LKEFOLCGFGD = 15;
}

message DeployRotaterCsReq {
    RotaterData CCPDOABLKLP = 4;
}

message DeployRotaterScRsp {
    RotaterData CCPDOABLKLP = 7;
    uint32 retcode = 9;
    RotaterEnergyInfo energy_info = 15;
}

message RotateMapCsReq {
    MotionInfo motion = 3;
    RotateMapInfo rogue_map = 6;
    uint32 GLHAGJGAEHE = 12;
    uint32 group_id = 14;
}

message RotateMapScRsp {
    uint32 client_pos_version = 2;
    uint32 retcode = 8;
    MotionInfo motion = 11;
}

message LeaveMapRotationRegionCsReq {
    MotionInfo motion = 11;
}

message LeaveMapRotationRegionScRsp {
    uint32 client_pos_version = 1;
    uint32 retcode = 3;
    MotionInfo motion = 10;
}

message GetMapRotationDataCsReq {
}

message GetMapRotationDataScRsp {
    int32 era_flipper_region_id = 2;
    uint32 retcode = 3;
    uint32 NFLBONDJAIE = 6;
    RotateMapInfo rogue_map = 7;
    bool OMEJLLMNPCN = 10;
    repeated RotaterData rotater_data_list = 11;
    repeated ChargerInfo charger_info = 13;
    RotaterEnergyInfo energy_info = 15;
}

message ResetMapRotationRegionCsReq {
    MotionInfo motion = 8;
    RotateMapInfo rogue_map = 9;
}

message ResetMapRotationRegionScRsp {
    uint32 client_pos_version = 4;
    MotionInfo motion = 8;
    uint32 retcode = 12;
}

message LeaveMapRotationRegionScNotify {
}

message UpdateEnergyScNotify {
    RotaterEnergyInfo energy_info = 12;
}

message UpdateMapRotationDataScNotify {
    uint32 NFLBONDJAIE = 2;
    RotateMapInfo rogue_map = 4;
    int32 era_flipper_region_id = 5;
    repeated RotaterData rotater_data_list = 6;
    repeated ChargerInfo charger_info = 13;
    RotaterEnergyInfo energy_info = 14;
    bool OMEJLLMNPCN = 15;
}

message RemoveRotaterCsReq {
    RotaterData CCPDOABLKLP = 5;
}

message RemoveRotaterScRsp {
    RotaterEnergyInfo energy_info = 7;
    RotaterData CCPDOABLKLP = 9;
    uint32 retcode = 10;
}

message UpdateRotaterScNotify {
    repeated RotaterData rotater_data_list = 8;
}

message MarbleGetDataCsReq {
}

message MarbleGetDataScRsp {
    uint32 retcode = 3;
    repeated uint32 MPBMPFFGIBO = 4;
    repeated uint32 OJNPGILJIEN = 7;
    repeated uint32 IOGDKGFDFPC = 9;
    int32 score_id = 15;
}

message MarbleLevelFinishCsReq {
    uint32 NLIBKABFGCC = 1;
    repeated uint32 PMKANGDFLKI = 14;
}

message MarbleLevelFinishScRsp {
    uint32 retcode = 1;
    uint32 NLIBKABFGCC = 7;
}

message MarbleShopBuyCsReq {
    repeated uint32 PMKANGDFLKI = 11;
}

message MarbleShopBuyScRsp {
    uint32 retcode = 4;
    repeated uint32 PMKANGDFLKI = 11;
}

message MarbleUnlockSealScNotify {
    repeated uint32 PMKANGDFLKI = 5;
}

message MarblePvpDataUpdateScNotify {
    int32 score_id = 4;
}

message MarbleUpdateShownSealCsReq {
    repeated uint32 EHENKPLCPCH = 6;
}

message MarbleUpdateShownSealScRsp {
    uint32 retcode = 6;
    repeated uint32 EHENKPLCPCH = 9;
}

message MarkChestInfo {
    uint32 plane_id = 3;
    uint32 config_id = 4;
    uint32 group_id = 5;
    uint32 floor_id = 15;
}

message MarkChestFuncInfo {
    uint32 func_id = 6;
    int64 mark_time = 12;
    repeated MarkChestInfo mark_chest_info_list = 15;
}

message GetMarkChestCsReq {
}

message GetMarkChestScRsp {
    uint32 retcode = 2;
    repeated MarkChestFuncInfo mark_chest_func_info = 13;
}

message UpdateMarkChestCsReq {
    uint32 func_id = 3;
    uint32 trigger_param_id = 6;
    repeated MarkChestInfo mark_chest_info_list = 9;
}

message UpdateMarkChestScRsp {
    uint32 trigger_param_id = 2;
    uint32 func_id = 4;
    uint32 retcode = 14;
    repeated MarkChestFuncInfo mark_chest_func_info = 15;
}

message MarkChestChangedScNotify {
    repeated MarkChestFuncInfo mark_chest_func_info = 11;
}

message StartMatchCsReq {
    FightGameMode NBDLPGBIDLC = 2;
    EPEGHCGCMHP EJOFCNAEDHK = 6;
}

message StartMatchScRsp {
    EPEGHCGCMHP EJOFCNAEDHK = 3;
    uint32 retcode = 5;
}

message CancelMatchCsReq {
}

message CancelMatchScRsp {
    uint32 retcode = 4;
}

message MatchResultScNotify {
    uint32 retcode = 4;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 6;
}

message GetCrossInfoCsReq {
}

message GetCrossInfoScRsp {
    uint64 NOGFEEMNHPC = 1;
    uint64 room_id = 3;
    FightGameMode NBDLPGBIDLC = 8;
    uint32 retcode = 13;
}

message MatchThreeGetDataCsReq {
}

message LMPIECFMFOI {
    uint32 EBGMBDMPEGM = 4;
    uint32 ACJCPHIFMLN = 10;
}

message DHONNIHMACI {
    uint32 count = 4;
    uint32 FMKKABMDINJ = 7;
    uint32 pos = 12;
    uint32 BKMPFEOCFIB = 13;
}

message ABGEJNBCDJK {
    map<uint32, uint32> BEGMFIAPHLM = 1;
    repeated DHONNIHMACI BGAFCOBNLPM = 13;
    repeated LMPIECFMFOI JMBCICLCHKD = 14;
    map<uint32, uint32> ILBHDLMLMCK = 15;
}

message MatchThreeGetDataScRsp {
    ABGEJNBCDJK MFKJDOEBLIM = 5;
    uint32 retcode = 7;
}

message MatchThreeLevelEndCsReq {
    repeated uint32 JEPPFDINBNB = 2;
    uint32 EBGMBDMPEGM = 3;
    uint32 BKMPFEOCFIB = 7;
    map<uint32, uint32> ILBHDLMLMCK = 9;
    uint32 FMKKABMDINJ = 12;
    uint32 ACJCPHIFMLN = 14;
    string uuid = 15;
}

message MatchThreeLevelEndScRsp {
    uint32 EBGMBDMPEGM = 2;
    uint32 retcode = 5;
    uint32 ACJCPHIFMLN = 7;
}

message MatchThreeSyncDataScNotify {
    ABGEJNBCDJK MFKJDOEBLIM = 1;
}

message MatchThreeSetBirdPosCsReq {
    uint32 BKMPFEOCFIB = 1;
    uint32 pos = 8;
}

message MatchThreeSetBirdPosScRsp {
    uint32 pos = 5;
    uint32 BKMPFEOCFIB = 8;
    uint32 retcode = 12;
}

message GetNpcMessageGroupCsReq {
    repeated uint32 contact_id_list = 3;
}

message MessageItem {
    uint32 text_id = 13;
    uint32 item_id = 15;
}

message MessageSection {
    repeated MessageItem item_list = 5;
    uint32 frozen_item_id = 8;
    MessageSectionStatus status = 9;
    repeated uint32 message_item_list = 12;
    uint32 id = 14;
}

message MessageGroup {
    int64 refresh_time = 6;
    uint32 message_section_id = 7;
    repeated MessageSection message_section_list = 8;
    uint32 id = 10;
    MessageGroupStatus status = 14;
}

message GetNpcMessageGroupScRsp {
    repeated MessageGroup message_group_list = 2;
    uint32 retcode = 3;
}

message GetNpcStatusCsReq {
}

message NpcStatus {
    bool is_finish = 11;
    uint32 npc_id = 15;
}

message GroupStatus {
    MessageGroupStatus group_status = 1;
    int64 refresh_time = 13;
    uint32 group_id = 15;
}

message SectionStatus {
    MessageSectionStatus section_status = 1;
    uint32 section_id = 5;
}

message GetNpcStatusScRsp {
    repeated NpcStatus npc_status_list = 3;
    uint32 retcode = 14;
}

message FinishItemIdCsReq {
    uint32 text_id = 3;
    uint32 item_id = 11;
}

message FinishItemIdScRsp {
    uint32 retcode = 1;
    uint32 item_id = 11;
    uint32 text_id = 12;
}

message FinishSectionIdCsReq {
    uint32 section_id = 1;
}

message FinishSectionIdScRsp {
    uint32 section_id = 6;
    uint32 retcode = 9;
    ItemList reward = 12;
}

message FinishPerformSectionIdCsReq {
    repeated MessageItem item_list = 6;
    uint32 section_id = 10;
}

message FinishPerformSectionIdScRsp {
    uint32 retcode = 1;
    ItemList reward = 4;
    uint32 section_id = 10;
    repeated MessageItem item_list = 14;
}

message GetMissionMessageInfoCsReq {
}

message GetMissionMessageInfoScRsp {
    map<uint32, uint32> APOLDLGPKOP = 3;
    uint32 retcode = 4;
}

message ShareCsReq {
    uint32 ENFKGGNOMEO = 11;
}

message ADGNKECPOMA {
    uint32 CCCDKGAMDLB = 9;
    uint32 ENFKGGNOMEO = 13;
}

message ShareScRsp {
    ItemList reward = 5;
    ADGNKECPOMA FGPLILEBKGL = 8;
    uint32 retcode = 15;
}

message GetShareDataCsReq {
}

message GetShareDataScRsp {
    repeated ADGNKECPOMA MFKJJBPNDAM = 1;
    uint32 retcode = 4;
}

message TakePictureCsReq {
}

message TakePictureScRsp {
    uint32 retcode = 1;
}

message NLBMCGCAEIO {
    uint32 AFLEAJIHNEB = 12;
    uint32 type = 14;
    repeated uint32 PILDEFKPKLE = 15;
}

message TriggerVoiceCsReq {
    repeated NLBMCGCAEIO MNELHNHCKPJ = 10;
}

message TriggerVoiceScRsp {
    uint32 retcode = 6;
}

message CancelCacheNotifyCsReq {
    CancelCacheType type = 1;
    repeated uint32 daily_index = 2;
    string KCLJMCAKOJF = 15;
}

message CancelCacheNotifyScRsp {
    uint32 retcode = 8;
}

message SecurityReportCsReq {
    string DGDLNIEFCPF = 10;
}

message SecurityReportScRsp {
    uint32 retcode = 8;
}

message GMAAJHDFACD {
    uint32 IFAIKOIOIDD = 6;
    MovieRacingType type = 7;
    uint32 PDOMACFEMGG = 9;
    uint32 level = 13;
}

message GetMovieRacingDataCsReq {
}

message GetMovieRacingDataScRsp {
    uint32 retcode = 2;
    repeated GMAAJHDFACD ODJIGEBEHGC = 9;
}

message UpdateMovieRacingDataCsReq {
    GMAAJHDFACD KIHCHDFFPOL = 4;
}

message UpdateMovieRacingDataScRsp {
    uint32 retcode = 4;
    GMAAJHDFACD KIHCHDFFPOL = 14;
}

message SubmitOrigamiItemCsReq {
    uint32 LCBOFMOPGKE = 9;
}

message SubmitOrigamiItemScRsp {
    uint32 LCBOFMOPGKE = 5;
    uint32 retcode = 12;
}

message LCDKBMMEBFF {
    uint32 entry_story_line_id = 6;
    repeated uint32 floor_id_list = 11;
    uint32 content_id = 15;
}

message LAMMCHABAGH {
    uint32 state = 2;
    uint32 group_id = 11;
    uint32 config_id = 12;
}

message FCHOLNDIPKC {
    repeated LAMMCHABAGH CLJJAFGFKEL = 5;
    uint32 floor_id = 14;
}

message GJLDMCNJOMC {
    uint32 retcode = 2;
    uint32 content_id = 4;
    repeated FCHOLNDIPKC LMEBHNLDKDJ = 5;
    uint32 entry_story_line_id = 13;
}

message KLBHFHJDBFI {
    uint32 BMCJHONBHJH = 6;
    bool NCNAONIFPFM = 8;
    uint32 level = 10;
    uint32 IFAIKOIOIDD = 13;
}

message GetGunPlayDataCsReq {
}

message GetGunPlayDataScRsp {
    uint32 retcode = 4;
    repeated KLBHFHJDBFI LNBFDJMNACN = 13;
}

message UpdateGunPlayDataCsReq {
    uint32 PNEIFBEGMDH = 1;
    uint64 uuid = 3;
    KLBHFHJDBFI ODFHNCHIEJN = 5;
    uint32 group_id = 8;
}

message UpdateGunPlayDataScRsp {
    KLBHFHJDBFI ODFHNCHIEJN = 1;
    uint32 retcode = 8;
}

message JCDNMBCKPLF {
    DifficultyAdjustmentType KCMJKGADPIP = 1;
    GIILENMKCAH HHMABJDIMGM = 7;
    uint32 id = 10;
}

message DifficultyAdjustmentGetDataCsReq {
}

message DifficultyAdjustmentGetDataScRsp {
    repeated JCDNMBCKPLF content_package_list = 1;
    uint32 retcode = 7;
}

message DifficultyAdjustmentUpdateDataCsReq {
    JCDNMBCKPLF data = 7;
}

message DifficultyAdjustmentUpdateDataScRsp {
    JCDNMBCKPLF data = 4;
    uint32 retcode = 5;
    repeated JCDNMBCKPLF content_package_list = 15;
}

message MazeKillDirectCsReq {
    repeated uint32 entity_list = 1;
    uint32 MMKOGOKNPKL = 5;
    MNIJHMEPGNN HHMABJDIMGM = 7;
}

message MazeKillDirectScRsp {
    repeated uint32 entity_list = 2;
    uint32 retcode = 13;
}

message GetMissionDataCsReq {
}

message IKAMMKLBOCO {
    MissionSyncRecord type = 6;
    uint32 id = 9;
    uint32 display_value = 15;
}

message Mission {
    uint32 progress = 1;
    uint32 id = 5;
    MissionStatus status = 13;
}

message MissionCustomValue {
    string DFDEKANJBLG = 4;
    uint32 index = 5;
    uint32 custom_value = 6;
}

message MissionCustomValueList {
    repeated MissionCustomValue custom_value_list = 15;
}

message MainMission {
    uint32 id = 3;
    repeated MissionCustomValue custom_value_list = 6;
    MissionStatus status = 10;
}

message FHABEIKAFBO {
    uint32 id = 7;
    MissionCustomValueList custom_value_list = 188;
}

message MainMissionCustomValue {
    MissionCustomValueList custom_value_list = 12;
    uint32 main_mission_id = 13;
}

message GetMissionDataScRsp {
    uint32 retcode = 2;
    repeated Mission mission_list = 3;
    repeated uint32 OJOMOCGIAIC = 9;
    uint32 track_mission_id = 13;
    repeated MainMission main_mission_list = 14;
}

message AcceptMainMissionCsReq {
    uint32 main_mission_id = 14;
}

message AcceptMainMissionScRsp {
    uint32 retcode = 3;
    uint32 main_mission_id = 13;
}

message FinishTalkMissionCsReq {
    uint32 sub_mission_id = 1;
    string talk_str = 2;
    repeated MissionCustomValue custom_value_list = 6;
}

message FinishTalkMissionScRsp {
    string talk_str = 1;
    uint32 retcode = 3;
    repeated MissionCustomValue custom_value_list = 4;
    uint32 sub_mission_id = 15;
}

message MissionRewardScNotify {
    uint32 sub_mission_id = 8;
    ItemList reward = 13;
    uint32 main_mission_id = 14;
}

message SubMissionRewardScNotify {
    uint32 sub_mission_id = 9;
    ItemList reward = 13;
}

message SyncTaskCsReq {
    string key = 5;
}

message SyncTaskScRsp {
    string key = 5;
    uint32 retcode = 7;
}

message MissionGroupWarnScNotify {
    repeated uint32 group_id_list = 2;
}

message FinishCosumeItemMissionCsReq {
    uint32 sub_mission_id = 2;
    ItemList item_list = 4;
}

message FinishCosumeItemMissionScRsp {
    uint32 sub_mission_id = 11;
    uint32 retcode = 15;
}

message GetMissionStatusCsReq {
    repeated uint32 main_mission_id_list = 3;
    repeated uint32 sub_mission_id_list = 10;
}

message GetMissionStatusScRsp {
    repeated uint32 UnfinishedMainMissionIdList = 5;
    uint32 retcode = 6;
    repeated Mission SubMissionStatusList = 7;
    repeated uint32 CurversionFinishedMainMissionIdList = 8;
    repeated uint32 DisabledMainMissionIdList = 11;
    repeated MainMissionCustomValue MainMissionMcvList = 12;
    repeated uint32 FinishedMainMissionIdList = 13;
}

message TeleportToMissionResetPointCsReq {
}

message TeleportToMissionResetPointScRsp {
    uint32 retcode = 5;
    MotionInfo motion = 9;
    uint32 client_pos_version = 15;
}

message StartFinishSubMissionScNotify {
    uint32 sub_mission_id = 7;
}

message StartFinishMainMissionScNotify {
    uint32 main_mission_id = 9;
}

message GetMainMissionCustomValueCsReq {
    repeated uint32 main_mission_id_list = 1;
}

message GetMainMissionCustomValueScRsp {
    uint32 retcode = 3;
    repeated MainMission main_mission_list = 13;
}

message MissionAcceptScNotify {
    repeated uint32 sub_mission_id_list = 9;
}

message UpdateTrackMainMissionIdCsReq {
    TrackMainMissionUpdateReasonId IJDJMNJBOBI = 3;
    uint32 track_mission_id = 8;
    uint32 LMBCEOPCIGC = 11;
}

message UpdateTrackMainMissionIdScRsp {
    uint32 prev_track_mission_id = 6;
    uint32 track_mission_id = 8;
    uint32 retcode = 14;
}

message FinishedMissionScNotify {
    repeated uint32 finished_main_mission_id_list = 11;
}

message PILPBOGGLKO {
    uint32 main_mission_id = 1;
    string DFDEKANJBLG = 11;
    uint32 value = 14;
}

message AMNJJPCIGLJ {
    uint32 retcode = 4;
    MainMission LPJFBMJBEPP = 7;
}

message GetMonopolyInfoCsReq {
}

message ODAIJIGEAJL {
    bool LJFGIFBDANC = 1;
    bool HGMMCHHBKPB = 4;
    uint32 CPIOGJKFECH = 8;
    uint32 ENGJFICHDML = 9;
    uint32 FLJBJPAHJIF = 13;
    uint32 EJHDCNEEGMI = 15;
}

message LLGNIKNMCKE {
    GOJOINDBKIK NMAMONLLALL = 6;
    repeated uint32 OFIODJNLBEA = 11;
}

message OOEMIBFNLLD {
    uint32 EKPNCLPOENK = 7;
    uint32 progress = 12;
}

message LAILNIGFPOO {
    bool AELPFEBGNOK = 2;
    uint64 KHGPFHBOELE = 6;
    bool is_taken_reward = 8;
}

message BCMOKFHJMPM {
    repeated OOEMIBFNLLD CJFMAIAKENL = 1;
    repeated OOEMIBFNLLD JCKNGFJEEGI = 2;
    bool FHOLFDONOII = 3;
    uint32 JGNIHLJFJPP = 4;
    uint64 OMGKJLJIHLH = 5;
    uint64 EBOOLGNACJJ = 6;
    uint32 DGALCMFIDFP = 7;
    repeated OOEMIBFNLLD KGBEJKNCLFK = 8;
    repeated OOEMIBFNLLD IFKFEPKHLGN = 9;
    repeated LAILNIGFPOO EBABBEJIPJN = 10;
    uint32 HHJPBLEKAPN = 11;
    uint32 DGEPMKFFOAB = 12;
    uint32 BNOLDNBMJHF = 13;
    uint32 LJJMLEIOIFE = 14;
    uint64 JOJNDGBEJEK = 15;
    string DDIBEFMILMP = 822;
    string PJDFBPBMBBA = 1618;
    string JLEGPNIHMJD = 1852;
}

message EDKGOMNEHOH {
    repeated BCMOKFHJMPM FJOAFFLLEOK = 4;
}

message GetMonopolyInfoScRsp {
    JAJGKKDPALC rogue_map = 2;
    uint32 retcode = 3;
    LLGNIKNMCKE JNHJEELJFHF = 4;
    AEDKPBFCKGO LJAOGAPDFHA = 5;
    repeated uint32 COKCGFMEIBA = 6;
    ICIHABOLHPN GPFGDOKNGEL = 7;
    HFDGMJJFOHM FGHCIADCMNJ = 8;
    KJBMLBGIBJF stt = 9;
    EDKGOMNEHOH IEDGKHDJJDC = 11;
    CANNIBGCLCL OELHKEIPIDJ = 12;
    NFDGIJLOLGD HEHJKFILINN = 13;
    ODAIJIGEAJL HLJMHNABFMC = 14;
    AFDALBGANPC rogue_buff_info = 15;
}

message NFDGIJLOLGD {
    repeated uint32 HFMDLHIFMPI = 9;
}

message MonopolyConditionUpdateScNotify {
    NFDGIJLOLGD HEHJKFILINN = 10;
}

message KJBMLBGIBJF {
    repeated uint32 OCCMNIDEBBJ = 9;
    repeated uint32 JIHCHILFJPI = 13;
}

message MonopolySttUpdateScNotify {
    KJBMLBGIBJF stt = 11;
}

message IAACCAFGEPI {
    uint32 cell_id = 7;
    IHGJLLNGDKL MAFKCBODMMC = 11;
    bool JMDEFLAFICE = 14;
    uint32 map_id = 15;
}

message JAJGKKDPALC {
    repeated IAACCAFGEPI NBMPBGPJONH = 1;
    IAACCAFGEPI HGBIGBFGBOM = 4;
    uint32 PGALBDIIEFG = 7;
    uint32 LBBONKACGEJ = 13;
    repeated IAACCAFGEPI IMOPIEJBHOD = 15;
}

message MonopolyEventLoadUpdateScNotify {
    repeated IAACCAFGEPI NBMPBGPJONH = 6;
    repeated IAACCAFGEPI IMOPIEJBHOD = 10;
}

message COMEOLGLNKO {
    uint32 event_id = 10;
}

message PBLCEJHPOPO {
    uint32 event_id = 4;
}

message LIHOCEHEPDB {
    uint32 KDMLLLGHJON = 1;
    uint32 event_id = 6;
    uint32 LFCMBGOAIBB = 12;
    repeated uint32 HFEJHLNIGGH = 13;
}

message OHNBCHLOEBL {
    uint32 LFCMBGOAIBB = 5;
    uint32 event_id = 8;
    repeated uint32 HFEJHLNIGGH = 9;
    uint32 OLFNJJKLGMK = 11;
    uint32 ECCJBGLBIGM = 13;
}

message BLMJNFFPMCN {
    uint32 PIFPGKFFBPN = 7;
    repeated LBENAAHCPEO KMKFOJAHELJ = 13;
}

message AAIBAKECHCE {
    uint32 PAGCAMAGFLB = 14;
}

message FGONFNIDOHJ {
    uint32 shop_id = 10;
}

message IPONFKAJENJ {
    uint32 APAOBDGJMEG = 8;
}

message NALPJMLJPNP {
    uint32 IEEJCHFEPHA = 6;
    uint32 OEFHMBJBLGC = 8;
}

message LBENAAHCPEO {
    uint32 OKDLMEJPCHE = 11;
    oneof EDAPCHIOJMD {
        IPONFKAJENJ GAJBFPCPIGM = 1;
        FGONFNIDOHJ NBJICDAJDGF = 2;
        COMEOLGLNKO PECBIMKOOAH = 3;
        OHNBCHLOEBL JOADHBLDIMF = 4;
        PBLCEJHPOPO EMLNNMLGNKH = 7;
        AAIBAKECHCE ECOIFNNJDAP = 9;
        LIHOCEHEPDB JBJLDPPDBBC = 12;
        BLMJNFFPMCN IEFOGHNGCMC = 13;
        NALPJMLJPNP JOPPAEMPPFH = 14;
    }
}

message ICIHABOLHPN {
    LBENAAHCPEO FHNPAGIHINF = 14;
}

message MonopolyContentUpdateScNotify {
    LBENAAHCPEO FHNPAGIHINF = 7;
}

message MonopolyCellUpdateNotify {
    IAACCAFGEPI HGBIGBFGBOM = 3;
}

message MonopolyRollDiceCsReq {
}

message MonopolyRollDiceScRsp {
    uint32 retcode = 3;
    uint32 BLHIABBKGPB = 14;
}

message MonopolyCheatDiceCsReq {
    uint32 OCFHHDCBFBH = 12;
}

message MonopolyCheatDiceScRsp {
    uint32 retcode = 7;
    uint32 OCFHHDCBFBH = 12;
}

message MonopolyMoveCsReq {
    uint32 CNIFHNBIOFJ = 4;
    uint32 DGBMDPBIALG = 14;
}

message MonopolyMoveScRsp {
    uint32 retcode = 10;
    repeated IAACCAFGEPI HECJNJNIAKK = 11;
    JAJGKKDPALC rogue_map = 13;
}

message MonopolySelectOptionCsReq {
    uint32 event_id = 11;
    uint32 KDMLLLGHJON = 12;
}

message DDCELCOJGNP {
    uint32 LGIIAHIDLMG = 1;
    uint32 KDMLLLGHJON = 8;
    uint32 event_id = 11;
}

message MonopolySelectOptionScRsp {
    repeated DDCELCOJGNP ABNOINLOKLN = 4;
    uint32 event_id = 7;
    uint32 KDMLLLGHJON = 8;
    LBENAAHCPEO GPFGDOKNGEL = 13;
    uint32 retcode = 14;
}

message MonopolyRollRandomCsReq {
    uint32 event_id = 1;
}

message MonopolyRollRandomScRsp {
    uint32 retcode = 6;
    uint32 event_id = 12;
    LBENAAHCPEO GPFGDOKNGEL = 15;
}

message MonopolyReRollRandomCsReq {
    uint32 event_id = 13;
}

message MonopolyReRollRandomScRsp {
    LBENAAHCPEO GPFGDOKNGEL = 1;
    uint32 event_id = 6;
    uint32 retcode = 10;
}

message MonopolyConfirmRandomCsReq {
    uint32 event_id = 7;
}

message MonopolyConfirmRandomScRsp {
    LBENAAHCPEO GPFGDOKNGEL = 3;
    uint32 retcode = 11;
    uint32 event_id = 15;
}

message MonopolyBuyGoodsCsReq {
    uint32 goods_id = 7;
    uint32 shop_id = 14;
}

message MonopolyBuyGoodsScRsp {
    uint32 shop_id = 2;
    uint32 goods_id = 7;
    uint32 retcode = 12;
}

message MonopolyUpgradeAssetCsReq {
    uint32 PAGCAMAGFLB = 7;
}

message MonopolyUpgradeAssetScRsp {
    uint32 PAGCAMAGFLB = 3;
    uint32 retcode = 5;
}

message MonopolyGiveUpCurContentCsReq {
    uint32 content_id = 11;
}

message MonopolyGiveUpCurContentScRsp {
    uint32 content_id = 10;
    uint32 retcode = 11;
}

message MonopolyActionResult {
    uint32 TriggerCellId = 1;
    NIBJAMFMEFD Detail = 2;
    uint32 TriggerMapId = 3;
    uint32 ClickCellId = 4;
    uint32 ClickMapId = 5;
    GKEJFKAKENM SourceType = 6;
    uint32 EffectType = 13;
}

message MonopolyActionResultScNotify {
    repeated MonopolyActionResult PFNOKNCDPGE = 13;
}

message LMMEBMBGLDN {
    uint32 HKMIHEJCAEM = 3;
    bool BLHDOHMACBM = 8;
}

message NIBJAMFMEFD {
    oneof PFABLBBFOJF {
        BMPLFJKEOLF KPBJIPGEJPL = 1;
        AIDFBBIAPEP NFBCGKNOPDA = 2;
        LNKMKNBPIJH HHIBFNAGKFF = 3;
        BMPLFJKEOLF NOENHHILNAH = 4;
        LMKAAEFPFFO MECLLCDABNO = 5;
        LMKAAEFPFFO FFIPKMHCKHJ = 6;
        AIDFBBIAPEP DACHANHPPBG = 7;
        LNKMKNBPIJH NGONCCBLAOL = 8;
        BMPLFJKEOLF OMFECIMLADC = 9;
        LNKMKNBPIJH DMDPCOOAFJK = 12;
        LPBAMOKKJCM HANOGACJPKB = 13;
        NMGHFOLKFAJ FJGHNLNJLPH = 14;
        LMMEBMBGLDN NKCMGBCPJGG = 15;
    }
}

message NMGHFOLKFAJ {
    uint32 GJLKOGGIIFO = 5;
}

message LMKAAEFPFFO {
    uint32 OGJOFMCMFPG = 11;
    uint32 item_id = 14;
    uint32 BMALPKEKBEL = 15;
}

message LNKMKNBPIJH {
    uint32 OGNKMDNJGOG = 9;
    uint32 IGDBOFCDJOL = 10;
}

message LPBAMOKKJCM {
    uint32 KNGGPPIOGAE = 3;
    uint32 MDFLFLLMGNA = 4;
    uint32 HNLFMJOKNBN = 9;
    uint32 NJDGGJBEFCN = 10;
}

message HAKNOFDPBOD {
    uint32 ACDOPCBMPNL = 7;
    uint32 FPOGIALMCIP = 12;
    uint32 config_id = 14;
    oneof HEAIAEDBPKL {
        EOPFMPAOOJE BDEMPAKHGMJ = 8;
        GJKIAPIPGAN EJCOLGNJGDC = 10;
        EIMOBGLLEFO LKANIPLNKGC = 15;
    }
}

message HFDGMJJFOHM {
    LMMEBMBGLDN NPOIGJPCGFB = 4;
    repeated HAKNOFDPBOD PEFMDFKECOD = 9;
    HAKNOFDPBOD AJCINKHBDJB = 13;
}

message MonopolyGameSettleScNotify {
    HAKNOFDPBOD GAJBFPCPIGM = 1;
    ItemList item_list = 2;
    ItemList PEMIJIMJMIO = 10;
}

message MonopolyGameCreateScNotify {
    LMMEBMBGLDN NPOIGJPCGFB = 5;
    HAKNOFDPBOD GAJBFPCPIGM = 9;
}

message MonopolyGameRaiseRatioCsReq {
    uint32 ACDOPCBMPNL = 15;
}

message MonopolyGameRaiseRatioScRsp {
    uint32 retcode = 2;
    uint32 Ratio = 12;
}

message DailyFirstEnterMonopolyActivityCsReq {
}

message DailyFirstEnterMonopolyActivityScRsp {
    uint32 KEKJCDMIDDL = 1;
    bool OICAGHGMMFP = 3;
    uint32 retcode = 4;
    int64 IIHKIKLIOJI = 5;
    AEDKPBFCKGO LJAOGAPDFHA = 13;
}

message MonopolyGetDailyInitItemCsReq {
    bool IFHPJJBLNDL = 15;
}

message MonopolyGetDailyInitItemScRsp {
    int64 IIHKIKLIOJI = 2;
    uint32 HBFFFGPJKIC = 3;
    uint32 retcode = 4;
    uint32 OFGNIGNOHAF = 5;
    uint32 IOABHFPABBE = 10;
    uint32 HCDBBFLPCFL = 12;
    uint32 HEOOFPGKDCD = 13;
}

message GJKIAPIPGAN {
    repeated uint32 FHBOPEPJAEN = 1;
    bool NFEADMFNFLK = 3;
    uint32 OEFJMEFPIPL = 8;
    repeated uint32 LEGHKNNKOMG = 11;
    repeated uint32 POGEMMICILA = 15;
}

message MonopolyGameBingoFlipCardCsReq {
    uint32 HCFPOFMDGKN = 1;
}

message MonopolyGameBingoFlipCardScRsp {
    uint32 retcode = 2;
    bool NFEADMFNFLK = 3;
    repeated uint32 LEGHKNNKOMG = 9;
    uint32 NPJEECEDPOK = 14;
}

message MonopolyGameGachaCsReq {
}

message MonopolyGameGachaScRsp {
    repeated uint32 ResultList = 3;
    uint32 retcode = 13;
}

message NKACIMEOAPD {
    uint32 POGJHKFBMCH = 4;
    uint32 IBADOBADHJH = 11;
}

message EIMOBGLLEFO {
    uint32 BHPFPEJBKEC = 1;
    uint32 OHLEPKEKMNH = 4;
    uint32 CHJNGDIOOME = 5;
    repeated uint32 HPNHHCMKJCB = 9;
    repeated NKACIMEOAPD NDGGACPICBF = 10;
    uint32 EAEJLOFGAFO = 13;
}

message MonopolyAcceptQuizCsReq {
    repeated NKACIMEOAPD NDGGACPICBF = 14;
}

message MonopolyAcceptQuizScRsp {
    uint32 retcode = 6;
    EIMOBGLLEFO LKANIPLNKGC = 8;
}

message OOCKALNFHNP {
    uint32 CHJNGDIOOME = 1;
    uint32 HMCJOBJBPKJ = 2;
    uint32 BGBIHIDHCON = 8;
}

message MonopolyQuizDurationChangeScNotify {
    repeated OOCKALNFHNP LEADMNEIMDP = 13;
}

message EOPFMPAOOJE {
    uint32 HMHJDBIFGDI = 3;
    uint32 PPCLBDBJLMO = 4;
    bool LOPDBAEGFKP = 8;
}

message MonopolyGuessChooseCsReq {
    uint32 HMHJDBIFGDI = 13;
}

message MonopolyGuessChooseScRsp {
    uint32 HMHJDBIFGDI = 7;
    uint32 retcode = 15;
}

message ACKNCAAAMJM {
    uint32 GIACFCDDJNM = 3;
    ItemList item_list = 4;
    uint32 PPCLBDBJLMO = 12;
}

message MonopolyGuessDrawScNotify {
    repeated ACKNCAAAMJM JHIIKPEJEIE = 14;
}

message MonopolyGuessBuyInformationCsReq {
}

message MonopolyGuessBuyInformationScRsp {
    uint32 retcode = 11;
}

message AIDFBBIAPEP {
    uint32 level = 2;
    uint32 PAGCAMAGFLB = 4;
    uint32 MILKEACFLPO = 5;
}

message CANNIBGCLCL {
    repeated AIDFBBIAPEP MAGEFLJGJND = 5;
}

message AEDKPBFCKGO {
    uint32 PILAAGOKAOF = 1;
    uint32 EFINFPKKJLE = 2;
    uint32 GIMDHBNJOOO = 3;
    uint32 IFKDGEBCDEG = 5;
    uint32 PDDNGKNCPEB = 7;
    bool IMOBLGOAJCB = 8;
    uint32 FNIGPGBGEHN = 11;
    uint32 KMGIEMOFOGB = 13;
    uint32 PKDLKCBKKPF = 15;
}

message MonopolyDailySettleScNotify {
    AEDKPBFCKGO LJAOGAPDFHA = 3;
    uint32 KEKJCDMIDDL = 6;
}

message BMPLFJKEOLF {
    uint32 OKDLMEJPCHE = 1;
    uint32 buff_id = 12;
    uint32 COFFEBNIBHK = 13;
}

message AFDALBGANPC {
    repeated BMPLFJKEOLF buff_list = 6;
}

message INDGLKCECDC {
    uint32 PILAAGOKAOF = 4;
    uint32 DPJKOJGCJLP = 5;
    uint32 uid = 10;
    uint32 HDILBDIPGHO = 11;
    uint32 FNIGPGBGEHN = 12;
}

message GetMonopolyFriendRankingListCsReq {
}

message GetMonopolyFriendRankingListScRsp {
    uint32 retcode = 1;
    INDGLKCECDC ICMGEGEFDLE = 9;
    repeated INDGLKCECDC DCFHGAAJLNN = 13;
}

message MonopolyLikeCsReq {
    uint32 CBEGNBKMHCD = 12;
}

message MonopolyLikeScRsp {
    uint32 CBEGNBKMHCD = 3;
    ItemList reward_list = 4;
    uint32 retcode = 8;
}

message MonopolyLikeScNotify {
    uint32 HDILBDIPGHO = 2;
    repeated uint32 OFIODJNLBEA = 15;
}

message GetMbtiReportCsReq {
}

message MFDKINPDMKE {
    uint32 cnt = 10;
    uint32 FIOEPGPEBFD = 12;
}

message GetMbtiReportScRsp {
    bool is_taken_reward = 1;
    bool PCADCGCELIN = 5;
    repeated DDCELCOJGNP ABNOINLOKLN = 7;
    int32 LJHAIFCIABH = 9;
    uint32 retcode = 10;
    int32 PHNKKELLANM = 12;
    repeated MFDKINPDMKE GMDHHOGBACN = 13;
    uint32 progress = 14;
}

message MonopolyEventSelectFriendCsReq {
    bool BAGMAOIPMJE = 5;
    uint32 IPGECLELHGJ = 15;
}

message MonopolyEventSelectFriendScRsp {
    uint32 OEFHMBJBLGC = 2;
    uint32 retcode = 3;
    IAACCAFGEPI HGBIGBFGBOM = 7;
    uint32 IEEJCHFEPHA = 14;
}

message SocialEventServerCache {
    uint32 id = 1;
    uint32 SubCoin = 6;
    uint32 AddCoin = 8;
    uint32 SrcUid = 12;
}

message MonopolySocialEventEffectScNotify {
    repeated SocialEventServerCache MIAEAFFDGMH = 2;
}

message GetSocialEventServerCacheCsReq {
}

message GetSocialEventServerCacheScRsp {
    uint32 retcode = 4;
    repeated SocialEventServerCache MIAEAFFDGMH = 12;
}

message DeleteSocialEventServerCacheCsReq {
    repeated uint32 JIDDLNHJNPB = 6;
}

message DeleteSocialEventServerCacheScRsp {
    repeated uint32 BFGJMMPCPNJ = 3;
    uint32 retcode = 9;
}

message MonopolyGetRaffleTicketCsReq {
    uint32 HHJPBLEKAPN = 11;
}

message MonopolyGetRaffleTicketScRsp {
    repeated LAILNIGFPOO BLMEDLNOKEI = 1;
    uint32 HHJPBLEKAPN = 7;
    uint32 retcode = 11;
}

message MonopolyTakeRaffleTicketRewardCsReq {
    uint64 PMELCDFHGKC = 5;
    uint32 HHJPBLEKAPN = 7;
}

message MonopolyTakeRaffleTicketRewardScRsp {
    ItemList reward_list = 7;
    uint32 retcode = 9;
    uint32 HHJPBLEKAPN = 11;
    uint32 PMELCDFHGKC = 14;
}

message MonopolyScrachRaffleTicketCsReq {
    uint64 PMELCDFHGKC = 6;
    uint32 HHJPBLEKAPN = 12;
}

message MonopolyScrachRaffleTicketScRsp {
    uint32 retcode = 6;
    uint64 PMELCDFHGKC = 8;
    uint32 HHJPBLEKAPN = 15;
}

message MonopolyGetRegionProgressCsReq {
}

message MonopolyGetRegionProgressScRsp {
    uint32 retcode = 2;
    uint32 EIMGBKNLGNF = 6;
    uint32 DPJKOJGCJLP = 11;
}

message MonopolyGetRafflePoolInfoCsReq {
}

message MonopolyGetRafflePoolInfoScRsp {
    uint32 retcode = 3;
    EDKGOMNEHOH IEDGKHDJJDC = 4;
}

message MonopolyTakePhaseRewardCsReq {
    repeated uint32 LJBGJHPKKJJ = 8;
}

message MonopolyTakePhaseRewardScRsp {
    ItemList reward_list = 6;
    repeated uint32 LJBGJHPKKJJ = 8;
    uint32 retcode = 14;
}

message GetMonopolyMbtiReportRewardCsReq {
}

message GetMonopolyMbtiReportRewardScRsp {
    ItemList reward_list = 1;
    uint32 retcode = 10;
}

message GetMonopolyDailyReportCsReq {
}

message GetMonopolyDailyReportScRsp {
    AEDKPBFCKGO LJAOGAPDFHA = 12;
    uint32 retcode = 15;
}

message MonopolyClickCellCsReq {
    uint32 cell_id = 5;
    uint32 map_id = 13;
}

message MonopolyClickCellScRsp {
    uint32 cell_id = 1;
    uint32 map_id = 4;
    uint32 retcode = 11;
}

message MonopolyClickMbtiReportCsReq {
}

message MonopolyClickMbtiReportScRsp {
    uint32 retcode = 2;
}

message MultiplayerFightGameStateCsReq {
}

message MultiplayerFightGameStateScRsp {
    uint32 retcode = 3;
    PPGGKMDAOEA PFFFJNGNPOM = 8;
    repeated CBBDIOMIFHD LIPJDJPMOKB = 12;
}

message MultiplayerGetFightGateCsReq {
    uint32 EDIBBBKLGHJ = 13;
}

message MultiplayerGetFightGateScRsp {
    uint32 port = 3;
    uint32 retcode = 12;
    uint64 NOGFEEMNHPC = 13;
    string ip = 14;
    string AOKCMMPFGBC = 15;
}

message MultiplayerFightGiveUpCsReq {
    uint64 NOGFEEMNHPC = 10;
}

message MultiplayerFightGiveUpScRsp {
    uint32 retcode = 14;
}

message MultiplayerFightGameStartScNotify {
    repeated CBBDIOMIFHD LIPJDJPMOKB = 1;
    PPGGKMDAOEA PFFFJNGNPOM = 11;
}

message MultiplayerFightGameFinishScNotify {
    PPGGKMDAOEA PFFFJNGNPOM = 15;
}

message MultiplayerMatch3FinishScNotify {
    Match3FinishReason reason = 1;
    uint32 KOJIHJIHKIA = 3;
    uint32 FDGDOKAFBDH = 9;
    CDIMEMFJJFP NIAEGHJLNMB = 13;
}

message GetMultipleDropInfoCsReq {
}

message ECCNNONKFCA {
    uint32 OLALHIKMJOP = 3;
    uint32 id = 8;
}

message GetMultipleDropInfoScRsp {
    repeated ECCNNONKFCA LJCPDMNKJIF = 6;
    uint32 retcode = 8;
    repeated OHDNCHFGFMA FCHNNKEKFCL = 11;
}

message MultipleDropInfoScNotify {
    repeated ECCNNONKFCA LJCPDMNKJIF = 7;
}

message GetPlayerReturnMultiDropInfoCsReq {
}

message JBFIPIJJIDL {
    uint32 panel_id = 4;
    uint32 DKJGCBJKEEN = 8;
    uint32 PJHDJKMJPKH = 10;
    uint32 LJKFFDMHOJH = 14;
}

message OHDNCHFGFMA {
    uint32 LCLMHEGDGGB = 1;
    uint32 BJFBGLBJBNN = 4;
    uint32 BLFAANHJPAD = 12;
    uint32 panel_id = 14;
}

message GetPlayerReturnMultiDropInfoScRsp {
    uint32 retcode = 1;
    repeated OHDNCHFGFMA FCHNNKEKFCL = 6;
    JBFIPIJJIDL IKGFOEJPJCF = 15;
}

message MultipleDropInfoNotify {
    repeated JBFIPIJJIDL PONJJNDDKBH = 11;
    repeated OHDNCHFGFMA FCHNNKEKFCL = 12;
    repeated ECCNNONKFCA LJCPDMNKJIF = 15;
}

message OPGJGDOGGNJ {
    uint32 BDJCGCDJOEO = 7;
    KAMLGLMNJGJ pos = 8;
}

message JMEAOCPFEOL {
    uint32 HIHLGAGHLNI = 4;
    uint32 level = 6;
    repeated OPGJGDOGGNJ BOJMNAFDJKH = 7;
    uint32 CDNNGAGBAAK = 9;
    uint32 DBAHFEFGLMD = 10;
    uint32 HJJFMDHEAPB = 12;
}

message PANAIJBJMEN {
    bool is_finish = 11;
    uint32 BELEODAIINB = 13;
}

message DOLGFNLHEAE {
    uint32 FNPPHMBLKOA = 2;
    uint32 FILEDDCMDOC = 4;
    uint32 GGFDDEJHLIF = 6;
    repeated PANAIJBJMEN FMBFBGNABOC = 7;
    uint32 DCEHOGAGKOM = 9;
    uint32 PNGDDNAJCGG = 14;
}

message OLKMLFEEFCJ {
    uint32 LGKIIELGHDJ = 1;
    uint32 BDJCGCDJOEO = 5;
}

message BLNEHDIFMOO {
    AIHADKBHPBM state = 2;
    uint32 DGJBACBIICO = 3;
    repeated uint32 HAABEFKHAMI = 4;
    uint32 event_id = 6;
    uint32 HCAGLCLEJND = 9;
    uint32 BMBGKLKECAJ = 14;
    uint32 COGBCPLMNFD = 15;
}

message JNBCPNCNOHO {
    repeated uint32 PNJEEPOEMCA = 4;
    repeated BLNEHDIFMOO BJCMPHLPKNF = 11;
    uint32 LHNJMBGNDKC = 12;
}

message GetMuseumInfoCsReq {
}

message GetMuseumInfoScRsp {
    uint32 EJKGHBEMOOB = 1;
    repeated JMEAOCPFEOL LLEPHOELGDA = 2;
    repeated uint32 KNDMDPEFADC = 3;
    uint32 DBJHEMIPPIM = 4;
    uint32 level = 5;
    uint32 EJNKMKFFCCL = 6;
    repeated OLKMLFEEFCJ BOJMNAFDJKH = 7;
    uint32 HPNMPDOCJMA = 8;
    repeated uint32 KNDJAPNPAPK = 9;
    uint32 JBJLDPPDBBC = 10;
    DOLGFNLHEAE JPIBMBBKGND = 11;
    JNBCPNCNOHO EKKOLCCCNNK = 12;
    uint32 exp = 13;
    uint32 retcode = 15;
}

message BuyNpcStuffCsReq {
    uint32 BDJCGCDJOEO = 12;
}

message BuyNpcStuffScRsp {
    uint32 BDJCGCDJOEO = 8;
    uint32 retcode = 9;
}

message SetStuffToAreaCsReq {
    KAMLGLMNJGJ pos = 6;
    uint32 BDJCGCDJOEO = 10;
    uint32 LGKIIELGHDJ = 14;
}

message SetStuffToAreaScRsp {
    uint32 retcode = 1;
    uint32 BDJCGCDJOEO = 5;
    uint32 LGKIIELGHDJ = 9;
    KAMLGLMNJGJ pos = 11;
}

message RemoveStuffFromAreaCsReq {
    uint32 BDJCGCDJOEO = 7;
}

message RemoveStuffFromAreaScRsp {
    uint32 retcode = 2;
    uint32 BDJCGCDJOEO = 6;
}

message GetStuffScNotify {
    KGJJJKPDCFG AOCELKONHOB = 1;
    uint32 BDJCGCDJOEO = 10;
}

message GetExhibitScNotify {
    uint32 BCCGCFMABGM = 2;
}

message FinishCurTurnCsReq {
    uint32 CCIECPFPFJG = 8;
}

message FinishCurTurnScRsp {
    uint32 retcode = 10;
    uint32 GPOIECCPAMN = 11;
}

message UpgradeAreaCsReq {
    uint32 level = 1;
    uint32 DBAHFEFGLMD = 12;
}

message UpgradeAreaScRsp {
    uint32 retcode = 2;
    uint32 level = 11;
    uint32 DBAHFEFGLMD = 13;
}

message UpgradeAreaStatCsReq {
    uint32 DBAHFEFGLMD = 3;
    IBBGDGGHEJL BOJBPOELFCI = 5;
    uint32 level = 12;
}

message UpgradeAreaStatScRsp {
    IBBGDGGHEJL BOJBPOELFCI = 2;
    uint32 retcode = 10;
    uint32 DBAHFEFGLMD = 14;
    uint32 level = 15;
}

message MuseumInfoChangedScNotify {
    repeated OLKMLFEEFCJ BOJMNAFDJKH = 1;
    DOLGFNLHEAE JPIBMBBKGND = 2;
    repeated JMEAOCPFEOL LLEPHOELGDA = 3;
    uint32 DBJHEMIPPIM = 4;
    uint32 JBJLDPPDBBC = 5;
    JNBCPNCNOHO EKKOLCCCNNK = 6;
    uint32 EJKGHBEMOOB = 8;
    uint32 exp = 10;
    repeated uint32 KNDMDPEFADC = 11;
    uint32 HPNMPDOCJMA = 12;
    repeated uint32 KNDJAPNPAPK = 13;
    uint32 level = 14;
    uint32 EJNKMKFFCCL = 15;
}

message MuseumRandomEventStartScNotify {
    BLNEHDIFMOO HNDLHICDNPC = 10;
}

message MuseumRandomEventQueryCsReq {
    int32 CEHFIILMJKM = 7;
}

message MuseumRandomEventQueryScRsp {
    uint32 retcode = 4;
    JNBCPNCNOHO HNDLHICDNPC = 10;
}

message MuseumRandomEventSelectCsReq {
    uint32 event_id = 8;
    uint32 DGJBACBIICO = 15;
}

message MuseumRandomEventSelectScRsp {
    uint32 retcode = 3;
    uint32 DGJBACBIICO = 9;
    uint32 event_id = 10;
}

message MuseumFundsChangedScNotify {
    uint32 DBJHEMIPPIM = 2;
}

message MuseumDispatchFinishedScNotify {
    uint32 BDJCGCDJOEO = 1;
    uint32 DBJHEMIPPIM = 2;
    uint32 IMBLGCAADFL = 5;
    uint32 MODFABDDNKL = 7;
}

message MuseumTargetStartNotify {
    uint32 PNGDDNAJCGG = 2;
}

message MuseumTargetMissionFinishNotify {
    repeated uint32 BELEODAIINB = 2;
    uint32 PNGDDNAJCGG = 5;
    bool FPBGADBMEAD = 11;
}

message MuseumTargetRewardNotify {
    uint32 item_count = 3;
    uint32 PNGDDNAJCGG = 4;
    uint32 item_id = 5;
}

message MuseumTakeCollectRewardCsReq {
    uint32 item_id = 10;
}

message MuseumTakeCollectRewardScRsp {
    ItemList reward = 4;
    uint32 item_id = 10;
    uint32 retcode = 11;
}

message MusicRhythmLevel {
    uint32 IMMAPHMHIJK = 1;
    bool GKJGCBPOJCM = 5;
    uint32 ACJCPHIFMLN = 12;
}

message PAKPCCILOLN {
    repeated uint32 DNKJDJJBCDK = 1;
    repeated uint32 NBBOABGLCJC = 5;
    uint32 OJAMOBMGFBD = 6;
    uint32 BLPBIGKJPCH = 12;
}

message MusicRhythmDataCsReq {
    uint32 EDIBBBKLGHJ = 12;
}

message MusicRhythmDataScRsp {
    repeated MusicRhythmLevel LKMJINNIADI = 1;
    repeated uint32 BMKMENHFFOK = 2;
    uint32 LJEKPPNPBPP = 5;
    repeated uint32 BNANPJBDGHB = 7;
    uint32 retcode = 8;
    bool OCEPHGBCMIB = 9;
    uint32 CDIGALBEIMA = 10;
    repeated uint32 FKLIOFDPJBE = 13;
    repeated PAKPCCILOLN AMDCJJJABCC = 14;
}

message MusicRhythmStartLevelCsReq {
    uint32 ACJCPHIFMLN = 3;
}

message MusicRhythmStartLevelScRsp {
    uint32 retcode = 4;
    uint32 ACJCPHIFMLN = 10;
    string MDLNDGIJNML = 15;
}

message MusicRhythmFinishLevelCsReq {
    uint32 score_id = 1;
    uint32 MHKHACLNBPM = 11;
    bool GKJGCBPOJCM = 12;
}

message MusicRhythmFinishLevelScRsp {
    uint32 retcode = 4;
    uint32 ACJCPHIFMLN = 9;
}

message MusicRhythmUnlockTrackScNotify {
    repeated uint32 JIKJHNEACJB = 8;
}

message MusicRhythmSaveSongConfigDataCsReq {
    PAKPCCILOLN CGEDABOABOH = 15;
}

message MusicRhythmSaveSongConfigDataScRsp {
    uint32 retcode = 2;
    uint32 CDIGALBEIMA = 3;
    uint32 MBLDFHLDCPI = 4;
}

message MusicRhythmUnlockSongNotify {
    repeated uint32 OAFHAOPEJPO = 6;
}

message MusicRhythmMaxDifficultyLevelsUnlockNotify {
}

message MusicRhythmUnlockSongSfxScNotify {
    repeated uint32 OAFHAOPEJPO = 15;
}

message HKMKCHNPKDC {
    uint32 HIDBCPINLMH = 1;
    uint32 KMNLBGOEEHG = 2;
    FBOMLIBEGOC MJGDOPCKEIF = 4;
    repeated uint32 FCFDBNJENJF = 7;
    uint32 NJHLOPCJJDA = 10;
    uint32 MKKFMNDMHJE = 11;
}

message GetOfferingInfoCsReq {
    repeated uint32 GPJCDJGLGOF = 14;
}

message GetOfferingInfoScRsp {
    repeated HKMKCHNPKDC GDAMADMHHGF = 2;
    uint32 retcode = 14;
}

message SubmitOfferingItemCsReq {
    uint32 KMNLBGOEEHG = 5;
    uint32 interacted_prop_entity_id = 12;
}

message SubmitOfferingItemScRsp {
    uint32 retcode = 5;
    HKMKCHNPKDC PPJDAPBPOAP = 11;
}

message TakeOfferingRewardCsReq {
    repeated uint32 take_reward_level_list = 11;
    uint32 KMNLBGOEEHG = 13;
    uint32 interacted_prop_entity_id = 15;
}

message TakeOfferingRewardScRsp {
    ItemList reward = 3;
    HKMKCHNPKDC PPJDAPBPOAP = 8;
    uint32 retcode = 12;
}

message OfferingInfoScNotify {
    HKMKCHNPKDC PPJDAPBPOAP = 8;
}

message AcceptedPamMissionExpireCsReq {
    uint32 main_mission_id = 9;
}

message AcceptedPamMissionExpireScRsp {
    uint32 main_mission_id = 5;
    uint32 retcode = 12;
}

message SyncAcceptedPamMissionNotify {
    uint64 PAMBJBFNGPO = 10;
    uint32 main_mission_id = 14;
}

message GetPamSkinDataCsReq {
}

message GetPamSkinDataScRsp {
    uint32 cur_skin = 4;
    uint32 retcode = 9;
    repeated uint32 unlock_skin_list = 15;
}

message SelectPamSkinCsReq {
    uint32 pam_skin = 13;
}

message SelectPamSkinScRsp {
    uint32 set_skin = 8;
    uint32 retcode = 9;
    uint32 cur_skin = 12;
}

message UnlockPamSkinScNotify {
    uint32 pam_skin = 11;
}

message GGDEMGBOFGO {
    bool KKEHMBPJOOC = 5;
    uint32 time = 14;
    uint32 ACJCPHIFMLN = 15;
}

message CEHPIACKNMO {
}

message MEDMMLKPLNL {
    uint32 retcode = 3;
    repeated GGDEMGBOFGO KCMCMPFONKO = 4;
}

message DGEFMLBPFMM {
    uint32 time = 1;
    uint32 LPBHOMFCLON = 8;
    uint32 id = 14;
}

message OOFKEBPANLP {
    repeated DGEFMLBPFMM DCFHGAAJLNN = 7;
    uint32 ACJCPHIFMLN = 12;
}

message LAAICGPFABC {
}

message FLIGGDLDOKH {
    uint32 retcode = 5;
    repeated OOFKEBPANLP PFENGLDJCMG = 8;
    OOFKEBPANLP NJGPIKCFJNL = 15;
}

message FCMADPMOMGD {
    uint32 ACJCPHIFMLN = 1;
    uint32 POFMCALHOOC = 5;
}

message GPFIOILCDDH {
    uint32 POFMCALHOOC = 3;
    uint32 ACJCPHIFMLN = 4;
    uint32 retcode = 14;
}

message BFPOLEGCCPJ {
    uint32 cnt = 5;
    HCFFFEIMCMF type = 7;
}

message DCKPBICNMKK {
    uint32 id = 5;
    uint32 cnt = 11;
}

message OOALAODNCPE {
    repeated DCKPBICNMKK APNNBDBENLC = 1;
    uint32 OGGEGAOLPGN = 3;
    uint32 NEEFGJBMCLL = 4;
    uint32 OIGKBOOHNII = 5;
    uint32 FODEKCOBFFA = 6;
    uint32 JEHJLJDKBGE = 7;
    uint32 GFDIPLDIFHG = 9;
    uint32 NFPHCJIPIJH = 10;
    uint32 DHDLNDFIBKC = 11;
    uint32 NBNEKBDILLK = 14;
    uint32 MMABIMIEJNJ = 15;
}

message FJJOFEKPDDH {
    uint32 CHAKNDOKNCB = 1;
    uint32 ADJOPIAIBMG = 6;
    uint32 HLKDFINCPPM = 9;
    uint32 CNJJHFPMIIP = 13;
}

message FCEFAKEBFFM {
    repeated BFPOLEGCCPJ AEDBPADEGFI = 1;
    uint32 EEFCBBKKFLC = 2;
    POAHABDKPKJ end_reason = 5;
    uint32 POFMCALHOOC = 7;
    repeated FJJOFEKPDDH HMBHEIGKDBK = 8;
    uint32 rank = 9;
    OOALAODNCPE IFENFKGGIEM = 11;
    uint32 BAABDDJEHMC = 12;
    uint32 ACJCPHIFMLN = 14;
    uint32 time = 15;
}

message PIOJEPCPKAC {
    bool FDGMOEOAJKP = 1;
    GGDEMGBOFGO BLMDKJKOIOH = 2;
    uint32 retcode = 9;
    POAHABDKPKJ end_reason = 10;
    uint32 ACJCPHIFMLN = 11;
    bool KKEHMBPJOOC = 12;
    uint32 time = 13;
}

message GetPetDataCsReq {
}

message GetPetDataScRsp {
    repeated uint32 unlocked_pet_id = 3;
    uint32 retcode = 5;
    uint32 cur_pet_id = 10;
}

message SummonPetCsReq {
    uint32 summoned_pet_id = 7;
}

message SummonPetScRsp {
    uint32 retcode = 12;
    uint32 select_pet_id = 13;
    uint32 cur_pet_id = 14;
}

message RecallPetCsReq {
    uint32 summoned_pet_id = 11;
}

message RecallPetScRsp {
    uint32 cur_pet_id = 4;
    uint32 select_pet_id = 7;
    uint32 retcode = 14;
}

message CurPetChangedScNotify {
    uint32 cur_pet_id = 2;
}

message GetPhoneDataCsReq {
}

message GetPhoneDataScRsp {
    uint32 retcode = 2;
    uint32 cur_phone_case = 4;
    repeated uint32 owned_phone_cases = 5;
    uint32 cur_phone_theme = 7;
    repeated uint32 owned_chat_bubbles = 9;
    repeated uint32 owned_phone_themes = 10;
    uint32 cur_chat_bubble = 11;
}

message SelectChatBubbleCsReq {
    uint32 bubble_id = 1;
}

message SelectChatBubbleScRsp {
    uint32 retcode = 3;
    uint32 cur_chat_bubble = 6;
    uint32 PMDCBFOPCHB = 8;
}

message UnlockChatBubbleScNotify {
    uint32 bubble_id = 11;
}

message SelectPhoneThemeCsReq {
    uint32 theme_id = 3;
}

message SelectPhoneThemeScRsp {
    uint32 ACHOPOJLCCE = 4;
    uint32 cur_phone_theme = 12;
    uint32 retcode = 13;
}

message UnlockPhoneThemeScNotify {
    uint32 theme_id = 5;
}

message SelectPhoneCaseCsReq {
    uint32 phone_case_id = 13;
}

message SelectPhoneCaseScRsp {
    uint32 retcode = 2;
    uint32 cur_phone_case = 3;
    uint32 PDACJDIEOJG = 6;
}

message UnlockPhoneCaseScNotify {
    uint32 phone_case_id = 11;
}

message GetPlanetFesDataCsReq {
}

message GetPlanetFesDataScRsp {
    GCAMEGPEPOL level_info = 1;
    OAINKJLPCDK HBDLIICPKOB = 2;
    JNIPIAADOIP EBGNGDGBOLH = 3;
    uint32 retcode = 4;
    DKEJEOEHAGM LAPCHEIGNMJ = 6;
    AJCJCHLJBGF HLJMHNABFMC = 7;
    AFBAMPLGHEH KJKBKEGIGHK = 9;
    MIOAEGBPOMA HMFFHBHALGE = 10;
    repeated KHOCCHABNMN custom_value_list = 11;
    CLKNIBOJLGP HEOJNAIMGKC = 12;
    KOFOLLACIGO FDHGIKJDLGD = 13;
    IACFPGOLFLM skill_info = 14;
    GJBFGABAAMO ADMJKKOIAGD = 15;
}

message IIKNGNHDMFI {
    repeated uint32 MCNMHBJHMME = 7;
}

message PlanetFesSyncChangeScNotify {
    repeated CCNANLCODDF LEADMNEIMDP = 9;
}

message OIDFFLEEALL {
    uint32 KEJNIMGHOIG = 4;
    uint32 IMFCIMKMJPL = 8;
    uint32 IHELAJNMMBF = 11;
}

message CCNANLCODDF {
    HMBANCKGBII PBHMGCHKJGO = 3;
    OIDFFLEEALL source = 9;
}

message OFGBMCKNLDJ {
    IIKNGNHDMFI BJODEEPGOPC = 1;
    uint32 DGCFLHCPJLN = 5;
    int64 MFKNHHNFKGI = 6;
    IIKNGNHDMFI JCFPLGHKJAA = 8;
}

message KOFOLLACIGO {
    repeated OFGBMCKNLDJ INLLEKAMNPF = 13;
}

message EOAEGAEFPFH {
    uint32 level = 4;
    uint32 MHKHACLNBPM = 6;
    uint32 avatar_id = 7;
    uint32 PAEHAMJHNDD = 9;
}

message DKEJEOEHAGM {
    repeated EOAEGAEFPFH avatar_list = 8;
}

message CEODDCEIDDL {
    uint32 item_id = 12;
    uint32 item_count = 14;
}

message AJCJCHLJBGF {
    IIKNGNHDMFI CPIOGJKFECH = 4;
    repeated CEODDCEIDDL item_list = 9;
    IIKNGNHDMFI PCAJNCBMIMM = 13;
}

message OAINKJLPCDK {
    repeated PPFCJHEKOLG POCJCMKKJIK = 12;
}

message PPFCJHEKOLG {
    OIDFFLEEALL source = 3;
    uint64 unique_id = 4;
    uint32 config_id = 5;
    repeated FIMACPHLMNO DFCFHHLBGDC = 10;
}

message FIMACPHLMNO {
    int64 KBEFCMIIIIN = 9;
}

message ADAFJFOJDEG {
    uint32 quest_id = 1;
    uint32 MFANNCAGDMP = 3;
    GMFEJEFIBBI status = 6;
    uint32 progress = 12;
    oneof GNIOHLCLPMP {
        IIKNGNHDMFI NNHPCOIIKFF = 4;
        uint32 BONAGHBBICF = 5;
    }
}

message PCODFCNKHJK {
    uint32 DCNPHBDDDIP = 11;
    uint32 EOFELDEAPEO = 13;
}

message CLKNIBOJLGP {
    PCODFCNKHJK CMHNLJJODJF = 3;
    repeated ADAFJFOJDEG quest_list = 4;
}

message GCAMEGPEPOL {
    uint32 PJOLEMHLGNL = 2;
    IIKNGNHDMFI EHBJBPCNPLG = 4;
}

message DHNFBGENLIG {
    uint32 progress = 12;
    uint32 BHPCNNFOKEE = 15;
}

message AFBAMPLGHEH {
    repeated uint32 IHBJIIHBIBP = 2;
    repeated DHNFBGENLIG NCKCMGCBEHK = 8;
}

message HFOCNHOJLAH {
    uint32 level = 1;
    uint32 skill_id = 6;
}

message IACFPGOLFLM {
    repeated HFOCNHOJLAH skill_list = 9;
}

message GJBFGABAAMO {
    uint32 EIMGBKNLGNF = 11;
    repeated uint32 HIGNFPJLFKA = 15;
}

message MIOAEGBPOMA {
    repeated uint32 FGIMACCHHDK = 2;
    int64 EPCPDOCDOCB = 12;
    uint32 FGPACIHLANB = 13;
}

message HMBANCKGBII {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message OLBOPGJFFPM {
    DHNFBGENLIG KJKBKEGIGHK = 3;
    bool BIINNCNDPCG = 15;
}

message PHFBDNNLINF {
    uint32 PJOLEMHLGNL = 1;
    IIKNGNHDMFI EHBJBPCNPLG = 9;
}

message GIEDCJDLEGE {
    repeated uint32 BLCABEMFACH = 2;
    IIKNGNHDMFI MFNAGLKDPNI = 3;
    IIKNGNHDMFI OGJOFMCMFPG = 4;
    IIKNGNHDMFI BMALPKEKBEL = 6;
}

message HPGAGBGJLID {
    uint32 item_id = 6;
    uint32 BMALPKEKBEL = 10;
    uint32 OGJOFMCMFPG = 15;
}

message PGNDIBBGIJN {
    uint32 GFJAGHLJJDN = 13;
    uint32 ECILICNOLFN = 15;
}

message NPAIINEKEFB {
    uint32 PEFDLAJLCJB = 2;
    uint32 avatar_id = 4;
    uint32 JLCEEFBLJDC = 6;
    IIKNGNHDMFI DMAIMCPPJGH = 7;
}

message ILJJBGIFDPE {
    uint32 MEMBICNIFLI = 1;
    map<uint32, uint32> BJELCLBGALF = 2;
    uint32 NLAOMPDENKK = 3;
    repeated NPAIINEKEFB OEBAFBIGMBC = 5;
    uint32 CCIGDJCGAMD = 7;
    uint32 NIJMJBMCFJF = 9;
    IIKNGNHDMFI PEHINGJKGCB = 11;
    IIKNGNHDMFI FOFHIEIICPB = 12;
    uint32 HDKAFNKHALA = 13;
    IIKNGNHDMFI EAJPDPCDJPK = 15;
}

message DJOEEGHMCFJ {
    EGBKGEMFODN AAKDAHHIGIF = 13;
}

message HPCAIMKJDIJ {
    ILMELFJCCMD JILAGGDMALL = 2;
}

message CBIKMFFDCGI {
    IIKNGNHDMFI HHJOCIPOBCF = 1;
}

message HOHDMMNDKNJ {
    DFHEJCIJBEJ PODGJPEKEEG = 5;
    JOFGDAIADBO NFJLFNBPPPG = 8;
}

message FHNGONEFBDE {
    uint32 EIMGBKNLGNF = 2;
}

message OHDHPCLIJNH {
    IIKNGNHDMFI KJBKNGCFBBP = 3;
    uint32 CIOAOGDKFOG = 7;
    uint32 EAFOMFLMOJJ = 11;
    uint32 GINMOIBGLNM = 12;
    uint32 IACPHGOJHMB = 14;
}

message DJIAEMANGCG {
    repeated OHDHPCLIJNH transfer_item_list = 3;
    repeated CEODDCEIDDL item_list = 13;
}

message BFAAEFCEJPA {
    CEODDCEIDDL HOCNLIJHJJK = 5;
    OHDHPCLIJNH PKBBHJPAEKI = 14;
}

message PlanetFesCollectIncomeCsReq {
    uint32 DGCFLHCPJLN = 8;
}

message PlanetFesCollectIncomeScRsp {
    uint32 retcode = 11;
}

message PFBFIMJFEGI {
    uint32 DGCFLHCPJLN = 4;
    uint32 avatar_id = 11;
}

message PlanetFesSetAvatarWorkCsReq {
    repeated PFBFIMJFEGI KNGPOFHNFAJ = 4;
}

message PlanetFesSetAvatarWorkScRsp {
    uint32 retcode = 1;
}

message PlanetFesBuyLandCsReq {
    uint32 DGCFLHCPJLN = 13;
}

message PlanetFesBuyLandScRsp {
    uint32 retcode = 4;
}

message PlanetFesClientStatusCsReq {
    bool FJINNLFCBOJ = 15;
}

message PlanetFesClientStatusScRsp {
    uint32 retcode = 1;
}

message PlanetFesCollectAllIncomeCsReq {
}

message PlanetFesCollectAllIncomeScRsp {
    IIKNGNHDMFI GNDCAMMILOI = 5;
    uint32 retcode = 8;
}

message PlanetFesDoGachaCsReq {
    uint32 gacha_id = 6;
    uint32 gacha_count = 7;
    uint32 simulate_magic = 13;
}

message NEIHLDGEBHE {
    BFAAEFCEJPA LPDEOPGELLE = 4;
    uint32 avatar_id = 8;
    uint32 JKJNCNCLFLD = 12;
    uint32 FLJPKFJAJFP = 15;
}

message CGOJKBOEOFO {
    repeated BFAAEFCEJPA GMOFKLBFAPL = 6;
    repeated NEIHLDGEBHE DHHAPHNMEDF = 9;
    repeated uint32 JCDJCANEHJD = 13;
    IIKNGNHDMFI CABCGKNGAOC = 15;
}

message PJCAKIFOOCP {
    repeated uint32 ECDAMBIIFCI = 5;
    DJIAEMANGCG JFMAHMOFJPI = 15;
}

message PlanetFesDoGachaScRsp {
    uint32 gacha_id = 6;
    uint32 retcode = 9;
    repeated CEODDCEIDDL CIKEPDANGFD = 10;
    oneof CCPFABANCNN {
        ItemList JDIJKEGCIBP = 3;
        OOBCEJFEHMK CNDGJJLJDOF = 5;
    }
}

message PlanetFesAvatarLevelUpCsReq {
    uint32 avatar_id = 14;
    uint32 LDNJEACFBJE = 15;
}

message PlanetFesAvatarLevelUpScRsp {
    uint32 BHPFPEJBKEC = 6;
    uint32 retcode = 9;
    PlanetFesReward reward = 10;
    uint32 LDNJEACFBJE = 11;
    uint32 avatar_id = 13;
}

message PlanetFesTakeQuestRewardCsReq {
    uint32 quest_id = 9;
}

message PlanetFesTakeQuestRewardScRsp {
    uint32 quest_id = 5;
    DJIAEMANGCG DNFFKABFOEF = 9;
    uint32 retcode = 12;
}

message PlanetFesUpgradeSkillLevelCsReq {
    uint32 LDNJEACFBJE = 2;
    uint32 skill_id = 13;
}

message PlanetFesUpgradeSkillLevelScRsp {
    uint32 retcode = 1;
    uint32 skill_level = 11;
    CEODDCEIDDL item_cost = 14;
    uint32 skill_id = 15;
}

message PlanetFesReward {
    IIKNGNHDMFI Coin = 3;
    repeated CEODDCEIDDL ItemList = 6;
    map<uint32, uint32> BuffMap = 12;
}

message KNOKILFKOHI {
    uint32 avatar_id = 11;
    uint32 AOPIKHKKGLM = 12;
    uint32 JOOOEAFOKHK = 15;
}

message DLLJMIAGHDD {
    repeated KNOKILFKOHI FJHGCKENOPF = 5;
}

message EFHABDOFKDE {
    uint32 BPCFOEGHONC = 1;
    uint32 NNGOPAKJICC = 3;
    map<uint32, uint32> AGMGPPAOMKA = 4;
    uint32 EPMOOHCJNHO = 12;
}

message CGOMNLBLJGH {
    uint32 AFGKFIFJFCL = 12;
    HLDHEMLPJNG OMCBCGCHLGN = 14;
    uint32 OOHNKOJHDHO = 15;
}

message POHNIIFLCGE {
    uint32 DGDDJNHLGGJ = 13;
}

message BKODHAEECJH {
    uint32 DGDDJNHLGGJ = 9;
    uint32 HDDIJNADFDD = 12;
    uint32 CGDGPGJLKNM = 13;
}

message CBOEMEJIFFE {
    uint32 DGDDJNHLGGJ = 5;
}

message JOFGDAIADBO {
    uint32 DAJJJFCHOOJ = 4;
    bool PKLCNHICGIA = 5;
    uint32 HOIOKBKGFDN = 6;
    bool FOMJLFJCKDB = 7;
    int64 LJHEOCHHCAB = 12;
    uint32 BKMAMGAPEGH = 13;
    bool CHNLIOKGLBP = 14;
    oneof LOFNLGCFGIC {
        AKKCDLMLKDF CGGNFJCBBKM = 1;
        BHJHAPDLPNO NDKHOGEMKJA = 2;
        KOJKPLCEGEN NNCHMGDGDFI = 3;
        //ALNIGMCJFDM PICLEGGGNCF = 5;
        //GJBBLCIPBHD LCBECPOOGCL = 7;
        FHJGLOPMFNC PGPAAPOPDOC = 8;
        JBNCDFFPDOP PMKEHGBPCNG = 10;
        NEOCCICFNED EAPMICBGOIO = 11;
        //JDOOIDBKCIM JLFDDMEKLJK = 13;
        //LEHGLCELJMF CEAJNLIOFHF = 14;
    }
}

message ILMELFJCCMD {
    bool BIINNCNDPCG = 1;
    int64 COIFHFPEGPH = 3;
    bool DKHIGCIPEKF = 8;
    repeated JOFGDAIADBO KMNDEBCFFAD = 9;
    IIKNGNHDMFI PEHINGJKGCB = 12;
    uint32 BKMAMGAPEGH = 14;
    map<uint32, uint32> HIJDDFBEDPO = 15;
}

message FLNIDKIGGBK {
    IIKNGNHDMFI KNEINMNLCDI = 4;
    uint32 BKMAMGAPEGH = 9;
    IIKNGNHDMFI PEHINGJKGCB = 11;
    repeated NPAIINEKEFB OEBAFBIGMBC = 12;
    bool DKHIGCIPEKF = 14;
    uint32 GJPANOCNGBM = 15;
}

message LEAAHDPAIEG {
    uint32 HOIOKBKGFDN = 12;
    bool AGMAMBDEHLK = 14;
}

message EGBKGEMFODN {
    repeated LEAAHDPAIEG NFIOACFHJNK = 1;
    repeated uint32 CCBBDGFFFAG = 3;
    ILMELFJCCMD NCIKKFENHJF = 5;
    uint32 BLMNEKFPAGH = 6;
    repeated FLNIDKIGGBK DPPIMJNDNDF = 9;
    uint32 HJNOIENGEDL = 14;
}

message PlanetFesGetBusinessDayInfoCsReq {
    bool MKBPDPAFAPK = 14;
}

message PlanetFesGetBusinessDayInfoScRsp {
    EGBKGEMFODN AAKDAHHIGIF = 4;
    uint32 retcode = 12;
    int64 BCFBFMMENJK = 15;
}

message JNIPIAADOIP {
    uint32 HJNOIENGEDL = 2;
    uint32 BLMNEKFPAGH = 5;
    uint32 MLGFJGCHONH = 6;
    int64 BCFBFMMENJK = 7;
    bool DKHIGCIPEKF = 10;
    bool BIINNCNDPCG = 11;
}

message PlanetFesBusinessDayRefreshEventCsReq {
    uint32 HOIOKBKGFDN = 2;
    uint32 BKMAMGAPEGH = 7;
    bool KBLPJCFNHLE = 11;
}

message PlanetFesBusinessDayRefreshEventScRsp {
    uint32 retcode = 1;
    JOFGDAIADBO NFJLFNBPPPG = 3;
}

message PlanetFesDeliverPamCargoCsReq {
    uint32 AOPIKHKKGLM = 4;
    uint32 avatar_id = 12;
}

message PlanetFesDeliverPamCargoScRsp {
    JOFGDAIADBO NFJLFNBPPPG = 1;
    PlanetFesReward GCBDEDABGKO = 6;
    uint32 retcode = 8;
    uint32 avatar_id = 13;
}

message PlanetFesChooseAvatarEventOptionCsReq {
    uint32 NFCAAMBMMMB = 1;
}

message PlanetFesChooseAvatarEventOptionScRsp {
    uint32 HAKKGODICFI = 5;
    uint32 retcode = 6;
    uint32 OJKJPKHDEPE = 11;
    uint32 EPMOOHCJNHO = 12;
    PlanetFesReward reward = 13;
    JOFGDAIADBO NFJLFNBPPPG = 15;
}

message PlanetFesDealAvatarEventOptionItemCsReq {
    bool LECDHDDCEIA = 6;
    uint32 NNGOPAKJICC = 15;
}

message PlanetFesDealAvatarEventOptionItemScRsp {
    PlanetFesReward reward = 2;
    uint32 OJKJPKHDEPE = 3;
    bool LECDHDDCEIA = 4;
    uint32 HAKKGODICFI = 5;
    JOFGDAIADBO NFJLFNBPPPG = 7;
    uint32 retcode = 12;
}

message PlanetFesTakeRegionPhaseRewardCsReq {
    uint32 NDBOJANDNJN = 4;
}

message PlanetFesTakeRegionPhaseRewardScRsp {
    ItemList reward_list = 6;
    uint32 NDBOJANDNJN = 13;
    uint32 retcode = 15;
}

message CNLMDFFEFJM {
    repeated uint32 HFKGGOEPPLE = 4;
    repeated uint32 CDLBEHLAMMM = 6;
    uint32 ALHANJKLBOO = 8;
    uint32 GPAGHIAJICD = 13;
}

message HLDHEMLPJNG {
    uint32 ACDOPCBMPNL = 1;
    CNLMDFFEFJM EJCOLGNJGDC = 3;
    uint32 OOHNKOJHDHO = 14;
}

message FMNHLKNJNAH {
    repeated uint32 PKHLGKKIPPA = 10;
}

message PlanetFesStartMiniGameCsReq {
    uint32 OOHNKOJHDHO = 3;
    uint32 ACDOPCBMPNL = 11;
}

message PlanetFesStartMiniGameScRsp {
    uint32 retcode = 2;
    PlanetFesReward reward = 7;
    HLDHEMLPJNG OMCBCGCHLGN = 9;
    FMNHLKNJNAH JFMAHMOFJPI = 12;
}

message PlanetFesUseItemCsReq {
    uint32 item_id = 1;
    uint32 DIOOKFOCCMO = 5;
}

message PlanetFesUseItemScRsp {
    PlanetFesReward reward = 9;
    uint32 retcode = 12;
}

message PlanetFesGameBingoFlipCsReq {
    uint32 HCFPOFMDGKN = 10;
}

message PlanetFesGameBingoFlipScRsp {
    PlanetFesReward reward = 1;
    bool NFEADMFNFLK = 2;
    uint32 HCFPOFMDGKN = 7;
    uint32 retcode = 9;
}

message PlanetFesBonusEventInteractCsReq {
    uint32 APMODAGOHNA = 2;
    uint32 HOIOKBKGFDN = 3;
}

message PlanetFesBonusEventInteractScRsp {
    PlanetFesReward reward = 3;
    uint32 HOIOKBKGFDN = 6;
    uint32 retcode = 7;
    JOFGDAIADBO NFJLFNBPPPG = 12;
}

message EIKAIIDAEPP {
    uint32 BKMAMGAPEGH = 1;
    IIKNGNHDMFI HHJOCGOMECO = 3;
    uint32 DGJDMOCBBII = 4;
    uint32 PJOLEMHLGNL = 5;
    uint32 HDCBEJDENLA = 6;
    uint32 uid = 8;
    uint32 LNJIIHHPMED = 15;
}

message PlanetFesGetFriendRankingInfoListCsReq {
}

message PlanetFesGetFriendRankingInfoListScRsp {
    uint32 retcode = 4;
    EIKAIIDAEPP ICMGEGEFDLE = 5;
}

message PlanetFesFriendRankingInfoChangeScNotify {
    repeated EIKAIIDAEPP CNHEKLKBMHH = 5;
}

message PlanetFesSetCustomKeyValueCsReq {
    uint32 value = 8;
    uint32 key = 12;
}

message PlanetFesSetCustomKeyValueScRsp {
    uint32 value = 3;
    uint32 key = 4;
    uint32 retcode = 14;
}

message PlanetFesUpgradeFesLevelCsReq {
    uint32 LDNJEACFBJE = 13;
}

message PlanetFesUpgradeFesLevelScRsp {
    uint32 retcode = 10;
}

message PlanetFesGetAvatarStatCsReq {
}

message PlanetFesGetAvatarStatScRsp {
    repeated NPAIINEKEFB OEBAFBIGMBC = 9;
    uint32 retcode = 13;
}

message DEINADPEHKE {
    repeated uint32 JPACOBGBDBG = 7;
    int64 apply_time = 11;
    uint32 OFGFHCLDOBG = 12;
    uint32 PNAKHNBDJAE = 14;
}

message BKBILPDKOIL {
    uint64 HPJJDCJHHOA = 2;
    repeated uint32 JPACOBGBDBG = 5;
    uint32 LHJPKMDMNMP = 6;
    bool CABEHKOFLPG = 7;
    int64 time = 12;
}

message GJIPJNGNFEJ {
    repeated uint32 JPACOBGBDBG = 6;
    int64 time = 7;
    uint32 PNAKHNBDJAE = 8;
    uint32 source = 11;
    uint32 OFGFHCLDOBG = 12;
}

message PlanetFesGetExtraCardPieceInfoCsReq {
}

message FFAPKCNAPID {
    uint32 AOAEFEIBBMF = 1;
    repeated DEINADPEHKE GEDGLNCPGGN = 2;
    repeated uint32 IEMNJHLFGKD = 3;
    uint32 HLKPNECAMBL = 5;
    repeated GJIPJNGNFEJ OBBOCCNFLOL = 6;
    repeated CEODDCEIDDL PBFHDNBGMBP = 9;
    int64 AIIEKLILMJC = 11;
    uint32 uid = 15;
}

message PlanetFesGetExtraCardPieceInfoScRsp {
    FFAPKCNAPID BAAMHDNNKIA = 4;
    uint32 retcode = 9;
}

message PlanetFesGetFriendCardPieceCsReq {
}

message PlanetFesGetFriendCardPieceScRsp {
    repeated FFAPKCNAPID CGDANDNIBGJ = 3;
    uint32 retcode = 8;
}

message PlanetFesChangeCardPieceApplyPermissionCsReq {
    uint32 HLKPNECAMBL = 12;
}

message PlanetFesChangeCardPieceApplyPermissionScRsp {
    uint32 retcode = 2;
    uint32 HLKPNECAMBL = 12;
}

message PlanetFesApplyCardPieceCsReq {
    repeated uint32 JPACOBGBDBG = 12;
    uint32 CBEGNBKMHCD = 15;
}

message PlanetFesApplyCardPieceScRsp {
    uint32 CBEGNBKMHCD = 1;
    uint32 retcode = 2;
    int64 EPCPDOCDOCB = 9;
    bool MCFFPIEEKNN = 11;
    repeated uint32 JPACOBGBDBG = 13;
    uint32 PNAKHNBDJAE = 14;
}

message PlanetFesHandleCardPieceApplyCsReq {
    uint32 PNAKHNBDJAE = 6;
    bool MDAPCFHELJL = 7;
    uint32 OFGFHCLDOBG = 10;
    repeated uint32 DLHBCOKCIDP = 15;
}

message PlanetFesHandleCardPieceApplyScRsp {
    uint32 retcode = 1;
    repeated uint32 DLHBCOKCIDP = 2;
    uint32 PNAKHNBDJAE = 5;
    int64 PPIOLCLPMPL = 7;
    bool MDAPCFHELJL = 11;
}

message PlanetFesGetOfferedCardPieceCsReq {
    bool CABEHKOFLPG = 7;
    uint64 HPJJDCJHHOA = 9;
}

message PlanetFesGetOfferedCardPieceScRsp {
    int64 DLJCKCMADHJ = 2;
    uint64 HPJJDCJHHOA = 6;
    repeated BKBILPDKOIL ONJGMGHCPEF = 10;
    bool CABEHKOFLPG = 12;
    repeated CEODDCEIDDL PBFHDNBGMBP = 13;
    uint32 retcode = 14;
}

message PlanetFesGiveCardPieceCsReq {
    repeated uint32 DLHBCOKCIDP = 7;
    uint32 CBEGNBKMHCD = 11;
}

message PlanetFesGiveCardPieceScRsp {
    repeated uint32 DLHBCOKCIDP = 3;
    uint64 HPJJDCJHHOA = 7;
    int64 PPIOLCLPMPL = 10;
    uint32 CBEGNBKMHCD = 11;
    uint32 retcode = 15;
}

message PlanetFesLargeBonusInteractCsReq {
    uint32 OOIOOKGMEHP = 1;
    uint32 IHCILNHKLMC = 2;
    uint32 MOPFFBMABCD = 5;
}

message PlanetFesLargeBonusInteractScRsp {
    uint32 retcode = 2;
    uint32 IHCILNHKLMC = 4;
    IIKNGNHDMFI GMIDJMMMJKP = 8;
    JOFGDAIADBO NFJLFNBPPPG = 11;
}

message GPJACEJJMEB {
}

message FFKKBBACICL {
    uint32 retcode = 1;
}

message PlayerLoginCsReq {
    string OEHJLODAHFN = 1;
    PlatformType platform_type = 2;
    string KIBBNBNGIJD = 3;
    string BNIGPDOOILI = 4;
    string OCDACJNNJNJ = 5;
    string BNBOALIAPAE = 6;
    LanguageType FADPDIBKNBI = 7;
    string client_version = 8;
    string HJDMJPEBPPM = 9;
    uint32 JMKHDHAIOIM = 10;
    uint32 client_res_version = 11;
    string DMPMHCCFBKG = 12;
    uint64 login_random = 13;
    string rogue_get_info = 14;
    string signature = 15;
    uint32 NHBHBALHJML = 195;
    string IGNFBLGJIOJ = 293;
    string AKCEJFCFBAN = 488;
    uint32 HAEHHCPOAPP = 539;
    OCCHNEFHGNE PKLICGMEIMB = 583;
    string GMALCPNOHBF = 707;
    bool GEHAPNIHCDO = 786;
    JGFKICDCFLJ MIOHKAOIDNK = 1414;
    string OHPCKCNAEIK = 1510;
    uint32 MLNABEPINDB = 1726;
    string KFDJEIEOBBN = 1951;
    string BPCKJKDENCB = 1992;
    bool OEENCFMCAHD = 2032;
}

message PlayerLoginScRsp {
    PlayerBasicInfo basic_info = 1;
    uint64 login_random = 3;
    bool JLPKEOBINCP = 4;
    int32 cur_timezone = 5;
    uint32 retcode = 6;
    string NHMHABJKHOG = 8;
    uint32 stamina = 10;
    bool IGKBEAMLNBJ = 11;
    string PDIKPEIFANN = 12;
    uint64 server_timestamp_ms = 13;
}

message LMIPMHHPFHN {
}

message PlayerGetTokenCsReq {
    uint32 ICMFPNPIJJF = 2;
    uint32 uid = 6;
    uint32 HAEHHCPOAPP = 8;
    string account_uid = 9;
    uint32 FGOJLPAEJEC = 11;
    uint32 platform = 13;
    string token = 14;
    string MEMPBKCJJFJ = 15;
}

message PlayerGetTokenScRsp {
    uint32 retcode = 1;
    uint32 uid = 4;
    string msg = 6;
    uint64 secret_key_seed = 7;
    BlackInfo black_info = 12;
}

message GmTalkScNotify {
    string msg = 4;
}

message PlayerKickOutScNotify {
    BlackInfo black_info = 1;
    KickType kick_type = 6;
}

message GmTalkCsReq {
    string msg = 9;
}

message GmTalkScRsp {
    string BJDOJLKEHNA = 1;
    uint32 retcode = 12;
}

message GetBasicInfoCsReq {
}

message OGFIODPILEL {
    bool AKHEILMNDHJ = 2;
    uint32 CACEKELNMIN = 5;
    bool DMKLNJBOABO = 12;
}

message PlayerSettingInfo {
    bool GMJANOJMKCE = 2;
    bool MMMNJCHEMFN = 3;
    OGFIODPILEL GHKCMDNKOPN = 5;
    bool KJNCCKHJFHE = 6;
    bool NKEKIBNJMPA = 8;
    bool PBKBGLHHKPE = 9;
    bool KAPDIMGJLNF = 10;
    bool APONEIDMPHL = 11;
    bool NJFMILJOFOK = 13;
    bool AICNFAOBCPI = 14;
    bool ILFALCDLAOL = 15;
}

message GetBasicInfoScRsp {
    uint32 GameplayBirthday = 2;
    uint32 retcode = 3;
    int64 NextRecoverTime = 5;
    bool IsGenderSet = 6;
    uint32 WeekCocoonFinishedCount = 7;
    uint32 Gender = 8;
    uint32 CurDay = 11;
    int64 LastSetNicknameTime = 12;
    uint32 ExchangeTimes = 13;
    PlayerSettingInfo PlayerSettingInfo = 15;
}

message ExchangeStaminaCsReq {
}

message ExchangeStaminaScRsp {
    uint32 retcode = 6;
    int64 LastRecoverTime = 10;
    repeated ItemCost ItemCostList = 12;
    uint32 ExchangeTimes = 13;
    uint32 StaminaAdd = 14;
}

message GetAuthkeyCsReq {
    uint32 sign_type = 2;
    uint32 authkey_ver = 8;
    string auth_appid = 15;
}

message GetAuthkeyScRsp {
    uint32 sign_type = 2;
    string authkey = 3;
    uint32 authkey_ver = 8;
    string auth_appid = 11;
    uint32 retcode = 14;
}

message RegionStopScNotify {
    int64 stop_end_time = 4;
    int64 stop_begin_time = 6;
}

message AntiAddictScNotify {
    string Level = 2;
    string Msg = 7;
    uint32 MsgType = 13;
}

message SetNicknameCsReq {
    string nickname = 10;
    bool is_modify = 11;
}

message SetNicknameScRsp {
    bool is_modify = 6;
    uint32 retcode = 11;
    int64 JENDKBOOAIP = 12;
}

message GetLevelRewardTakenListCsReq {
}

message GetLevelRewardTakenListScRsp {
    repeated uint32 level_reward_taken_list = 4;
    uint32 retcode = 15;
}

message GetLevelRewardCsReq {
    uint32 level = 12;
    uint32 interacted_prop_entity_id = 15;
}

message GetLevelRewardScRsp {
    ItemList reward = 1;
    uint32 retcode = 5;
    uint32 level = 8;
}

message SetLanguageCsReq {
    LanguageType FADPDIBKNBI = 5;
}

message SetLanguageScRsp {
    LanguageType FADPDIBKNBI = 1;
    uint32 retcode = 6;
}

message AnnounceData {
    uint32 center_system_frequency = 4;
    int64 begin_time = 6;
    string count_down_text = 7;
    int64 end_time = 8;
    uint32 banner_frequency = 10;
    bool is_center_system_last_5_every_minutes = 12;
    string banner_text = 13;
    string emergency_text = 14;
    uint32 config_id = 15;
}

message ServerAnnounceNotify {
    repeated AnnounceData announce_data_list = 15;
}

message Gateserver {
    uint32 port = 1;
    string lua_url = 2;
    string region_name = 3;
    bool enable_version_update = 4;
    string asset_bundle_url = 5;
    bool enable_design_data_version_update = 6;
    string msg = 7;
    uint32 asb_relogin_type = 8;
    int64 stop_end_time = 9;
    string asb_relogin_desc = 10;
    string ip = 11;
    uint32 design_data_relogin_type = 12;
    string ex_resource_url = 13;
    int64 stop_begin_time = 14;
    uint32 retcode = 15;
    string LHOOFMAIHPC = 30;
    string rogue_tourn_build_ref_api_req_color_header_key = 35;
    string pre_download_url = 47;
    string server_description = 108;
    string temporary_maintenance_url = 169;
    string ifix_version = 236;
    string game_start_customer_service_url = 259;
    string teenager_privacy_in_game_url = 276;
    string player_return_questionnaire_a_url = 283;
    bool enable_save_replay_file = 307;
    string online_replay_download_url = 330;
    bool enable_android_middle_package = 344;
    bool use_new_networking = 356;
    string OAOHIECDGCC = 373;
    string EHIMAOFLGIL = 383;
    string ifix_url = 425;
    bool ECBFEHFPOFJ = 438;
    string rogue_tourn_build_ref_static_data_url_prefix = 499;
    uint32 rogue_tourn_notice_id = 526;
    bool use_tcp = 565;
    string NGCIMHOLJBA = 574;
    bool close_redeem_code = 609;
    string mdk_res_version = 705;
    uint32 enable_cdn_ipv6 = 712;
    string design_data_relogin_desc = 761;
    string user_agreement_url = 805;
    string rogue_tourn_build_ref_h5_url = 841;
    string POOOLGFKKJL = 905;
    bool event_tracking_open = 923;
    string web_tool_url = 974;
    string rogue_tourn_build_ref_api_req_color_header_value = 1074;
    string official_community_url = 1087;
    bool MODIBFHPMCP = 1118;
    string client_secret_key = 1134;
    bool ios_exam = 1144;
    string third_privacy_in_game_url = 1158;
    string custom_service_url = 1168;
    uint32 rogue_tourn_notice_pic_type = 1204;
    string MPNJIKPKOHJ = 1332;
    string rogue_magic_h5_url = 1335;
    string personal_information_in_game_url = 1354;
    bool enable_watermark = 1363;
    string cdkey_recall_url = 1423;
    string community_activity_url = 1456;
    string login_white_msg = 1478;
    string CKIOFJNKEMN = 1515;
    string cloud_game_url = 1598;
    string hot_point_url = 1630;
    string player_return_invite_h5_url = 1685;
    bool forbid_recharge = 1725;
    string operation_feedback_url = 1761;
    string online_replay_upload_url = 1861;
    string ipv6_address = 1874;
    bool mtp_switch = 1885;
    bool network_diagnostic = 1943;
    string DENLMLCJLPG = 1991;
    bool enable_upload_battle_log = 2023;
    string player_return_questionnaire_b_url = 2036;
    string privacy_in_game_url = 2038;
}

message GateServerScNotify {
    string CONNPKCCHJE = 1;
}

message MultiPathAvatarInfo {
    uint32 dressed_skin_id = 1;
    repeated EquipRelic equip_relic_list = 2;
    MultiPathAvatarType avatar_id = 7;
    uint32 path_equipment_id = 11;
    repeated AvatarSkillTree multi_path_skill_tree = 12;
    uint32 rank = 15;
}

message SetAvatarPathCsReq {
    MultiPathAvatarType avatar_id = 11;
}

message SetAvatarPathScRsp {
    uint32 retcode = 5;
    MultiPathAvatarType avatar_id = 14;
}

message SetMultipleAvatarPathsCsReq {
    repeated MultiPathAvatarType avatar_id_list = 1;
}

message SetMultipleAvatarPathsScRsp {
    uint32 retcode = 3;
}

message GetMultiPathAvatarInfoCsReq {
}

message GetMultiPathAvatarInfoScRsp {
    repeated uint32 basic_type_id_list = 2;
    repeated MultiPathAvatarInfo multi_path_avatar_info_list = 13;
    uint32 retcode = 14;
    map<uint32, MultiPathAvatarType> cur_multi_path_avatar_type_map = 15;
}

message UnlockAvatarPathCsReq {
    MultiPathAvatarType avatar_id = 11;
}

message UnlockAvatarPathScRsp {
    repeated uint32 basic_type_id_list = 1;
    ItemList reward = 4;
    MultiPathAvatarType avatar_id = 7;
    uint32 retcode = 11;
}

message AvatarPathChangedNotify {
    uint32 base_avatar_id = 1;
    MultiPathAvatarType cur_multi_path_avatar_type = 5;
}

message SetGenderCsReq {
    Gender gender = 2;
}

message SetGenderScRsp {
    repeated MultiPathAvatarInfo cur_avatar_path_info_list = 6;
    MultiPathAvatarType cur_avatar_path = 11;
    uint32 retcode = 15;
}

message SetPlayerInfoCsReq {
    string nickname = 1;
    bool is_modify = 7;
    Gender gender = 11;
}

message SetPlayerInfoScRsp {
    uint32 retcode = 8;
    int64 JENDKBOOAIP = 9;
    MultiPathAvatarType cur_avatar_path = 10;
    bool is_modify = 12;
    repeated MultiPathAvatarInfo cur_avatar_path_info_list = 15;
}

message QueryProductInfoCsReq {
}

message Product {
    uint32 IOGLPEBJMDB = 5;
    string product_id = 6;
    int64 begin_time = 7;
    bool double_reward = 8;
    uint32 GCBOBAMCALK = 9;
    int64 end_time = 11;
    ProductGiftType gift_type = 12;
    string price_tier = 15;
}

message QueryProductInfoScRsp {
    uint64 month_card_out_date_time = 1;
    uint32 CMGHDMPEAKO = 6;
    uint32 retcode = 11;
    uint32 ODNFIAAHKCI = 12;
    repeated Product product_list = 15;
}

message MonthCardRewardNotify {
    ItemList reward = 8;
}

message ClientDownloadDataScNotify {
    ClientDownloadData download_data = 9;
}

message ClientObjDownloadDataScNotify {
    ClientObjDownloadData data = 15;
}

message UpdateFeatureSwitchScNotify {
    repeated FeatureSwitchInfo SwitchInfoList = 7;
}

message DailyRefreshNotify {
    uint32 GMFEBDAFDPJ = 7;
}

message SetGameplayBirthdayCsReq {
    uint32 birthday = 5;
}

message SetGameplayBirthdayScRsp {
    uint32 retcode = 8;
    uint32 birthday = 9;
}

message AceAntiCheaterCsReq {
    string DGDLNIEFCPF = 3;
    uint32 GLNKKFAIPOB = 14;
}

message AceAntiCheaterScRsp {
    uint32 retcode = 15;
}

message RetcodeNotify {
    uint32 retcode = 5;
    repeated uint32 JOJPPODOMAH = 11;
}

message PlayerHeartBeatCsReq {
    uint32 JBPEMOFNEDG = 3;
    uint64 client_time_ms = 11;
    ClientUploadData LKJMJGDEBEE = 14;
}

message PlayerHeartBeatScRsp {
    uint64 client_time_ms = 2;
    uint64 server_time_ms = 8;
    uint32 retcode = 10;
    ClientDownloadData download_data = 13;
}

message FeatureSwitchClosedScNotify {
    FeatureSwitchType KIMNKFPFBDG = 4;
}

message SecretKeyInfo {
    SecretKeyType type = 5;
    string secret_key = 14;
}

message GetSecretKeyInfoCsReq {
    string secret_req = 14;
}

message GetSecretKeyInfoScRsp {
    string secret_rsp = 3;
    uint32 retcode = 10;
    repeated SecretKeyInfo secret_info = 12;
}

message PlayerLoginFinishCsReq {
}

message PlayerLoginFinishScRsp {
    uint32 retcode = 11;
}

message VideoKeyInfo {
    uint32 id = 6;
    uint64 video_key = 8;
}

message GetVideoVersionKeyCsReq {
}

message GetVideoVersionKeyScRsp {
    repeated VideoKeyInfo activity_video_key_info_list = 3;
    repeated VideoKeyInfo video_key_info_list = 7;
    uint32 retcode = 15;
}

message NHJGHOKBDPK {
    uint32 JDAKKOFDGEP = 4;
    uint32 IIPDEFCEDMC = 8;
    uint32 content_id = 9;
    uint32 NCIADBAKMAE = 14;
}

message SetRedPointStatusScNotify {
    uint32 content_id = 1;
    uint32 IIPDEFCEDMC = 3;
    uint32 uid = 5;
    uint32 JDAKKOFDGEP = 12;
    repeated NHJGHOKBDPK NJEHHFFDGHK = 14;
}

message ReserveStaminaExchangeCsReq {
    uint32 Num = 11;
}

message ReserveStaminaExchangeScRsp {
    uint32 Num = 3;
    uint32 retcode = 8;
}

message StaminaInfoScNotify {
    uint32 stamina = 1;
    int64 next_recover_time = 7;
    uint32 reserve_stamina = 8;
    int64 DPIMHEMJKOE = 12;
}

message UpdatePlayerSetting {
    oneof CKMAIKMMJME {
        bool KAPDIMGJLNF = 1;
        bool NJFMILJOFOK = 2;
        bool AICNFAOBCPI = 4;
        bool NKEKIBNJMPA = 5;
        bool GMJANOJMKCE = 6;
        bool PBKBGLHHKPE = 7;
        bool MMMNJCHEMFN = 8;
        OGFIODPILEL GHKCMDNKOPN = 9;
        bool KJNCCKHJFHE = 11;
        bool ILFALCDLAOL = 12;
        bool APONEIDMPHL = 15;
    }
}

message UpdatePlayerSettingCsReq {
    UpdatePlayerSetting player_setting = 13;
}

message UpdatePlayerSettingScRsp {
    uint32 retcode = 4;
    UpdatePlayerSetting player_setting = 10;
}

message ClientObjUploadCsReq {
    uint32 JBPEMOFNEDG = 10;
    string LKJMJGDEBEE = 15;
}

message ClientObjUploadScRsp {
    uint32 retcode = 10;
    ClientObjDownloadData data = 13;
}

message MENPBGGOGMC {
    string GKHFBFKNHOB = 7;
}

message NCBIMLPODON {
    bool IAHOPFNPFLN = 1;
    MENPBGGOGMC black_list = 6;
}

message CJAKIBDIMMJ {
    oneof BFGKJIMCGAH {
        MENPBGGOGMC AMALJFOKCBA = 73;
        MENPBGGOGMC OECBELGDLFP = 670;
        bool IAHOPFNPFLN = 1837;
    }
}

message UpdatePsnSettingsInfoCsReq {
    oneof DDBNLHJNANE {
        NCBIMLPODON DOOCPLCLDPD = 1512;
        CJAKIBDIMMJ INHLDIDJGHA = 1533;
    }
}

message UpdatePsnSettingsInfoScRsp {
    uint32 retcode = 4;
}

message GetGameStateServiceConfigCsReq {
}

message GetGameStateServiceConfigScRsp {
    string FIBIJGMKDPP = 4;
    string LEDKMDOLLBB = 5;
    string KAOJCOBEEON = 12;
    uint32 retcode = 15;
}

message HeadIconData {
    uint32 id = 5;
}

message DisplayAvatarData {
    uint32 pos = 1;
    uint32 avatar_id = 5;
}

message DisplayAvatarVec {
    bool is_display = 4;
    repeated DisplayAvatarData display_avatar_list = 15;
}

message GetPlayerBoardDataCsReq {
}

message GetPlayerBoardDataScRsp {
    repeated uint32 assist_avatar_id_list = 1;
    DisplayAvatarVec display_avatar_vec = 2;
    string signature = 4;
    uint32 current_head_icon_id = 6;
    uint32 OLDMJONBJOM = 10;
    uint32 retcode = 13;
    repeated uint32 KKNJHENMGPK = 14;
    repeated HeadIconData unlocked_head_icon_list = 15;
}

message SetHeadIconCsReq {
    uint32 id = 14;
}

message SetHeadIconScRsp {
    uint32 retcode = 5;
    uint32 current_head_icon_id = 13;
}

message SetPersonalCardCsReq {
    uint32 id = 15;
}

message SetPersonalCardScRsp {
    uint32 OLDMJONBJOM = 13;
    uint32 retcode = 15;
}

message SetDisplayAvatarCsReq {
    repeated DisplayAvatarData display_avatar_list = 13;
}

message SetDisplayAvatarScRsp {
    uint32 retcode = 2;
    repeated DisplayAvatarData display_avatar_list = 8;
}

message SetIsDisplayAvatarInfoCsReq {
    bool is_display = 10;
}

message SetIsDisplayAvatarInfoScRsp {
    bool is_display = 2;
    uint32 retcode = 9;
}

message SetSignatureCsReq {
    string signature = 14;
}

message SetSignatureScRsp {
    string signature = 6;
    uint32 retcode = 8;
}

message SetAssistAvatarCsReq {
    uint32 avatar_id = 6;
    repeated uint32 avatar_id_list = 15;
}

message SetAssistAvatarScRsp {
    uint32 avatar_id = 9;
    uint32 retcode = 10;
    repeated uint32 avatar_id_list = 15;
}

message PlayerReturnStartScNotify {
    uint32 NCHIEKEDHCE = 15;
}

message PlayerReturnSignCsReq {
    repeated uint32 NMKLEGOMEPJ = 2;
    uint32 OPEEDJIHJOP = 10;
}

message PlayerReturnSignScRsp {
    uint32 OPEEDJIHJOP = 2;
    repeated ItemList IPFLHCJIEBM = 3;
    repeated uint32 NMKLEGOMEPJ = 6;
    uint32 retcode = 14;
}

message PlayerReturnPointChangeScNotify {
    uint32 MAMHOJMFJOF = 9;
}

message PlayerReturnTakePointRewardCsReq {
    uint32 CPNIMLJNMMF = 8;
    uint32 IIFOMGOFMDL = 10;
}

message PlayerReturnTakePointRewardScRsp {
    uint32 IIFOMGOFMDL = 2;
    uint32 CPNIMLJNMMF = 8;
    ItemList CFIDBMMIJHG = 10;
    uint32 retcode = 12;
}

message PlayerReturnTakeRewardCsReq {
}

message PlayerReturnTakeRewardScRsp {
    uint32 retcode = 2;
    ItemList IPFLHCJIEBM = 11;
}

message PlayerReturnInfoQueryCsReq {
    uint32 CEHFIILMJKM = 8;
}

message AFBNEIBIJND {
    repeated uint32 CAIMHCAACFG = 1;
    uint32 world_level = 2;
    uint32 AHNFMDNEJNL = 4;
    NOBPMMNFENJ status = 5;
    uint32 MAMHOJMFJOF = 6;
    uint32 BGAFGHIPOJE = 7;
    bool is_taken_reward = 8;
    repeated uint32 NMKLEGOMEPJ = 9;
    int64 COIFHFPEGPH = 10;
    int64 finish_time = 11;
    bool FJNDPCFNFLO = 12;
    uint32 ILCFOJCDNHI = 13;
}

message PlayerReturnInfoQueryScRsp {
    uint32 GMFIDNOHGCO = 9;
    uint32 retcode = 13;
    AFBNEIBIJND PFEIDPOLOKM = 14;
}

message PlayerReturnForceFinishScNotify {
    AFBNEIBIJND PFEIDPOLOKM = 7;
}

message PlayerReturnTakeRelicCsReq {
    uint32 avatar_id = 3;
}

message PlayerReturnTakeRelicScRsp {
    ItemList item_list = 4;
    uint32 retcode = 11;
    uint32 avatar_id = 13;
}

message FinishPlotCsReq {
    uint32 CLDAJDJHOII = 7;
}

message FinishPlotScRsp {
    uint32 CLDAJDJHOII = 7;
    uint32 retcode = 14;
}

message KAOAHKAOHFI {
    PunkLordMonsterBasicInfo basic_info = 7;
    PunkLordAttackerStatus EKKJLAOKIJI = 10;
    PunkLordBattleRecordList DHLPKMIHDNM = 13;
    uint32 COJKEIFJNEK = 15;
}

message GetPunkLordMonsterDataCsReq {
}

message GetPunkLordMonsterDataScRsp {
    repeated KAOAHKAOHFI FIJNJGFABJD = 2;
    uint32 retcode = 7;
}

message StartPunkLordRaidCsReq {
    bool CLOMMFKJPMM = 4;
    uint32 uid = 7;
    uint32 monster_id = 13;
}

message StartPunkLordRaidScRsp {
    FNLGPLNCPCL scene = 1;
    repeated uint32 DMILCFHLIHP = 2;
    uint32 retcode = 3;
    int64 AGEGDMGNPDK = 7;
    KAOAHKAOHFI DPMKAMMIOLB = 8;
    bool CLOMMFKJPMM = 14;
}

message SharePunkLordMonsterCsReq {
    PunkLordShareType share_type = 2;
    uint32 uid = 5;
    uint32 monster_id = 11;
}

message SharePunkLordMonsterScRsp {
    uint32 monster_id = 1;
    uint32 retcode = 2;
    uint32 uid = 7;
    PunkLordShareType share_type = 14;
}

message SummonPunkLordMonsterCsReq {
}

message SummonPunkLordMonsterScRsp {
    uint32 retcode = 8;
    KAOAHKAOHFI DPMKAMMIOLB = 11;
}

message TakePunkLordPointRewardCsReq {
    bool MDHJKKBNMCF = 10;
    uint32 level = 11;
}

message TakePunkLordPointRewardScRsp {
    uint32 level = 3;
    ItemList reward = 6;
    bool MDHJKKBNMCF = 9;
    uint32 retcode = 11;
}

message PunkLordMonsterInfoScNotify {
    PunkLordMonsterBasicInfo basic_info = 1;
    repeated uint32 DMILCFHLIHP = 3;
    PunkLordBattleRecord DHLPKMIHDNM = 10;
    PunkLordMonsterInfoNotifyReason reason = 13;
}

message GetPunkLordDataCsReq {
}

message GetPunkLordDataScRsp {
    repeated uint32 EAHBIKFALLF = 1;
    uint32 GBJODJCOLGA = 5;
    uint32 IADCOHODGJN = 9;
    int64 BEDJDEANCOJ = 10;
    uint32 GNLMKKHAEKM = 11;
    uint32 retcode = 12;
    uint32 PPNKPNBIIEN = 13;
    uint32 BDPBDGBKDOO = 15;
}

message PunkLordRaidTimeOutScNotify {
    PunkLordMonsterBasicInfo DPMKAMMIOLB = 2;
}

message PunkLordBattleResultScNotify {
    PunkLordBattleRecord DHLPKMIHDNM = 5;
    PunkLordMonsterBasicInfo DPMKAMMIOLB = 6;
    uint32 NCACOCCJNLD = 7;
    uint32 PGOFPNLAPOE = 11;
    uint32 AHJFPNGDBDO = 13;
}

message MDJGOOCKCMJ {
    uint32 LKKJEILKPNI = 1;
    int64 create_time = 4;
    uint32 monster_id = 9;
    uint32 config_id = 10;
    bool PPBOCECKCAH = 11;
    uint32 world_level = 15;
}

message GetKilledPunkLordMonsterDataCsReq {
}

message GetKilledPunkLordMonsterDataScRsp {
    uint32 retcode = 1;
    repeated MDJGOOCKCMJ DDCEMDGEDIO = 3;
    repeated PunkLordMonsterKey OAKKCCGAEKK = 15;
}

message PunkLordMonsterKilledNotify {
    MDJGOOCKCMJ AIECOBKEIGB = 4;
}

message TakeKilledPunkLordMonsterScoreCsReq {
    PunkLordMonsterKey PKCPJJNOALN = 6;
    bool KFEJGFNONIP = 10;
}

message TakeKilledPunkLordMonsterScoreScRsp {
    uint32 score_id = 5;
    repeated PunkLordMonsterKey JEAHDCGKBBB = 6;
    uint32 retcode = 8;
    bool KFEJGFNONIP = 13;
}

message PunkLordDataChangeNotify {
    uint32 GBJODJCOLGA = 7;
    uint32 IADCOHODGJN = 11;
    uint32 BDPBDGBKDOO = 12;
}

message GetPunkLordBattleRecordCsReq {
    PunkLordMonsterKey PKCPJJNOALN = 7;
}

message GetPunkLordBattleRecordScRsp {
    uint32 retcode = 8;
    repeated PunkLordBattleRecord battle_record_list = 10;
    PunkLordMonsterKey PKCPJJNOALN = 13;
    repeated PunkLordBattleReplay OKOBGJHJJOA = 14;
}

message GetQuestDataCsReq {
}

message Quest {
    QuestStatus status = 2;
    int64 finish_time = 4;
    uint32 id = 7;
    repeated uint32 PGJNGNAJHPP = 13;
    uint32 progress = 15;
}

message GetQuestDataScRsp {
    uint32 retcode = 1;
    repeated Quest quest_list = 4;
    uint32 total_achievement_exp = 6;
}

message TakeQuestRewardCsReq {
    repeated uint32 succ_quest_id_list = 10;
}

message TakeQuestRewardScRsp {
    repeated uint32 SuccQuestIdList = 3;
    ItemList Reward = 4;
    uint32 retcode = 14;
    repeated uint32 QuestIdList = 15;
}

message TakeQuestOptionalRewardCsReq {
    uint32 quest_id = 7;
    uint32 optional_reward_id = 14;
}

message TakeQuestOptionalRewardScRsp {
    uint32 quest_id = 2;
    ItemList reward = 4;
    uint32 retcode = 8;
}

message GetQuestRecordCsReq {
}

message EPJDFBAOFDF {
    uint32 progress = 4;
    uint32 IJFIHGCKNHG = 12;
}

message GetQuestRecordScRsp {
    uint32 retcode = 3;
    repeated EPJDFBAOFDF OBEMGACMGNH = 4;
}

message QuestRecordScNotify {
    EPJDFBAOFDF FEAOCOKKGBM = 11;
}

message FinishQuestCsReq {
    uint32 quest_id = 9;
    uint32 prop_id = 11;
    uint32 group_id = 13;
}

message FinishQuestScRsp {
    uint32 retcode = 15;
}

message BatchGetQuestDataCsReq {
    repeated uint32 quest_list = 15;
}

message BatchGetQuestDataScRsp {
    uint32 retcode = 7;
    repeated Quest quest_list = 10;
}

message FNLGPLNCPCL {
    uint32 CENIFNKNFNP = 1;
    LineupInfo lineup = 6;
    uint32 world_level = 9;
    SceneInfo GHEDLCLNHIJ = 13;
}

message StartRaidCsReq {
    uint32 CENIFNKNFNP = 4;
    uint32 prop_entity_id = 6;
    uint32 world_level = 9;
    repeated uint32 avatar_list = 10;
    uint32 JGEAEGMHDOC = 15;
}

message StartRaidScRsp {
    FNLGPLNCPCL scene = 4;
    uint32 retcode = 8;
}

message LeaveRaidCsReq {
    bool JGEAEGMHDOC = 3;
    uint32 CENIFNKNFNP = 13;
}

message LeaveRaidScRsp {
    uint32 world_level = 5;
    uint32 CENIFNKNFNP = 13;
    uint32 retcode = 15;
}

message HOCHOIHKKDG {
    uint32 HFALJIHKECN = 2;
    uint32 DLPPDPBJIIM = 6;
    FOCHDFJANPC MDDOFMCJJHH = 15;
}

message RaidInfoNotify {
    uint64 COPMFAMBKDN = 7;
    uint32 world_level = 9;
    ItemList item_list = 11;
    uint32 CENIFNKNFNP = 12;
    RaidStatus status = 14;
    repeated HOCHOIHKKDG LHEILNACNOD = 15;
}

message AMDKBOHCFIA {
    uint32 CENIFNKNFNP = 1;
    uint32 max_score = 15;
}

message AKDAJAFPDEE {
    repeated uint32 KNIBANIILDE = 4;
    uint32 world_level = 10;
    uint32 CENIFNKNFNP = 11;
}

message GetRaidInfoCsReq {
}

message GetRaidInfoScRsp {
    repeated AMDKBOHCFIA ChallengeRaidList = 4;
    repeated AKDAJAFPDEE FinishedRaidInfoList = 6;
    repeated uint32 ChallengeTakenRewardIdList = 8;
    uint32 retcode = 9;
}

message GetChallengeRaidInfoCsReq {
}

message GetChallengeRaidInfoScRsp {
    uint32 retcode = 2;
    repeated AMDKBOHCFIA MJGFFCLJGFN = 6;
    repeated uint32 taken_reward_id_list = 13;
}

message TakeChallengeRaidRewardCsReq {
    uint32 OEHKJOAFPBA = 15;
}

message TakeChallengeRaidRewardScRsp {
    uint32 OEHKJOAFPBA = 8;
    ItemList reward = 12;
    uint32 retcode = 15;
}

message ChallengeRaidNotify {
    AMDKBOHCFIA EHMILJFIJKH = 4;
}

message SetClientRaidTargetCountCsReq {
    uint32 progress = 3;
    uint32 DMMPPKMJPMM = 12;
}

message SetClientRaidTargetCountScRsp {
    uint32 progress = 4;
    uint32 DMMPPKMJPMM = 6;
    uint32 retcode = 14;
}

message GetSaveRaidCsReq {
    uint32 world_level = 1;
    uint32 CENIFNKNFNP = 12;
}

message GetSaveRaidScRsp {
    uint32 world_level = 1;
    bool JGEAEGMHDOC = 4;
    repeated HOCHOIHKKDG LHEILNACNOD = 5;
    uint32 retcode = 12;
    uint32 CENIFNKNFNP = 13;
}

message JKDINNEDBAO {
    repeated HOCHOIHKKDG LHEILNACNOD = 2;
    uint32 CENIFNKNFNP = 4;
    uint32 world_level = 11;
}

message GetAllSaveRaidCsReq {
}

message GetAllSaveRaidScRsp {
    repeated JKDINNEDBAO NPJHICINONA = 2;
    uint32 retcode = 10;
}

message DelSaveRaidScNotify {
    uint32 world_level = 3;
    uint32 CENIFNKNFNP = 10;
}

message RaidKickByServerScNotify {
    LineupInfo lineup = 1;
    SceneInfo scene = 2;
    uint32 world_level = 6;
    EGKFNDOOPNN reason = 10;
    uint32 CENIFNKNFNP = 12;
}

message ACONLFJEJOK {
    uint32 JJDMKHBKPLM = 12;
}

message RaidCollectionDataCsReq {
}

message RaidCollectionDataScRsp {
    repeated ACONLFJEJOK challenge_list = 3;
    uint32 retcode = 7;
}

message RaidCollectionDataScNotify {
    ACONLFJEJOK collection_info = 14;
}

message RaidCollectionEnterNextRaidCsReq {
    uint32 world_level = 5;
    repeated uint32 avatar_list = 7;
    uint32 JGEAEGMHDOC = 8;
    uint32 CENIFNKNFNP = 9;
}

message RaidCollectionEnterNextRaidScRsp {
    FNLGPLNCPCL scene = 3;
    uint32 retcode = 8;
}

message GetRechargeGiftInfoCsReq {
}

message OIOPBDBJHIE {
    IPKPKDCEBKI status = 11;
    uint32 index = 12;
}

message FPNJLDDAMGH {
    uint32 gift_type = 10;
    int64 COIFHFPEGPH = 13;
    repeated OIOPBDBJHIE MIGFMPJBELG = 14;
    int64 end_time = 15;
}

message GetRechargeGiftInfoScRsp {
    repeated FPNJLDDAMGH MMGLCJMGGIH = 11;
    uint32 retcode = 13;
}

message TakeRechargeGiftRewardCsReq {
    uint32 gift_type = 14;
}

message TakeRechargeGiftRewardScRsp {
    FPNJLDDAMGH HNKGCNDOCAK = 1;
    ItemList reward = 3;
    uint32 retcode = 7;
}

message GetRechargeBenefitInfoCsReq {
}

message JMHOJKKGNIF {
    uint32 id = 4;
    uint32 progress = 6;
    uint32 panel_id = 8;
    repeated uint32 JCLOBIAPKEG = 14;
}

message GetRechargeBenefitInfoScRsp {
    repeated JMHOJKKGNIF EHNDMLFFMHI = 14;
    uint32 retcode = 15;
}

message SyncRechargeBenefitInfoScNotify {
    JMHOJKKGNIF AMEFPPFCFJI = 9;
}

message TakeRechargeBenefitRewardCsReq {
    uint32 id = 7;
}

message TakeRechargeBenefitRewardScRsp {
    ItemList reward = 10;
    uint32 retcode = 13;
    JMHOJKKGNIF AMEFPPFCFJI = 14;
}

message GetChallengeRecommendLineupListCsReq {
    uint32 challenge_id = 10;
}

message AHKGGGGIBIF {
    uint32 CEIFDIKPDAM = 3;
    repeated uint32 second_lineup = 5;
    uint32 DCHOLKBFBGI = 7;
    repeated uint32 first_lineup = 13;
}

message GetChallengeRecommendLineupListScRsp {
    repeated AHKGGGGIBIF JAEJJMJPMNC = 4;
    uint32 challenge_id = 9;
    uint32 retcode = 10;
}

message ONPOFIANIJJ {
    uint32 MDMGKHLHIIN = 2;
    uint32 LGIIAHIDLMG = 13;
}

message PPGMPBHKDCN {
    repeated ONPOFIANIJJ equipment_list = 10;
}

message AHPNKBOCEDF {
    uint32 FIKKGBIBCJK = 5;
    uint32 PDMGJKODFOP = 13;
    uint32 EHCEEPMBDDI = 14;
}

message GDGOCBPAPPB {
    repeated AHPNKBOCEDF CDHDMHLOCPO = 4;
}

message CAGFLKCLGCH {
    repeated uint32 DBGNCIOMIEP = 7;
}

message GPCPGBHOFCF {
    repeated CAGFLKCLGCH JAEJJMJPMNC = 15;
}

message GetBigDataRecommendCsReq {
    BigDataRecommendType IANNEEIJAKH = 4;
    uint32 EIGPMIBCIKG = 9;
}

message GetBigDataRecommendScRsp {
    BigDataRecommendType IANNEEIJAKH = 1;
    bool OGEGKOKGPPJ = 8;
    uint32 retcode = 11;
    uint32 EIGPMIBCIKG = 13;
    oneof BLNGPIGBDEH {
//        MKJALMKMPGL PFOPJPJKKLK = 13;
        PIIIPHEFDJO DKLBNBDPMPO = 14;
    }
}

message KNNFPFKCABE {
    repeated uint32 avatar_id_list = 5;
    uint32 CFIPHFHOJFP = 12;
    uint32 DHJHIBCDNBA = 14;
}

message PIIIPHEFDJO {
    repeated KNNFPFKCABE APFECOOPNKN = 12;
}

message NKGHHAFANHN {
    uint32 IIKGCJFJADF = 2;
    uint32 FLEEFJLNLCH = 7;
    uint32 KICOBNPCKAE = 15;
}

message GHLEDKFIIJH {
    uint32 KICOBNPCKAE = 9;
    uint32 JICDFLIMHHD = 15;
}

message OFNGPLJKLOJ {
    repeated GHLEDKFIIJH FBBAJBINGLB = 1;
    repeated GHLEDKFIIJH LGEJJAJPEDK = 3;
    repeated NKGHHAFANHN PDBHNHPCNNJ = 6;
    uint32 avatar_id = 7;
    repeated GHLEDKFIIJH KKCMFGMHIMO = 8;
    repeated NKGHHAFANHN NOBONCCPENG = 12;
    repeated GHLEDKFIIJH MPMFAHLKEOB = 15;
}

message MKJALMKMPGL {
    repeated OFNGPLJKLOJ BFDMGINBOIB = 14;
}

message GetBigDataAllRecommendCsReq {
    BigDataRecommendType IANNEEIJAKH = 2;
}

message GetBigDataAllRecommendScRsp {
    BigDataRecommendType IANNEEIJAKH = 2;
    uint32 retcode = 15;
    oneof BLNGPIGBDEH {
        MKJALMKMPGL PFOPJPJKKLK = 13;
        PIIIPHEFDJO DKLBNBDPMPO = 14;
    }
}

message EJBIOKMOLAF {
    repeated uint32 FFBEEBKOGPN = 1;
}

message KNCHLMGILJC {
    uint32 panel_id = 5;
    uint32 NOPDKLDEKKF = 9;
    map<uint32, EJBIOKMOLAF> MBGIJNJFHGE = 13;
}

message GetAllRedDotDataCsReq {
}

message GetAllRedDotDataScRsp {
    uint32 retcode = 2;
    repeated KNCHLMGILJC IAGIBDAICHI = 11;
}

message UpdateRedDotDataCsReq {
    uint32 NOPDKLDEKKF = 2;
    repeated uint32 switch_list = 3;
    uint32 panel_id = 4;
    OJLJHFNFDKP HONEMGCFBGI = 5;
    uint32 group_id = 9;
}

message UpdateRedDotDataScRsp {
    uint32 retcode = 2;
    uint32 NOPDKLDEKKF = 4;
    uint32 panel_id = 9;
    uint32 group_id = 12;
}

message GetSingleRedDotParamGroupCsReq {
    uint32 group_id = 3;
    uint32 NOPDKLDEKKF = 6;
    uint32 panel_id = 7;
}

message GetSingleRedDotParamGroupScRsp {
    uint32 NOPDKLDEKKF = 3;
    uint32 panel_id = 5;
    EJBIOKMOLAF CHPJJKLGOKM = 6;
    uint32 group_id = 9;
    uint32 retcode = 15;
}

message RelicSmartWearPlan {
    uint32 avatar_id = 1;
    repeated uint32 outside_relic_list = 2;
    uint32 unique_id = 3;
    repeated uint32 inside_relic_list = 7;
}

message RelicSmartWearGetPlanCsReq {
    uint32 avatar_id = 7;
}

message RelicSmartWearGetPlanScRsp {
    uint32 retcode = 2;
    uint32 avatar_id = 3;
    repeated RelicSmartWearPlan relic_plan_list = 10;
}

message RelicSmartWearAddPlanCsReq {
    RelicSmartWearPlan relic_plan = 4;
}

message RelicSmartWearAddPlanScRsp {
    uint32 retcode = 2;
    RelicSmartWearPlan relic_plan = 3;
}

message RelicSmartWearUpdatePlanCsReq {
    RelicSmartWearPlan relic_plan = 15;
}

message RelicSmartWearUpdatePlanScRsp {
    uint32 retcode = 3;
    RelicSmartWearPlan relic_plan = 10;
}

message RelicSmartWearDeletePlanCsReq {
    uint32 unique_id = 4;
}

message RelicSmartWearDeletePlanScRsp {
    uint32 unique_id = 2;
    uint32 retcode = 13;
}

message RelicSmartWearPinRelicCsReq {
    bool BAOONJDCFKD = 9;
    uint32 avatar_id = 13;
    uint32 relic_type = 15;
}

message RelicSmartWearPinRelicScRsp {
    uint32 retcode = 1;
    uint32 relic_type = 2;
    bool BAOONJDCFKD = 13;
    uint32 avatar_id = 15;
}

message RelicSmartWearGetPinRelicCsReq {
    uint32 avatar_id = 9;
}

message RelicSmartWearGetPinRelicScRsp {
    uint32 retcode = 8;
    repeated uint32 pin_relic_id_list = 9;
    uint32 avatar_id = 10;
}

message RelicSmartWearUpdatePinRelicScNotify {
    uint32 avatar_id = 6;
    repeated uint32 pin_relic_id_list = 7;
}

message GetReplayTokenCsReq {
    ReplayType replay_type = 1;
    uint32 stage_id = 2;
    uint32 AFEHLMFIBMD = 3;
    string KIHBIGPFKKN = 6;
    string BBEMIDHMNLM = 13;
    uint32 CMPBKBBKAOA = 14;
}

message GetReplayTokenScRsp {
    string token = 4;
    uint32 retcode = 5;
    ReplayType replay_type = 6;
    uint32 stage_id = 11;
    string KIHBIGPFKKN = 12;
}

message GetPlayerReplayInfoCsReq {
}

message GetPlayerReplayInfoScRsp {
    uint32 retcode = 6;
    repeated ReplayInfo KGCFEALANKO = 8;
}

message GetRndOptionCsReq {
    uint32 id = 14;
}

message GetRndOptionScRsp {
    repeated uint32 EEGEGGBDHDG = 7;
    uint32 retcode = 14;
}

message DailyFirstMeetPamCsReq {
}

message DailyFirstMeetPamScRsp {
    uint32 retcode = 14;
}

message MKEELPFDCLM {
    uint32 level = 5;
    uint32 buff_id = 10;
}

message OOBCEJFEHMK {
    repeated MKEELPFDCLM buff_list = 2;
}

message GLADGJAKPLC {
    uint32 site_id = 5;
    uint32 room_id = 7;
    ILNPBECOEPL HNLFGDMCJDF = 10;
    ILNPBECOEPL BEEEBOIOJIF = 12;
    uint32 IMIMGFAAGHM = 13;
}

message IJMGMKCHHEF {
    repeated GLADGJAKPLC JDCLIAMKDHF = 2;
    uint32 DBAHFEFGLMD = 6;
    uint32 OLOKKNLGGME = 9;
    uint32 map_id = 10;
    uint32 CIKIBKAABIM = 11;
}

message BKAAEBJKJKH {
    uint32 map_id = 2;
    uint32 DBAHFEFGLMD = 4;
    bool FJOILOHPHLC = 6;
    JDAKAMIGKHF NOOKGAJMFJI = 7;
    uint32 GMPIIAEGGEK = 9;
    EGPIMDADFDI MKEGBHJLJNH = 13;
}

message OMOGAIEOFAH {
    uint32 DJFCKFEMGOJ = 1;
    uint32 CMOGBLHAFHN = 2;
    uint32 BHEIDPPFCKA = 3;
    bool EHPMCGOELGB = 4;
    uint32 EKFLPNLAPDF = 6;
    repeated MKEELPFDCLM maze_buff_list = 7;
    NNIOHHMJGHG HHMABJDIMGM = 8;
    repeated uint32 PDIHILCLENM = 9;
    ItemCostData FPOELPFCNBI = 10;
    uint32 IGCHBPAKBCB = 11;
    uint32 CKKEKMJMABC = 12;
    uint32 PDAPEHEAMBM = 13;
    uint32 IPODNBLJPOL = 14;
}

message KFEJFBBGIAD {
    MKEELPFDCLM NOENHHILNAH = 3;
    repeated MKEELPFDCLM KMPMDLDHABN = 13;
}

message IGJENCIKLOF {
    repeated MKEELPFDCLM CLPLEFHHAFB = 3;
    repeated MKEELPFDCLM IHGMPJNNMKI = 10;
    uint32 BILBOHBDBPN = 14;
}

message GDIILLJBDCF {
    ItemCostData cost_data = 3;
    fixed32 FAMCMAGFKCL = 10;
    uint32 buff_id = 13;
}

message BHJPKLCMLEJ {
    repeated GDIILLJBDCF DAKMMPKBMKO = 2;
}

message PAIMOGCIGIJ {
    map<uint32, uint32> GMAFEJEJBHO = 3;
    uint32 BLFAANHJPAD = 4;
    uint32 cur_times = 9;
    uint32 DEIDCHAMDBA = 10;
    uint32 max_times = 14;
}

message OLFPCKAGKAK {
    repeated PAIMOGCIGIJ CKGFONMAEKO = 10;
}

message BFLJDBHBMNP {
    OLFPCKAGKAK game_miracle_info = 8;
    repeated uint32 JACIGHHGCGB = 10;
}

message KEIONFFFLCO {
    repeated uint32 CMAGGNFDKAG = 6;
}

message FLECFLLDNFP {
    repeated uint32 IMOICEEBDCO = 5;
}

message NGFFCEICACD {
    uint32 EBNPOCIDPKE = 15;
    oneof CCPFABANCNN {
        ItemList JDIJKEGCIBP = 3;
        OOBCEJFEHMK CNDGJJLJDOF = 5;
    }
}

message EJJGLGPEDEE {
    ItemCostData rogue_revive_cost = 12;
}

message JHEELOAGMIG {
    uint32 NIDFLBKPOEB = 5;
}

message PBEKDHCLBFB {
    uint32 IPODNBLJPOL = 3;
    uint32 HGBLOMELBLE = 7;
    uint32 JKJMCFAGOCF = 12;
    uint32 GFDBGCOLKCP = 15;
}

message ILNFEFOBNEG {
    DKNMKFBOBJF OMCBCGCHLGN = 1069;
    LIIKCGNCBBF rogue_get_info = 1649;
}

message LIIKCGNCBBF {
    HGHCOGEPIDM rogue_score_reward_info = 4;
    MMCHOPHFMAH IBLEMBNCGPM = 7;
    BFKMDFGCNCD FEJGMNNFFLG = 8;
    ICILDHNFJFG rogue_aeon_info = 12;
    KICDAHAPLCH rogue_virtual_item_info = 13;
}

message DKNMKFBOBJF {
    GABCAPJGHFG rogue_aeon_info = 1;
    EFJDMHOAKOO rogue_lineup_info = 3;
    IJMGMKCHHEF rogue_map = 4;
    OJCEALJIFND CMBHKLPPPAD = 5;
    OMOCHGKHNIK game_miracle_info = 6;
    RogueVirtualItem virtual_item_info = 9;
    bool GJBOLJKMGGE = 10;
    CFMAPIMJDFC rogue_buff_info = 11;
    EGPIMDADFDI status = 13;
    RogueCommonPendingAction pending_action = 15;
}

message BFKMDFGCNCD {
    int64 end_time = 3;
    uint32 AHANJLEHCGA = 9;
    int64 begin_time = 15;
}

message MMCHOPHFMAH {
    repeated BKAAEBJKJKH JMMNAIPOEFO = 5;
}

message ICILDHNFJFG {
    uint32 ALKILFNBFNM = 2;
    uint32 HLBFBFDLACA = 3;
    repeated uint32 aeon_id_list = 11;
    bool AOELKJEEGKG = 15;
}

message KICDAHAPLCH {
    uint32 IFEHBIMEMEC = 4;
    uint32 BILEOOPHJEF = 9;
}

message CFMAPIMJDFC {
    repeated MKEELPFDCLM maze_buff_list = 3;
}

message OMOCHGKHNIK {
    OLFPCKAGKAK game_miracle_info = 14;
}

message EFJDMHOAKOO {
    repeated uint32 base_avatar_id_list = 3;
    EJJGLGPEDEE revive_info = 8;
    repeated uint32 MANKKFPBFCB = 10;
    repeated uint32 LGHCAHBBCAM = 13;
}

message HDJFLBMLLDP {
    FLECFLLDNFP GKFLNMOJNCP = 4;
}

message GABCAPJGHFG {
    uint32 HLBFBFDLACA = 8;
    bool AOELKJEEGKG = 9;
    uint32 game_aeon_id = 12;
}

message OJCEALJIFND {
    repeated uint32 GJANFNHLOGN = 4;
}

message NIKKCCAKNNP {
    uint32 ALKILFNBFNM = 2;
    repeated uint32 aeon_id_list = 3;
    bool AOELKJEEGKG = 7;
    uint32 game_aeon_id = 10;
    uint32 HLBFBFDLACA = 15;
}

message MNCDPEPCFGC {
    uint32 score_id = 5;
    uint32 KOBFCOMHGCE = 6;
    uint32 FJJDFPKGOPC = 11;
}

message AOJOFBBNEPA {
    repeated MNCDPEPCFGC DCMHGOKCINF = 5;
    fixed32 DPFBDJMNCEO = 6;
    uint32 NPJEECEDPOK = 14;
}

message FGKCAMBIAHB {
    uint32 id = 8;
    uint32 slot = 11;
    AvatarType avatar_type = 13;
    uint32 level = 14;
}

message GKJFBBHHLAC {
    repeated uint32 CKGFONMAEKO = 1;
    repeated FGKCAMBIAHB avatar_list = 10;
    repeated MKEELPFDCLM buff_list = 14;
}

message RogueFinishInfo {
    uint32 score_id = 1;
    GKJFBBHHLAC record_info = 2;
    ItemList HLOBJOOEBOD = 7;
    HGHCOGEPIDM AGPPEPMGFMF = 8;
    uint32 DEDLGFJAEAM = 9;
    uint32 IFEHBIMEMEC = 10;
    uint32 BIMDLGHKAOI = 11;
    uint32 MNBIEBOLCCN = 13;
    bool is_win = 15;
    uint32 DBAHFEFGLMD = 1063;
    uint32 LMMEANJPEND = 1445;
}

message HGHCOGEPIDM {
    bool PJHLOCDBAEH = 2;
    uint32 HHJPBLEKAPN = 3;
    int64 CIGBOGHAFOF = 4;
    bool JOMNPADAGGK = 8;
    uint32 HDLADIBHBHH = 12;
    int64 HOEPOJNNFCI = 14;
    repeated uint32 CILNJIDIDHL = 15;
}

message EACOFHBFMLB {
    uint32 exp = 3;
    uint32 level = 6;
    uint32 JGMIPMDPPIJ = 11;
    uint32 aeon_id = 12;
}

message RogueDialogueEventParam {
    fixed32 Ratio = 6;
    uint32 DialogueEventId = 8;
    int32 IntValue = 9;
    bool IsValid = 12;
    uint32 ArgId = 14;
}

message LANLCCOBDNE {
    uint32 game_mode_type = 7;
    repeated RogueDialogueEventParam dialogue_event_param_list = 8;
    repeated uint32 EOHEEIGOBKD = 11;
    uint32 talk_dialogue_id = 12;
    uint32 aeon_talk_id = 14;
    uint32 event_unique_id = 15;
}

message GGHFIJKPFLN {
    repeated uint32 JJEALOEMMKK = 5;
    ItemList JDIJKEGCIBP = 13;
    FFNEDMEGPJD BPLMPMEFEAM = 15;
}

message GetRogueInfoCsReq {
}

message GetRogueInfoScRsp {
    ILNFEFOBNEG rogue_game_info = 3;
    uint32 retcode = 9;
}

message StartRogueCsReq {
    repeated uint32 base_avatar_id_list = 6;
    repeated uint32 LGHCAHBBCAM = 8;
    repeated uint32 HJGNDHLMMIB = 11;
    uint32 aeon_id = 12;
    uint32 DBAHFEFGLMD = 15;
}

message StartRogueScRsp {
    ILNFEFOBNEG rogue_game_info = 2;
    uint32 retcode = 7;
    SceneInfo scene = 8;
    RogueMapRotateInfo KEILFHHNLIH = 10;
    LineupInfo lineup = 13;
}

message EnterRogueCsReq {
    uint32 DBAHFEFGLMD = 10;
}

message EnterRogueScRsp {
    RogueMapRotateInfo KEILFHHNLIH = 3;
    SceneInfo scene = 8;
    LineupInfo lineup = 9;
    uint32 retcode = 10;
    ILNFEFOBNEG rogue_game_info = 15;
}

message LeaveRogueCsReq {
}

message LeaveRogueScRsp {
    LineupInfo lineup = 3;
    RogueMapRotateInfo KEILFHHNLIH = 4;
    ILNFEFOBNEG rogue_game_info = 5;
    SceneInfo scene = 7;
    uint32 retcode = 14;
}

message SyncRogueFinishScNotify {
    RogueFinishInfo rogue_finish_info = 1;
}

message PickRogueAvatarCsReq {
    repeated uint32 base_avatar_id_list = 4;
    repeated uint32 LGHCAHBBCAM = 7;
    uint32 prop_entity_id = 12;
}

message PickRogueAvatarScRsp {
    uint32 retcode = 5;
    repeated uint32 base_avatar_id_list = 6;
    repeated uint32 LGHCAHBBCAM = 10;
}

message ReviveRogueAvatarCsReq {
    repeated uint32 LGHCAHBBCAM = 3;
    uint32 interacted_prop_entity_id = 5;
    repeated uint32 base_avatar_id_list = 7;
}

message ReviveRogueAvatarScRsp {
    repeated uint32 base_avatar_id_list = 1;
    repeated uint32 LGHCAHBBCAM = 6;
    uint32 retcode = 7;
    EJJGLGPEDEE revive_info = 12;
}

message SyncRogueReviveInfoScNotify {
    EJJGLGPEDEE revive_info = 12;
}

message GetRogueBuffEnhanceInfoCsReq {
}

message GetRogueBuffEnhanceInfoScRsp {
    BHJPKLCMLEJ FHLOMGDANJM = 1;
    uint32 retcode = 2;
}

message EnhanceRogueBuffCsReq {
    uint32 OJEBLMKKMGO = 10;
}

message EnhanceRogueBuffScRsp {
    bool FGEFCEFKHMH = 2;
    MKEELPFDCLM ANAGCODDMOM = 6;
    uint32 retcode = 8;
}

message QuitRogueCsReq {
    uint32 DBAHFEFGLMD = 2;
}

message QuitRogueScRsp {
    ILNFEFOBNEG rogue_game_info = 1;
    uint32 retcode = 15;
}

message SyncRogueExploreWinScNotify {
    bool GJBOLJKMGGE = 15;
}

message SyncRogueSeasonFinishScNotify {
    HGHCOGEPIDM rogue_score_reward_info = 3;
    SceneInfo scene = 4;
    bool NIOLDFFFELN = 8;
    RogueFinishInfo rogue_finish_info = 11;
    LineupInfo lineup = 15;
}

message EnterRogueMapRoomCsReq {
    uint32 site_id = 4;
    uint32 room_id = 5;
}

message EnterRogueMapRoomScRsp {
    uint32 retcode = 3;
    LineupInfo lineup = 5;
    uint32 OLOKKNLGGME = 10;
    RogueMapRotateInfo KEILFHHNLIH = 11;
    SceneInfo scene = 12;
}

message SyncRogueMapRoomScNotify {
    uint32 map_id = 2;
    GLADGJAKPLC KPEKCLBEPGB = 10;
}

message OpenRogueChestCsReq {
    uint32 interacted_prop_entity_id = 1;
    bool EIDDMGHLPBP = 5;
}

message OpenRogueChestScRsp {
    MBKOCMMICPG KJCHGEHDLNO = 6;
    ItemList drop_data = 7;
    ItemList reward = 12;
    uint32 retcode = 14;
}

message ExchangeRogueRewardKeyCsReq {
    uint32 count = 14;
}

message ExchangeRogueRewardKeyScRsp {
    uint32 Count = 6;
    uint32 retcode = 7;
}

message SyncRogueAreaUnlockScNotify {
    uint32 DBAHFEFGLMD = 8;
}

message SyncRogueGetItemScNotify {
    ItemList IODFGFOMGOD = 14;
    ItemList ACFCJIOMJNF = 15;
}

message TakeRogueAeonLevelRewardCsReq {
    uint32 aeon_id = 6;
    uint32 level = 11;
}

message TakeRogueAeonLevelRewardScRsp {
    uint32 retcode = 1;
    ItemList reward = 13;
    uint32 aeon_id = 14;
    uint32 level = 15;
}

message SyncRogueAeonLevelUpRewardScNotify {
    uint32 level = 4;
    uint32 aeon_id = 8;
    ItemList reward = 11;
}

message GetRogueScoreRewardInfoCsReq {
}

message GetRogueScoreRewardInfoScRsp {
    HGHCOGEPIDM HNDLHICDNPC = 6;
    uint32 retcode = 11;
}

message TakeRogueScoreRewardCsReq {
    repeated uint32 LMMFPCOKHEE = 8;
    uint32 HHJPBLEKAPN = 9;
}

message TakeRogueScoreRewardScRsp {
    uint32 HHJPBLEKAPN = 2;
    HGHCOGEPIDM rogue_score_reward_info = 8;
    ItemList reward = 13;
    uint32 retcode = 15;
}

message GetRogueInitialScoreCsReq {
}

message GetRogueInitialScoreScRsp {
    HGHCOGEPIDM rogue_score_reward_info = 1;
    uint32 retcode = 3;
}

message GetRogueAeonInfoCsReq {
}

message GetRogueAeonInfoScRsp {
    repeated EACOFHBFMLB BELOFMFHFDK = 4;
    uint32 retcode = 10;
}

message FinishAeonDialogueGroupCsReq {
    uint32 aeon_id = 1;
}

message FinishAeonDialogueGroupScRsp {
    ItemList reward = 6;
    EACOFHBFMLB rogue_aeon_info = 7;
    uint32 retcode = 10;
}

message GetRogueTalentInfoCsReq {
}

message GetRogueTalentInfoScRsp {
    uint32 retcode = 9;
    IMJMGEENCEH talent_info_list = 11;
}

message EnableRogueTalentCsReq {
    uint32 talent_id = 4;
}

message EnableRogueTalentScRsp {
    IMJMGEENCEH talent_info_list = 9;
    uint32 retcode = 10;
}

message SyncRogueVirtualItemInfoScNotify {
    PBEKDHCLBFB rogue_virtual_item_info = 11;
}

message SyncRogueStatusScNotify {
    bool JIENHHAHFGI = 1;
    EGPIMDADFDI status = 5;
}

message SyncRogueRewardInfoScNotify {
    HGHCOGEPIDM rogue_score_reward_info = 12;
}

message SyncRoguePickAvatarInfoScNotify {
    repeated uint32 LGHCAHBBCAM = 7;
    repeated uint32 base_avatar_id_list = 12;
}

message SyncRogueAeonScNotify {
    NIKKCCAKNNP GCJOGFLGBBH = 6;
}

message LLPNBNEJKII {
    SceneInfo scene = 2;
    LineupInfo lineup = 3;
    RogueMapRotateInfo KEILFHHNLIH = 7;
}

message RogueArcadeStartCsReq {
    uint32 room_id = 2;
    repeated uint32 base_avatar_id_list = 5;
}

message RogueArcadeStartScRsp {
    uint32 retcode = 5;
    uint32 room_id = 13;
    LLPNBNEJKII LCOCLENJJAI = 14;
}

message RogueArcadeLeaveCsReq {
}

message RogueArcadeLeaveScRsp {
    uint32 retcode = 6;
    LLPNBNEJKII LCOCLENJJAI = 8;
}

message RogueArcadeRestartCsReq {
}

message RogueArcadeRestartScRsp {
    uint32 retcode = 3;
    LLPNBNEJKII LCOCLENJJAI = 15;
}

message RogueArcadeGetInfoCsReq {
}

message RogueArcadeGetInfoScRsp {
    uint32 room_id = 4;
    uint32 retcode = 9;
}

message FFAMNKOAIHF {
    uint32 buff_id = 6;
    uint32 MEIPGEMGACJ = 15;
}

message GCKBLHADLGN {
    repeated FFAMNKOAIHF buff_list = 11;
}

message ELHEAGHNNDM {
    NNIOHHMJGHG HHMABJDIMGM = 1;
    uint32 CKKEKMJMABC = 2;
    ItemCostData FPOELPFCNBI = 3;
    uint32 EKFLPNLAPDF = 4;
    repeated uint32 CPIAAHJFIGL = 6;
    uint32 IGCHBPAKBCB = 7;
    repeated uint32 PDIHILCLENM = 8;
    repeated FFAMNKOAIHF KKHDLJFOHKC = 9;
    bool EHPMCGOELGB = 10;
    uint32 BHEIDPPFCKA = 12;
    uint32 DJFCKFEMGOJ = 13;
    uint32 CMOGBLHAFHN = 14;
    uint32 PDAPEHEAMBM = 15;
}

message HKHFBELMDCG {
    uint32 DHMNNEMGFBL = 14;
}

message HCAJJEFEIJD {
}

message MMNDAJFIJOJ {
}

message DJONNOPDJHH {
    ELHEAGHNNDM NLNBNGIJAFI = 1;
}

message KGLOJONKMKP {
    ItemCostData cost_data = 7;
    uint32 buff_id = 12;
}

message NGPIMHHELMM {
    repeated KGLOJONKMKP DAKMMPKBMKO = 12;
}

message INEMPCAKNNC {
    repeated FFAMNKOAIHF IHGMPJNNMKI = 2;
    repeated FFAMNKOAIHF CLPLEFHHAFB = 10;
    uint32 BILBOHBDBPN = 13;
}

message LEFCOMGMPCL {
    repeated FFAMNKOAIHF IHGMPJNNMKI = 1;
    uint32 BILBOHBDBPN = 15;
}

message PBMAKLNJEKO {
    uint32 LJEJKCCBCHA = 9;
}

message FKDBIHNPCHE {
}

message IPGKAGFFBHF {
    repeated FFAMNKOAIHF DLFMGKPGMHL = 11;
    uint32 BILBOHBDBPN = 12;
}

message OKEFIDDNLKG {
    uint32 DHMNNEMGFBL = 7;
}

message DLHPDALGDEH {
}

message KBPMFKKNBJH {
    repeated FFAMNKOAIHF KKHDLJFOHKC = 2;
    uint32 BILBOHBDBPN = 5;
}

message BFBFMLBHGOH {
    uint32 DHMNNEMGFBL = 6;
}

message OOPDMMNNKGI {
}

message ChessRogueBuffInfo {
    GCKBLHADLGN LCHKKHNGBGJ = 3;
}

message GJOIBMFANHL {
    map<uint32, uint32> GMAFEJEJBHO = 4;
    uint32 BLFAANHJPAD = 10;
    uint32 cur_times = 12;
    uint32 DEIDCHAMDBA = 14;
}

message LAJBHGHNBAC {
    uint32 BEMCEEDABFD = 5;
    GJOIBMFANHL JALAMOPLDHO = 8;
    bool GANHKLNPAPI = 10;
}

message JPAJNJBEBFB {
    GJOIBMFANHL JIBDGCFCDIO = 8;
}

message GLIAIPCABIM {
    uint32 DEIDCHAMDBA = 9;
}

message IBIBPOOPDEN {
    uint32 FKPIHAAHHBI = 1;
    uint32 LGJFNAIAGLD = 5;
    GJOIBMFANHL JIBDGCFCDIO = 14;
}

message MAAAAGPJJFE {
    GJOIBMFANHL JIBDGCFCDIO = 3;
}

message PBALOEJCGFN {
    uint32 BEMCEEDABFD = 12;
    GJOIBMFANHL JALAMOPLDHO = 15;
}

message HBLNHGANBAB {
    GJOIBMFANHL JIBDGCFCDIO = 11;
}

message AJPFPHKKLPG {
    repeated GJOIBMFANHL CKGFONMAEKO = 2;
}

message EBHGHGIIGOM {
    uint32 BMFCBCMCLAF = 1;
    repeated uint32 KOMJMFIKBAM = 3;
    uint32 BILBOHBDBPN = 4;
    uint32 OOOECPAACCK = 6;
    repeated uint32 JACIGHHGCGB = 12;
    bool APIKLEGGDHM = 13;
}

message MPPHHNAEEDK {
    uint32 CGHLHFNLADN = 1;
}

message CFFOCCHBAMH {
}

message JFPFDJPPOAG {
}

message HONKBMJPJAA {
    EBHGHGIIGOM CJENJIFEIDI = 8;
}

message ANMCAIMELCA {
    repeated uint32 CMAGGNFDKAG = 1;
}

message GABBEHOIPJC {
    repeated uint32 DCJEGGJPCDF = 1;
    uint32 BILBOHBDBPN = 12;
}

message NALELIGHDAA {
    uint32 ABMAMCFPCCI = 1;
}

message PAOCONGELJK {
}

message MLKICCAELKE {
    repeated uint32 ANBPNIHMKAH = 3;
    uint32 BILBOHBDBPN = 6;
}

message PKODMMPHIBC {
    uint32 JIBHLJNEICM = 12;
}

message BLFJBKBHJIL {
}

message EAKECFAPPKD {
    repeated uint32 FIKENBEONDJ = 3;
    uint32 BILBOHBDBPN = 14;
}

message NHCKHPLKLIO {
    uint32 IBEMOJGALLK = 6;
}

message OMJFMBJMFMC {
}

message ELDAFCNMFBF {
    repeated uint32 MDPDADOOOBN = 2;
    uint32 BILBOHBDBPN = 9;
}

message LHJPIKEKPGH {
    uint32 GAKJOLGDBBD = 11;
}

message MOIKNHHCABH {
}

message LCAGIOOIIDN {
    repeated uint32 JLHFOJODOKG = 7;
    uint32 BILBOHBDBPN = 9;
}

message IMCBIIGOKPM {
    uint32 CGHLHFNLADN = 10;
}

message FHIKPLAIOEI {
}

message OFPEKNMFMAB {
    uint32 BILBOHBDBPN = 3;
    repeated uint32 JLHFOJODOKG = 7;
}

message LKMKHACMAPC {
    uint32 CGHLHFNLADN = 2;
}

message NOCOCFHOAJC {
}

message IMLBIBJKPDB {
    uint32 EIDNIGDDOHP = 8;
}

message JCAHMIOOLDB {
}

message ChessRogueMiracleInfo {
    AJPFPHKKLPG JLNILIJOMEM = 10;
}

message DLCJMOHOBDH {
    repeated uint32 IMOICEEBDCO = 13;
}

message RogueVirtualItem {
    uint32 MNKENIAMHDD = 5;
    uint32 DAFALAOAOOI = 6;
    uint32 BPJOAPFAFKK = 7;
    uint32 AMNKMBMHKDF = 14;
}

message KILDAMJJLMF {
    uint32 Num = 5;
    uint32 FGMGPLJCKPC = 15;
}

message MDGJIKLJDDE {
    uint32 avatar_id = 7;
    AvatarType avatar_type = 15;
}

message RogueSyncContextBoardEvent {
    uint32 ModifierEffectType = 1;
    uint32 BoardEventId = 12;
}

message CFELLCPMONH {
    ItemList item_list = 11;
}

message OIAOLBGOAAG {
    CFELLCPMONH HHPHLEGCLDM = 4;
    RogueSyncContextBoardEvent NOAEDNNIBAF = 15;
}

message AHCCDBFMNDI {
}

message AOKIJGCOAPD {
    int32 count = 10;
}

message CIHFCLEAKIJ {
    uint32 DEIDCHAMDBA = 7;
}

message EKELNNLPLOD {
}

message RogueAdventureRoomGameplayWolfGunTarget {
    oneof targetImplCase_ {
        AHCCDBFMNDI TargetNone = 8;
        EKELNNLPLOD TargetRuanmei = 10;
        AOKIJGCOAPD TargetCoin = 12;
        CIHFCLEAKIJ TargetMiracle = 14;
    }
}

message CKJCFDJKDFG {
    repeated RogueAdventureRoomGameplayWolfGunTarget battle_target_list = 2;
    uint32 DHPABBNJOLI = 7;
}

message FHEPDKKHFCF {
    CKJCFDJKDFG LACHNCFKAKO = 5;
}

message CNCAJKHCCEC {
    uint32 DPMLEIPAOIL = 2;
    uint32 MCMCLAFDLDC = 3;
    fixed64 BDEBMBGFFKA = 4;
    uint32 status = 8;
    FHEPDKKHFCF BLNDMFGKPMJ = 13;
    uint32 score_id = 14;
}

message SyncRogueAdventureRoomInfoScNotify {
    CNCAJKHCCEC CDLAKDMEJLG = 11;
}

message PrepareRogueAdventureRoomCsReq {
}

message PrepareRogueAdventureRoomScRsp {
    uint32 retcode = 4;
    CNCAJKHCCEC CDLAKDMEJLG = 12;
}

message StopRogueAdventureRoomCsReq {
    uint32 MMHMDHIHCAB = 6;
    repeated uint32 IPOGACCFMOL = 14;
}

message StopRogueAdventureRoomScRsp {
    CNCAJKHCCEC CDLAKDMEJLG = 2;
    uint32 retcode = 15;
}

message GetRogueAdventureRoomInfoCsReq {
}

message GetRogueAdventureRoomInfoScRsp {
    uint32 retcode = 7;
    CNCAJKHCCEC CDLAKDMEJLG = 14;
}

message UpdateRogueAdventureRoomScoreCsReq {
    uint32 score_id = 2;
    uint32 HMFFHGBKOGL = 3;
}

message UpdateRogueAdventureRoomScoreScRsp {
    uint32 retcode = 10;
    CNCAJKHCCEC CDLAKDMEJLG = 15;
}

message AHCLNMJPMIJ {
    ItemCostData cost_data = 1;
    bool POAPEGKPFOB = 4;
    uint32 DEIDCHAMDBA = 5;
    bool BPHCBOHKHMD = 10;
    ItemCostData NBLFFDIPBHI = 14;
}

message MGKFKECFHHM {
    bool POAPEGKPFOB = 2;
    bool BPHCBOHKHMD = 3;
    ItemCostData NBLFFDIPBHI = 9;
    uint32 buff_id = 10;
    ItemCostData cost_data = 11;
    uint32 LEAAEBAFCHP = 12;
}

message IILHOAKJDNH {
    bool BPHCBOHKHMD = 5;
    bool POAPEGKPFOB = 6;
    ItemCostData NBLFFDIPBHI = 7;
    uint32 AMBDKDAMHLH = 8;
    ItemCostData cost_data = 15;
}

message NNJOLKJLPJG {
    repeated AHCLNMJPMIJ CKGFONMAEKO = 3;
}

message ANJDKFJOEEI {
    repeated MGKFKECFHHM buff_list = 9;
}

message GLPPDLECCLI {
    repeated IILHOAKJDNH OMFDHFGBGAA = 11;
}

message GetRogueShopBuffInfoCsReq {
    uint32 interacted_prop_entity_id = 7;
    bool HMILGHCPEDE = 10;
}

message GetRogueShopBuffInfoScRsp {
    int32 EFOJOCFGIDJ = 3;
    ItemCostData IHJHCCFMIFD = 4;
    ANJDKFJOEEI rogue_buff_info = 8;
    int32 AEFHKANBFNC = 10;
    uint32 retcode = 15;
}

message GetRogueShopMiracleInfoCsReq {
    uint32 interacted_prop_entity_id = 7;
    bool HMILGHCPEDE = 11;
}

message GetRogueShopMiracleInfoScRsp {
    uint32 retcode = 2;
    NNJOLKJLPJG game_miracle_info = 3;
    int32 EFOJOCFGIDJ = 4;
    ItemCostData IHJHCCFMIFD = 12;
    int32 AEFHKANBFNC = 13;
}

message GetRogueShopFormulaInfoCsReq {
    bool HMILGHCPEDE = 12;
    uint32 interacted_prop_entity_id = 13;
}

message GetRogueShopFormulaInfoScRsp {
    int32 AEFHKANBFNC = 3;
    int32 EFOJOCFGIDJ = 5;
    ItemCostData IHJHCCFMIFD = 7;
    uint32 retcode = 9;
    GLPPDLECCLI CKAANMDDKCJ = 12;
}

message AGPIFOFNCNA {
    uint32 interacted_prop_entity_id = 8;
    uint32 DEIDCHAMDBA = 9;
}

message MHDDHODMMIA {
    uint32 interacted_prop_entity_id = 5;
    repeated uint32 buff_id_list = 15;
}

message BuyRogueShopFormulaCsReq {
    uint32 interacted_prop_entity_id = 6;
    repeated uint32 AOIIHCFMFPH = 13;
}

message BuyRogueShopMiracleScRsp {
    NNJOLKJLPJG game_miracle_info = 6;
    uint32 retcode = 15;
}

message BuyRogueShopBuffScRsp {
    uint32 retcode = 1;
    ANJDKFJOEEI rogue_buff_info = 13;
}

message BuyRogueShopFormulaScRsp {
    GLPPDLECCLI CKAANMDDKCJ = 3;
    uint32 retcode = 14;
}

message RogueNpcDisappearCsReq {
    uint32 ICINGGKOEMG = 8;
}

message RogueNpcDisappearScRsp {
    uint32 retcode = 8;
}

message MAJNGEFBHDG {
    uint32 interacted_prop_entity_id = 14;
}

message GFLHCFLNPBB {
    uint32 retcode = 6;
    SceneBattleInfo NOPHEEHJHEK = 9;
}

message SyncRogueCommonActionResultScNotify {
    repeated DGNDDJGNJLB FLBMHLPHFND = 1;
    uint32 rogue_sub_mode = 6;
    NEMKLKDBEAP FGMGPLJCKPC = 7;
}

message DGNDDJGNJLB {
    PNIEACEIJKM PBHMGCHKJGO = 5;
    CFJGPIFIOOL source = 11;
}

message AENOCKPNFCI {
    uint32 key = 2;
    int32 JPCLLFAIEEC = 12;
}

message MLPKNLLAOIF {
    int32 EEGCBBHOPHG = 9;
    int32 CFCLOGFJPBD = 11;
    uint32 JPNFBFKHPGD = 15;
}

message NHEHPGONEPK {
    bool EEEIONCCING = 9;
    repeated AENOCKPNFCI KOKIIFCMOGL = 10;
    uint32 AMBDKDAMHLH = 12;
}

message FCKNNIEAOHI {
    map<uint32, int32> NADOCCEPHJO = 2;
}

message DBNDIAGBMJI {
    NHEHPGONEPK GEPENPIDKIJ = 14;
}

message CDNEJCEKNLF {
    NHEHPGONEPK GEPENPIDKIJ = 15;
}

message DCGJLCPCLBL {
    NHEHPGONEPK GEPENPIDKIJ = 9;
}

message MJCOPBFEJJI {
    NHEHPGONEPK GEPENPIDKIJ = 4;
}

message FIPFPHBPHLH {
    repeated MLPKNLLAOIF ILBKMNAJGMO = 8;
}

message LBKKDLHOEGN {
    FCKNNIEAOHI value = 13;
}

message KAAJBAOAKBO {
    FCKNNIEAOHI DLMHAECABOD = 3;
    repeated NHEHPGONEPK OMFDHFGBGAA = 11;
    repeated MLPKNLLAOIF ILBKMNAJGMO = 14;
}

message GOEEKPLLCBJ {
    uint32 BHAPDMJCKLB = 7;
}

message DFLKELGHOOK {
    uint32 BHAPDMJCKLB = 1;
}

message FBNJOFCEMIL {
    map<uint32, bool> NFNMBGBOCCL = 7;
}

message PNIEACEIJKM {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message LOJDFDJGODA {
    repeated uint32 HABOHEJFCKE = 1;
    bool EHPMCGOELGB = 3;
    ItemCostData KIDAAOBHLPD = 4;
    uint32 JCOGGOBKBPJ = 6;
    repeated uint32 AHCGPCCOOFO = 7;
    uint32 BILBOHBDBPN = 8;
    uint32 ACBGGDLENHP = 9;
    uint32 KEMEOOJKOIB = 11;
}

message NOLCMKCNEAF {
    uint32 OAMBGHFHFMO = 12;
}

message PLCGKIEIEGD {
}

message FHMAIANENPO {
    uint32 BILBOHBDBPN = 1;
    repeated uint32 LALDACMCHFI = 15;
}

message ONOOFHDEIDD {
    uint32 OAMBGHFHFMO = 8;
}

message HKJEGONGJNP {
}

message KHGCDEIMLHN {
}

message EHEFOMMBNAF {
    LOJDFDJGODA BJEHOAFBHBE = 3;
}

message BPDDOBAHPNA {
    LOJDFDJGODA BJEHOAFBHBE = 1;
}

message EKMAHAFGNGJ {
    uint32 OAMBGHFHFMO = 10;
}

message HBIBLKKEOAC {
}

message LGCMEEPJMHA {
    uint32 IDIGNADNDNF = 9;
}

message KOEGFFOMKIP {
    uint32 slot = 6;
    uint32 type = 14;
    uint32 ELPINNNALBD = 15;
}

message INPINNPIHOB {
    uint32 scepter_id = 1;
    uint32 level = 15;
}

message JBIHOCIOANH {
    repeated OBIPOOLIDAL PLMKMOPCDLM = 1;
    repeated KOEGFFOMKIP FPGEFHENCCF = 2;
    map<uint32, uint32> EEPOJGNFLPA = 9;
    INPINNPIHOB modifier_content = 13;
}

message OBIPOOLIDAL {
    uint32 magic_unit_id = 8;
    uint32 level = 13;
}

message JFGFLGBLCAJ {
    OBIPOOLIDAL LCBECPOOGCL = 10;
    uint32 unique_id = 15;
}

message KNJAEACKJIB {
    JBIHOCIOANH CLMFNAHFNLL = 5;
}

message LHPDOLPKFEO {
    JBIHOCIOANH CLMFNAHFNLL = 11;
}

message AEFFJLGFAMH {
    JBIHOCIOANH CLMFNAHFNLL = 4;
}

message OKECOPGKLEE {
    JFGFLGBLCAJ PMGJICCHHDL = 1;
}

message PGAKDEJBOHF {
    JFGFLGBLCAJ JFPJBBJLIFK = 9;
}

message OEDOAOGAKPP {
    uint32 BILBOHBDBPN = 1;
    OBIPOOLIDAL FGDJAMHOKIF = 10;
    repeated OBIPOOLIDAL GIGIBIPGPFC = 11;
    uint32 CKKEKMJMABC = 13;
    uint32 IGCHBPAKBCB = 15;
}

message KKAGNMEMKOG {
    uint32 BILBOHBDBPN = 8;
    repeated JFGFLGBLCAJ GIGIBIPGPFC = 12;
}

message HHHCPCOFPPO {
    OBIPOOLIDAL POBKDOIGDAB = 12;
}

message IIPEGHDKHGD {
    JFGFLGBLCAJ POBKDOIGDAB = 7;
}

message MHIJOCJHONG {
}

message ABPNCPOIJCI {
}

message IMNNNJGGPAG {
}

message IMDHPDBHEBC {
}

message HOBKEOICBMI {
    repeated uint32 HKKLPLDNPKD = 2;
    JFGFLGBLCAJ EOCIPKGJFOP = 8;
}

message FLNAGDEOOPG {
    uint32 BILBOHBDBPN = 1;
    repeated INPINNPIHOB CHPKDJNHPFO = 14;
}

message AHKFIAKMKLO {
    INPINNPIHOB OBFPAIAMIJL = 6;
    bool ABBMHPKGAIK = 10;
}

message BLEDOJDGLAA {
}

message IKCNDLJLAPP {
}

message JKHKEBMOBEJ {
    INPINNPIHOB JBJGGNBJKDJ = 13;
}

message JCDLJBPHOMD {
    INPINNPIHOB GHELBOBFPAM = 10;
    bool BLCILJENELO = 13;
}

message LGPGCJDOIBK {
}

message LNAMGOMHGJB {
    uint32 IBOEKJBOMOG = 8;
}

message CGJNHNMAMDH {
    int32 JMCEMBEHCOJ = 5;
    uint32 LDFGIFDFPCF = 9;
    repeated uint32 KDAOIMPPPKI = 10;
}

message CGGBPJICHGF {
    repeated uint32 GBOOALMIKOB = 8;
    NDKLJJIIMGM OBIEDGMEBDL = 11;
    uint32 NCLAEHAIJJB = 12;
    uint32 BILBOHBDBPN = 14;
}

message HAOJLHGNFPM {
    uint32 JMEHMHKBJAH = 9;
}

message BLJOGGMJBMD {
}

message PIGFBKOJNHG {
    uint32 event_unique_id = 11;
}

message AJNAJINFJIC {
    bool is_win = 6;
    uint32 NGNAPJAJBAL = 14;
}

message MNMLOAPBHNF {
    uint32 event_unique_id = 11;
}

message SyncRogueCommonPendingActionScNotify {
    uint32 rogue_sub_mode = 3;
    RogueCommonPendingAction NFOJNOHLOAC = 9;
}

message RogueCommonPendingAction {
    uint32 HBAPCCEGNME = 1;
    EIOHAGHELOA PBHMGCHKJGO = 15;
}

message EIOHAGHELOA {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message HandleRogueCommonPendingActionCsReq {
    uint32 IFDKLLHFPJB = 9;
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message HandleRogueCommonPendingActionScRsp {
    uint32 retcode = 4;
    uint32 IFDKLLHFPJB = 10;
    uint32 HBAPCCEGNME = 11;
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
//        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
//        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message FCPMBJHFBNJ {
    uint32 OJEBLMKKMGO = 1;
}

message GIADLHEEPHD {
    bool FJOILOHPHLC = 5;
    uint32 FHHGDPCECEE = 14;
}

message LOGNKEKHBAI {
    uint32 AJBEPAHCGIK = 14;
    bool FJOILOHPHLC = 15;
}

message KNIJHGNJIJM {
    repeated uint32 DDGCFJDBOOH = 4;
    uint32 aeon_id = 5;
    uint32 JGMIPMDPPIJ = 7;
    uint32 exp = 8;
    repeated uint32 DPMIBDHKDAE = 9;
    uint32 level = 13;
}

message OOCEOILKCFI {
    INPINNPIHOB JLFDDMEKLJK = 14;
}

message EOEJHKJLLPK {
    uint32 PPMIOGCFOOC = 9;
    uint32 magic_unit_id = 12;
}

message AEKNFLOMLJH {
    repeated LOGNKEKHBAI BJCMPHLPKNF = 2;
    repeated GIADLHEEPHD CKGFONMAEKO = 6;
    repeated KNIJHGNJIJM BELOFMFHFDK = 7;
    repeated FCPMBJHFBNJ buff_list = 8;
}

message GetRogueHandbookDataCsReq {
}

message GetRogueHandbookDataScRsp {
    AEKNFLOMLJH HandbookInfo = 14;
    uint32 retcode = 15;
}

message SyncRogueHandbookDataUpdateScNotify {
    repeated EOEJHKJLLPK MMHCHHCOFPB = 1;
    repeated LOGNKEKHBAI HAEBAAMBNBB = 3;
    repeated GIADLHEEPHD IDDDCJONPFN = 7;
    repeated FCPMBJHFBNJ ABIBOBFDKLD = 11;
    repeated OOCEOILKCFI BJKPKFBFDFF = 12;
}

message TakeRogueMiracleHandbookRewardCsReq {
    repeated uint32 AFHDDNGGNBF = 13;
}

message TakeRogueMiracleHandbookRewardScRsp {
    repeated uint32 FEIFJADCDFL = 5;
    uint32 retcode = 6;
    ItemList reward = 10;
}

message TakeRogueEventHandbookRewardCsReq {
    repeated uint32 IDOECNPKGCE = 10;
}

message TakeRogueEventHandbookRewardScRsp {
    repeated uint32 DPJHILHGOKE = 4;
    ItemList reward = 6;
    uint32 retcode = 9;
}

message FINDAFKPOOF {
    map<uint32, uint32> GLAPHHABOHP = 7;
}

message LADHIKPAJCJ {
    int32 ICJABPGMACJ = 4;
    EENDHPKPFLP BOHDMINEJNO = 9;
    uint32 game_aeon_id = 13;
}

message OHLCJEDCOFN {
    repeated uint32 difficulty_id_list = 13;
}

message OMDEFBABNNB {
    repeated uint32 avatar_id_list = 2;
    ItemCostData rogue_revive_cost = 9;
}

message RogueGameInfo {
    oneof HLOEKMDPGIF {
        LADHIKPAJCJ rogue_aeon_info = 1;
        FBNJOFCEMIL NBDACDNBJIK = 2;
        ChessRogueMiracleInfo game_miracle_info = 6;
        FINDAFKPOOF FFFCCEJIFDK = 8;
        OMDEFBABNNB rogue_lineup_info = 11;
        KAAJBAOAKBO CKAANMDDKCJ = 12;
        OHLCJEDCOFN rogue_difficulty_info = 14;
        ChessRogueBuffInfo rogue_buff_info = 15;
    }
}

message PMJGKHPKHCM {
    uint32 AGEBAMBKKBC = 6;
    uint32 ILLODGAEFAE = 11;
    uint32 rogue_magic_battle_const = 12;
    repeated RogueGameInfo rogue_current_game_info = 14;
    uint32 rogue_sub_mode = 15;
}

message RogueUnlockProgress {
    uint32 UnlockId = 2;
    uint32 progress = 8;
    bool Finish = 11;
}

message IBCKNKPJFOJ {
    repeated RogueUnlockProgress PGIMNCFHJEA = 3;
    uint32 talent_id = 4;
    KPABFFANJBK status = 7;
}

message IMJMGEENCEH {
    repeated IBCKNKPJFOJ LGNNMAJMEIL = 6;
}

message POJEEIALJFI {
    uint32 BAPHHCKIHMO = 1;
    uint32 MGKKGNLDGCL = 14;
}

message SyncRogueCommonVirtualItemInfoScNotify {
    repeated POJEEIALJFI IDJJPAFPMDM = 6;
}

message MAPOMOILGEH {
    uint32 GEDJNIAEFHO = 5;
    uint32 BDCFFOBGKOA = 10;
    uint32 MBKFININNEK = 12;
}

message PLGDCFIPEAA {
    repeated ODOPDKELAEB JPGCDJDGDBI = 15;
}

message ILAEKJCNEMF {
    repeated uint32 AFEDJKMFODP = 4;
}

message LGJMDNNMPPE {
    MAPOMOILGEH ONGPJOGKKJN = 5;
    PLGDCFIPEAA KJKBKEGIGHK = 13;
    ILAEKJCNEMF NOLHGNHAEMA = 15;
}

message CommonRogueQueryCsReq {
}

message CommonRogueQueryScRsp {
    uint32 retcode = 3;
    uint32 FHHBJLHAJFJ = 10;
    LGJMDNNMPPE rogue_get_info = 13;
}

message CommonRogueUpdateScNotify {
    oneof NCEKDIKCBHP {
        PLGDCFIPEAA KJKBKEGIGHK = 3;
        ILAEKJCNEMF NOLHGNHAEMA = 12;
        MAPOMOILGEH ONGPJOGKKJN = 15;
    }
}

message IKAMKNHGGOK {
    uint32 aeon_talk_id = 9;
    uint32 talk_dialogue_id = 11;
}

message GNJAPOMLLHE {
    uint32 BGLEHMKMAPG = 6;
}

message CNHHPDHBMDC {
    uint32 BGLEHMKMAPG = 9;
}

message JIEAAFJENLK {
    uint32 AMBDKDAMHLH = 15;
}

message HPJLAFHHGJG {
    uint32 BGLEHMKMAPG = 7;
}

message AFCCAOACNAK {
    uint32 dialogue_id = 8;
}

message JBMECLKGGDK {
    oneof AFBLAJKDHHF {
        AFCCAOACNAK AGGBLHGKPFJ = 1;
        JIEAAFJENLK GMAKHONAEPH = 2;
        GNJAPOMLLHE ADMAHLAALNH = 4;
        HPJLAFHHGJG CACGEKAANKL = 6;
        CNHHPDHBMDC ODDGCBPOPLF = 8;
        IKAMKNHGGOK HPNOGGFDPKM = 9;
    }
}

message ABENFANELFL {
    int32 GGPLCPCHADN = 1;
    fixed32 LMBIODPOHGE = 14;
}

message GOKKMEOMOFC {
    uint32 NGNAPJAJBAL = 7;
}

message NEBPGHDDEPC {
    int32 JEFIOIHHCLG = 10;
}

message HJPGNCNGILG {
    oneof HPNHNMBABFN {
        NEBPGHDDEPC HMLCEHIKFFK = 4;
        GOKKMEOMOFC CAPIJNMCDAM = 8;
    }
}

message GBABEKPBLHN {
    ABENFANELFL display_value = 3;
    bool confirm = 6;
    repeated HJPGNCNGILG POCJCMKKJIK = 7;
    uint32 KDMLLLGHJON = 12;
    uint32 arg_id = 13;
    bool is_valid = 14;
}

message HGEKNLIFFED {
    repeated GBABEKPBLHN LEKPKOCNJAL = 4;
    uint32 event_unique_id = 5;
    JBMECLKGGDK BDOEMGMHALJ = 11;
}

message GetRogueCommonDialogueDataCsReq {
}

message GetRogueCommonDialogueDataScRsp {
    repeated HGEKNLIFFED DCKILLDONHG = 9;
    uint32 retcode = 14;
}

message SelectRogueCommonDialogueOptionCsReq {
    uint32 KDMLLLGHJON = 9;
    uint32 event_unique_id = 12;
}

message SelectRogueCommonDialogueOptionScRsp {
    uint32 event_unique_id = 2;
    repeated uint32 JIDLBFOEBID = 4;
    bool ADJGDBBNPLC = 8;
    uint32 KDMLLLGHJON = 10;
    uint32 retcode = 11;
    HGEKNLIFFED OIDIADDNACM = 14;
}

message FinishRogueCommonDialogueCsReq {
    uint32 event_unique_id = 6;
}

message FinishRogueCommonDialogueScRsp {
    uint32 retcode = 7;
    uint32 event_unique_id = 9;
}

message SyncRogueCommonDialogueDataScNotify {
    repeated HGEKNLIFFED DCKILLDONHG = 1;
}

message SyncRogueCommonDialogueOptionFinishScNotify {
    GBABEKPBLHN DGNCFMDPPBF = 4;
    uint32 KDMLLLGHJON = 5;
    uint32 event_unique_id = 9;
    HGEKNLIFFED OIDIADDNACM = 12;
}

message MIKFNBBOPIP {
    uint32 rogue_magic_battle_const = 3;
    uint32 AGEBAMBKKBC = 4;
    uint32 ILLODGAEFAE = 5;
    RogueCommonPendingAction pending_action = 7;
    uint32 rogue_sub_mode = 8;
    string MDLNDGIJNML = 9;
}

message RogueWorkbenchGetInfoCsReq {
    uint32 prop_entity_id = 10;
}

message RogueWorkbenchGetInfoScRsp {
    uint32 retcode = 9;
    map<uint32, MHCCPDDKKDA> GAJPNNGMHNK = 15;
}

message MHCCPDDKKDA {
    oneof JCFKGNDAPHJ {
        KHCBGNLNPEL JLFDDMEKLJK = 3;
        KMHIBNGAFEO LCBECPOOGCL = 5;
        DMKPFGEBILH CEAJNLIOFHF = 6;
        LFGGPNGKBCH PGPAAPOPDOC = 7;
        JCIJCAFJJKN PICLEGGGNCF = 8;
        LPILGJEPAGJ NNCHMGDGDFI = 11;
        AJMIBFECFLJ EAPMICBGOIO = 12;
        IGILOGOHEJP NDKHOGEMKJA = 13;
        DHMFCIDJBFD PMKEHGBPCNG = 14;
        GLPEEIJALGF CGGNFJCBBKM = 15;
    }
}

message GLPEEIJALGF {
    bool FOBAOEAFNAM = 2;
    uint32 ANLINCFGFAN = 3;
    uint32 JIFKHCKPNFM = 10;
    ItemCostData cost_data = 13;
    int32 DMMAMJGNGNN = 15;
}

message JCIJCAFJJKN {
    int32 DMMAMJGNGNN = 2;
    bool FOBAOEAFNAM = 3;
    uint32 JIFKHCKPNFM = 10;
    uint32 ANLINCFGFAN = 12;
    ItemCostData cost_data = 13;
}

message AJMIBFECFLJ {
    map<uint32, uint32> HCPACBHCMHN = 9;
    uint32 max_num = 13;
    uint32 cur_num = 14;
}

message LPILGJEPAGJ {
    ItemCostData cost_data = 4;
    int32 DMMAMJGNGNN = 5;
    map<uint32, bool> NFNICIPMJII = 10;
    uint32 JIFKHCKPNFM = 14;
}

message IGILOGOHEJP {
    uint32 JIFKHCKPNFM = 3;
    ItemCostData cost_data = 6;
    int32 DMMAMJGNGNN = 15;
}

message COAHGFLONAN {
    bool NGKJPCEHMBA = 1;
    ItemCostData HBPBLGLLIEN = 6;
    ItemCostData cost_data = 8;
    INPINNPIHOB JLFDDMEKLJK = 10;
}

message KHCBGNLNPEL {
    repeated COAHGFLONAN PICFHPKDNEL = 13;
}

message AOGIIMKCJDJ {
    ItemCostData cost_data = 1;
    ItemCostData HBPBLGLLIEN = 4;
    bool NGKJPCEHMBA = 6;
    uint32 PPMIOGCFOOC = 9;
    uint32 magic_unit_id = 14;
}

message KMHIBNGAFEO {
    repeated AOGIIMKCJDJ rogue_magic_unit_info_list = 12;
}

message DMKPFGEBILH {
    uint32 JIFKHCKPNFM = 4;
    int32 DMMAMJGNGNN = 7;
    ItemCostData cost_data = 9;
}

message LFGGPNGKBCH {
    int32 DMMAMJGNGNN = 1;
    ItemCostData FAIDIBODMCH = 2;
    map<uint32, ItemCostData> IAKHMMELMFD = 7;
    uint32 JIFKHCKPNFM = 11;
}

message KIFILCJOLCH {
    ItemCostData cost_data = 3;
    uint32 scepter_id = 8;
}

message DHMFCIDJBFD {
    repeated KIFILCJOLCH ELDOLKCAKAE = 13;
}

message RogueWorkbenchHandleFuncCsReq {
    uint32 func_id = 5;
    AKMBEHGCBHE LBOBPBHELGJ = 6;
    uint32 prop_entity_id = 7;
}

message RogueWorkbenchHandleFuncScRsp {
    uint32 retcode = 1;
    uint32 func_id = 8;
    MHCCPDDKKDA MLKIOODNLLF = 15;
}

message AKMBEHGCBHE {
    oneof LOFNLGCFGIC {
        AKKCDLMLKDF CGGNFJCBBKM = 1;
        BHJHAPDLPNO NDKHOGEMKJA = 2;
        KOJKPLCEGEN NNCHMGDGDFI = 3;
        ALNIGMCJFDM PICLEGGGNCF = 5;
        GJBBLCIPBHD LCBECPOOGCL = 7;
        FHJGLOPMFNC PGPAAPOPDOC = 8;
        JBNCDFFPDOP PMKEHGBPCNG = 10;
        NEOCCICFNED EAPMICBGOIO = 11;
        JDOOIDBKCIM JLFDDMEKLJK = 13;
        LEHGLCELJMF CEAJNLIOFHF = 14;
    }
}

message AKKCDLMLKDF {
    uint32 HIFGEEKAGLA = 8;
}

message ALNIGMCJFDM {
    uint32 PFMGABPPDFL = 13;
}

message NEOCCICFNED {
    uint32 AMOHEDGMLEE = 13;
}

message KOJKPLCEGEN {
    repeated uint32 NLKLHFLBJFM = 14;
}

message BHJHAPDLPNO {
    uint32 ICAECCOKAJP = 5;
}

message JDOOIDBKCIM {
    uint32 FPLJOAACDGD = 15;
}

message GJBBLCIPBHD {
    repeated uint32 CLOPKOBKHMA = 10;
}

message LEHGLCELJMF {
    repeated uint32 DNKCCIBPFGK = 7;
}

message FHJGLOPMFNC {
    uint32 magic_unit_id = 11;
}

message JBNCDFFPDOP {
    uint32 scepter_id = 14;
}

message FKBFOOEFPAE {
    HGPOKMDGKNN status = 6;
    uint32 INFBHPGDLND = 13;
}

message AJAKDCDDAMO {
    uint32 INFBHPGDLND = 1;
    uint32 EONLMDCBNME = 3;
    HHICLPLJNCO status = 15;
}

message GetRogueCollectionCsReq {
}

message GetRogueCollectionScRsp {
    repeated FKBFOOEFPAE PCPEDFLNBGA = 1;
    repeated AJAKDCDDAMO PAHPDBIACHA = 4;
    uint32 retcode = 11;
}

message SetRogueCollectionCsReq {
    repeated uint32 FPIPMKCAGPD = 6;
    repeated uint32 OPKMCIFFCCH = 9;
    repeated MHKMPGABBPL LGHPHFPPJEN = 13;
}

message SetRogueCollectionScRsp {
    uint32 retcode = 6;
    repeated AJAKDCDDAMO PAHPDBIACHA = 11;
    repeated FKBFOOEFPAE PCPEDFLNBGA = 14;
}

message GBPFLAGFAIJ {
    EHCOBODEEJE status = 4;
    uint32 KBDFBGINNBJ = 8;
}

message DMODINLGCCB {
    uint32 KBDFBGINNBJ = 6;
    HHICLPLJNCO status = 10;
    uint32 EONLMDCBNME = 12;
}

message GetRogueExhibitionCsReq {
}

message GetRogueExhibitionScRsp {
    uint32 retcode = 1;
    repeated GBPFLAGFAIJ MKCEFANCAIG = 7;
    repeated DMODINLGCCB PJPJOKKFNIM = 13;
}

message SetRogueExhibitionCsReq {
    repeated uint32 HEEPOEOLILO = 7;
    repeated MHKMPGABBPL ANEKPINLKFJ = 10;
    repeated uint32 LDIFBJDGFFE = 11;
}

message SetRogueExhibitionScRsp {
    repeated GBPFLAGFAIJ MKCEFANCAIG = 1;
    repeated DMODINLGCCB PJPJOKKFNIM = 4;
    uint32 retcode = 12;
}

message EHKEGMCGCMH {
    uint32 DEIDCHAMDBA = 1;
}

message PNDNJBBDHDP {
    uint32 level = 5;
    uint32 BIMBFJGNPFB = 7;
}

message DOPJLBMMPHB {
    bool KDGBJGOPEHI = 1;
    uint32 BIMBFJGNPFB = 7;
    oneof OONIJKKDLLP {
        EHKEGMCGCMH DJNABIOEENF = 14;
        PNDNJBBDHDP IMCAJAOGCLG = 15;
    }
}

message LOPJEJMOFBG {
    uint32 group_id = 2;
    bool ENBIJBFBNEC = 7;
    repeated DOPJLBMMPHB BBPAPDDENHB = 14;
}

message RogueGambleInfo {
    uint32 HFBKBHJIEGD = 1;
    uint32 AKKONOBBJNK = 2;
    uint32 cur_times = 4;
    uint32 DDJDDBKNPFF = 6;
    ItemCostData KEDCOHKKNAK = 8;
    repeated LOPJEJMOFBG maze_group_list = 13;
    bool LOFFEOHFPFL = 15;
}

message RogueGetGambleInfoCsReq {
    uint32 prop_entity_id = 11;
}

message RogueGetGambleInfoScRsp {
    RogueGambleInfo gamble_info = 8;
    uint32 retcode = 15;
}

message RogueDoGambleCsReq {
    uint32 prop_entity_id = 4;
}

message RogueDoGambleScRsp {
    uint32 JPKLMPPOGDH = 1;
    uint32 retcode = 5;
    RogueGambleInfo gamble_info = 7;
    uint32 CFBGLFOJODA = 12;
}

message RogueDebugReplaySaveScNotify {
    uint32 uid = 1;
    string IJPPKNKNLNL = 2;
    string NEPGEEJCLAH = 5;
    string DFPFALBJHJH = 9;
    string KFAMACKFHPM = 12;
    string JHJGFDMKIHG = 14;
    string JDEDCKKACGO = 15;
}

message JNFELCKIOCM {
    repeated uint32 LGHCAHBBCAM = 6;
    repeated uint32 base_avatar_id_list = 7;
    uint32 map_id = 8;
    uint32 KJGIMHFKGBN = 9;
    EGPIMDADFDI status = 10;
    AJPFPHKKLPG JLNILIJOMEM = 11;
    GCKBLHADLGN LCHKKHNGBGJ = 12;
    uint32 FFKPEGNBHOD = 14;
    uint32 GMPIIAEGGEK = 15;
}

message OENDAFIAECG {
    uint32 HDJCJBBKNAF = 1;
    uint32 HDLLMDNLOKP = 2;
    uint32 KKPKALJMAMF = 5;
    uint32 AEIEOJGCMMO = 11;
    uint32 BPEKCEJPOFE = 12;
    uint32 battle_id = 13;
    bool is_rotate = 14;
    uint32 JPKJKIMNIGG = 15;
}

message PEODOCNCLNP {
    OENDAFIAECG BOPAANGKOGH = 1;
    uint32 panel_id = 4;
    uint32 DBAHFEFGLMD = 6;
    JNFELCKIOCM AELOIPGFODB = 7;
}

message GetRogueEndlessActivityDataCsReq {
}

message GetRogueEndlessActivityDataScRsp {
    uint32 ANAMEOBFKGN = 2;
    repeated PEODOCNCLNP data = 7;
    repeated uint32 EAHBIKFALLF = 8;
    uint32 JCHCHLMDPEN = 13;
    uint32 retcode = 14;
}

message BBNHEMCKDIN {
    uint32 avatar_id = 2;
    AvatarType avatar_type = 8;
}

message EnterRogueEndlessActivityStageCsReq {
    repeated BBNHEMCKDIN avatar_list = 13;
    uint32 MGIGDCMLEOG = 15;
}

message EnterRogueEndlessActivityStageScRsp {
    uint32 retcode = 9;
    OENDAFIAECG BOPAANGKOGH = 12;
    SceneBattleInfo battle_info = 14;
}

message RogueEndlessActivityBattleEndScNotify {
    OENDAFIAECG BOPAANGKOGH = 15;
}

message TakeRogueEndlessActivityPointRewardCsReq {
    uint32 level = 5;
    bool MDHJKKBNMCF = 12;
}

message TakeRogueEndlessActivityPointRewardScRsp {
    uint32 retcode = 1;
    uint32 JCHCHLMDPEN = 2;
    uint32 level = 5;
    bool MDHJKKBNMCF = 9;
    ItemList reward = 10;
    repeated uint32 EAHBIKFALLF = 12;
}

message TakeRogueEndlessActivityAllBonusRewardCsReq {
}

message TakeRogueEndlessActivityAllBonusRewardScRsp {
    uint32 retcode = 8;
    uint32 JCHCHLMDPEN = 9;
    repeated uint32 EAHBIKFALLF = 10;
    ItemList reward = 13;
}

message HFIPPDGGJOL {
    RogueMapRotateInfo KEILFHHNLIH = 3;
    LineupInfo lineup = 7;
    SceneInfo scene = 14;
}

message BPAIFNGEDGH {
    uint32 OGLDNEFKNDO = 1;
    JLCBBKKGOEJ status = 3;
    uint32 BHPGJCICMJM = 4;
    uint32 layer_id = 6;
    repeated OIIKGFIPMFG MNFJEIININL = 11;
}

message OIIKGFIPMFG {
    JIOKHLHGEOD status = 5;
    uint32 AKDLEBLPBMD = 7;
    uint32 room_id = 9;
    uint32 EIPNNEJNNKJ = 14;
}

message MJKKONEIOBO {
    JMPPHGIGFFI reason = 1;
    uint32 LFCDODFMHHN = 2;
    uint32 ACGBELAIGBO = 4;
    repeated BPAIFNGEDGH AHOOAFGDEHF = 6;
    uint32 BGOKHEIBNKL = 9;
    BEHFNMKDOMK status = 15;
}

message JCHCGFMGBAK {
    repeated JFGFLGBLCAJ rogue_magic_unit_info_list = 1;
    repeated JBIHOCIOANH ELDOLKCAKAE = 6;
    uint32 NMJAIBBLDOC = 7;
    bool JFCNAJMIHCI = 11;
}

message LLNHFMGMCMN {
    repeated uint32 difficulty_id_list = 3;
}

message KLOHNFGBNPH {
    uint32 LAEEJIIKMPI = 3;
}

message RogueMagicStartCsReq {
    uint32 JEAFPIGJDOL = 1;
    repeated uint32 base_avatar_id_list = 6;
    uint32 DBAHFEFGLMD = 13;
    repeated uint32 AHIIBHKDFJB = 15;
}

message AAPKBPEGGBH {
    OMDEFBABNNB lineup = 2;
    LLNHFMGMCMN KKOBBENPFPH = 3;
    JCHCGFMGBAK JLFDDMEKLJK = 5;
    ChessRogueMiracleInfo JIBDGCFCDIO = 6;
    FINDAFKPOOF CPIOGJKFECH = 9;
    MIKFNBBOPIP basic_info = 10;
    MJKKONEIOBO level = 11;
    KLOHNFGBNPH CACGEKAANKL = 15;
}

message RogueMagicStartScRsp {
    HFIPPDGGJOL LCOCLENJJAI = 2;
    uint32 retcode = 7;
    AAPKBPEGGBH BHMHLPCHKLG = 13;
}

message RogueMagicEnterCsReq {
}

message RogueMagicEnterScRsp {
    HFIPPDGGJOL LCOCLENJJAI = 4;
    uint32 retcode = 8;
    AAPKBPEGGBH BHMHLPCHKLG = 9;
}

message RogueMagicLeaveCsReq {
}

message RogueMagicLeaveScRsp {
    uint32 retcode = 7;
    HFIPPDGGJOL LCOCLENJJAI = 10;
}

message RogueMagicEnterRoomCsReq {
    uint32 FLLABLFBEIK = 11;
    uint32 BHPGJCICMJM = 13;
}

message RogueMagicEnterRoomScRsp {
    uint32 retcode = 7;
    HFIPPDGGJOL LCOCLENJJAI = 15;
}

message RogueMagicEnterLayerCsReq {
    uint32 LFCDODFMHHN = 1;
    uint32 FLLABLFBEIK = 5;
}

message RogueMagicEnterLayerScRsp {
    uint32 retcode = 1;
    HFIPPDGGJOL LCOCLENJJAI = 4;
}

message RogueMagicLevelInfoUpdateScNotify {
    uint32 BGOKHEIBNKL = 1;
    uint32 ACGBELAIGBO = 2;
    repeated BPAIFNGEDGH AHOOAFGDEHF = 3;
    BEHFNMKDOMK status = 13;
    uint32 LFCDODFMHHN = 14;
    JMPPHGIGFFI reason = 15;
}

message RogueMagicAreaUpdateScNotify {
    repeated PJEBCBNPDIC JIDJEAMDKDE = 13;
}

message CACLANLOOLK {
    uint32 EFKEGDOAJBH = 2;
    bool FBJHGPDKBGM = 14;
}

message FJJDKDNDFDJ {
    bool FBJHGPDKBGM = 2;
    uint32 KKNGHGBHCGG = 9;
}

message OGNBIGKHHBM {
    AAPKBPEGGBH BHMHLPCHKLG = 3;
    FJJDKDNDFDJ BJLEMFMCODD = 4;
    LineupInfo rogue_lineup_info = 5;
    CACLANLOOLK GCGLNKFDKKN = 7;
}

message HCJGPMDGBJO {
    repeated OBIPOOLIDAL EPCKCOOKCLJ = 2;
    repeated INPINNPIHOB KLMGAEBEAGK = 3;
    repeated uint32 BLBFDCGCEDA = 5;
    repeated uint32 MNKCJFELCNG = 11;
}

message RogueMagicBattleFailSettleInfoScNotify {
    OGNBIGKHHBM tourn_finish_info = 1;
    HFIPPDGGJOL LCOCLENJJAI = 13;
}

message RogueMagicSettleCsReq {
}

message RogueMagicSettleScRsp {
    uint32 retcode = 4;
    HCJGPMDGBJO MGCFOGLKMCH = 6;
    ItemList GFONFDBFBNA = 8;
    HFIPPDGGJOL LCOCLENJJAI = 12;
    OGNBIGKHHBM tourn_finish_info = 15;
}

message RogueMagicReviveCostUpdateScNotify {
    ItemCostData rogue_revive_cost = 14;
}

message RogueMagicReviveAvatarCsReq {
    uint32 interacted_prop_entity_id = 11;
    repeated uint32 base_avatar_id_list = 14;
}

message RogueMagicReviveAvatarScRsp {
    uint32 retcode = 4;
    ItemCostData rogue_revive_cost = 12;
}

message RogueMagicQueryCsReq {
}

message OLFGBAMEFJI {
    uint32 NMJAIBBLDOC = 2;
    uint32 BGOKHEIBNKL = 3;
    uint32 HMKGBMIDGOP = 4;
    uint32 IPODNBLJPOL = 5;
    uint32 FONNGHLGJFA = 6;
    uint32 OFBIAHGOPCM = 8;
    uint32 NNNKJKCLBLO = 9;
    uint32 BLFDFMCFFIM = 10;
    uint32 NJIEMPGEEOG = 15;
    repeated uint32 avatar_id_list = 512;
    repeated JBIHOCIOANH ELDOLKCAKAE = 685;
    repeated JFGFLGBLCAJ rogue_magic_unit_info_list = 1062;
    repeated uint32 JLHFOJODOKG = 1190;
}

message KOIICMIEAEF {
    repeated uint32 DPPLCDDHBGE = 1458;
}

message PJEBCBNPDIC {
    KOIICMIEAEF CGAIJCCLKBH = 1;
    OLFGBAMEFJI record_info = 5;
    uint32 DBAHFEFGLMD = 6;
    bool is_unlocked = 7;
    bool is_taken_reward = 11;
    bool BIIFELFEGNK = 12;
    repeated uint32 NPBNMMKHKOP = 13;
    uint32 IFPOILOPFAG = 14;
}

message CCHIEDIBOFM {
    uint32 HANDCDPIBLD = 6;
    bool is_unlocked = 13;
}

message BGAPFBPIJHP {
    repeated uint32 EACEMAPDNDH = 9;
}

message PBBEDPIIPEK {
    repeated OOCEOILKCFI PICFHPKDNEL = 2;
    repeated PJEBCBNPDIC JIDJEAMDKDE = 4;
    repeated uint32 KGLBNDEAPHF = 5;
    BGAPFBPIJHP story_info = 9;
    repeated EOEJHKJLLPK rogue_magic_unit_info_list = 12;
    IEJPPFJFJLJ OKAKAMONPFL = 13;
    repeated CCHIEDIBOFM DIMGDINCCJI = 14;
}

message RogueMagicQueryScRsp {
    AAPKBPEGGBH BHMHLPCHKLG = 4;
    uint32 retcode = 7;
    PBBEDPIIPEK rogue_get_info = 11;
}

message RogueMagicScepterDressInUnitCsReq {
    uint32 dice_slot_id = 5;
    uint32 ELPINNNALBD = 7;
    uint32 scepter_id = 12;
}

message RogueMagicScepterDressInUnitScRsp {
    uint32 retcode = 2;
}

message RogueMagicAutoDressInUnitCsReq {
    repeated uint32 BHKANKFPDCP = 4;
}

message RogueMagicAutoDressInUnitScRsp {
    uint32 retcode = 6;
}

message RogueMagicSetAutoDressInMagicUnitCsReq {
    bool KHDHAHNNALM = 5;
}

message RogueMagicSetAutoDressInMagicUnitScRsp {
    bool KHDHAHNNALM = 1;
    uint32 retcode = 3;
}

message RogueMagicAutoDressInMagicUnitChangeScNotify {
    bool KHDHAHNNALM = 5;
}

message RogueMagicScepterTakeOffUnitCsReq {
    uint32 scepter_id = 8;
    repeated uint32 BHKANKFPDCP = 13;
}

message RogueMagicScepterTakeOffUnitScRsp {
    uint32 retcode = 15;
}

message RogueMagicUnitComposeCsReq {
    repeated uint32 BHKANKFPDCP = 10;
}

message RogueMagicUnitComposeScRsp {
    uint32 retcode = 14;
}

message RogueMagicUnitReforgeCsReq {
    repeated uint32 BHKANKFPDCP = 4;
}

message RogueMagicUnitReforgeScRsp {
    uint32 retcode = 8;
}

message IEJPPFJFJLJ {
    uint32 CMADMLIALJL = 1;
    IMJMGEENCEH talent_info_list = 13;
}

message RogueMagicGetTalentInfoCsReq {
}

message RogueMagicGetTalentInfoScRsp {
    IEJPPFJFJLJ OKAKAMONPFL = 12;
    uint32 retcode = 14;
}

message RogueMagicEnableTalentCsReq {
    uint32 talent_id = 3;
}

message RogueMagicEnableTalentScRsp {
    IEJPPFJFJLJ OKAKAMONPFL = 4;
    uint32 retcode = 7;
}

message RogueMagicGetMiscRealTimeDataCsReq {
}

message RogueMagicGetMiscRealTimeDataScRsp {
    uint32 retcode = 6;
    FJJDKDNDFDJ BJLEMFMCODD = 8;
    CACLANLOOLK GCGLNKFDKKN = 9;
}

message RogueMagicStoryInfoUpdateScNotify {
    uint32 MNBCCBABCHA = 9;
}

message EDDHMIGFDJI {
    uint32 INBJPPAPCAG = 4;
    bool confirm = 5;
    uint32 MBGKCKLDHIB = 9;
}

message FOIACPFKDHK {
    uint32 MBGKCKLDHIB = 2;
    bool confirm = 3;
    repeated uint32 ONNJGDJNFLG = 5;
    uint32 INBJPPAPCAG = 7;
}

message POGCNJMNGPI {
    bool confirm = 8;
    repeated uint32 ONNJGDJNFLG = 9;
    uint32 INBJPPAPCAG = 12;
}

message AINBLBBFDBJ {
    repeated uint32 NHGOJDODGMA = 3;
    bool confirm = 4;
    uint32 NIJAGOAJPEM = 5;
    uint32 INBJPPAPCAG = 9;
}

message AJEEIAKEMIP {
    uint32 CEHFIILMJKM = 9;
}

message KHMJBJLOBPG {
    uint32 CPOCNGEKIIB = 6;
}

message GFGDODHMBPK {
    uint32 KOKPCEAMABC = 13;
}

message NPDIPKHDCNF {
    uint32 block_type = 1;
    uint32 INBJPPAPCAG = 5;
    repeated uint32 NHGOJDODGMA = 6;
    bool confirm = 14;
}

message EGALAGNAEFB {
    uint32 OLGLJHECDOF = 3;
    uint32 GPDEIIIOIPN = 7;
    uint32 GCLEBGDDIIP = 15;
}

message NDGLJKNKEFK {
    uint32 OJEBLMKKMGO = 1;
}

message EGFDAJDIHNJ {
    uint32 item_id = 1;
    uint32 item_count = 12;
}

message PNIKOFBIMJL {
    uint32 NEJDMEGNFGK = 5;
    uint32 Num = 12;
    uint32 EOAEFBKNFFE = 13;
}

message JJDKOEEHBJO {
    uint32 Num = 6;
    uint32 OOOFGDBLDCE = 13;
}

message OKGMDMJHCMK {
    uint32 CEHFIILMJKM = 4;
}

message CFKBHPNBCNB {
    uint32 MBGKCKLDHIB = 3;
}

message BBBEOEOIFJK {
    repeated uint32 ONNJGDJNFLG = 10;
    bool confirm = 12;
    uint32 INBJPPAPCAG = 13;
}

message AHPNAPGPJEG {
    uint32 OJEBLMKKMGO = 1;
    uint32 AMOJFMFEOGE = 9;
}

message FPCHMKKCGFA {
    uint32 BNCKFBFMGMI = 3;
    uint32 AFFJHMJDIBN = 8;
    NJCHLJFIODM LGHOKGABGCK = 10;
}

message NDFOOKGHHOP {
    repeated uint32 CEGCKBNDALF = 1;
    uint32 INBJPPAPCAG = 6;
    bool confirm = 7;
}

message MDBJBIEKKEE {
    uint32 LIPAPOMHMCE = 6;
}

message BLCPNBIKCLP {
    uint32 count = 4;
}

message RogueModifier {
    LGMDBCFFJOF HHMABJDIMGM = 2;
    FPCHMKKCGFA modifier_content = 9;
    uint64 PKFCLDINCAL = 12;
    NDFOOKGHHOP KBOBEEMCNDD = 1234;
}

message EENDHPKPFLP {
    repeated RogueModifier MEBJCLENPIO = 11;
}

message RogueModifierAddNotify {
    RogueModifier PDAAMPCELAA = 6;
}

message RogueModifierSelectCellCsReq {
    uint32 cell_id = 6;
}

message RogueModifierSelectCellScRsp {
    uint32 retcode = 1;
    ItemList JDIJKEGCIBP = 3;
    uint32 cell_id = 6;
}

message RogueModifierUpdateNotify {
    RogueModifier PDAAMPCELAA = 3;
}

message RogueModifierDelNotify {
    uint64 PKFCLDINCAL = 15;
}

message RogueModifierStageStartNotify {
    LGMDBCFFJOF HHMABJDIMGM = 9;
}

message FJEMJBNAJFJ {
    RogueMapRotateInfo KEILFHHNLIH = 1;
    SceneInfo scene = 4;
    LineupInfo lineup = 5;
}

message CFCDHLPOOGC {
    MIKFNBBOPIP IKOBKINKHCF = 6;
    LHADMKCGCKO ICFFJLICIMB = 1752;
}

message NKPKIAAMODG {
    bool FBJHGPDKBGM = 1;
    uint32 MNNKJPLIILJ = 6;
    uint32 JDBAHPEBFJC = 10;
    uint32 LDFEHKDCNEL = 14;
}

message NNIJCDKHPKL {
    uint32 JEDJBEDKCJI = 6;
    uint32 AIPLFLIBPKJ = 7;
    uint32 CDINHFHBMOG = 12;
    bool FBJHGPDKBGM = 15;
}

message GPNJMEHNDMN {
    uint32 JAPDCMJPIEJ = 2;
    uint32 HIPJHPJOLBE = 6;
    bool FBJHGPDKBGM = 10;
}

message FBHNFJCNHML {
    uint32 JAPDCMJPIEJ = 3;
    bool FBJHGPDKBGM = 14;
}

message BMNMBPNBBHM {
    bool PGCBEOLEIOO = 13;
}

message LHADMKCGCKO {
    GEKLEELLCBF level = 1;
    FINDAFKPOOF CPIOGJKFECH = 2;
    OMDEFBABNNB lineup = 3;
    AGGMHDJGFDI IJBPHIGKMHF = 5;
    KAAJBAOAKBO HPDBJALEMMO = 8;
    BMNMBPNBBHM LMPGBONBHGN = 9;
    FNIJJHAENBL KKOBBENPFPH = 10;
    ChessRogueBuffInfo LKKFHFDPFKE = 12;
    CGJNHNMAMDH JMIDLLDKJBI = 13;
    ChessRogueMiracleInfo JIBDGCFCDIO = 14;
    FBNJOFCEMIL BDJEBPNJELP = 15;
}

message GEKLEELLCBF {
    bool EJOIJGCLCJO = 2;
    uint32 LFCDODFMHHN = 4;
    bool LGBOHDICFPK = 6;
    repeated BABHBOMOMDF AHOOAFGDEHF = 8;
    OGADIMMLJHN status = 9;
    AKKHKMECAFL reason = 14;
}

message AGGMHDJGFDI {
    uint32 OGNHPKOJHJP = 3;
    uint32 KLGMNCHBICP = 13;
}

message FNIJJHAENBL {
    repeated uint32 difficulty_id_list = 13;
}

message BABHBOMOMDF {
    repeated LHOMIEDAOID MNFJEIININL = 2;
    uint32 OGLDNEFKNDO = 4;
    uint32 BHPGJCICMJM = 9;
    ODBNIGDLNCF status = 13;
    uint32 layer_id = 15;
}

message LHOMIEDAOID {
    LMIKNFDLFFO status = 1;
    uint32 room_id = 4;
    uint32 AKDLEBLPBMD = 14;
    uint32 EIPNNEJNNKJ = 15;
}

message RogueTournStartCsReq {
    bool LGBOHDICFPK = 1;
    uint32 DBAHFEFGLMD = 2;
    bool EJOIJGCLCJO = 11;
    repeated uint32 base_avatar_id_list = 15;
}

message RogueTournStartScRsp {
    FJEMJBNAJFJ LCOCLENJJAI = 1;
    uint32 KHJCGNLLFOH = 3;
    CFCDHLPOOGC BHMHLPCHKLG = 11;
    uint32 retcode = 13;
}

message RogueTournEnterCsReq {
}

message RogueTournEnterScRsp {
    uint32 retcode = 4;
    CFCDHLPOOGC BHMHLPCHKLG = 10;
    FJEMJBNAJFJ LCOCLENJJAI = 14;
}

message RogueTournLeaveCsReq {
}

message RogueTournLeaveScRsp {
    FJEMJBNAJFJ LCOCLENJJAI = 4;
    uint32 retcode = 11;
}

message RogueTournSettleCsReq {
}

message RogueTournFinishInfo {
    NKPKIAAMODG CJCOJAMLEEL = 2;
    GPNJMEHNDMN KGCIAIAFIBE = 3;
    FBHNFJCNHML PFOEPFPHFNJ = 4;
    CFCDHLPOOGC BHMHLPCHKLG = 5;
    NNIJCDKHPKL GCGLNKFDKKN = 6;
    LineupInfo rogue_lineup_info = 13;
    KCLCHJMNPGL CLKHPONDDDO = 15;
}

message RogueTournSettleScRsp {
    RogueTournFinishInfo tourn_finish_info = 7;
    uint32 retcode = 11;
    FJEMJBNAJFJ LCOCLENJJAI = 12;
}

message RogueTournEnterRoomCsReq {
    uint32 FLLABLFBEIK = 7;
    uint32 BHPGJCICMJM = 15;
}

message RogueTournEnterRoomScRsp {
    uint32 retcode = 5;
    FJEMJBNAJFJ LCOCLENJJAI = 7;
}

message RogueTournEnterLayerCsReq {
    uint32 FLLABLFBEIK = 4;
    uint32 LFCDODFMHHN = 11;
}

message RogueTournEnterLayerScRsp {
    uint32 retcode = 2;
    FJEMJBNAJFJ LCOCLENJJAI = 5;
}

message RogueTournLevelInfoUpdateScNotify {
    AKKHKMECAFL reason = 9;
    repeated BABHBOMOMDF AHOOAFGDEHF = 12;
    OGADIMMLJHN status = 14;
    uint32 LFCDODFMHHN = 15;
}

message RogueTournTakeExpRewardCsReq {
    repeated uint32 LOPMHJFBHIM = 10;
    uint32 ACGKFEDNDFH = 15;
}

message RogueTournTakeExpRewardScRsp {
    ItemList reward = 5;
    uint32 retcode = 6;
    uint32 exp = 9;
    repeated uint32 CKBMGABEEGO = 10;
}

message RogueTournExpNotify {
    uint32 exp = 13;
}

message RogueTournQueryCsReq {
}

message OLKFPHPBPDL {
    repeated uint32 HDMDAODJACB = 4;
    uint32 DBAHFEFGLMD = 7;
    bool is_taken_reward = 8;
    bool is_unlocked = 12;
    bool GMOPLJJGBPO = 13;
    bool BIIFELFEGNK = 14;
}

message LHAEABOJGOP {
    uint32 LFPCCPOLJPC = 3;
    bool GPODHHAOHNP = 6;
    uint32 KHJCGNLLFOH = 12;
    int64 end_time = 14;
}

message NDNKBAGGDHD {
    uint32 exp = 2;
    repeated uint32 CKBMGABEEGO = 9;
}

message BOICEKFMCIC {
    uint32 BJCEKLKNLCD = 7;
    IMJMGEENCEH talent_info_list = 14;
}

message JIGDNFDNOJD {
    uint32 HANDCDPIBLD = 3;
    bool is_unlocked = 7;
}

message PMBNJOONHPA {
    uint32 ACGKFEDNDFH = 2;
    uint32 KAEOJCOBIHC = 15;
}

message KGDOFADNDAJ {
    repeated uint32 FAJCNMEKKNN = 2;
    repeated uint32 KCDLMNINCGE = 3;
    repeated uint32 IDOECNPKGCE = 5;
    uint32 BOFLHOFKACN = 6;
    repeated uint32 PPCONKKPIPM = 7;
    repeated uint32 NFFBJBBCDMG = 11;
    repeated uint32 BKGJPCCLIDN = 15;
}

message KCLCHJMNPGL {
    uint32 OFGBJCCCIKE = 6;
    uint32 NGIAMBEIHPI = 13;
}

message CHGGGEGAMDI {
    LHAEABOJGOP JDBMBIKPBJB = 2;
    repeated CJPKPJFJKDG GMOPEKCOLBE = 3;
    KGDOFADNDAJ IAKCMPLPOEE = 4;
    repeated JIGDNFDNOJD DIMGDINCCJI = 7;
    repeated OLKFPHPBPDL JIDJEAMDKDE = 8;
    BOICEKFMCIC EHOBBJMEDEE = 11;
    GIGPOFFBIEO LLAOOGCHHDK = 12;
    NDNKBAGGDHD HNDBKKLOMLC = 13;
    PMBNJOONHPA FEJGMNNFFLG = 14;
    KCLCHJMNPGL LKCEFCLJCBM = 15;
}

message RogueTournQueryScRsp {
    CHGGGEGAMDI rogue_get_info = 1;
    uint32 retcode = 7;
    CFCDHLPOOGC BHMHLPCHKLG = 13;
}

message RogueTournAreaUpdateScNotify {
    repeated OLKFPHPBPDL JIDJEAMDKDE = 8;
}

message CJPKPJFJKDG {
    int64 end_time = 3;
    BKFFNNAIODC data = 4;
    uint32 max_times = 8;
    int64 time = 10;
    string name = 12;
    PMBNJOONHPA FEJGMNNFFLG = 13;
    CFCDHLPOOGC BHMHLPCHKLG = 15;
}

message BKFFNNAIODC {
    repeated GJOIBMFANHL CKGFONMAEKO = 5;
    repeated FFAMNKOAIHF buff_list = 6;
    uint32 CPIOGJKFECH = 12;
}

message RogueTournGetAllArchiveCsReq {
}

message RogueTournGetAllArchiveScRsp {
    uint32 retcode = 1;
    repeated CJPKPJFJKDG EDJPODPNMED = 13;
}

message RogueTournDeleteArchiveCsReq {
    uint32 max_times = 11;
}

message RogueTournDeleteArchiveScRsp {
    uint32 max_times = 8;
    uint32 retcode = 13;
}

message RogueTournRenameArchiveCsReq {
    string name = 2;
    uint32 max_times = 10;
}

message RogueTournRenameArchiveScRsp {
    uint32 retcode = 3;
    uint32 max_times = 11;
    string name = 15;
}

message RogueTournClearArchiveNameScNotify {
    uint32 max_times = 10;
}

message OOMGHIBBCBN {
    uint32 KAEOJCOBIHC = 1;
    repeated uint32 HMJFCDLCIFD = 6;
    uint32 ACGKFEDNDFH = 7;
    repeated BMPCJDEAIIH HGCGILABNDL = 10;
    repeated uint32 MKAIFJIBJIK = 11;
    repeated uint32 JNCBPDHCAHI = 13;
    repeated uint32 AMLDAILBMBO = 15;
}

message BMPCJDEAIIH {
    uint32 OFIKKOGKLGO = 2;
    uint32 max_times = 3;
    uint32 FCLOLOBFPAL = 4;
    uint32 avatar_id = 8;
    repeated uint32 BIJGJECJMHM = 10;
}

message ABDABIIKOJC {
    OOMGHIBBCBN GNDIODGOGPI = 1;
    int64 time = 4;
    uint32 max_times = 13;
    string name = 14;
}

message NEMPMKMLMPA {
}

message PIFEBIKOBKK {
    uint32 retcode = 4;
    repeated ABDABIIKOJC IICCNGOKKLF = 5;
}

message NAFDLMKOPKI {
    repeated uint32 NDOBMAJMLNK = 5;
}

message IMJLMLGPDKN {
    repeated uint32 NDOBMAJMLNK = 3;
    uint32 retcode = 5;
}

message HCKHBFLLEPL {
    string name = 1;
    OOMGHIBBCBN GNDIODGOGPI = 3;
    uint32 max_times = 13;
}

message BKHCDHKLADH {
    string name = 2;
    uint32 retcode = 10;
    uint32 max_times = 11;
}

message EGHMOPNDPPB {
    uint32 max_times = 5;
    string name = 10;
}

message DJICLHILEPO {
    uint32 retcode = 9;
    uint32 max_times = 10;
    string name = 15;
}

message RogueTournGetPermanentTalentInfoCsReq {
}

message RogueTournGetPermanentTalentInfoScRsp {
    uint32 retcode = 4;
    BOICEKFMCIC EHOBBJMEDEE = 13;
}

message RogueTournEnablePermanentTalentCsReq {
    uint32 talent_id = 13;
}

message RogueTournEnablePermanentTalentScRsp {
    BOICEKFMCIC EHOBBJMEDEE = 5;
    uint32 retcode = 6;
}

message RogueTournResetPermanentTalentCsReq {
}

message RogueTournResetPermanentTalentScRsp {
    BOICEKFMCIC EHOBBJMEDEE = 3;
    uint32 retcode = 8;
}

message RogueTournEnterRogueCocoonSceneCsReq {
    uint32 IBGNLBOEBCG = 3;
    repeated PHHKOMBGPPK avatar_list = 5;
    uint32 PILMKHCKMED = 7;
    uint32 PBALFIENEFO = 9;
    bool EIDDMGHLPBP = 15;
}

message RogueTournEnterRogueCocoonSceneScRsp {
    uint32 retcode = 2;
    FJEMJBNAJFJ LCOCLENJJAI = 15;
}

message RogueTournLeaveRogueCocoonSceneCsReq {
}

message RogueTournLeaveRogueCocoonSceneScRsp {
    uint32 retcode = 10;
    FJEMJBNAJFJ LCOCLENJJAI = 15;
}

message RogueTournReEnterRogueCocoonStageCsReq {
    bool EIDDMGHLPBP = 8;
}

message RogueTournReEnterRogueCocoonStageScRsp {
    SceneBattleInfo battle_info = 1;
    uint32 retcode = 2;
}

message RogueTournGetCurRogueCocoonInfoCsReq {
}

message RogueTournGetCurRogueCocoonInfoScRsp {
    uint32 PBALFIENEFO = 1;
    uint32 IBGNLBOEBCG = 2;
    uint32 retcode = 8;
    uint32 PILMKHCKMED = 15;
}

message RogueTournDifficultyCompNotify {
    repeated uint32 GGGFIGCPKLF = 11;
}

message JNIAOGIIOGB {
    uint32 DEIDCHAMDBA = 9;
}

message JCCCACNFDJG {
    uint32 DEIDCHAMDBA = 11;
}

message JFIHGDPOIID {
    uint32 buff_id = 11;
}

message ECGOCHPMCPD {
    uint32 event_id = 14;
}

message APFJLOFINFJ {
    uint32 AMBDKDAMHLH = 15;
}

message FIDFNNCJAJE {
    uint32 IJPPKNKNLNL = 2;
    uint32 DCHPOGOBDKO = 5;
    uint32 level = 11;
    uint32 IBOEKJBOMOG = 14;
}

message RogueTournHandBookNotify {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message RogueTournGetSettleInfoCsReq {
    uint32 DBAHFEFGLMD = 1;
}

message RogueTournGetSettleInfoScRsp {
    uint32 retcode = 3;
    RogueTournFinishInfo tourn_finish_info = 7;
}

message RogueTournConfirmSettleCsReq {
    uint32 DBAHFEFGLMD = 6;
    string name = 9;
    uint32 max_times = 15;
}

message RogueTournConfirmSettleScRsp {
    uint32 retcode = 1;
    CJPKPJFJKDG OHHJKGFOFHB = 3;
    ItemList GFONFDBFBNA = 10;
    ItemList JPLAAPJCCBH = 12;
    FJEMJBNAJFJ LCOCLENJJAI = 15;
}

message RogueTournWeekChallengeUpdateScNotify {
    LHAEABOJGOP JDBMBIKPBJB = 14;
}

message RogueTournGetMiscRealTimeDataCsReq {
}

message RogueTournGetMiscRealTimeDataScRsp {
    uint32 retcode = 1;
    NNIJCDKHPKL GCGLNKFDKKN = 2;
    NKPKIAAMODG CJCOJAMLEEL = 6;
    FBHNFJCNHML PFOEPFPHFNJ = 8;
    KCLCHJMNPGL CLKHPONDDDO = 10;
    GPNJMEHNDMN KGCIAIAFIBE = 12;
}

message RogueTournGetArchiveRepositoryCsReq {
}

message RogueTournGetArchiveRepositoryScRsp {
    uint32 retcode = 7;
    repeated uint32 HKDOCLOPKOH = 10;
    repeated uint32 LNEJMJBFLLH = 14;
}

message RogueTournReviveCostUpdateScNotify {
    ItemCostData rogue_revive_cost = 3;
}

message RogueTournReviveAvatarCsReq {
    uint32 interacted_prop_entity_id = 5;
    repeated uint32 base_avatar_id_list = 14;
}

message RogueTournReviveAvatarScRsp {
    uint32 retcode = 1;
    ItemCostData rogue_revive_cost = 10;
}

message RogueTournBattleFailSettleInfoScNotify {
    RogueTournFinishInfo tourn_finish_info = 7;
    FJEMJBNAJFJ LCOCLENJJAI = 12;
}

message GIGPOFFBIEO {
    IMJMGEENCEH talent_info_list = 5;
    uint32 CMOGHIANDFL = 6;
}

message RogueTournGetSeasonTalentInfoCsReq {
}

message RogueTournGetSeasonTalentInfoScRsp {
    GIGPOFFBIEO LLAOOGCHHDK = 8;
    uint32 retcode = 15;
}

message RogueTournEnableSeasonTalentCsReq {
    uint32 talent_id = 12;
}

message RogueTournEnableSeasonTalentScRsp {
    uint32 retcode = 5;
    GIGPOFFBIEO LLAOOGCHHDK = 9;
}

message RogueTournTitanUpdateTitanBlessProgressScNotify {
    uint32 LDFGIFDFPCF = 15;
}

message GetRollShopInfoCsReq {
    uint32 roll_shop_id = 14;
}

message GetRollShopInfoScRsp {
    uint32 retcode = 5;
    uint32 gacha_random = 12;
    repeated uint32 shop_group_id_list = 13;
    uint32 roll_shop_id = 15;
}

message DoGachaInRollShopCsReq {
    uint32 gacha_count = 3;
    uint32 gacha_random = 4;
    uint32 roll_shop_id = 11;
}

message DoGachaInRollShopScRsp {
    uint32 reward_display_type = 3;
    uint32 roll_shop_id = 4;
    ItemList reward = 9;
    uint32 retcode = 11;
    uint32 PENILHGLHHM = 13;
}

message TakeRollShopRewardCsReq {
    uint32 roll_shop_id = 9;
}

message TakeRollShopRewardScRsp {
    ItemList Reward = 4;
    uint32 GroupType = 8;
    uint32 RollShopId = 9;
    uint32 retcode = 12;
}

message SceneActorInfo {
    AvatarType avatar_type = 9;
    uint32 uid = 11;
    uint32 base_avatar_id = 12;
    uint32 map_layer = 15;
}

message NpcMonsterRogueInfo {
    uint32 elite_group = 1;
    uint32 DNEAMPLLFME = 3;
    uint32 hard_level_group = 9;
    uint32 level = 12;
    uint32 rogue_monster_id = 13;
}

message NpcMonsterExtraInfo {
    NpcMonsterRogueInfo rogue_game_info = 3;
}

message SceneNpcMonsterInfo {
    uint32 monster_id = 3;
    NpcMonsterExtraInfo extra_info = 6;
    uint32 world_level = 7;
    uint32 event_id = 12;
    bool MPFEDFBKKDF = 13;
    bool IDPJIDNLEHH = 15;
}

message NpcDialogueEventParam {
    uint32 arg_id = 6;
    uint32 rogue_dialogue_event_id = 9;
}

message NpcRogueGameInfo {
    uint32 aeon_talk_id = 1;
    uint32 talk_dialogue_id = 2;
    map<uint32, uint32> KJCBNEINDHL = 4;
    uint32 event_unique_id = 5;
    bool JENFHOMBKKE = 6;
    bool finish_dialogue = 7;
    bool LOMILOMCAOM = 11;
}

message KKFKKPPLDAI {
    uint32 AMLKPOHDELN = 7;
    bool is_meet = 13;
    uint32 visitor_id = 14;
}

message CLFACBCGIFL {
    uint32 KLFCNOAGGPC = 1;
    uint32 INCAGNLDJMN = 9;
}

message NpcExtraInfo {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message SceneNpcInfo {
    NpcExtraInfo extra_info = 6;
    uint32 npc_id = 12;
}

message PropRogueInfo {
    uint32 CCDEPAPJNKO = 6;
    uint32 room_id = 9;
    uint32 site_id = 13;
    uint32 BBNFIIFMGAK = 15;
}

message PropAeonInfo {
    uint32 DialogueGroupId = 2;
    uint32 AddExp = 4;
    uint32 AeonId = 10;
}

message PropChessRogueInfo {
    bool enter_next_cell = 3;
    bool AKCGHBFGBCC = 13;
}

message RogueTournDoorInfo {
    bool enter_next_layer = 2;
    uint32 rogue_door_next_room_type = 8;
    uint32 EIPNNEJNNKJ = 13;
}

message RogueMagicDoorInfo {
    uint32 EIPNNEJNNKJ = 7;
    bool enter_next_layer = 8;
    uint32 rogue_door_next_room_type = 10;
}

message WorkbenchFuncIdInfo {
    bool is_valid = 6;
    uint32 func_id = 14;
}

message RogueTournWorkbenchInfo {
    uint32 workbench_id = 4;
    repeated WorkbenchFuncIdInfo workbench_func_list = 5;
}

message RogueGambleMachineInfo {
    uint32 MGDMHLGJHOC = 11;
    RogueGambleInfo gamble_info = 12;
}

message RogueCurseChestInfo {
    uint32 chest_id = 5;
}

message PropTimelineInfo {
    string timeline_byte_value = 6;
    bool timeline_bool_value = 9;
}

message PropExtraInfo {
    PropTimelineInfo TimelineInfo = 9;
    oneof infoCase_ {
        RogueTournWorkbenchInfo RogueTournWorkbenchInfo = 3;
        PropRogueInfo RogueInfo = 5;
        PropChessRogueInfo ChessRogueInfo = 6;
        RogueTournDoorInfo RogueTournDoorInfo = 7;
        RogueGambleMachineInfo RogueGambleMachineInfo = 10;
        PropAeonInfo AeonInfo = 11;
        RogueMagicDoorInfo RogueMagicDoorInfo = 12;
        RogueCurseChestInfo RogueCurseChestInfo = 14;
    }
}

message ScenePropInfo {
    uint32 life_time_ms = 1;
    uint32 prop_id = 3;
    string trigger_name_list = 4;
    uint64 create_time_ms = 6;
    PropExtraInfo extra_info = 13;
    uint32 prop_state = 14;
}

message SceneSummonUnitInfo {
    uint32 attach_entity_id = 2;
    string trigger_name_list = 4;
    uint32 caster_entity_id = 5;
    int32 life_time_ms = 7;
    uint64 create_time_ms = 13;
    uint32 summon_unit_id = 15;
}

message SceneEntityInfo {
    uint32 EntityId = 2;
    uint32 InstId = 8;
    MotionInfo Motion = 9;
    uint32 GroupId = 15;
    oneof entityCase_ {
        SceneNpcMonsterInfo NpcMonster = 4;
        ScenePropInfo Prop = 5;
        SceneActorInfo Actor = 6;
        SceneSummonUnitInfo SummonUnit = 7;
        SceneNpcInfo Npc = 12;
    }
}

message BuffInfo {
    map<string, sfixed32> dynamic_values = 1;
    uint64 add_time_ms = 2;
    uint32 base_avatar_id = 3;
    uint32 level = 5;
    uint32 count = 6;
    uint32 buff_summon_entity_id = 8;
    fixed32 life_time = 9;
    uint32 buff_id = 11;
}

message EntityBuffInfo {
    uint32 entity_id = 14;
    repeated BuffInfo buff_list = 15;
}

message MechanismBarInfo {
    uint32 OHDEOIGHIEM = 2;
    uint32 value = 3;
}

message CustomSaveData {
    uint32 group_id = 3;
    string AAMHHECOCOI = 9;
}

message KEGMIHDFPMM {
    uint32 CPPDJFKIIHK = 6;
    uint32 BLOGJDCKAHM = 14;
}

message SceneEntityGroupInfo {
    map<string, int32> HEJAMOOJBCJ = 3;
    uint32 state = 6;
    uint32 group_id = 9;
    repeated SceneEntityInfo entity_list = 12;
}

message SceneGroupState {
    uint32 group_id = 3;
    bool is_default = 4;
    uint32 state = 12;
}

message MissionStatusBySceneInfo {
    repeated uint32 finished_main_mission_id_list = 6;
    repeated uint32 disabled_main_mission_id_list = 8;
    repeated uint32 unfinished_main_mission_id_list = 11;
    repeated Mission sub_mission_status_list = 13;
    repeated MainMissionCustomValue BIGEHKDPGPN = 14;
}

message SceneInfo {
    uint32 game_mode_type = 2;
    uint32 client_pos_version = 3;
    uint32 leader_entity_id = 4;
    repeated BuffInfo scene_buff_info_list = 5;
    uint32 floor_id = 6;
    uint32 world_id = 7;
    uint32 entry_id = 8;
    repeated CustomSaveData custom_data_list = 9;
    map<uint32, KEGMIHDFPMM> MPEHIBKEOBE = 10;
    repeated EntityBuffInfo entity_buff_info_list = 11;
    repeated uint32 lighten_section_list = 13;
    uint32 plane_id = 14;
    repeated SceneEntityInfo entity_list = 15;
    repeated SceneEntityGroupInfo entity_group_list = 351;
    repeated SceneGroupState group_state_list = 524;
    repeated uint32 DJBIBIJMEBH = 624;
    MissionStatusBySceneInfo scene_mission_info = 976;
    uint32 content_id = 1168;
    uint32 dimension_id = 1384;
    map<string, int32> floor_saved_data = 1560;
    uint32 game_story_line_id = 1925;
}

message EntityMotion {
    bool NFOPIKDKPGG = 1;
    uint32 map_layer = 10;
    uint32 entity_id = 12;
    MotionInfo motion = 13;
}

message SceneEntityMoveCsReq {
    uint64 PEMLEJJBAJE = 6;
    uint32 entry_id = 14;
    repeated EntityMotion entity_motion_list = 15;
}

message SceneEntityMoveScRsp {
    ClientDownloadData download_data = 2;
    uint32 retcode = 4;
    repeated EntityMotion entity_motion_list = 15;
}

message SceneEntityMoveScNotify {
    uint32 client_pos_version = 2;
    MotionInfo motion = 5;
    uint32 entry_id = 6;
    uint32 entity_id = 14;
}

message SceneUpdatePositionVersionNotify {
    uint32 pos_version = 9;
}

message InteractPropCsReq {
    uint32 interact_id = 10;
    uint32 prop_entity_id = 13;
}

message InteractPropScRsp {
    uint32 prop_state = 2;
    uint32 prop_entity_id = 12;
    uint32 retcode = 13;
}

message ChangePropTimelineInfoCsReq {
    bool is_close_map = 2;
    uint32 prop_entity_id = 8;
    uint64 uuid = 9;
    PropTimelineInfo timeline_info = 11;
}

message ChangePropTimelineInfoScRsp {
    uint32 prop_entity_id = 10;
    uint32 retcode = 14;
}

message HitMonsterBattleInfo {
    uint32 target_monster_entity_id = 7;
    MonsterBattleType monster_battle_type = 9;
}

message DynamicValues {
    string key = 3;
    fixed32 value = 10;
}

message AssistMonsterEntityInfo {
    repeated uint32 entity_id_list = 11;
}

message SceneCastSkillCsReq {
    uint32 HCHDHLJCIJE = 1;
    string maze_ability_str = 3;
    repeated uint32 hit_target_entity_id_list = 4;
    repeated SkillExtraTag skill_extra_tags = 5;
    repeated AssistMonsterEntityInfo assist_monster_entity_info = 6;
    repeated DynamicValues dynamic_values = 7;
    repeated uint32 assist_monster_entity_id_list = 8;
    uint32 skill_index = 10;
    uint32 attacked_by_entity_id = 11;
    MotionInfo target_motion = 13;
    uint32 cast_entity_id = 14;
}

message SceneCastSkillScRsp {
    uint32 retcode = 3;
    uint32 cast_entity_id = 8;
    repeated HitMonsterBattleInfo monster_battle_info = 9;
    SceneBattleInfo battle_info = 11;
}

message SceneCastSkillCostMpCsReq {
    uint32 attacked_by_entity_id = 5;
    uint32 skill_index = 8;
    uint32 cast_entity_id = 10;
}

message SceneCastSkillCostMpScRsp {
    uint32 cast_entity_id = 5;
    uint32 retcode = 14;
}

message SceneCastSkillMpUpdateScNotify {
    uint32 mp = 5;
    uint32 cast_entity_id = 10;
}

message SceneEnterStageCsReq {
    uint32 event_id = 3;
    RebattleType rebattle_type = 4;
    bool PMJAHILBLFL = 13;
}

message SceneEnterStageScRsp {
    SceneBattleInfo battle_info = 2;
    uint32 retcode = 15;
}

message SceneReviveAfterRebattleCsReq {
    RebattleType rebattle_type = 12;
}

message SceneReviveAfterRebattleScRsp {
    uint32 retcode = 2;
}

message GetCurSceneInfoCsReq {
}

message GetCurSceneInfoScRsp {
    SceneInfo scene = 9;
    uint32 retcode = 11;
}

message EntityBuffChangeInfo {
    SceneEntityBuffChangeType reason = 7;
    uint32 entity_id = 12;
    uint32 cast_entity_id = 15;
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message SyncEntityBuffChangeListScNotify {
    repeated EntityBuffChangeInfo entity_buff_change_list = 3;
}

message SpringRefreshCsReq {
    uint32 prop_entity_id = 5;
    uint32 plane_id = 9;
    uint32 floor_id = 13;
}

message SpringRefreshScRsp {
    uint32 retcode = 10;
}

message LastSpringRefreshTimeNotify {
    int64 JBICINDPIGM = 3;
}

message ReturnLastTownCsReq {
}

message ReturnLastTownScRsp {
    uint32 retcode = 12;
    SceneInfo scene = 15;
}

message EnterSectionCsReq {
    uint32 section_id = 7;
}

message EnterSectionScRsp {
    uint32 retcode = 11;
}

message SetCurInteractEntityCsReq {
    uint32 entity_id = 14;
}

message SetCurInteractEntityScRsp {
    uint32 retcode = 2;
}

message RecoverAllLineupCsReq {
}

message RecoverAllLineupScRsp {
    uint32 retcode = 12;
}

message SavePointsInfoNotify {
    uint32 ValidTimes = 3;
    int64 RefreshTime = 10;
}

message StartCocoonStageCsReq {
    uint32 prop_entity_id = 4;
    uint32 world_level = 6;
    uint32 cocoon_id = 9;
    uint32 wave = 14;
}

message StartCocoonStageScRsp {
    uint32 wave = 3;
    uint32 cocoon_id = 6;
    SceneBattleInfo battle_info = 8;
    uint32 retcode = 13;
    uint32 prop_entity_id = 14;
}

message EntityBindPropCsReq {
    bool MJJMPIFLMKF = 10;
    MotionInfo motion = 11;
}

message EntityBindPropScRsp {
    uint32 retcode = 9;
}

message SetClientPausedCsReq {
    bool paused = 1;
}

message SetClientPausedScRsp {
    bool paused = 9;
    uint32 retcode = 10;
}

message DeactivateFarmElementCsReq {
    uint32 entity_id = 13;
}

message DeactivateFarmElementScRsp {
    uint32 retcode = 12;
    uint32 entity_id = 13;
}

message ActivateFarmElementCsReq {
    uint32 entity_id = 5;
    uint32 world_level = 13;
}

message ActivateFarmElementScRsp {
    uint32 world_level = 3;
    uint32 entity_id = 4;
    uint32 retcode = 7;
}

message AvatarPresetHp {
    uint32 JLAFLDCHDGJ = 1;
    uint32 avatar_id = 8;
}

message SpringRecoverConfig {
    repeated AvatarPresetHp BCGLMLABOGF = 1;
    uint32 EIDNIGIFNAA = 9;
    bool GHDEPANCGPF = 15;
}

message UpdateMechanismBarScNotify {
    uint32 floor_id = 3;
    uint32 plane_id = 5;
    MechanismBarInfo GIGKDAPGNME = 8;
}

message SetGroupCustomSaveDataCsReq {
    string AAMHHECOCOI = 7;
    uint32 group_id = 11;
    uint32 entry_id = 12;
}

message SetGroupCustomSaveDataScRsp {
    uint32 retcode = 11;
    uint32 entry_id = 13;
    uint32 group_id = 15;
}

message ReEnterLastElementStageCsReq {
    uint32 stage_id = 12;
}

message ReEnterLastElementStageScRsp {
    uint32 stage_id = 8;
    SceneBattleInfo battle_info = 10;
    uint32 retcode = 13;
}

message SceneEntityTeleportCsReq {
    uint32 entry_id = 3;
    EntityMotion entity_motion = 8;
}

message SceneEntityTeleportScRsp {
    EntityMotion entity_motion = 3;
    uint32 client_pos_version = 4;
    uint32 retcode = 12;
}

message EnterSceneCsReq {
    uint32 teleport_id = 1;
    uint32 game_story_line_id = 4;
    uint32 entry_id = 6;
    uint32 content_id = 7;
    bool is_close_map = 10;
}

message EnterSceneScRsp {
    bool is_close_map = 1;
    uint32 game_story_line_id = 7;
    uint32 retcode = 9;
    bool is_over_map = 10;
    uint32 content_id = 15;
}

message EnterSceneByServerScNotify {
    SceneInfo scene = 2;
    LineupInfo lineup = 9;
    EnterSceneReason reason = 15;
}

message ScenePlaneEventScNotify {
    ItemList MEEKFPCOBAI = 2;
    ItemList ACFCJIOMJNF = 7;
    ItemList EPOJGHEBPKC = 11;
    ItemList MHDJADHNDKD = 13;
}

message GetSceneMapInfoCsReq {
    uint32 entry_story_line_id = 1;
    repeated uint32 floor_id_list = 5;
    bool IGFIKGHLLNO = 7;
    uint32 content_id = 9;
    repeated uint32 entry_id_list = 15;
}

message MazePropState {
    uint32 state = 6;
    uint32 config_id = 11;
    uint32 group_id = 12;
}

message OFCAIGDHPOH {
    PropExtraInfo extra_info = 1;
    uint32 config_id = 3;
    uint32 state = 5;
    uint32 group_id = 7;
}

message MazeGroup {
    bool ILBEAAOOJJP = 1;
    int64 INLDCCLIOAN = 4;
    uint32 group_id = 5;
    repeated uint32 NOBKEONAKLE = 12;
}

message ChestInfo {
    uint32 opened_num = 1;
    ChestType chest_type = 8;
    uint32 exist_num = 14;
}

message NPAOGKFKAAE {
    uint32 FLJINDNJPHL = 9;
    uint32 type = 10;
    uint32 FOKCIFJMJGL = 11;
}

message SceneMapInfo {
    repeated ChestInfo chest_list = 1;
    uint32 floor_id = 2;
    uint32 cur_map_entry_id = 3;
    repeated MazePropState maze_prop_list = 4;
    repeated MazeGroup maze_group_list = 5;
    repeated OFCAIGDHPOH LMNGAHFNAON = 6;
    repeated NPAOGKFKAAE JMLDMOCNMHM = 7;
    repeated uint32 unlock_teleport_list = 8;
    uint32 retcode = 9;
    uint32 entry_id = 10;
    repeated uint32 lighten_section_list = 11;
    uint32 dimension_id = 12;
    map<string, int32> floor_saved_data = 15;
}

message GetSceneMapInfoScRsp {
    bool IGFIKGHLLNO = 1;
    uint32 entry_story_line_id = 6;
    uint32 content_id = 10;
    repeated SceneMapInfo scene_map_info = 12;
    uint32 retcode = 14;
}

message SyncServerSceneChangeNotify {
}

message GameplayCounterCountDownCsReq {
    uint32 NMGLNHPANAH = 6;
    uint32 cur_times = 9;
}

message GameplayCounterCountDownScRsp {
    uint32 retcode = 13;
}

message GameplayCounterUpdateScNotify {
    GameplayCounterUpdateReason reason = 5;
    uint32 BLOGJDCKAHM = 13;
    uint32 NMGLNHPANAH = 15;
}

message GameplayCounterRecoverCsReq {
    uint32 LABOODDALOE = 8;
    uint32 NMGLNHPANAH = 14;
}

message GameplayCounterRecoverScRsp {
    uint32 retcode = 8;
}

message UpdateFloorSavedValueNotify {
    uint32 plane_id = 1;
    uint32 dimension_id = 7;
    map<string, int32> OAIFMGLIEEP = 10;
    uint32 floor_id = 12;
}

message GetUnlockTeleportCsReq {
    repeated uint32 entry_id_list = 4;
}

message GetUnlockTeleportScRsp {
    uint32 retcode = 3;
    repeated uint32 unlock_teleport_list = 13;
}

message OpenChestScNotify {
    uint32 chest_id = 8;
}

message SceneEntityRefreshInfo {
    oneof PMLCMGGGFIG {
        SceneEntityInfo add_entity = 3;
        uint32 MHHOAAHDGAO = 5;
        uint32 delete_entity = 9;
    }
}

message CMGFHBHAFFB {
    string JAIBIEEKHEG = 1;
    int32 AGFIJNIEBKF = 7;
    int32 DLMAMKINNCO = 8;
}

message GroupRefreshInfo {
    repeated SceneEntityRefreshInfo refresh_entity = 3;
    uint32 state = 5;
    uint32 group_id = 9;
    repeated CMGFHBHAFFB BCCGJIHNCDN = 11;
    SceneGroupRefreshType refresh_type = 14;
}

message SceneGroupRefreshScNotify {
    repeated GroupRefreshInfo group_refresh_list = 4;
    uint32 floor_id = 10;
    uint32 dimension_id = 14;
}

message GroupStateInfo {
    uint32 group_state = 3;
    uint32 group_id = 4;
    uint32 entry_id = 10;
    uint32 GDNOPAABGHF = 15;
}

message GroupStateChangeCsReq {
    GroupStateInfo group_state_info = 9;
}

message GroupStateChangeScRsp {
    GroupStateInfo group_state_info = 13;
    uint32 retcode = 15;
}

message GroupStateChangeScNotify {
    GroupStateInfo group_state_info = 14;
}

message EnteredSceneInfo {
    uint32 floor_id = 11;
    uint32 plane_id = 12;
}

message GetEnteredSceneCsReq {
}

message GetEnteredSceneScRsp {
    uint32 retcode = 8;
    repeated EnteredSceneInfo entered_scene_info_list = 14;
}

message EnteredSceneChangeScNotify {
    repeated EnteredSceneInfo entered_scene_info_list = 2;
}

message RefreshTriggerByClientCsReq {
    MotionInfo trigger_motion = 2;
    string trigger_name = 3;
    repeated uint32 trigger_target_id_list = 7;
    uint32 trigger_entity_id = 14;
}

message RefreshTriggerByClientScRsp {
    string trigger_name = 3;
    uint32 retcode = 10;
    uint32 trigger_entity_id = 14;
    bool refresh_trigger = 15;
}

message RefreshTriggerByClientScNotify {
    uint32 trigger_entity_id = 8;
    string trigger_name = 11;
    repeated uint32 trigger_target_id_list = 13;
}

message DeleteSummonUnitCsReq {
    repeated uint32 entity_id_list = 3;
}

message DeleteSummonUnitScRsp {
    repeated uint32 entity_id_list = 2;
    uint32 retcode = 10;
}

message UnlockedAreaMapScNotify {
    repeated uint32 entry_id_list = 4;
}

message UnlockTeleportNotify {
    uint32 teleport_id = 2;
    uint32 entry_id = 15;
}

message UpdateGroupPropertyCsReq {
    int32 MOJOHJEBCNJ = 2;
    string JAIBIEEKHEG = 4;
    uint32 floor_id = 7;
    uint32 dimension_id = 10;
    uint32 group_id = 11;
}

message UpdateGroupPropertyScRsp {
    int32 DLMAMKINNCO = 1;
    uint32 dimension_id = 2;
    int32 AGFIJNIEBKF = 5;
    uint32 group_id = 6;
    uint32 floor_id = 9;
    string JAIBIEEKHEG = 10;
    uint32 retcode = 13;
}

message TrainWorldIdChangeScNotify {
    uint32 NPEBNEKDLEN = 15;
}

message ServerPrefs {
    string data = 2;
    uint32 server_prefs_id = 3;
}

message GetAllServerPrefsDataCsReq {
}

message GetAllServerPrefsDataScRsp {
    repeated ServerPrefs server_prefs_list = 2;
    uint32 retcode = 11;
}

message GetServerPrefsDataCsReq {
    uint32 server_prefs_id = 9;
}

message GetServerPrefsDataScRsp {
    ServerPrefs server_prefs = 7;
    uint32 retcode = 14;
}

message UpdateServerPrefsDataCsReq {
    ServerPrefs server_prefs = 10;
}

message UpdateServerPrefsDataScRsp {
    uint32 retcode = 5;
    uint32 server_prefs_id = 12;
}

message Shop {
    int64 BeginTime = 2;
    uint32 CityLevel = 4;
    int64 EndTime = 5;
    repeated Goods GoodsList = 7;
    uint64 CityTakenLevelReward = 8;
    uint32 ShopId = 13;
    uint32 CityExp = 15;
}

message Goods {
    int64 EndTime = 5;
    uint32 ItemId = 6;
    int64 BeginTime = 12;
    uint32 BuyTimes = 13;
    uint32 GoodsId = 15;
}

message GetShopListCsReq {
    uint32 shop_type = 10;
}

message GetShopListScRsp {
    repeated Shop ShopList = 2;
    uint32 retcode = 12;
    uint32 ShopType = 14;
}

message BuyGoodsCsReq {
    uint32 goods_num = 1;
    uint32 interacted_prop_entity_id = 6;
    uint32 goods_id = 7;
    uint32 shop_id = 9;
    uint32 item_id = 10;
    repeated uint32 FMPNHEAIMDN = 15;
}

message BuyGoodsScRsp {
    uint32 retcode = 7;
    uint32 ShopId = 9;
    uint32 GoodsBuyTimes = 10;
    ItemList ReturnItemList = 12;
    uint32 GoodsId = 15;
}

message TakeCityShopRewardCsReq {
    uint32 level = 10;
    uint32 shop_id = 11;
}

message TakeCityShopRewardScRsp {
    uint32 Level = 3;
    ItemList Reward = 5;
    uint32 ShopId = 10;
    uint32 retcode = 12;
}

message CityShopInfoScNotify {
    uint32 ShopId = 5;
    uint32 Exp = 6;
    uint32 Level = 7;
    uint64 TakenLevelReward = 12;
}

message FAFGMLPADMI {
    uint32 FCLNOOGEHMC = 1;
    uint32 unique_id = 3;
    bool HALBHKNPIKH = 5;
    repeated uint32 item_list = 7;
    uint32 BEJEEDAEBBE = 10;
    repeated uint32 IGJCPPKAIBI = 15;
}

message IPJAIINEGEL {
    uint32 BEJEEDAEBBE = 2;
    uint32 ECBALMAEBJC = 9;
}

message SpaceZooDataCsReq {
}

message SpaceZooDataScRsp {
    uint32 PBLCAHNMFJG = 2;
    repeated uint32 KMOADEOGAPA = 3;
    repeated IPJAIINEGEL INIHLANCNFI = 4;
    repeated FAFGMLPADMI AAGIHKBFMFI = 5;
    uint32 retcode = 10;
    repeated uint32 KJFHKICGGDE = 11;
    repeated uint32 BNHNDBNABFN = 12;
    repeated uint32 DPLKBEEHPLB = 14;
    repeated uint32 PMCMECDLEMC = 15;
}

message SpaceZooBornCsReq {
    repeated uint32 HDCBACOOIND = 12;
    uint32 LHEONPHGBNB = 13;
}

message SpaceZooBornScRsp {
    FAFGMLPADMI KPKDHGHDGNB = 1;
    bool IKLPNCGBPPC = 3;
    repeated IPJAIINEGEL GOEAOFNFJOD = 9;
    uint32 retcode = 10;
}

message SpaceZooMutateCsReq {
    uint32 item_id = 4;
    uint32 unique_id = 6;
}

message SpaceZooMutateScRsp {
    FAFGMLPADMI EFLCMHMAJAL = 5;
    repeated IPJAIINEGEL GOEAOFNFJOD = 10;
    bool IKLPNCGBPPC = 12;
    uint32 retcode = 14;
}

message SpaceZooOpCatteryCsReq {
    uint32 NILEEDJLGIN = 1;
    uint32 ALGEIENIOAN = 3;
    uint32 op_type = 8;
}

message SpaceZooOpCatteryScRsp {
    uint32 retcode = 10;
    repeated uint32 KJFHKICGGDE = 11;
}

message SpaceZooDeleteCatCsReq {
    repeated uint32 DEJAOOEBBHA = 2;
}

message SpaceZooDeleteCatScRsp {
    repeated uint32 NFHEAGELICI = 3;
    uint32 retcode = 15;
}

message SpaceZooCatUpdateNotify {
    bool IKLPNCGBPPC = 1;
    repeated FAFGMLPADMI AIKMBPPNOKD = 10;
    bool FPMNCAGJEBG = 14;
}

message SpaceZooExchangeItemCsReq {
    uint32 item_id = 15;
}

message SpaceZooExchangeItemScRsp {
    uint32 retcode = 1;
    uint32 item_id = 14;
}

message SpaceZooTakeCsReq {
    uint32 HLNMAJIDIFD = 9;
}

message SpaceZooTakeScRsp {
    uint32 retcode = 3;
    uint32 HLNMAJIDIFD = 4;
    ItemList reward = 5;
}

message MJCJAIKPLLM {
    uint32 CBINDIAAMJG = 4;
    uint32 IFANGMHNKBB = 7;
    uint32 group_id = 9;
    bool ACELAGJPHMA = 10;
    uint32 MPAECAPOHEO = 11;
}

message GetStarFightDataCsReq {
}

message GetStarFightDataScRsp {
    repeated MJCJAIKPLLM BDIIMMHJLCN = 7;
    uint32 retcode = 12;
}

message AEDAOIFFIGN {
    AvatarType avatar_type = 8;
    uint32 avatar_id = 15;
}

message StartStarFightLevelCsReq {
    uint32 NEDFIBONLKB = 3;
    uint32 group_id = 9;
    repeated AEDAOIFFIGN avatar_list = 11;
}

message StartStarFightLevelScRsp {
    uint32 retcode = 5;
    SceneBattleInfo battle_info = 6;
    uint32 group_id = 10;
    uint32 NEDFIBONLKB = 12;
}

message StarFightDataChangeNotify {
    MJCJAIKPLLM FMCDALALFIA = 11;
    uint32 group_id = 15;
}

message GetStoryLineInfoCsReq {
}

message GetStoryLineInfoScRsp {
    repeated uint32 FMIHHBHFHOA = 1;
    uint32 retcode = 5;
    repeated uint32 LGHCAHBBCAM = 8;
    uint32 GLHFLIEIMJK = 9;
}

message StoryLineInfoScNotify {
    uint32 GLHFLIEIMJK = 1;
    repeated uint32 FMIHHBHFHOA = 3;
    repeated uint32 LGHCAHBBCAM = 7;
    uint32 FIMCEJGDAGF = 14;
}

message ChangeStoryLineFinishScNotify {
    uint32 GLHFLIEIMJK = 8;
    uint32 KIDKHJECJLF = 9;
    bool KOOCCEIGHMA = 10;
    AMJOCDIAPHF NFOJNOHLOAC = 15;
}

message StoryLineTrialAvatarChangeScNotify {
    bool CLIIGMNMHNA = 3;
    repeated uint32 IBLBNIANPHD = 9;
    repeated uint32 KFMFFGGJMNE = 10;
}

message StrongChallengeAvatar {
    AvatarType AvatarType = 3;
    uint32 AvatarId = 14;
}

message JPFJGFOPKHB {
    repeated StrongChallengeAvatar avatar_list = 6;
    repeated uint32 buff_list = 11;
}

message CAAAKPFOEJI {
    uint32 stage_id = 2;
    uint32 panel_id = 4;
    uint32 max_score = 6;
    JPFJGFOPKHB AHINPCKGKJG = 9;
    uint32 JGBAINFDBAN = 10;
}

message HLKGCNFCCIA {
    map<uint32, CAAAKPFOEJI> ALCEDMLHFLM = 8;
}

message GetStrongChallengeActivityDataCsReq {
}

message GetStrongChallengeActivityDataScRsp {
    uint32 retcode = 7;
    HLKGCNFCCIA GIILGFFKHDA = 8;
}

message EnterStrongChallengeActivityStageCsReq {
    repeated StrongChallengeAvatar avatar_list = 1;
    repeated uint32 buff_list = 6;
    uint32 stage_id = 15;
}

message EnterStrongChallengeActivityStageScRsp {
    uint32 retcode = 3;
    SceneBattleInfo battle_info = 7;
    uint32 stage_id = 15;
}

message StrongChallengeActivityBattleEndScNotify {
    uint32 max_score = 1;
    uint32 GGBECCHPHCD = 2;
    uint32 AHJFPNGDBDO = 4;
    BattleEndStatus end_status = 5;
    uint32 score_id = 6;
    uint32 JAMLOKNCAKC = 7;
    uint32 total_damage = 10;
    uint32 stage_id = 11;
}

message PGBHMOLFBMM {
    uint32 group_id = 7;
    uint32 star = 8;
    uint32 NEDFIBONLKB = 15;
}

message GetSummonActivityDataCsReq {
}

message GetSummonActivityDataScRsp {
    repeated PGBHMOLFBMM JHOMKEMCDMG = 1;
    uint32 retcode = 12;
}

message ONOEPLFNELL {
    AvatarType avatar_type = 1;
    uint32 avatar_id = 13;
}

message EnterSummonActivityStageCsReq {
    ONOEPLFNELL MNOEDECLHBJ = 6;
    uint32 group_id = 7;
    uint32 NEDFIBONLKB = 9;
    repeated ONOEPLFNELL avatar_list = 12;
}

message EnterSummonActivityStageScRsp {
    uint32 NEDFIBONLKB = 2;
    SceneBattleInfo battle_info = 3;
    uint32 retcode = 8;
    uint32 group_id = 9;
}

message SummonActivityBattleEndScNotify {
    uint32 group_id = 5;
    uint32 star = 7;
    uint32 HMFFHGBKOGL = 11;
    uint32 NEDFIBONLKB = 13;
}

message HandInfo {
    uint32 config_id = 2;
    uint32 MCBIOHMIMGN = 4;
    uint32 GFJIIABANLM = 5;
    string MJNNBLCDCBJ = 9;
    MotionInfo OFOLPKMALGI = 14;
}

message SwitchHandDataCsReq {
    uint32 config_id = 13;
}

message SwitchHandDataScRsp {
    uint32 retcode = 2;
    uint32 DLNGHHDMJJM = 5;
    uint32 ABOJJANDFNO = 6;
    repeated HandInfo LBOMDFHFFCF = 9;
}

message SwitchHandStartCsReq {
    uint32 config_id = 3;
}

message SwitchHandStartScRsp {
    uint32 config_id = 6;
    uint32 retcode = 8;
}

message SwitchHandFinishCsReq {
}

message SwitchHandFinishScRsp {
    uint32 retcode = 7;
    HandInfo CMFMACMIPEE = 8;
}

message PMGECPBKJCJ {
    HandPropType op_type = 3;
    uint32 group_id = 5;
    uint32 IEFMADJGADB = 7;
    uint32 KDLPEIGHJAK = 15;
}

message SwitchHandUpdateCsReq {
    PMGECPBKJCJ CLBMGBFANLC = 11;
    HandInfo OPBHJAGOAGG = 14;
}

message SwitchHandUpdateScRsp {
    PMGECPBKJCJ CLBMGBFANLC = 2;
    HandInfo CMFMACMIPEE = 4;
    uint32 retcode = 10;
}

message SwitchHandCoinUpdateCsReq {
    uint32 MCBIOHMIMGN = 11;
}

message SwitchHandCoinUpdateScRsp {
    uint32 MCBIOHMIMGN = 9;
    uint32 retcode = 11;
}

message SwitchHandResetHandPosCsReq {
    uint32 config_id = 3;
    MotionInfo OFOLPKMALGI = 13;
}

message SwitchHandResetHandPosScRsp {
    uint32 retcode = 5;
    HandInfo LBOMDFHFFCF = 15;
}

message SwitchHandResetGameCsReq {
    HandInfo DPJNCBBOHKE = 5;
}

message SwitchHandResetGameScRsp {
    uint32 retcode = 9;
    HandInfo LBOMDFHFFCF = 10;
}

message ALEFDNLLKLB {
    DMJLKIFEMMN LJGCPNOGIFO = 2;
    repeated uint32 FDEIGEPCCBP = 4;
    GJBNIIINKFB skill_info = 5;
    uint32 EENJBPMNDOL = 7;
    PGGGCFBKDPK GBEABIMOBIC = 9;
    JKMFMMPMNAM pending_action = 11;
    BPPMEIGAHGI NNCJOECKCKA = 13;
    OCBOLHFOIGI AFPDJDKNENI = 14;
}

message GJBNIIINKFB {
    repeated uint32 CCKHKBNMAPN = 3;
    uint32 MCEGAIBNMGB = 4;
    uint32 BILEGELKMCB = 6;
}

message PGGGCFBKDPK {
    repeated uint32 CNBCKEFNFGE = 1;
    uint32 game_story_line_id = 14;
}

message MMOIBACBPKA {
    HDIJJMDPILE PJGBFKNJPNO = 1;
    uint32 value = 6;
}

message BPPMEIGAHGI {
    uint32 PDMDKAPCOJM = 10;
    uint32 IOMGDIKELIA = 13;
    repeated MMOIBACBPKA MIGFMPJBELG = 14;
}

message LEEHJGNBGNK {
    uint32 HBAPCCEGNME = 10;
    uint32 level = 15;
}

message OCBOLHFOIGI {
    repeated LEEHJGNBGNK FMDKHADMCOC = 11;
}

message DMJLKIFEMMN {
    uint32 IGHLABGGIJE = 1245;
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message PIIBOJCEJJN {
    uint32 GIMLNDLOFFA = 4;
    uint32 daily_index = 6;
}

message KLINPBNKIIA {
    BJNCDEFEEJI CCLJMNCKECP = 3;
    repeated uint32 EIJDEOPOFNB = 9;
    repeated PIIBOJCEJJN DNCBPCENKIF = 14;
}

message PBMKKICMLDA {
    uint32 FHBOMFBLGPD = 2;
}

message JKMFMMPMNAM {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message DPDIEGOAGBP {
}

message FPEGPJCEOEI {
}

message FKHFONPKDIP {
    uint32 dialogue_id = 5;
}

message AEJCCMEPLGO {
}

message NIGCOPGHAMJ {
    bool HHGAPDFINDI = 6;
    uint32 BGLEHMKMAPG = 11;
}

message KHPHAIFNJEI {
}

message PLODIDCJOKA {
}

message KHCAKPOMGNK {
    bool MMKIJAEMNBL = 11;
    uint32 BGLEHMKMAPG = 12;
}

message OMOJDEIFDAM {
    CGHKIDBJHFH PBHMGCHKJGO = 1;
    PKHJBPMIBBA source = 15;
}

message CGHKIDBJHFH {
    oneof IEICDGGELNE {
        OCJGNPIFOBM BIDDDNIPBLE = 3;
        NLCALKLPGOG PJABKIFDNND = 4;
        NMENKIGNBCA DIJHPEHONOK = 5;
        NIGCOPGHAMJ EDHBKECGOLI = 6;
        uint32 NPFPAJLCLNN = 8;
        OJLEHPPJBBC MLCGALIHAIP = 11;
        HJKDNGIHMAA MFHBHKIMDCA = 13;
        OJLEHPPJBBC NIHIFEMOKAM = 14;
        uint32 IOMGDIKELIA = 626;
        uint32 CBAKIHCDENP = 940;
        KHCAKPOMGNK GKAHDHELILD = 1218;
        KHPHAIFNJEI GNPEAMELJDJ = 1923;
    }
}

message HJKDNGIHMAA {
    uint32 dialogue_id = 3;
}

message NLCALKLPGOG {
    uint32 BMALPKEKBEL = 1;
    HDIJJMDPILE PJGBFKNJPNO = 8;
    uint32 OGJOFMCMFPG = 9;
}

message OJLEHPPJBBC {
    uint32 OGJOFMCMFPG = 6;
    uint32 BMALPKEKBEL = 7;
}

message OCJGNPIFOBM {
    uint32 HBAPCCEGNME = 6;
    uint32 level = 12;
    uint32 GFFBDANDHMK = 15;
}

message NMENKIGNBCA {
    DMJLKIFEMMN IFNMBNGIFPH = 4;
    uint32 EENJBPMNDOL = 15;
}

message FGPBIBIJCOH {
    bool HHGAPDFINDI = 14;
    uint32 BGLEHMKMAPG = 15;
}

message SwordTrainingGameSyncChangeScNotify {
    repeated OMOJDEIFDAM LEADMNEIMDP = 3;
}

message HDFKPEEBGEN {
    uint32 id = 3;
    uint32 progress = 8;
}

message NOKODMNOHMN {
    repeated HDFKPEEBGEN NCKCMGCBEHK = 2;
    repeated uint32 ONILFFENAMO = 8;
}

message GetSwordTrainingDataCsReq {
}

message GetSwordTrainingDataScRsp {
    repeated uint32 CNBCKEFNFGE = 1;
    repeated uint32 JOEFNHGGAGO = 3;
    uint32 DCHGIODEDDK = 4;
    NOKODMNOHMN KJKBKEGIGHK = 9;
    repeated uint32 FABKPHMJGHL = 10;
    bool KLBPECANFIG = 11;
    uint32 retcode = 13;
    ALEFDNLLKLB GAJBFPCPIGM = 14;
}

message SwordTrainingTurnActionCsReq {
    repeated uint32 BHNFGPEHOMO = 3;
    repeated uint32 PHAJEHIBKFI = 8;
}

message SwordTrainingTurnActionScRsp {
    repeated uint32 BHNFGPEHOMO = 1;
    uint32 retcode = 6;
}

message SwordTrainingDailyPhaseConfirmCsReq {
    BJNCDEFEEJI IFENLNHLBAB = 5;
}

message SwordTrainingDailyPhaseConfirmScRsp {
    uint32 retcode = 5;
    bool MLLAEFJEMCF = 12;
}

message SwordTrainingDialogueSelectOptionCsReq {
    uint32 KDMLLLGHJON = 2;
}

message SwordTrainingDialogueSelectOptionScRsp {
    uint32 retcode = 5;
}

message SwordTrainingExamResultConfirmCsReq {
}

message SwordTrainingExamResultConfirmScRsp {
    uint32 retcode = 9;
}

message EnterSwordTrainingExamCsReq {
}

message EnterSwordTrainingExamScRsp {
    uint32 retcode = 1;
    SceneBattleInfo battle_info = 14;
}

message SwordTrainingLearnSkillCsReq {
    uint32 skill_id = 8;
}

message SwordTrainingLearnSkillScRsp {
    uint32 skill_id = 5;
    uint32 retcode = 12;
}

message SwordTrainingStartGameCsReq {
    uint32 game_story_line_id = 10;
}

message SwordTrainingStartGameScRsp {
    ALEFDNLLKLB GAJBFPCPIGM = 3;
    uint32 retcode = 5;
}

message SwordTrainingStoryConfirmCsReq {
    uint32 BGLEHMKMAPG = 12;
}

message SwordTrainingStoryConfirmScRsp {
    uint32 retcode = 5;
    uint32 BGLEHMKMAPG = 9;
}

message SwordTrainingGiveUpGameCsReq {
}

message SwordTrainingGiveUpGameScRsp {
    uint32 retcode = 15;
}

message SwordTrainingGameSettleScNotify {
    repeated uint32 CCDCHKKMGJF = 1;
    uint32 IFNMBNGIFPH = 3;
    uint32 PIGEEBCKCOO = 7;
    uint32 FPBNIPMHANH = 8;
    HDMKPHALALG reason = 10;
    uint32 game_story_line_id = 11;
    ItemList reward = 12;
    repeated uint32 PPIMFPOOOKB = 15;
}

message SwordTrainingUnlockSyncScNotify {
    repeated HDFKPEEBGEN NCKCMGCBEHK = 6;
    repeated uint32 ONILFFENAMO = 14;
}

message SwordTrainingSelectEndingCsReq {
    uint32 DECJMBHNNHD = 12;
}

message SwordTrainingSelectEndingScRsp {
    uint32 retcode = 5;
    uint32 DECJMBHNNHD = 10;
}

message SwordTrainingRestoreGameCsReq {
}

message SwordTrainingRestoreGameScRsp {
    uint32 retcode = 13;
    ALEFDNLLKLB GAJBFPCPIGM = 15;
}

message SwordTrainingStoryBattleCsReq {
}

message SwordTrainingStoryBattleScRsp {
    SceneBattleInfo battle_info = 14;
    uint32 retcode = 15;
}

message SwordTrainingActionTurnSettleScNotify {
    uint32 CGFCMKNCCDC = 6;
    repeated MMOIBACBPKA MCCCNLIIIBC = 13;
}

message SwordTrainingResumeGameCsReq {
    uint32 game_story_line_id = 12;
}

message SwordTrainingResumeGameScRsp {
    uint32 retcode = 14;
    ALEFDNLLKLB GAJBFPCPIGM = 15;
}

message SwordTrainingSetSkillTraceCsReq {
    uint32 skill_id = 3;
}

message SwordTrainingSetSkillTraceScRsp {
    uint32 skill_id = 5;
    uint32 retcode = 6;
}

message SwordTrainingMarkEndingViewedCsReq {
}

message SwordTrainingMarkEndingViewedScRsp {
    uint32 retcode = 1;
}

message BLPMHFGIOAC {
    uint32 stamina = 7;
    uint32 KENEKNBJGMG = 13;
}

message OPGPOJAAHHG {
    bool PAGJKDJIGPI = 2;
    string signature = 8;
    repeated HeadIconData unlocked_head_icon_list = 10;
    repeated uint32 ALMMHKFKHLK = 12;
}

message AvatarSync {
    repeated Avatar avatar_list = 1;
}

message DBANAPEAALP {
    repeated uint32 ANIHPCKNGBM = 2;
    repeated IKAMMKLBOCO EJBGGJONBOL = 6;
    repeated Mission mission_list = 7;
    repeated uint32 HNEPOEDCIDK = 9;
    repeated uint32 finished_main_mission_id_list = 10;
    repeated FHABEIKAFBO GAEGMBIOGOH = 11;
    repeated uint32 MCFONOPKOKD = 15;
}

message DMBMPAHKHLA {
    repeated uint32 DINGKFDBCJJ = 4;
    repeated uint32 LKKIDNJCFJA = 6;
}

message LPFMHAJHDMM {
    repeated SectionStatus OMAALPKJIIH = 3;
    repeated uint32 LNEJLGEFPLE = 7;
    repeated uint32 CNGLDJNPOPI = 14;
    repeated GroupStatus KMMBEANDIJH = 15;
}

message PlayerSyncScNotify {
    repeated uint32 DGINPELINHI = 1;
    DBANAPEAALP GEJLEKBBFNC = 2;
    AvatarSync avatar_sync = 3;
    repeated uint32 INKHDOGLEMN = 5;
    repeated Quest quest_list = 6;
    repeated WaitDelResource HLINMKBDKNC = 7;
    PlayerBasicInfo basic_info = 8;
    repeated Equipment equipment_list = 9;
    repeated Material material_list = 10;
    repeated Relic relic_list = 11;
    BLPMHFGIOAC IGGOGFJFPDJ = 14;
    repeated MultiPathAvatarInfo multi_path_avatar_info_list = 161;
    repeated GKDIHIFFHFD IGIPEIMGEAA = 177;
    ItemList MJOKLHFPGAD = 510;
    repeated uint32 OLFLKCBBJOH = 526;
    OPGPOJAAHHG PCLGHHFJMGA = 740;
    uint32 total_achievement_exp = 920;
    LPFMHAJHDMM BKEBJFIPJEH = 1333;
    repeated Material FCOKFFEAPMI = 1611;
    DMBMPAHKHLA OMJOPKGJPLG = 1698;
}

message GetNpcTakenRewardCsReq {
    uint32 npc_id = 9;
}

message GetNpcTakenRewardScRsp {
    uint32 npc_id = 4;
    uint32 retcode = 6;
    repeated uint32 talk_event_list = 10;
}

message TakeTalkRewardCsReq {
    uint32 IEMOEOIMHMA = 3;
    Vector OLCONCNJMMP = 9;
}

message TakeTalkRewardScRsp {
    ItemList reward = 9;
    uint32 IEMOEOIMHMA = 12;
    uint32 retcode = 14;
}

message GetFirstTalkNpcCsReq {
    repeated uint32 npc_id_list = 9;
}

message FirstNpcTalkInfo {
    bool is_meet = 4;
    uint32 npc_id = 5;
}

message GetFirstTalkNpcScRsp {
    uint32 retcode = 8;
    repeated FirstNpcTalkInfo npc_meet_status_list = 9;
}

message FinishFirstTalkNpcCsReq {
    uint32 npc_id = 10;
}

message FinishFirstTalkNpcScRsp {
    uint32 npc_id = 3;
    uint32 retcode = 7;
}

message SelectInclinationTextCsReq {
    uint32 talk_sentence_id = 10;
}

message SelectInclinationTextScRsp {
    uint32 talk_sentence_id = 10;
    uint32 retcode = 11;
}

message NpcMeetByPerformanceStatus {
    bool is_meet = 4;
    uint32 performance_id = 15;
}

message GetFirstTalkByPerformanceNpcCsReq {
    repeated uint32 performance_id_list = 6;
}

message GetFirstTalkByPerformanceNpcScRsp {
    uint32 retcode = 4;
    repeated NpcMeetByPerformanceStatus npc_meet_status_list = 14;
}

message FinishFirstTalkByPerformanceNpcCsReq {
    uint32 performance_id = 8;
}

message FinishFirstTalkByPerformanceNpcScRsp {
    uint32 retcode = 1;
    ItemList reward = 6;
    uint32 performance_id = 11;
}

message EJDGKNKHKHH {
    uint32 level = 7;
    uint32 id = 14;
}

message BKMGDPHACKE {
    uint32 id = 3;
    bool BIINNCNDPCG = 15;
}

message FLOICKMNMLL {
    repeated BKMGDPHACKE DGPEJFLJNOJ = 4;
    repeated EJDGKNKHKHH CNIJNMDGEDD = 11;
}

message OFDGOGDBHAC {
    repeated uint32 LIBLLKBLDCH = 6;
}

message TarotBookGetDataCsReq {
}

message TarotBookGetDataScRsp {
    map<uint32, uint32> JKEMDJIAMHI = 1;
    uint32 retcode = 3;
    uint32 FDCKFKFKHLO = 4;
    map<uint32, uint32> NDCJJPGNFLN = 5;
    FLOICKMNMLL HEFJEJHOJEA = 12;
    uint32 energy_info = 13;
    OFDGOGDBHAC IPNINOPEKBP = 15;
}

message TarotBookOpenPackCsReq {
}

message TarotBookOpenPackScRsp {
    uint32 energy_info = 4;
    map<uint32, uint32> CJENCDIFLCF = 11;
    uint32 retcode = 12;
    map<uint32, uint32> IIKBCNBJKKI = 13;
    uint32 FDCKFKFKHLO = 15;
}

message TarotBookUnlockStoryCsReq {
    repeated uint32 PPIMFPOOOKB = 4;
}

message TarotBookUnlockStoryScRsp {
    repeated uint32 PPIMFPOOOKB = 1;
    uint32 retcode = 3;
    map<uint32, uint32> JKEMDJIAMHI = 10;
    EJDGKNKHKHH PPDGGOCIEDE = 14;
    map<uint32, uint32> NDCJJPGNFLN = 15;
}

message TarotBookFinishStoryCsReq {
    uint32 BGLEHMKMAPG = 7;
}

message TarotBookFinishStoryScRsp {
    FLOICKMNMLL HEFJEJHOJEA = 13;
    uint32 BGLEHMKMAPG = 14;
    uint32 retcode = 15;
}

message TarotBookModifyEnergyScNotify {
    uint32 sub_mission_id = 10;
    uint32 energy_info = 11;
}

message TarotBookFinishInteractionCsReq {
    uint32 NBLHJJJEGNO = 5;
}

message TarotBookFinishInteractionScRsp {
    uint32 retcode = 6;
    uint32 NBLHJJJEGNO = 10;
}

message OGJDNLIJKFB {
    uint32 NINLFBGLBLL = 6;
    uint32 max_score = 8;
    uint32 KEGCJPPOKBK = 13;
}

message GetTelevisionActivityDataCsReq {
}

message GetTelevisionActivityDataScRsp {
    uint32 retcode = 11;
    repeated OGJDNLIJKFB KADGMHHGKMP = 15;
}

message TelevisionActivityDataChangeScNotify {
    repeated OGJDNLIJKFB KADGMHHGKMP = 11;
}

message TelevisionActivityBattleEndScNotify {
    uint32 FCEPIPCCOMN = 1;
    OGJDNLIJKFB DFCCBDPNLEA = 6;
    uint32 NPJEECEDPOK = 11;
    uint32 FIDIOIHLLGA = 12;
    uint32 HOEHIOBIIEJ = 14;
}

message DEPEAHJNKGJ {
    uint32 avatar_id = 3;
    AvatarType avatar_type = 10;
}

message EnterTelevisionActivityStageCsReq {
    uint32 NINLFBGLBLL = 1;
    repeated uint32 buff_list = 3;
    repeated DEPEAHJNKGJ avatar_list = 8;
}

message EnterTelevisionActivityStageScRsp {
    uint32 retcode = 3;
    SceneBattleInfo battle_info = 4;
    uint32 NINLFBGLBLL = 11;
}

message IOMOPENEMBF {
    uint32 FANOKEMBMPB = 2;
    string HBJKEEBDJML = 6;
    uint32 ADINNBPINAK = 10;
    string NKIOIIOIAOG = 13;
    uint32 NLFNJPMACPM = 14;
}

message TextJoinSaveCsReq {
    uint32 FANOKEMBMPB = 5;
    uint32 ADINNBPINAK = 6;
    string HBJKEEBDJML = 7;
}

message TextJoinSaveScRsp {
    uint32 retcode = 2;
    uint32 ADINNBPINAK = 3;
    uint32 FANOKEMBMPB = 12;
    string HBJKEEBDJML = 13;
}

message TextJoinQueryCsReq {
    repeated uint32 PONENNKHCMJ = 13;
}

message TextJoinQueryScRsp {
    uint32 retcode = 1;
    repeated IOMOPENEMBF NKKKOPACOKG = 3;
}

message TextJoinBatchSaveCsReq {
    repeated IOMOPENEMBF NKKKOPACOKG = 1;
}

message TextJoinBatchSaveScRsp {
    uint32 retcode = 5;
    repeated IOMOPENEMBF NKKKOPACOKG = 12;
}

message CGLIGECGAKN {
    uint32 stage_id = 4;
    uint32 max_score = 5;
}

message GetTrackPhotoActivityDataCsReq {
}

message GetTrackPhotoActivityDataScRsp {
    repeated CGLIGECGAKN EMGFLDOPKGL = 1;
    uint32 retcode = 14;
}

message GEOAEOFJOGC {
    bool KFBOAONLDEM = 5;
    uint32 entity_id = 12;
}

message SettleTrackPhotoStageCsReq {
    repeated GEOAEOFJOGC LPIHANIOJFI = 2;
    uint32 cost_time = 4;
    uint32 stage_id = 12;
}

message SettleTrackPhotoStageScRsp {
    uint32 score_id = 6;
    uint32 stage_id = 10;
    repeated GEOAEOFJOGC LPIHANIOJFI = 12;
    uint32 retcode = 15;
}

message StartTrackPhotoStageCsReq {
    bool DJFCMLIPDAB = 2;
    uint32 stage_id = 8;
}

message StartTrackPhotoStageScRsp {
    uint32 MDLNDGIJNML = 4;
    uint32 retcode = 14;
}

message QuitTrackPhotoStageCsReq {
    uint32 stage_id = 5;
}

message QuitTrackPhotoStageScRsp {
    uint32 retcode = 7;
}

message FPLMDELMJKB {
    uint32 BBLBLAFIGHM = 1;
    uint32 card_id = 4;
    repeated uint32 HCPGEALODME = 6;
    uint32 unique_id = 15;
}

message HBCINIKPAFI {
    repeated FPLMDELMJKB FODPDMPBAND = 11;
}

message CGCONJFFFBB {
    uint32 HAFCKONEHFM = 2;
    bool LKLLMPOKOGH = 6;
    HBCINIKPAFI FODPDMPBAND = 14;
}

message KKNLMCJIGAF {
    uint32 display_value = 4;
    uint32 GHFAIHLCELN = 7;
    uint32 HFNHLCFNHKD = 11;
    uint32 unique_id = 13;
}

message KACKJJDJONI {
    uint32 JODNMDOAMKC = 1;
    uint32 NCDCGFKOLOE = 2;
    repeated uint32 KDDPPGOCOMB = 5;
    uint32 HCFOCPKFOBG = 7;
    uint32 PAPKGJOJPII = 10;
    uint32 BLHPICIOFAI = 13;
}

message EDFABKMNBLI {
    repeated KKNLMCJIGAF MKOAMBMKDID = 7;
    uint32 BIHMELMJHPO = 8;
    uint32 LLJEFMPDJKH = 9;
    KACKJJDJONI GDGHCBGHLND = 11;
}

message FPDFCGKIILE {
    uint32 KPAKAPNHNND = 6;
    uint32 KHHLNGGECPB = 14;
}

message GOCKBLNJIBG {
    uint32 skill_level = 4;
    uint32 skill_id = 9;
    uint32 JGMIPMDPPIJ = 13;
}

message MAONNNELGCC {
    FPDFCGKIILE BOJBPOELFCI = 9;
    uint32 MIHLFGCGKNO = 12;
    uint32 ALJLKAOELDP = 13;
}

message ADGNFGFBCPE {
    uint32 ALJLKAOELDP = 4;
    uint32 record_id = 6;
    bool CINMLCKBHIM = 8;
    repeated uint32 PCLMNBILAPH = 11;
}

message LHLEEHCBMOL {
    repeated GOCKBLNJIBG skill_list = 1;
    uint32 OAFAAEEMNFB = 10;
    repeated uint32 CFKPAICDJPJ = 11;
    uint32 BBLBLAFIGHM = 12;
    uint32 PKIDBDGPILO = 14;
    repeated MAONNNELGCC KBGDCEHIFFJ = 15;
}

message OIBMNPCLNJJ {
    repeated uint32 PCLMNBILAPH = 6;
    repeated ADGNFGFBCPE MEBOFHOKEPI = 14;
}

message KFLDAMAAIKB {
    repeated uint32 HBCCBGBFPLO = 3;
    repeated MCNCKBNOEJG OPDIPFBCFDP = 8;
    DAIPPHMLPCB MLHDKJMFDAI = 9;
    repeated uint32 KNOJNBJIOKB = 11;
    uint32 progress = 12;
    uint32 DBAHFEFGLMD = 14;
    repeated uint32 ELFPHFPKBFI = 15;
}

message INDFFNNHOHC {
    repeated uint32 ELFPHFPKBFI = 11;
    uint32 DBAHFEFGLMD = 13;
}

message PPKDPAJPAGF {
    uint32 GJFHPCIEBOJ = 1;
    KNOOCOCANAM status = 7;
    uint32 JLHDKOLMEDA = 10;
}

message DAIPPHMLPCB {
    uint32 HEIDCIKEDPD = 3;
    repeated PPKDPAJPAGF IMEKHGCIEDN = 13;
}

message MCNCKBNOEJG {
    uint32 dice_slot_id = 13;
    uint32 CIGAJENPMKH = 14;
}

message HHALLEKOJIA {
    uint32 OBOKGLCMKKE = 1;
    repeated KFLDAMAAIKB LLEPHOELGDA = 3;
    uint32 CNAJOIGNMLJ = 4;
    uint32 FLBNEKGIDBO = 5;
    uint32 DBJHEMIPPIM = 6;
    uint32 PPFFKFGOLLJ = 7;
    uint32 EEBNAAPBKCN = 8;
    repeated uint32 CIGACGHPDGK = 9;
    repeated INDFFNNHOHC EOHBBEAKODF = 10;
    repeated uint32 MCFMAEPOKBK = 12;
}

message LPKDPMLBEJO {
    OIBMNPCLNJJ IJMEKPADHJJ = 3;
    uint32 record_id = 5;
    CDNGNDNLNAJ CEFMBAFCNPK = 6;
    uint32 KLGBFLNJKBL = 9;
    HHALLEKOJIA NHJJBKOKLDB = 11;
    uint32 AIANOFKNLHG = 15;
}

message CDNGNDNLNAJ {
    EDFABKMNBLI EEIHDCPOLEF = 2;
    uint32 GONEAKBDGEK = 4;
    LHLEEHCBMOL AAKHCNEDBCD = 6;
    GCFEHMENONM GBFCLMLIMHC = 7;
    CGCONJFFFBB HBHEAJIJEGF = 9;
}

message TrainPartyGetDataCsReq {
}

message TrainPartyGetDataScRsp {
    uint32 retcode = 7;
    LPKDPMLBEJO BEHNKMGHGHD = 10;
}

message TrainPartyUseCardCsReq {
    uint32 EEGHHHKCGHB = 12;
}

message TrainPartyUseCardScRsp {
    uint32 retcode = 11;
    uint32 EEGHHHKCGHB = 14;
}

message TrainPartyMoveScNotify {
    uint32 GHEEOEOHMFI = 11;
    repeated KKNLMCJIGAF PEADIOCNIMF = 14;
}

message TrainPartySettleNotify {
    uint32 EEGHHHKCGHB = 5;
    FKMBFLMEGEB HILOMEKAFBP = 10;
}

message FKMBFLMEGEB {
    uint32 HEIJCNLNHHI = 7;
    repeated BAEPNHDCIEM FOAPLIALHDI = 10;
    repeated MAONNNELGCC KBGDCEHIFFJ = 14;
}

message BAEPNHDCIEM {
    uint32 IJFIHGCKNHG = 1;
    repeated uint32 switch_list = 9;
}

message NCLCBOPCEJG {
    FPLMDELMJKB HMFFHBHALGE = 3;
}

message IDBEOMMCKIK {
    FPDFCGKIILE BOJBPOELFCI = 1;
    uint32 ALJLKAOELDP = 15;
}

message IBOMHKHBAAO {
    repeated IDBEOMMCKIK NFEOLNAOGDK = 9;
}

message ENJHDLHKINO {
    GCFEHMENONM pending_action = 3;
}

message FNOGHGHPJPD {
    uint32 BBLBLAFIGHM = 4;
}

message JLDHCFGGEAO {
    GOCKBLNJIBG MHMEDDEHBHI = 12;
}

message PFGIAHAIDLM {
    repeated GOCKBLNJIBG skill_list = 12;
}

message JHMNLCOBJCJ {
    ADGNFGFBCPE ABBNHMGGPIL = 12;
}

message FKJLBFNIGGM {
    repeated uint32 PCLMNBILAPH = 13;
}

message HAKMEBIAJCF {
    repeated KKNLMCJIGAF MKOAMBMKDID = 10;
}

message HMOPIBLFCLN {
    uint32 HAFCKONEHFM = 3;
    bool LKLLMPOKOGH = 8;
    KACKJJDJONI GDGHCBGHLND = 12;
    HBCINIKPAFI LNMMKFMEAJM = 14;
}

message PLKCMGDEDCK {
    CBEJAJENOHJ src = 9;
    oneof LGNAKLFMHFF {
        LNDGCGOBDJL GAIBCBGHHGL = 152;
        BFDDPPLMKPG NEPCONHOFKJ = 204;
        FNPMCDNKDFJ CKBNOJAPNNB = 265;
        IEFKFKFMEPL DBLBHNPHHKB = 497;
        JNAHOJLCNJA JOBEJAFKECD = 645;
        GEGJHBMLOEM BHOFHHEMLOG = 803;
        OKFGJEIHLJM MAPLOGDNBGB = 917;
        KMLEHLLOGJG EGDGPIKBNLK = 1686;
        KMBDKDLNHMC EKFLEJANKME = 1834;
        KAKJCJOMFGH HAEADFOOLND = 1940;
    }
}

message TrainPartySyncUpdateScNotify {
    repeated PLKCMGDEDCK FFLPKLLDHLM = 4;
}

message GCFEHMENONM {
    uint32 HBAPCCEGNME = 14;
    oneof AJOBHBKLMJI {
        EMMDENJBFPF OAOOFNJGIDH = 238;
        MIIAIODLEOA LEEHAEOBEBA = 343;
        EPBGFBEDANM PMMGOCJFEEJ = 700;
        NJKENNCJLCF IAMKDJCFMIB = 1184;
    }
}

message HHPIAFBHJCF {
    uint32 KDMLLLGHJON = 8;
    bool confirm = 12;
}

message NJKENNCJLCF {
    uint32 event_id = 7;
    repeated HHPIAFBHJCF LEKPKOCNJAL = 9;
    IJDNOJEMIAN HOIOKBKGFDN = 10;
}

message HPFKGDDIFHG {
    uint32 event_id = 3;
    uint32 KDMLLLGHJON = 4;
}

message BFIFANAOCPC {
    FKMBFLMEGEB HILOMEKAFBP = 5;
}

message OCMHOFEMNHI {
    uint32 JGMIPMDPPIJ = 4;
    uint32 level = 7;
    uint32 skill_id = 14;
}

message MIIAIODLEOA {
    repeated OCMHOFEMNHI GANAKFAIBFC = 10;
    uint32 ALJLKAOELDP = 11;
}

message EPBGFBEDANM {
    repeated GOCKBLNJIBG LLIJAGDKJCO = 8;
    uint32 IDAIHKMMDEK = 11;
}

message GLBFBNHFCNO {
    uint32 IEHHDALHGPI = 15;
}

message MBINMAONBCD {
    repeated GOCKBLNJIBG skill_list = 14;
}

message PJJDMMBKKCN {
    uint32 unique_id = 2;
    uint32 ALJLKAOELDP = 11;
    uint32 KHHLNGGECPB = 14;
}

message HEOJLDBKKGE {
    uint32 ALJLKAOELDP = 14;
    uint32 Num = 15;
}

message EMMDENJBFPF {
    uint32 KMLPPMNMPKE = 2;
    repeated BJGLDLJKIDH KJMLIAMGDLE = 3;
    repeated HEOJLDBKKGE CCGBHHFBAFJ = 4;
    repeated PJJDMMBKKCN MMEIPHBNKED = 7;
    uint32 MLIIJGOAECK = 8;
    uint32 CFOKIGIHCFP = 9;
    uint32 NPJEECEDPOK = 12;
    uint32 MLIPPLKIIFD = 14;
}

message PlaySkillBrief {
    LCDEMGACEKD SkillType = 10;
    uint32 SkillId = 11;
    uint32 SkillParam = 12;
}

message PlayCardBrief {
    uint32 UniqueId = 5;
    uint32 BaseValue = 8;
    repeated PlaySkillBrief SkillBriefList = 15;
}

message PHOEFKFBIKD {
    repeated uint32 NPOJMHHIBKI = 1;
    ItemList OJCJNBGNICF = 4;
    uint32 MKEGODINHNC = 12;
}

message PECGLKCICGO {
    repeated uint32 CANNGFDAFOE = 13;
}

message JBOCJHNDAMC {
    repeated PlaySkillBrief BIHFECJHPGH = 1;
    DMLCPAKDBLJ IJPPKNKNLNL = 3;
    uint32 score_id = 5;
    repeated PlayCardBrief OMGGNAEAHIF = 7;
    uint32 NPJEECEDPOK = 8;
    repeated HEOJLDBKKGE CCGBHHFBAFJ = 9;
    PHOEFKFBIKD MFAKJHFMAIB = 10;
    uint32 CFOKIGIHCFP = 11;
    KACKJJDJONI GDGHCBGHLND = 12;
    repeated PJJDMMBKKCN MMEIPHBNKED = 14;
}

message ENCJKPGOIAL {
    repeated uint32 CANNGFDAFOE = 13;
}

message FBGLLDNLGPE {
    repeated HEOJLDBKKGE CCGBHHFBAFJ = 4;
    repeated PlaySkillBrief NICGNEMCHED = 8;
    uint32 KMLPPMNMPKE = 9;
    repeated PJJDMMBKKCN MMEIPHBNKED = 12;
}

message TrainPartyHandlePendingActionCsReq {
    uint32 HBAPCCEGNME = 14;
    oneof PHKGCBNEJCO {
        FBGLLDNLGPE LEDFNCDFAMK = 1088;
        MBINMAONBCD PMOJBJMKFAN = 1293;
        JBOCJHNDAMC AFDNDBADDKP = 1590;
        BFIFANAOCPC LAELPNHHJIK = 1786;
    }
}

message TrainPartyHandlePendingActionScRsp {
    uint32 retcode = 1;
    FKMBFLMEGEB HILOMEKAFBP = 2;
    bool DLNCBJFGKAA = 9;
    uint32 HBAPCCEGNME = 11;
    oneof PHKGCBNEJCO {
        FBGLLDNLGPE LEDFNCDFAMK = 1088;
        MBINMAONBCD PMOJBJMKFAN = 1293;
        JBOCJHNDAMC AFDNDBADDKP = 1590;
        BFIFANAOCPC LAELPNHHJIK = 1786;
    }
}

message TrainPartyBuildStartStepCsReq {
    uint32 GJFHPCIEBOJ = 2;
    uint32 DBAHFEFGLMD = 6;
    MCNCKBNOEJG ALAODDBGHPL = 9;
    uint32 HEIDCIKEDPD = 13;
}

message TrainPartyBuildStartStepScRsp {
    uint32 retcode = 5;
    uint32 DBJHEMIPPIM = 15;
}

message CIKOHJNAGON {
    MCNCKBNOEJG KCJBMKJLFBA = 1;
    uint32 DBAHFEFGLMD = 13;
}

message TrainPartyBuildDiyCsReq {
    uint32 dice_slot_id = 3;
    uint32 DBAHFEFGLMD = 8;
    bool GANHKLNPAPI = 10;
    uint32 CIGAJENPMKH = 13;
}

message TrainPartyBuildDiyScRsp {
    uint32 retcode = 4;
    bool GANHKLNPAPI = 5;
    repeated CIKOHJNAGON FFLPKLLDHLM = 9;
    repeated MCNCKBNOEJG OPDIPFBCFDP = 10;
    uint32 DBAHFEFGLMD = 11;
}

message KMBDKDLNHMC {
    uint32 OKHCJKLJGHF = 1;
    repeated PPKDPAJPAGF CGFIHJCCGCD = 11;
}

message JNAHOJLCNJA {
    repeated PPKDPAJPAGF CGFIHJCCGCD = 5;
    uint32 progress = 7;
    uint32 DBAHFEFGLMD = 9;
    uint32 HEIDCIKEDPD = 13;
}

message IEFKFKFMEPL {
    uint32 PPFFKFGOLLJ = 8;
    uint32 OBOKGLCMKKE = 11;
}

message FNPMCDNKDFJ {
    uint32 BDCCOPIEHIN = 11;
}

message GEGJHBMLOEM {
    uint32 FLBNEKGIDBO = 10;
}

message BFDDPPLMKPG {
    uint32 MNLEIKIEHHP = 6;
    uint32 DBAHFEFGLMD = 15;
}

message KMLEHLLOGJG {
    uint32 CIGAJENPMKH = 13;
}

message OKFGJEIHLJM {
    uint32 FBFIHJIIABO = 5;
}

message KAKJCJOMFGH {
    uint32 CNAJOIGNMLJ = 15;
}

message MCLNCBCPAFF {
    uint32 DBAHFEFGLMD = 2;
    repeated uint32 CGFIHJCCGCD = 13;
}

message LNDGCGOBDJL {
    repeated MCLNCBCPAFF LLEPHOELGDA = 9;
}

message PPKGJKIFELK {
    oneof LGNAKLFMHFF {
        LNDGCGOBDJL GAIBCBGHHGL = 152;
        BFDDPPLMKPG NEPCONHOFKJ = 204;
        FNPMCDNKDFJ CKBNOJAPNNB = 265;
        IEFKFKFMEPL DBLBHNPHHKB = 497;
        JNAHOJLCNJA JOBEJAFKECD = 645;
        GEGJHBMLOEM BHOFHHEMLOG = 803;
        OKFGJEIHLJM MAPLOGDNBGB = 917;
        KMLEHLLOGJG EGDGPIKBNLK = 1686;
        KMBDKDLNHMC EKFLEJANKME = 1834;
        KAKJCJOMFGH HAEADFOOLND = 1940;
    }
}

message TrainPartyBuildingUpdateNotify {
    repeated PPKGJKIFELK BJDFKEMKAOL = 15;
}

message TrainPartyEnterCsReq {
}

message TrainPartyEnterScRsp {
    uint32 retcode = 4;
}

message TrainPartyLeaveCsReq {
}

message TrainPartyLeaveScRsp {
    uint32 retcode = 8;
}

message BJGLDLJKIDH {
    DMLCPAKDBLJ JLLNMGBENAF = 3;
    uint32 level = 14;
}

message TrainPartyGamePlaySettleNotify {
    uint32 AIANOFKNLHG = 3;
    OIBMNPCLNJJ HANFPHGEMGF = 6;
    repeated uint32 OLBAGKMFDAJ = 8;
    uint32 record_id = 13;
}

message TrainPartyGamePlayStartCsReq {
    uint32 GONEAKBDGEK = 4;
    repeated uint32 KBGDCEHIFFJ = 13;
}

message TrainPartyGamePlayStartScRsp {
    CDNGNDNLNAJ KMDPHCMBJGB = 8;
    uint32 retcode = 13;
}

message TrainPartyAddBuildDynamicBuffCsReq {
}

message TrainPartyAddBuildDynamicBuffScRsp {
    uint32 retcode = 11;
    uint32 buff_id = 12;
}

message TrainPartyTakeBuildLevelAwardCsReq {
    uint32 ECCLPIFMMPP = 14;
}

message TrainPartyTakeBuildLevelAwardScRsp {
    ItemList item_list = 4;
    uint32 ECCLPIFMMPP = 7;
    uint32 retcode = 10;
}

message TrainVisitorBehavior {
    uint32 visitor_id = 2;
    bool is_meet = 9;
}

message TrainVisitorBehaviorFinishCsReq {
    uint32 visitor_id = 5;
}

message TrainVisitorBehaviorFinishScRsp {
    uint32 visitor_id = 3;
    ItemList reward = 8;
    uint32 retcode = 15;
}

message GetTrainVisitorBehaviorCsReq {
    repeated uint32 OIFNLNBKDMA = 4;
}

message GetTrainVisitorBehaviorScRsp {
    repeated TrainVisitorBehavior ECFOPDHGKFB = 5;
    uint32 retcode = 6;
}

message TrainRefreshTimeNotify {
    uint64 AKALBJECJIK = 4;
}

message TrainVisitorRewardSendNotify {
    ItemList reward = 8;
    TrainVisitorRewardSendType type = 9;
    uint32 visitor_id = 12;
}

message HGLKMJFEHMB {
    uint32 visitor_id = 1;
    TrainVisitorStatus status = 6;
    repeated uint32 EDHHGCPDKIK = 10;
    uint32 OPAOKGJBOOE = 13;
    bool IJABKDEPGMA = 15;
}

message GetTrainVisitorRegisterCsReq {
    TrainVisitorRegisterGetType type = 1;
}

message GetTrainVisitorRegisterScRsp {
    repeated HGLKMJFEHMB FDMFKALJBAJ = 5;
    uint32 retcode = 11;
    repeated uint32 FAMHPMFOIJH = 15;
}

message TakeTrainVisitorUntakenBehaviorRewardCsReq {
    uint32 visitor_id = 8;
}

message TakeTrainVisitorUntakenBehaviorRewardScRsp {
    repeated uint32 EDHHGCPDKIK = 6;
    uint32 visitor_id = 7;
    uint32 retcode = 9;
}

message ShowNewSupplementVisitorCsReq {
    repeated uint32 FAMHPMFOIJH = 6;
}

message ShowNewSupplementVisitorScRsp {
    uint32 retcode = 1;
}

message NHBDDINFKOH {
    int32 IEAGBPEMFLG = 2;
    uint32 IIMOPLCFHAH = 3;
    int32 LLJAEGOBHMP = 10;
    uint32 item_id = 11;
    uint64 unique_id = 12;
    uint32 KBCDECDNEFM = 14;
}

message KCHJHCLJOCK {
    uint32 DIPHGGHFMCP = 1;
    HGKKPPLJBOI CLFGFABOIOP = 4;
    DCJAOPDINOI EMBKICMEFCO = 7;
    repeated NHBDDINFKOH HJBPKCFKHLI = 8;
    uint32 CPODEJOFPDD = 10;
}

message TravelBrochureGetDataCsReq {
}

message TravelBrochureGetDataScRsp {
    uint32 custom_value = 1;
    map<uint32, uint32> FKBBOMHEKPE = 8;
    map<uint32, KCHJHCLJOCK> MIBCLBGMDLA = 14;
    uint32 retcode = 15;
}

message TravelBrochurePageUnlockScNotify {
    uint32 CPODEJOFPDD = 6;
}

message TravelBrochureSelectMessageCsReq {
    uint32 CPODEJOFPDD = 6;
    uint32 DIPHGGHFMCP = 10;
}

message TravelBrochureSelectMessageScRsp {
    ItemList reward = 9;
    uint32 retcode = 12;
    KCHJHCLJOCK CAGGLKLIIMF = 13;
}

message TravelBrochureApplyPasterCsReq {
    int32 IEAGBPEMFLG = 2;
    uint32 CPODEJOFPDD = 3;
    int32 LLJAEGOBHMP = 5;
    uint32 IIMOPLCFHAH = 9;
    uint32 item_id = 11;
    uint32 KBCDECDNEFM = 12;
}

message TravelBrochureApplyPasterScRsp {
    KCHJHCLJOCK CAGGLKLIIMF = 4;
    uint32 retcode = 5;
}

message TravelBrochureRemovePasterCsReq {
    uint32 CPODEJOFPDD = 4;
    uint32 item_id = 9;
    uint64 unique_id = 11;
}

message TravelBrochureRemovePasterScRsp {
    KCHJHCLJOCK CAGGLKLIIMF = 1;
    uint32 retcode = 3;
}

message TravelBrochureUpdatePasterPosCsReq {
    uint64 unique_id = 1;
    uint32 IIMOPLCFHAH = 5;
    int32 IEAGBPEMFLG = 7;
    uint32 CPODEJOFPDD = 8;
    int32 LLJAEGOBHMP = 9;
    uint32 item_id = 12;
    uint32 KBCDECDNEFM = 14;
}

message TravelBrochureUpdatePasterPosScRsp {
    uint32 retcode = 3;
    KCHJHCLJOCK CAGGLKLIIMF = 6;
}

message TravelBrochureGetPasterScNotify {
    uint32 FKKOBDMFHIL = 1;
    uint32 Num = 8;
}

message GKDIHIFFHFD {
    uint32 FKKOBDMFHIL = 3;
    uint32 Num = 13;
}

message TravelBrochureSetCustomValueCsReq {
    uint32 value = 4;
}

message TravelBrochureSetCustomValueScRsp {
    uint32 retcode = 12;
}

message TravelBrochureSetPageDescStatusCsReq {
    DCJAOPDINOI GEIBGFDENJA = 9;
    uint32 CPODEJOFPDD = 12;
}

message TravelBrochureSetPageDescStatusScRsp {
    uint32 retcode = 15;
}

message TravelBrochurePageResetCsReq {
    uint32 CPODEJOFPDD = 1;
}

message TravelBrochurePageResetScRsp {
    uint32 retcode = 7;
    KCHJHCLJOCK CAGGLKLIIMF = 9;
}

message KBJPHLNAPGI {
    uint32 IIMOPLCFHAH = 1;
    int32 IEAGBPEMFLG = 2;
    uint32 item_id = 7;
    int32 LLJAEGOBHMP = 10;
    uint32 KBCDECDNEFM = 12;
}

message TravelBrochureApplyPasterListCsReq {
    repeated KBJPHLNAPGI GEDGLNCPGGN = 7;
    uint32 CPODEJOFPDD = 9;
}

message TravelBrochureApplyPasterListScRsp {
    uint32 retcode = 6;
    KCHJHCLJOCK CAGGLKLIIMF = 13;
}

message TreasureDungeonRecordData {
    IMKNBJCOIOP Type = 4;
    uint32 SourceGridId = 7;
    uint32 Param1 = 8;
    uint32 TargetGridId = 10;
    uint32 Param2 = 12;
}

message TreasureDungeonDataScNotify {
    KLCKNKLPONM DLEJPJJCELJ = 5;
}

message TreasureDungeonFinishScNotify {
    map<uint32, uint32> KGMMPGFGODJ = 3;
    uint32 NLMDEMOHBOO = 4;
    uint32 HOHHBIHFJEH = 5;
    uint32 PIKAPDJHGND = 7;
    map<uint32, uint32> JBCGKLDMHNL = 8;
    bool is_win = 12;
    uint32 AECNCDPJPDG = 13;
}

message KLCKNKLPONM {
    repeated TreasureDungeonRecordData BBCKFJIHIDM = 3;
    uint32 NLMDEMOHBOO = 4;
    uint32 JAFNPNMOHCM = 6;
    uint32 NCBHADLOAGA = 8;
    uint32 map_id = 9;
    repeated LKCMFEAAHHM MKOAMBMKDID = 11;
    uint32 FCJECKCICKB = 12;
    uint32 PIKAPDJHGND = 13;
    uint32 PHHKBAENBMM = 14;
    repeated ENBNFOLCDIE buff_list = 36;
    repeated PCAIGNJKAFA avatar_list = 56;
    bool CFDPDENPPDH = 121;
    repeated PCAIGNJKAFA GFFOJCCKLFM = 268;
    uint32 IIALGLDDNAD = 363;
    bool NODBPKHOJEC = 885;
    repeated LHANBGNJCIF item_list = 1002;
    repeated LKHHGJPPMPP KJJOMEPHJEE = 1232;
    bool NMFAPGOLODJ = 1435;
}

message LHANBGNJCIF {
    uint32 item_count = 1;
    uint32 item_id = 7;
}

message PCAIGNJKAFA {
    uint32 avatar_id = 1;
    uint32 hp = 4;
    uint32 avatar_type = 7;
    SpBarInfo sp_bar = 10;
    uint32 EAJLJNBNPNP = 14;
}

message LKHHGJPPMPP {
    uint32 avatar_type = 1;
    uint32 avatar_id = 3;
}

message ENBNFOLCDIE {
    uint32 AKAHNMLNEFN = 9;
    uint32 buff_id = 12;
}

message LKCMFEAAHHM {
    uint32 HFNHLCFNHKD = 1;
    bool HEMJHDOEEBL = 3;
    uint32 OLLHOBHDDEN = 4;
    bool DEMNCGLLJCP = 7;
    uint32 MONHIBBPKEE = 11;
    bool KNLFELDECAL = 12;
    bool LIMMILEAPJM = 13;
    repeated GGGCOCPGBBH buff_list = 1329;
}

message GGGCOCPGBBH {
    uint32 EGKDINMMENA = 1;
    uint32 buff_id = 3;
    uint32 HFNHLCFNHKD = 6;
    uint32 LEAAEBAFCHP = 11;
    uint32 ECGHNFCCBJJ = 12;
}

message ABHFABFGPOF {
    uint32 JAFNPNMOHCM = 3;
    bool BIINNCNDPCG = 4;
    bool CLOONOIFEFO = 5;
    uint32 FCJECKCICKB = 7;
    uint32 NLMDEMOHBOO = 9;
    uint32 PIKAPDJHGND = 12;
    uint32 NKHKDJKEGDH = 13;
}

message GetTreasureDungeonActivityDataCsReq {
}

message GetTreasureDungeonActivityDataScRsp {
    uint32 retcode = 6;
    repeated ABHFABFGPOF HIOOKMOANDN = 9;
}

message EnterTreasureDungeonCsReq {
    repeated JACKEJLKJNA avatar_list = 8;
    uint32 NLMDEMOHBOO = 11;
}

message EnterTreasureDungeonScRsp {
    uint32 retcode = 2;
    KLCKNKLPONM DLEJPJJCELJ = 6;
}

message OpenTreasureDungeonGridCsReq {
    uint32 NLMDEMOHBOO = 5;
    uint32 HFNHLCFNHKD = 7;
}

message OpenTreasureDungeonGridScRsp {
    KLCKNKLPONM DLEJPJJCELJ = 6;
    uint32 retcode = 7;
}

message InteractTreasureDungeonGridCsReq {
    uint32 HFNHLCFNHKD = 4;
    uint32 display_value = 6;
    uint32 NLMDEMOHBOO = 12;
}

message InteractTreasureDungeonGridScRsp {
    uint32 retcode = 3;
    KLCKNKLPONM DLEJPJJCELJ = 9;
}

message UseTreasureDungeonItemCsReq {
    uint32 HFNHLCFNHKD = 3;
    uint32 item_id = 7;
    uint32 NLMDEMOHBOO = 14;
}

message UseTreasureDungeonItemScRsp {
    uint32 retcode = 11;
    KLCKNKLPONM DLEJPJJCELJ = 15;
}

message JACKEJLKJNA {
    uint32 avatar_id = 10;
    AvatarType avatar_type = 14;
}

message FightTreasureDungeonMonsterCsReq {
    repeated JACKEJLKJNA avatar_list = 11;
    uint32 HFNHLCFNHKD = 13;
    uint32 NLMDEMOHBOO = 14;
}

message FightTreasureDungeonMonsterScRsp {
    SceneBattleInfo battle_info = 8;
    uint32 retcode = 9;
}

message QuitTreasureDungeonCsReq {
    bool PCPDFJHDJCC = 1;
    uint32 NLMDEMOHBOO = 6;
}

message QuitTreasureDungeonScRsp {
    uint32 retcode = 2;
}

message Tutorial {
    TutorialStatus Status = 3;
    uint32 id = 8;
}

message TutorialGuide {
    TutorialStatus Status = 6;
    uint32 id = 7;
}

message GetTutorialCsReq {
}

message GetTutorialScRsp {
    repeated Tutorial TutorialList = 9;
    uint32 retcode = 11;
}

message GetTutorialGuideCsReq {
}

message GetTutorialGuideScRsp {
    repeated TutorialGuide TutorialGuideList = 5;
    uint32 retcode = 7;
}

message UnlockTutorialCsReq {
    uint32 tutorial_id = 7;
}

message UnlockTutorialScRsp {
    Tutorial Tutorial = 10;
    uint32 retcode = 15;
}

message UnlockTutorialGuideCsReq {
    uint32 group_id = 7;
}

message UnlockTutorialGuideScRsp {
    uint32 retcode = 3;
    TutorialGuide TutorialGuide = 15;
}

message FinishTutorialCsReq {
    uint32 tutorial_id = 15;
}

message FinishTutorialScRsp {
    Tutorial Tutorial = 3;
    uint32 retcode = 12;
}

message FinishTutorialGuideCsReq {
    uint32 group_id = 8;
}

message FinishTutorialGuideScRsp {
    ItemList Reward = 3;
    TutorialGuide TutorialGuide = 6;
    uint32 retcode = 12;
}

message Waypoint {
    bool is_new = 6;
    uint32 KHFGDKNGFDP = 9;
    uint32 id = 14;
}

message ChapterBrief {
    uint32 NCKELKEGBGL = 8;
    uint32 id = 11;
    bool is_new = 14;
    repeated uint32 taken_reward_id_list = 15;
}

message Chapter {
    repeated Waypoint KONBFJPINHN = 5;
    ChapterBrief GOKHJLMPNFF = 11;
}

message GetWaypointCsReq {
    uint32 KIEKJEFFPHK = 15;
}

message GetWaypointScRsp {
    Chapter FJJFLKCMIDJ = 9;
    uint32 retcode = 13;
    uint32 HOEAHBIFKCI = 15;
}

message SetCurWaypointCsReq {
    uint32 NKCMNAFAIOI = 13;
}

message SetCurWaypointScRsp {
    uint32 HOEAHBIFKCI = 4;
    uint32 retcode = 15;
}

message GetChapterCsReq {
}

message GetChapterScRsp {
    uint32 retcode = 7;
    uint32 HOEAHBIFKCI = 8;
    repeated ChapterBrief IELPICLBBJI = 11;
}

message WaypointShowNewCsNotify {
    uint32 NKCMNAFAIOI = 3;
    uint32 KIEKJEFFPHK = 8;
}

message TakeChapterRewardCsReq {
    uint32 KIEKJEFFPHK = 3;
    uint32 AKDGHHNKLEJ = 14;
}

message TakeChapterRewardScRsp {
    uint32 retcode = 1;
    uint32 AKDGHHNKLEJ = 3;
    uint32 KIEKJEFFPHK = 4;
}

message HFPFFJIMCKM {
    repeated Vector OPCLDNLLNFH = 2;
    bool BDNFLICNFHN = 3;
    uint32 LKJMLIDAODM = 7;
    MotionInfo motion = 14;
}

message HEHPIOGGIEG {
    repeated Vector OPCLDNLLNFH = 2;
    bool BDNFLICNFHN = 5;
    uint32 id = 6;
    uint32 LKJMLIDAODM = 7;
    string uuid = 9;
    HFPFFJIMCKM HEFJEJHOJEA = 12;
}

message StartWolfBroGameCsReq {
    bool DJFCMLIPDAB = 3;
    MotionInfo motion = 5;
    GroupStateInfo group_state_info = 11;
    uint32 id = 12;
}

message StartWolfBroGameScRsp {
    HEHPIOGGIEG DNPLIHJGJIH = 6;
    uint32 retcode = 13;
}

message ArchiveWolfBroGameCsReq {
    uint32 id = 3;
    MotionInfo motion = 4;
}

message ArchiveWolfBroGameScRsp {
    uint32 retcode = 3;
    HEHPIOGGIEG DNPLIHJGJIH = 6;
}

message RestoreWolfBroGameArchiveCsReq {
    uint32 id = 11;
}

message RestoreWolfBroGameArchiveScRsp {
    uint32 retcode = 14;
    HEHPIOGGIEG DNPLIHJGJIH = 15;
}

message QuitWolfBroGameCsReq {
    uint32 id = 14;
}

message QuitWolfBroGameScRsp {
    uint32 retcode = 2;
    HEHPIOGGIEG DNPLIHJGJIH = 10;
}

message GetWolfBroGameDataCsReq {
    uint32 id = 10;
}

message GetWolfBroGameDataScRsp {
    uint32 retcode = 2;
    HEHPIOGGIEG DNPLIHJGJIH = 12;
}

message WolfBroGameDataChangeScNotify {
    HEHPIOGGIEG DNPLIHJGJIH = 4;
}

message WolfBroGameUseBulletCsReq {
    repeated uint32 assist_monster_entity_id_list = 4;
    Vector MIBCFIMMIKG = 12;
}

message WolfBroGameUseBulletScRsp {
    uint32 retcode = 4;
    HEHPIOGGIEG DNPLIHJGJIH = 11;
}

message WolfBroGamePickupBulletCsReq {
    Vector MIBCFIMMIKG = 11;
}

message WolfBroGamePickupBulletScRsp {
    uint32 retcode = 14;
    HEHPIOGGIEG DNPLIHJGJIH = 15;
}

message WolfBroGameActivateBulletCsReq {
    uint32 config_id = 10;
    uint32 group_id = 14;
}

message WolfBroGameActivateBulletScRsp {
    uint32 retcode = 4;
}

message WolfBroGameExplodeMonsterCsReq {
    repeated uint32 assist_monster_entity_id_list = 14;
}

message WolfBroGameExplodeMonsterScRsp {
    uint32 retcode = 8;
}

message WorldUnlockCsReq {
    uint32 NPEBNEKDLEN = 7;
}

message WorldUnlockScRsp {
    uint32 NPEBNEKDLEN = 2;
    uint32 retcode = 13;
}

message LNKFBAEDODI {
    uint32 DGHNGBLHAIL = 1;
    uint32 authkey_ver = 2;
    uint32 GKJKKDAOPAM = 3;
    uint32 OLCCIMLMMAD = 4;
    uint32 ELHEPMNLAPG = 5;
    uint32 PIAMLFBIHPI = 6;
    uint32 CFCAJEMDFKJ = 7;
    uint32 FEPHHKIGOOP = 8;
    uint32 MOPDHNENCPC = 9;
    uint32 EDFPCONIKDC = 10;
    uint32 id = 11;
    uint32 HOGHLBEEDGA = 12;
    uint32 BIPFIFCJCBN = 13;
}

